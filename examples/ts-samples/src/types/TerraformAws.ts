// this file is generated
import {PcoreValue, Value} from 'lyra-workflow';

export class Aws_acm_certificate implements PcoreValue {
  readonly aws_acm_certificate_id: string|null;
  readonly arn: string|null;
  readonly certificate_body: string|null;
  readonly certificate_chain: string|null;
  readonly domain_name: string|null;
  readonly domain_validation_options: Aws_acm_certificate_domain_validation_options_1[]|null;
  readonly private_key: string|null;
  readonly subject_alternative_names: string[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly validation_emails: string[]|null;
  readonly validation_method: string|null;

  constructor({
    aws_acm_certificate_id = null,
    arn = null,
    certificate_body = null,
    certificate_chain = null,
    domain_name = null,
    domain_validation_options = null,
    private_key = null,
    subject_alternative_names = null,
    tags = null,
    validation_emails = null,
    validation_method = null
  }: {
    aws_acm_certificate_id?: string|null,
    arn?: string|null,
    certificate_body?: string|null,
    certificate_chain?: string|null,
    domain_name?: string|null,
    domain_validation_options?: Aws_acm_certificate_domain_validation_options_1[]|null,
    private_key?: string|null,
    subject_alternative_names?: string[]|null,
    tags?: {[s: string]: string}|null,
    validation_emails?: string[]|null,
    validation_method?: string|null
  }) {
    this.aws_acm_certificate_id = aws_acm_certificate_id;
    this.arn = arn;
    this.certificate_body = certificate_body;
    this.certificate_chain = certificate_chain;
    this.domain_name = domain_name;
    this.domain_validation_options = domain_validation_options;
    this.private_key = private_key;
    this.subject_alternative_names = subject_alternative_names;
    this.tags = tags;
    this.validation_emails = validation_emails;
    this.validation_method = validation_method;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_acm_certificate_id !== null) {
      ih['aws_acm_certificate_id'] = this.aws_acm_certificate_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.certificate_body !== null) {
      ih['certificate_body'] = this.certificate_body;
    }
    if (this.certificate_chain !== null) {
      ih['certificate_chain'] = this.certificate_chain;
    }
    if (this.domain_name !== null) {
      ih['domain_name'] = this.domain_name;
    }
    if (this.domain_validation_options !== null) {
      ih['domain_validation_options'] = this.domain_validation_options;
    }
    if (this.private_key !== null) {
      ih['private_key'] = this.private_key;
    }
    if (this.subject_alternative_names !== null) {
      ih['subject_alternative_names'] = this.subject_alternative_names;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.validation_emails !== null) {
      ih['validation_emails'] = this.validation_emails;
    }
    if (this.validation_method !== null) {
      ih['validation_method'] = this.validation_method;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acm_certificate';
  }
}

export class Aws_acm_certificateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acm_certificateHandler';
  }
}

export class Aws_acm_certificate_domain_validation_options_1 implements PcoreValue {
  readonly domain_name: string|null;
  readonly resource_record_name: string|null;
  readonly resource_record_type: string|null;
  readonly resource_record_value: string|null;

  constructor({
    domain_name = null,
    resource_record_name = null,
    resource_record_type = null,
    resource_record_value = null
  }: {
    domain_name?: string|null,
    resource_record_name?: string|null,
    resource_record_type?: string|null,
    resource_record_value?: string|null
  }) {
    this.domain_name = domain_name;
    this.resource_record_name = resource_record_name;
    this.resource_record_type = resource_record_type;
    this.resource_record_value = resource_record_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.domain_name !== null) {
      ih['domain_name'] = this.domain_name;
    }
    if (this.resource_record_name !== null) {
      ih['resource_record_name'] = this.resource_record_name;
    }
    if (this.resource_record_type !== null) {
      ih['resource_record_type'] = this.resource_record_type;
    }
    if (this.resource_record_value !== null) {
      ih['resource_record_value'] = this.resource_record_value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acm_certificate_domain_validation_options_1';
  }
}

export class Aws_acm_certificate_validation implements PcoreValue {
  readonly certificate_arn: string;
  readonly aws_acm_certificate_validation_id: string|null;
  readonly validation_record_fqdns: string[]|null;

  constructor({
    certificate_arn,
    aws_acm_certificate_validation_id = null,
    validation_record_fqdns = null
  }: {
    certificate_arn: string,
    aws_acm_certificate_validation_id?: string|null,
    validation_record_fqdns?: string[]|null
  }) {
    this.certificate_arn = certificate_arn;
    this.aws_acm_certificate_validation_id = aws_acm_certificate_validation_id;
    this.validation_record_fqdns = validation_record_fqdns;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['certificate_arn'] = this.certificate_arn;
    if (this.aws_acm_certificate_validation_id !== null) {
      ih['aws_acm_certificate_validation_id'] = this.aws_acm_certificate_validation_id;
    }
    if (this.validation_record_fqdns !== null) {
      ih['validation_record_fqdns'] = this.validation_record_fqdns;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acm_certificate_validation';
  }
}

export class Aws_acm_certificate_validationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acm_certificate_validationHandler';
  }
}

export class Aws_acmpca_certificate_authority implements PcoreValue {
  readonly certificate_authority_configuration: Aws_acmpca_certificate_authority_certificate_authority_configuration_2[];
  readonly aws_acmpca_certificate_authority_id: string|null;
  readonly arn: string|null;
  readonly certificate: string|null;
  readonly certificate_chain: string|null;
  readonly certificate_signing_request: string|null;
  readonly enabled: boolean|null;
  readonly not_after: string|null;
  readonly not_before: string|null;
  readonly revocation_configuration: Aws_acmpca_certificate_authority_revocation_configuration_4[]|null;
  readonly serial: string|null;
  readonly status: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly type: string|null;

  constructor({
    certificate_authority_configuration,
    aws_acmpca_certificate_authority_id = null,
    arn = null,
    certificate = null,
    certificate_chain = null,
    certificate_signing_request = null,
    enabled = null,
    not_after = null,
    not_before = null,
    revocation_configuration = null,
    serial = null,
    status = null,
    tags = null,
    type = null
  }: {
    certificate_authority_configuration: Aws_acmpca_certificate_authority_certificate_authority_configuration_2[],
    aws_acmpca_certificate_authority_id?: string|null,
    arn?: string|null,
    certificate?: string|null,
    certificate_chain?: string|null,
    certificate_signing_request?: string|null,
    enabled?: boolean|null,
    not_after?: string|null,
    not_before?: string|null,
    revocation_configuration?: Aws_acmpca_certificate_authority_revocation_configuration_4[]|null,
    serial?: string|null,
    status?: string|null,
    tags?: {[s: string]: string}|null,
    type?: string|null
  }) {
    this.certificate_authority_configuration = certificate_authority_configuration;
    this.aws_acmpca_certificate_authority_id = aws_acmpca_certificate_authority_id;
    this.arn = arn;
    this.certificate = certificate;
    this.certificate_chain = certificate_chain;
    this.certificate_signing_request = certificate_signing_request;
    this.enabled = enabled;
    this.not_after = not_after;
    this.not_before = not_before;
    this.revocation_configuration = revocation_configuration;
    this.serial = serial;
    this.status = status;
    this.tags = tags;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['certificate_authority_configuration'] = this.certificate_authority_configuration;
    if (this.aws_acmpca_certificate_authority_id !== null) {
      ih['aws_acmpca_certificate_authority_id'] = this.aws_acmpca_certificate_authority_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.certificate !== null) {
      ih['certificate'] = this.certificate;
    }
    if (this.certificate_chain !== null) {
      ih['certificate_chain'] = this.certificate_chain;
    }
    if (this.certificate_signing_request !== null) {
      ih['certificate_signing_request'] = this.certificate_signing_request;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.not_after !== null) {
      ih['not_after'] = this.not_after;
    }
    if (this.not_before !== null) {
      ih['not_before'] = this.not_before;
    }
    if (this.revocation_configuration !== null) {
      ih['revocation_configuration'] = this.revocation_configuration;
    }
    if (this.serial !== null) {
      ih['serial'] = this.serial;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acmpca_certificate_authority';
  }
}

export class Aws_acmpca_certificate_authorityHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acmpca_certificate_authorityHandler';
  }
}

export class Aws_acmpca_certificate_authority_certificate_authority_configuration_2 implements PcoreValue {
  readonly key_algorithm: string;
  readonly signing_algorithm: string;
  readonly subject: Aws_acmpca_certificate_authority_certificate_authority_configuration_2_subject_3[];

  constructor({
    key_algorithm,
    signing_algorithm,
    subject
  }: {
    key_algorithm: string,
    signing_algorithm: string,
    subject: Aws_acmpca_certificate_authority_certificate_authority_configuration_2_subject_3[]
  }) {
    this.key_algorithm = key_algorithm;
    this.signing_algorithm = signing_algorithm;
    this.subject = subject;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key_algorithm'] = this.key_algorithm;
    ih['signing_algorithm'] = this.signing_algorithm;
    ih['subject'] = this.subject;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acmpca_certificate_authority_certificate_authority_configuration_2';
  }
}

export class Aws_acmpca_certificate_authority_certificate_authority_configuration_2_subject_3 implements PcoreValue {
  readonly common_name: string|null;
  readonly country: string|null;
  readonly distinguished_name_qualifier: string|null;
  readonly generation_qualifier: string|null;
  readonly given_name: string|null;
  readonly initials: string|null;
  readonly locality: string|null;
  readonly organization: string|null;
  readonly organizational_unit: string|null;
  readonly pseudonym: string|null;
  readonly state: string|null;
  readonly surname: string|null;
  readonly title: string|null;

  constructor({
    common_name = null,
    country = null,
    distinguished_name_qualifier = null,
    generation_qualifier = null,
    given_name = null,
    initials = null,
    locality = null,
    organization = null,
    organizational_unit = null,
    pseudonym = null,
    state = null,
    surname = null,
    title = null
  }: {
    common_name?: string|null,
    country?: string|null,
    distinguished_name_qualifier?: string|null,
    generation_qualifier?: string|null,
    given_name?: string|null,
    initials?: string|null,
    locality?: string|null,
    organization?: string|null,
    organizational_unit?: string|null,
    pseudonym?: string|null,
    state?: string|null,
    surname?: string|null,
    title?: string|null
  }) {
    this.common_name = common_name;
    this.country = country;
    this.distinguished_name_qualifier = distinguished_name_qualifier;
    this.generation_qualifier = generation_qualifier;
    this.given_name = given_name;
    this.initials = initials;
    this.locality = locality;
    this.organization = organization;
    this.organizational_unit = organizational_unit;
    this.pseudonym = pseudonym;
    this.state = state;
    this.surname = surname;
    this.title = title;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.common_name !== null) {
      ih['common_name'] = this.common_name;
    }
    if (this.country !== null) {
      ih['country'] = this.country;
    }
    if (this.distinguished_name_qualifier !== null) {
      ih['distinguished_name_qualifier'] = this.distinguished_name_qualifier;
    }
    if (this.generation_qualifier !== null) {
      ih['generation_qualifier'] = this.generation_qualifier;
    }
    if (this.given_name !== null) {
      ih['given_name'] = this.given_name;
    }
    if (this.initials !== null) {
      ih['initials'] = this.initials;
    }
    if (this.locality !== null) {
      ih['locality'] = this.locality;
    }
    if (this.organization !== null) {
      ih['organization'] = this.organization;
    }
    if (this.organizational_unit !== null) {
      ih['organizational_unit'] = this.organizational_unit;
    }
    if (this.pseudonym !== null) {
      ih['pseudonym'] = this.pseudonym;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    if (this.surname !== null) {
      ih['surname'] = this.surname;
    }
    if (this.title !== null) {
      ih['title'] = this.title;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acmpca_certificate_authority_certificate_authority_configuration_2_subject_3';
  }
}

export class Aws_acmpca_certificate_authority_revocation_configuration_4 implements PcoreValue {
  readonly crl_configuration: Aws_acmpca_certificate_authority_revocation_configuration_4_crl_configuration_5[]|null;

  constructor({
    crl_configuration = null
  }: {
    crl_configuration?: Aws_acmpca_certificate_authority_revocation_configuration_4_crl_configuration_5[]|null
  }) {
    this.crl_configuration = crl_configuration;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.crl_configuration !== null) {
      ih['crl_configuration'] = this.crl_configuration;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acmpca_certificate_authority_revocation_configuration_4';
  }
}

export class Aws_acmpca_certificate_authority_revocation_configuration_4_crl_configuration_5 implements PcoreValue {
  readonly expiration_in_days: number;
  readonly custom_cname: string|null;
  readonly enabled: boolean|null;
  readonly s3_bucket_name: string|null;

  constructor({
    expiration_in_days,
    custom_cname = null,
    enabled = null,
    s3_bucket_name = null
  }: {
    expiration_in_days: number,
    custom_cname?: string|null,
    enabled?: boolean|null,
    s3_bucket_name?: string|null
  }) {
    this.expiration_in_days = expiration_in_days;
    this.custom_cname = custom_cname;
    this.enabled = enabled;
    this.s3_bucket_name = s3_bucket_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['expiration_in_days'] = this.expiration_in_days;
    if (this.custom_cname !== null) {
      ih['custom_cname'] = this.custom_cname;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.s3_bucket_name !== null) {
      ih['s3_bucket_name'] = this.s3_bucket_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_acmpca_certificate_authority_revocation_configuration_4_crl_configuration_5';
  }
}

export class Aws_alb implements PcoreValue {
  readonly aws_alb_id: string|null;
  readonly access_logs: Aws_alb_access_logs_6[]|null;
  readonly arn: string|null;
  readonly arn_suffix: string|null;
  readonly dns_name: string|null;
  readonly enable_cross_zone_load_balancing: boolean|null;
  readonly enable_deletion_protection: boolean|null;
  readonly enable_http2: boolean|null;
  readonly idle_timeout: number|null;
  readonly internal: boolean|null;
  readonly ip_address_type: string|null;
  readonly load_balancer_type: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly security_groups: string[]|null;
  readonly subnet_mapping: Aws_alb_subnet_mapping_7[]|null;
  readonly subnets: string[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;
  readonly zone_id: string|null;

  constructor({
    aws_alb_id = null,
    access_logs = null,
    arn = null,
    arn_suffix = null,
    dns_name = null,
    enable_cross_zone_load_balancing = null,
    enable_deletion_protection = null,
    enable_http2 = null,
    idle_timeout = null,
    internal = null,
    ip_address_type = null,
    load_balancer_type = null,
    name = null,
    name_prefix = null,
    security_groups = null,
    subnet_mapping = null,
    subnets = null,
    tags = null,
    vpc_id = null,
    zone_id = null
  }: {
    aws_alb_id?: string|null,
    access_logs?: Aws_alb_access_logs_6[]|null,
    arn?: string|null,
    arn_suffix?: string|null,
    dns_name?: string|null,
    enable_cross_zone_load_balancing?: boolean|null,
    enable_deletion_protection?: boolean|null,
    enable_http2?: boolean|null,
    idle_timeout?: number|null,
    internal?: boolean|null,
    ip_address_type?: string|null,
    load_balancer_type?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    security_groups?: string[]|null,
    subnet_mapping?: Aws_alb_subnet_mapping_7[]|null,
    subnets?: string[]|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null,
    zone_id?: string|null
  }) {
    this.aws_alb_id = aws_alb_id;
    this.access_logs = access_logs;
    this.arn = arn;
    this.arn_suffix = arn_suffix;
    this.dns_name = dns_name;
    this.enable_cross_zone_load_balancing = enable_cross_zone_load_balancing;
    this.enable_deletion_protection = enable_deletion_protection;
    this.enable_http2 = enable_http2;
    this.idle_timeout = idle_timeout;
    this.internal = internal;
    this.ip_address_type = ip_address_type;
    this.load_balancer_type = load_balancer_type;
    this.name = name;
    this.name_prefix = name_prefix;
    this.security_groups = security_groups;
    this.subnet_mapping = subnet_mapping;
    this.subnets = subnets;
    this.tags = tags;
    this.vpc_id = vpc_id;
    this.zone_id = zone_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_alb_id !== null) {
      ih['aws_alb_id'] = this.aws_alb_id;
    }
    if (this.access_logs !== null) {
      ih['access_logs'] = this.access_logs;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.arn_suffix !== null) {
      ih['arn_suffix'] = this.arn_suffix;
    }
    if (this.dns_name !== null) {
      ih['dns_name'] = this.dns_name;
    }
    if (this.enable_cross_zone_load_balancing !== null) {
      ih['enable_cross_zone_load_balancing'] = this.enable_cross_zone_load_balancing;
    }
    if (this.enable_deletion_protection !== null) {
      ih['enable_deletion_protection'] = this.enable_deletion_protection;
    }
    if (this.enable_http2 !== null) {
      ih['enable_http2'] = this.enable_http2;
    }
    if (this.idle_timeout !== null) {
      ih['idle_timeout'] = this.idle_timeout;
    }
    if (this.internal !== null) {
      ih['internal'] = this.internal;
    }
    if (this.ip_address_type !== null) {
      ih['ip_address_type'] = this.ip_address_type;
    }
    if (this.load_balancer_type !== null) {
      ih['load_balancer_type'] = this.load_balancer_type;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.subnet_mapping !== null) {
      ih['subnet_mapping'] = this.subnet_mapping;
    }
    if (this.subnets !== null) {
      ih['subnets'] = this.subnets;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    if (this.zone_id !== null) {
      ih['zone_id'] = this.zone_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb';
  }
}

export class Aws_albHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_albHandler';
  }
}

export class Aws_alb_access_logs_6 implements PcoreValue {
  readonly bucket: string;
  readonly enabled: boolean|null;
  readonly prefix: string|null;

  constructor({
    bucket,
    enabled = null,
    prefix = null
  }: {
    bucket: string,
    enabled?: boolean|null,
    prefix?: string|null
  }) {
    this.bucket = bucket;
    this.enabled = enabled;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_access_logs_6';
  }
}

export class Aws_alb_listener implements PcoreValue {
  readonly default_action: Aws_alb_listener_default_action_8[];
  readonly load_balancer_arn: string;
  readonly port: number;
  readonly aws_alb_listener_id: string|null;
  readonly arn: string|null;
  readonly certificate_arn: string|null;
  readonly protocol: string|null;
  readonly ssl_policy: string|null;

  constructor({
    default_action,
    load_balancer_arn,
    port,
    aws_alb_listener_id = null,
    arn = null,
    certificate_arn = null,
    protocol = null,
    ssl_policy = null
  }: {
    default_action: Aws_alb_listener_default_action_8[],
    load_balancer_arn: string,
    port: number,
    aws_alb_listener_id?: string|null,
    arn?: string|null,
    certificate_arn?: string|null,
    protocol?: string|null,
    ssl_policy?: string|null
  }) {
    this.default_action = default_action;
    this.load_balancer_arn = load_balancer_arn;
    this.port = port;
    this.aws_alb_listener_id = aws_alb_listener_id;
    this.arn = arn;
    this.certificate_arn = certificate_arn;
    this.protocol = protocol;
    this.ssl_policy = ssl_policy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_action'] = this.default_action;
    ih['load_balancer_arn'] = this.load_balancer_arn;
    ih['port'] = this.port;
    if (this.aws_alb_listener_id !== null) {
      ih['aws_alb_listener_id'] = this.aws_alb_listener_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.certificate_arn !== null) {
      ih['certificate_arn'] = this.certificate_arn;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.ssl_policy !== null) {
      ih['ssl_policy'] = this.ssl_policy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener';
  }
}

export class Aws_alb_listenerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listenerHandler';
  }
}

export class Aws_alb_listener_certificate implements PcoreValue {
  readonly certificate_arn: string;
  readonly listener_arn: string;
  readonly aws_alb_listener_certificate_id: string|null;

  constructor({
    certificate_arn,
    listener_arn,
    aws_alb_listener_certificate_id = null
  }: {
    certificate_arn: string,
    listener_arn: string,
    aws_alb_listener_certificate_id?: string|null
  }) {
    this.certificate_arn = certificate_arn;
    this.listener_arn = listener_arn;
    this.aws_alb_listener_certificate_id = aws_alb_listener_certificate_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['certificate_arn'] = this.certificate_arn;
    ih['listener_arn'] = this.listener_arn;
    if (this.aws_alb_listener_certificate_id !== null) {
      ih['aws_alb_listener_certificate_id'] = this.aws_alb_listener_certificate_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_certificate';
  }
}

export class Aws_alb_listener_certificateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_certificateHandler';
  }
}

export class Aws_alb_listener_default_action_8 implements PcoreValue {
  readonly type: string;
  readonly authenticate_cognito: Aws_alb_listener_default_action_8_authenticate_cognito_9[]|null;
  readonly authenticate_oidc: Aws_alb_listener_default_action_8_authenticate_oidc_10[]|null;
  readonly fixed_response: Aws_alb_listener_default_action_8_fixed_response_11[]|null;
  readonly order: number|null;
  readonly redirect: Aws_alb_listener_default_action_8_redirect_12[]|null;
  readonly target_group_arn: string|null;

  constructor({
    type,
    authenticate_cognito = null,
    authenticate_oidc = null,
    fixed_response = null,
    order = null,
    redirect = null,
    target_group_arn = null
  }: {
    type: string,
    authenticate_cognito?: Aws_alb_listener_default_action_8_authenticate_cognito_9[]|null,
    authenticate_oidc?: Aws_alb_listener_default_action_8_authenticate_oidc_10[]|null,
    fixed_response?: Aws_alb_listener_default_action_8_fixed_response_11[]|null,
    order?: number|null,
    redirect?: Aws_alb_listener_default_action_8_redirect_12[]|null,
    target_group_arn?: string|null
  }) {
    this.type = type;
    this.authenticate_cognito = authenticate_cognito;
    this.authenticate_oidc = authenticate_oidc;
    this.fixed_response = fixed_response;
    this.order = order;
    this.redirect = redirect;
    this.target_group_arn = target_group_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.authenticate_cognito !== null) {
      ih['authenticate_cognito'] = this.authenticate_cognito;
    }
    if (this.authenticate_oidc !== null) {
      ih['authenticate_oidc'] = this.authenticate_oidc;
    }
    if (this.fixed_response !== null) {
      ih['fixed_response'] = this.fixed_response;
    }
    if (this.order !== null) {
      ih['order'] = this.order;
    }
    if (this.redirect !== null) {
      ih['redirect'] = this.redirect;
    }
    if (this.target_group_arn !== null) {
      ih['target_group_arn'] = this.target_group_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_default_action_8';
  }
}

export class Aws_alb_listener_default_action_8_authenticate_cognito_9 implements PcoreValue {
  readonly user_pool_arn: string;
  readonly user_pool_client_id: string;
  readonly user_pool_domain: string;
  readonly authentication_request_extra_params: {[s: string]: string}|null;
  readonly on_unauthenticated_request: string|null;
  readonly scope: string|null;
  readonly session_cookie_name: string|null;
  readonly session_timeout: number|null;

  constructor({
    user_pool_arn,
    user_pool_client_id,
    user_pool_domain,
    authentication_request_extra_params = null,
    on_unauthenticated_request = null,
    scope = null,
    session_cookie_name = null,
    session_timeout = null
  }: {
    user_pool_arn: string,
    user_pool_client_id: string,
    user_pool_domain: string,
    authentication_request_extra_params?: {[s: string]: string}|null,
    on_unauthenticated_request?: string|null,
    scope?: string|null,
    session_cookie_name?: string|null,
    session_timeout?: number|null
  }) {
    this.user_pool_arn = user_pool_arn;
    this.user_pool_client_id = user_pool_client_id;
    this.user_pool_domain = user_pool_domain;
    this.authentication_request_extra_params = authentication_request_extra_params;
    this.on_unauthenticated_request = on_unauthenticated_request;
    this.scope = scope;
    this.session_cookie_name = session_cookie_name;
    this.session_timeout = session_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['user_pool_arn'] = this.user_pool_arn;
    ih['user_pool_client_id'] = this.user_pool_client_id;
    ih['user_pool_domain'] = this.user_pool_domain;
    if (this.authentication_request_extra_params !== null) {
      ih['authentication_request_extra_params'] = this.authentication_request_extra_params;
    }
    if (this.on_unauthenticated_request !== null) {
      ih['on_unauthenticated_request'] = this.on_unauthenticated_request;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.session_cookie_name !== null) {
      ih['session_cookie_name'] = this.session_cookie_name;
    }
    if (this.session_timeout !== null) {
      ih['session_timeout'] = this.session_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_default_action_8_authenticate_cognito_9';
  }
}

export class Aws_alb_listener_default_action_8_authenticate_oidc_10 implements PcoreValue {
  readonly authorization_endpoint: string;
  readonly client_id: string;
  readonly client_secret: string;
  readonly issuer: string;
  readonly token_endpoint: string;
  readonly user_info_endpoint: string;
  readonly authentication_request_extra_params: {[s: string]: string}|null;
  readonly on_unauthenticated_request: string|null;
  readonly scope: string|null;
  readonly session_cookie_name: string|null;
  readonly session_timeout: number|null;

  constructor({
    authorization_endpoint,
    client_id,
    client_secret,
    issuer,
    token_endpoint,
    user_info_endpoint,
    authentication_request_extra_params = null,
    on_unauthenticated_request = null,
    scope = null,
    session_cookie_name = null,
    session_timeout = null
  }: {
    authorization_endpoint: string,
    client_id: string,
    client_secret: string,
    issuer: string,
    token_endpoint: string,
    user_info_endpoint: string,
    authentication_request_extra_params?: {[s: string]: string}|null,
    on_unauthenticated_request?: string|null,
    scope?: string|null,
    session_cookie_name?: string|null,
    session_timeout?: number|null
  }) {
    this.authorization_endpoint = authorization_endpoint;
    this.client_id = client_id;
    this.client_secret = client_secret;
    this.issuer = issuer;
    this.token_endpoint = token_endpoint;
    this.user_info_endpoint = user_info_endpoint;
    this.authentication_request_extra_params = authentication_request_extra_params;
    this.on_unauthenticated_request = on_unauthenticated_request;
    this.scope = scope;
    this.session_cookie_name = session_cookie_name;
    this.session_timeout = session_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['authorization_endpoint'] = this.authorization_endpoint;
    ih['client_id'] = this.client_id;
    ih['client_secret'] = this.client_secret;
    ih['issuer'] = this.issuer;
    ih['token_endpoint'] = this.token_endpoint;
    ih['user_info_endpoint'] = this.user_info_endpoint;
    if (this.authentication_request_extra_params !== null) {
      ih['authentication_request_extra_params'] = this.authentication_request_extra_params;
    }
    if (this.on_unauthenticated_request !== null) {
      ih['on_unauthenticated_request'] = this.on_unauthenticated_request;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.session_cookie_name !== null) {
      ih['session_cookie_name'] = this.session_cookie_name;
    }
    if (this.session_timeout !== null) {
      ih['session_timeout'] = this.session_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_default_action_8_authenticate_oidc_10';
  }
}

export class Aws_alb_listener_default_action_8_fixed_response_11 implements PcoreValue {
  readonly content_type: string;
  readonly message_body: string|null;
  readonly status_code: string|null;

  constructor({
    content_type,
    message_body = null,
    status_code = null
  }: {
    content_type: string,
    message_body?: string|null,
    status_code?: string|null
  }) {
    this.content_type = content_type;
    this.message_body = message_body;
    this.status_code = status_code;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['content_type'] = this.content_type;
    if (this.message_body !== null) {
      ih['message_body'] = this.message_body;
    }
    if (this.status_code !== null) {
      ih['status_code'] = this.status_code;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_default_action_8_fixed_response_11';
  }
}

export class Aws_alb_listener_default_action_8_redirect_12 implements PcoreValue {
  readonly status_code: string;
  readonly host: string|null;
  readonly path: string|null;
  readonly port: string|null;
  readonly protocol: string|null;
  readonly query: string|null;

  constructor({
    status_code,
    host = null,
    path = null,
    port = null,
    protocol = null,
    query = null
  }: {
    status_code: string,
    host?: string|null,
    path?: string|null,
    port?: string|null,
    protocol?: string|null,
    query?: string|null
  }) {
    this.status_code = status_code;
    this.host = host;
    this.path = path;
    this.port = port;
    this.protocol = protocol;
    this.query = query;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['status_code'] = this.status_code;
    if (this.host !== null) {
      ih['host'] = this.host;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.query !== null) {
      ih['query'] = this.query;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_default_action_8_redirect_12';
  }
}

export class Aws_alb_listener_rule implements PcoreValue {
  readonly action: Aws_alb_listener_rule_action_13[];
  readonly condition: Aws_alb_listener_rule_condition_18[];
  readonly listener_arn: string;
  readonly aws_alb_listener_rule_id: string|null;
  readonly arn: string|null;
  readonly priority: number|null;

  constructor({
    action,
    condition,
    listener_arn,
    aws_alb_listener_rule_id = null,
    arn = null,
    priority = null
  }: {
    action: Aws_alb_listener_rule_action_13[],
    condition: Aws_alb_listener_rule_condition_18[],
    listener_arn: string,
    aws_alb_listener_rule_id?: string|null,
    arn?: string|null,
    priority?: number|null
  }) {
    this.action = action;
    this.condition = condition;
    this.listener_arn = listener_arn;
    this.aws_alb_listener_rule_id = aws_alb_listener_rule_id;
    this.arn = arn;
    this.priority = priority;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['condition'] = this.condition;
    ih['listener_arn'] = this.listener_arn;
    if (this.aws_alb_listener_rule_id !== null) {
      ih['aws_alb_listener_rule_id'] = this.aws_alb_listener_rule_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.priority !== null) {
      ih['priority'] = this.priority;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_rule';
  }
}

export class Aws_alb_listener_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_ruleHandler';
  }
}

export class Aws_alb_listener_rule_action_13 implements PcoreValue {
  readonly type: string;
  readonly authenticate_cognito: Aws_alb_listener_rule_action_13_authenticate_cognito_14[]|null;
  readonly authenticate_oidc: Aws_alb_listener_rule_action_13_authenticate_oidc_15[]|null;
  readonly fixed_response: Aws_alb_listener_rule_action_13_fixed_response_16[]|null;
  readonly order: number|null;
  readonly redirect: Aws_alb_listener_rule_action_13_redirect_17[]|null;
  readonly target_group_arn: string|null;

  constructor({
    type,
    authenticate_cognito = null,
    authenticate_oidc = null,
    fixed_response = null,
    order = null,
    redirect = null,
    target_group_arn = null
  }: {
    type: string,
    authenticate_cognito?: Aws_alb_listener_rule_action_13_authenticate_cognito_14[]|null,
    authenticate_oidc?: Aws_alb_listener_rule_action_13_authenticate_oidc_15[]|null,
    fixed_response?: Aws_alb_listener_rule_action_13_fixed_response_16[]|null,
    order?: number|null,
    redirect?: Aws_alb_listener_rule_action_13_redirect_17[]|null,
    target_group_arn?: string|null
  }) {
    this.type = type;
    this.authenticate_cognito = authenticate_cognito;
    this.authenticate_oidc = authenticate_oidc;
    this.fixed_response = fixed_response;
    this.order = order;
    this.redirect = redirect;
    this.target_group_arn = target_group_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.authenticate_cognito !== null) {
      ih['authenticate_cognito'] = this.authenticate_cognito;
    }
    if (this.authenticate_oidc !== null) {
      ih['authenticate_oidc'] = this.authenticate_oidc;
    }
    if (this.fixed_response !== null) {
      ih['fixed_response'] = this.fixed_response;
    }
    if (this.order !== null) {
      ih['order'] = this.order;
    }
    if (this.redirect !== null) {
      ih['redirect'] = this.redirect;
    }
    if (this.target_group_arn !== null) {
      ih['target_group_arn'] = this.target_group_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_rule_action_13';
  }
}

export class Aws_alb_listener_rule_action_13_authenticate_cognito_14 implements PcoreValue {
  readonly user_pool_arn: string;
  readonly user_pool_client_id: string;
  readonly user_pool_domain: string;
  readonly authentication_request_extra_params: {[s: string]: string}|null;
  readonly on_unauthenticated_request: string|null;
  readonly scope: string|null;
  readonly session_cookie_name: string|null;
  readonly session_timeout: number|null;

  constructor({
    user_pool_arn,
    user_pool_client_id,
    user_pool_domain,
    authentication_request_extra_params = null,
    on_unauthenticated_request = null,
    scope = null,
    session_cookie_name = null,
    session_timeout = null
  }: {
    user_pool_arn: string,
    user_pool_client_id: string,
    user_pool_domain: string,
    authentication_request_extra_params?: {[s: string]: string}|null,
    on_unauthenticated_request?: string|null,
    scope?: string|null,
    session_cookie_name?: string|null,
    session_timeout?: number|null
  }) {
    this.user_pool_arn = user_pool_arn;
    this.user_pool_client_id = user_pool_client_id;
    this.user_pool_domain = user_pool_domain;
    this.authentication_request_extra_params = authentication_request_extra_params;
    this.on_unauthenticated_request = on_unauthenticated_request;
    this.scope = scope;
    this.session_cookie_name = session_cookie_name;
    this.session_timeout = session_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['user_pool_arn'] = this.user_pool_arn;
    ih['user_pool_client_id'] = this.user_pool_client_id;
    ih['user_pool_domain'] = this.user_pool_domain;
    if (this.authentication_request_extra_params !== null) {
      ih['authentication_request_extra_params'] = this.authentication_request_extra_params;
    }
    if (this.on_unauthenticated_request !== null) {
      ih['on_unauthenticated_request'] = this.on_unauthenticated_request;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.session_cookie_name !== null) {
      ih['session_cookie_name'] = this.session_cookie_name;
    }
    if (this.session_timeout !== null) {
      ih['session_timeout'] = this.session_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_rule_action_13_authenticate_cognito_14';
  }
}

export class Aws_alb_listener_rule_action_13_authenticate_oidc_15 implements PcoreValue {
  readonly authorization_endpoint: string;
  readonly client_id: string;
  readonly client_secret: string;
  readonly issuer: string;
  readonly token_endpoint: string;
  readonly user_info_endpoint: string;
  readonly authentication_request_extra_params: {[s: string]: string}|null;
  readonly on_unauthenticated_request: string|null;
  readonly scope: string|null;
  readonly session_cookie_name: string|null;
  readonly session_timeout: number|null;

  constructor({
    authorization_endpoint,
    client_id,
    client_secret,
    issuer,
    token_endpoint,
    user_info_endpoint,
    authentication_request_extra_params = null,
    on_unauthenticated_request = null,
    scope = null,
    session_cookie_name = null,
    session_timeout = null
  }: {
    authorization_endpoint: string,
    client_id: string,
    client_secret: string,
    issuer: string,
    token_endpoint: string,
    user_info_endpoint: string,
    authentication_request_extra_params?: {[s: string]: string}|null,
    on_unauthenticated_request?: string|null,
    scope?: string|null,
    session_cookie_name?: string|null,
    session_timeout?: number|null
  }) {
    this.authorization_endpoint = authorization_endpoint;
    this.client_id = client_id;
    this.client_secret = client_secret;
    this.issuer = issuer;
    this.token_endpoint = token_endpoint;
    this.user_info_endpoint = user_info_endpoint;
    this.authentication_request_extra_params = authentication_request_extra_params;
    this.on_unauthenticated_request = on_unauthenticated_request;
    this.scope = scope;
    this.session_cookie_name = session_cookie_name;
    this.session_timeout = session_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['authorization_endpoint'] = this.authorization_endpoint;
    ih['client_id'] = this.client_id;
    ih['client_secret'] = this.client_secret;
    ih['issuer'] = this.issuer;
    ih['token_endpoint'] = this.token_endpoint;
    ih['user_info_endpoint'] = this.user_info_endpoint;
    if (this.authentication_request_extra_params !== null) {
      ih['authentication_request_extra_params'] = this.authentication_request_extra_params;
    }
    if (this.on_unauthenticated_request !== null) {
      ih['on_unauthenticated_request'] = this.on_unauthenticated_request;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.session_cookie_name !== null) {
      ih['session_cookie_name'] = this.session_cookie_name;
    }
    if (this.session_timeout !== null) {
      ih['session_timeout'] = this.session_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_rule_action_13_authenticate_oidc_15';
  }
}

export class Aws_alb_listener_rule_action_13_fixed_response_16 implements PcoreValue {
  readonly content_type: string;
  readonly message_body: string|null;
  readonly status_code: string|null;

  constructor({
    content_type,
    message_body = null,
    status_code = null
  }: {
    content_type: string,
    message_body?: string|null,
    status_code?: string|null
  }) {
    this.content_type = content_type;
    this.message_body = message_body;
    this.status_code = status_code;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['content_type'] = this.content_type;
    if (this.message_body !== null) {
      ih['message_body'] = this.message_body;
    }
    if (this.status_code !== null) {
      ih['status_code'] = this.status_code;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_rule_action_13_fixed_response_16';
  }
}

export class Aws_alb_listener_rule_action_13_redirect_17 implements PcoreValue {
  readonly status_code: string;
  readonly host: string|null;
  readonly path: string|null;
  readonly port: string|null;
  readonly protocol: string|null;
  readonly query: string|null;

  constructor({
    status_code,
    host = null,
    path = null,
    port = null,
    protocol = null,
    query = null
  }: {
    status_code: string,
    host?: string|null,
    path?: string|null,
    port?: string|null,
    protocol?: string|null,
    query?: string|null
  }) {
    this.status_code = status_code;
    this.host = host;
    this.path = path;
    this.port = port;
    this.protocol = protocol;
    this.query = query;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['status_code'] = this.status_code;
    if (this.host !== null) {
      ih['host'] = this.host;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.query !== null) {
      ih['query'] = this.query;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_rule_action_13_redirect_17';
  }
}

export class Aws_alb_listener_rule_condition_18 implements PcoreValue {
  readonly field: string|null;
  readonly values: string[]|null;

  constructor({
    field = null,
    values = null
  }: {
    field?: string|null,
    values?: string[]|null
  }) {
    this.field = field;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.field !== null) {
      ih['field'] = this.field;
    }
    if (this.values !== null) {
      ih['values'] = this.values;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_listener_rule_condition_18';
  }
}

export class Aws_alb_subnet_mapping_7 implements PcoreValue {
  readonly subnet_id: string;
  readonly allocation_id: string|null;

  constructor({
    subnet_id,
    allocation_id = null
  }: {
    subnet_id: string,
    allocation_id?: string|null
  }) {
    this.subnet_id = subnet_id;
    this.allocation_id = allocation_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_id'] = this.subnet_id;
    if (this.allocation_id !== null) {
      ih['allocation_id'] = this.allocation_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_subnet_mapping_7';
  }
}

export class Aws_alb_target_group implements PcoreValue {
  readonly aws_alb_target_group_id: string|null;
  readonly arn: string|null;
  readonly arn_suffix: string|null;
  readonly deregistration_delay: number|null;
  readonly health_check: Aws_alb_target_group_health_check_19[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly port: number|null;
  readonly protocol: string|null;
  readonly proxy_protocol_v2: boolean|null;
  readonly slow_start: number|null;
  readonly stickiness: Aws_alb_target_group_stickiness_20[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly target_type: string|null;
  readonly vpc_id: string|null;

  constructor({
    aws_alb_target_group_id = null,
    arn = null,
    arn_suffix = null,
    deregistration_delay = null,
    health_check = null,
    name = null,
    name_prefix = null,
    port = null,
    protocol = null,
    proxy_protocol_v2 = null,
    slow_start = null,
    stickiness = null,
    tags = null,
    target_type = null,
    vpc_id = null
  }: {
    aws_alb_target_group_id?: string|null,
    arn?: string|null,
    arn_suffix?: string|null,
    deregistration_delay?: number|null,
    health_check?: Aws_alb_target_group_health_check_19[]|null,
    name?: string|null,
    name_prefix?: string|null,
    port?: number|null,
    protocol?: string|null,
    proxy_protocol_v2?: boolean|null,
    slow_start?: number|null,
    stickiness?: Aws_alb_target_group_stickiness_20[]|null,
    tags?: {[s: string]: string}|null,
    target_type?: string|null,
    vpc_id?: string|null
  }) {
    this.aws_alb_target_group_id = aws_alb_target_group_id;
    this.arn = arn;
    this.arn_suffix = arn_suffix;
    this.deregistration_delay = deregistration_delay;
    this.health_check = health_check;
    this.name = name;
    this.name_prefix = name_prefix;
    this.port = port;
    this.protocol = protocol;
    this.proxy_protocol_v2 = proxy_protocol_v2;
    this.slow_start = slow_start;
    this.stickiness = stickiness;
    this.tags = tags;
    this.target_type = target_type;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_alb_target_group_id !== null) {
      ih['aws_alb_target_group_id'] = this.aws_alb_target_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.arn_suffix !== null) {
      ih['arn_suffix'] = this.arn_suffix;
    }
    if (this.deregistration_delay !== null) {
      ih['deregistration_delay'] = this.deregistration_delay;
    }
    if (this.health_check !== null) {
      ih['health_check'] = this.health_check;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.proxy_protocol_v2 !== null) {
      ih['proxy_protocol_v2'] = this.proxy_protocol_v2;
    }
    if (this.slow_start !== null) {
      ih['slow_start'] = this.slow_start;
    }
    if (this.stickiness !== null) {
      ih['stickiness'] = this.stickiness;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.target_type !== null) {
      ih['target_type'] = this.target_type;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_target_group';
  }
}

export class Aws_alb_target_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_target_groupHandler';
  }
}

export class Aws_alb_target_group_attachment implements PcoreValue {
  readonly target_group_arn: string;
  readonly target_id: string;
  readonly aws_alb_target_group_attachment_id: string|null;
  readonly availability_zone: string|null;
  readonly port: number|null;

  constructor({
    target_group_arn,
    target_id,
    aws_alb_target_group_attachment_id = null,
    availability_zone = null,
    port = null
  }: {
    target_group_arn: string,
    target_id: string,
    aws_alb_target_group_attachment_id?: string|null,
    availability_zone?: string|null,
    port?: number|null
  }) {
    this.target_group_arn = target_group_arn;
    this.target_id = target_id;
    this.aws_alb_target_group_attachment_id = aws_alb_target_group_attachment_id;
    this.availability_zone = availability_zone;
    this.port = port;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['target_group_arn'] = this.target_group_arn;
    ih['target_id'] = this.target_id;
    if (this.aws_alb_target_group_attachment_id !== null) {
      ih['aws_alb_target_group_attachment_id'] = this.aws_alb_target_group_attachment_id;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_target_group_attachment';
  }
}

export class Aws_alb_target_group_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_target_group_attachmentHandler';
  }
}

export class Aws_alb_target_group_health_check_19 implements PcoreValue {
  readonly healthy_threshold: number|null;
  readonly interval: number|null;
  readonly matcher: string|null;
  readonly path: string|null;
  readonly port: string|null;
  readonly protocol: string|null;
  readonly timeout: number|null;
  readonly unhealthy_threshold: number|null;

  constructor({
    healthy_threshold = null,
    interval = null,
    matcher = null,
    path = null,
    port = null,
    protocol = null,
    timeout = null,
    unhealthy_threshold = null
  }: {
    healthy_threshold?: number|null,
    interval?: number|null,
    matcher?: string|null,
    path?: string|null,
    port?: string|null,
    protocol?: string|null,
    timeout?: number|null,
    unhealthy_threshold?: number|null
  }) {
    this.healthy_threshold = healthy_threshold;
    this.interval = interval;
    this.matcher = matcher;
    this.path = path;
    this.port = port;
    this.protocol = protocol;
    this.timeout = timeout;
    this.unhealthy_threshold = unhealthy_threshold;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.healthy_threshold !== null) {
      ih['healthy_threshold'] = this.healthy_threshold;
    }
    if (this.interval !== null) {
      ih['interval'] = this.interval;
    }
    if (this.matcher !== null) {
      ih['matcher'] = this.matcher;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.timeout !== null) {
      ih['timeout'] = this.timeout;
    }
    if (this.unhealthy_threshold !== null) {
      ih['unhealthy_threshold'] = this.unhealthy_threshold;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_target_group_health_check_19';
  }
}

export class Aws_alb_target_group_stickiness_20 implements PcoreValue {
  readonly type: string;
  readonly cookie_duration: number|null;
  readonly enabled: boolean|null;

  constructor({
    type,
    cookie_duration = null,
    enabled = null
  }: {
    type: string,
    cookie_duration?: number|null,
    enabled?: boolean|null
  }) {
    this.type = type;
    this.cookie_duration = cookie_duration;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.cookie_duration !== null) {
      ih['cookie_duration'] = this.cookie_duration;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_alb_target_group_stickiness_20';
  }
}

export class Aws_ami implements PcoreValue {
  readonly name: string;
  readonly aws_ami_id: string|null;
  readonly architecture: string|null;
  readonly description: string|null;
  readonly ebs_block_device: Aws_ami_ebs_block_device_21[]|null;
  readonly ena_support: boolean|null;
  readonly ephemeral_block_device: Aws_ami_ephemeral_block_device_22[]|null;
  readonly image_location: string|null;
  readonly kernel_id: string|null;
  readonly manage_ebs_snapshots: boolean|null;
  readonly ramdisk_id: string|null;
  readonly root_device_name: string|null;
  readonly root_snapshot_id: string|null;
  readonly sriov_net_support: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly virtualization_type: string|null;

  constructor({
    name,
    aws_ami_id = null,
    architecture = null,
    description = null,
    ebs_block_device = null,
    ena_support = null,
    ephemeral_block_device = null,
    image_location = null,
    kernel_id = null,
    manage_ebs_snapshots = null,
    ramdisk_id = null,
    root_device_name = null,
    root_snapshot_id = null,
    sriov_net_support = null,
    tags = null,
    virtualization_type = null
  }: {
    name: string,
    aws_ami_id?: string|null,
    architecture?: string|null,
    description?: string|null,
    ebs_block_device?: Aws_ami_ebs_block_device_21[]|null,
    ena_support?: boolean|null,
    ephemeral_block_device?: Aws_ami_ephemeral_block_device_22[]|null,
    image_location?: string|null,
    kernel_id?: string|null,
    manage_ebs_snapshots?: boolean|null,
    ramdisk_id?: string|null,
    root_device_name?: string|null,
    root_snapshot_id?: string|null,
    sriov_net_support?: string|null,
    tags?: {[s: string]: string}|null,
    virtualization_type?: string|null
  }) {
    this.name = name;
    this.aws_ami_id = aws_ami_id;
    this.architecture = architecture;
    this.description = description;
    this.ebs_block_device = ebs_block_device;
    this.ena_support = ena_support;
    this.ephemeral_block_device = ephemeral_block_device;
    this.image_location = image_location;
    this.kernel_id = kernel_id;
    this.manage_ebs_snapshots = manage_ebs_snapshots;
    this.ramdisk_id = ramdisk_id;
    this.root_device_name = root_device_name;
    this.root_snapshot_id = root_snapshot_id;
    this.sriov_net_support = sriov_net_support;
    this.tags = tags;
    this.virtualization_type = virtualization_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_ami_id !== null) {
      ih['aws_ami_id'] = this.aws_ami_id;
    }
    if (this.architecture !== null) {
      ih['architecture'] = this.architecture;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ebs_block_device !== null) {
      ih['ebs_block_device'] = this.ebs_block_device;
    }
    if (this.ena_support !== null) {
      ih['ena_support'] = this.ena_support;
    }
    if (this.ephemeral_block_device !== null) {
      ih['ephemeral_block_device'] = this.ephemeral_block_device;
    }
    if (this.image_location !== null) {
      ih['image_location'] = this.image_location;
    }
    if (this.kernel_id !== null) {
      ih['kernel_id'] = this.kernel_id;
    }
    if (this.manage_ebs_snapshots !== null) {
      ih['manage_ebs_snapshots'] = this.manage_ebs_snapshots;
    }
    if (this.ramdisk_id !== null) {
      ih['ramdisk_id'] = this.ramdisk_id;
    }
    if (this.root_device_name !== null) {
      ih['root_device_name'] = this.root_device_name;
    }
    if (this.root_snapshot_id !== null) {
      ih['root_snapshot_id'] = this.root_snapshot_id;
    }
    if (this.sriov_net_support !== null) {
      ih['sriov_net_support'] = this.sriov_net_support;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.virtualization_type !== null) {
      ih['virtualization_type'] = this.virtualization_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami';
  }
}

export class Aws_amiHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_amiHandler';
  }
}

export class Aws_ami_copy implements PcoreValue {
  readonly name: string;
  readonly source_ami_id: string;
  readonly source_ami_region: string;
  readonly aws_ami_copy_id: string|null;
  readonly architecture: string|null;
  readonly description: string|null;
  readonly ebs_block_device: Aws_ami_copy_ebs_block_device_23[]|null;
  readonly ena_support: boolean|null;
  readonly encrypted: boolean|null;
  readonly ephemeral_block_device: Aws_ami_copy_ephemeral_block_device_24[]|null;
  readonly image_location: string|null;
  readonly kernel_id: string|null;
  readonly kms_key_id: string|null;
  readonly manage_ebs_snapshots: boolean|null;
  readonly ramdisk_id: string|null;
  readonly root_device_name: string|null;
  readonly root_snapshot_id: string|null;
  readonly sriov_net_support: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly virtualization_type: string|null;

  constructor({
    name,
    source_ami_id,
    source_ami_region,
    aws_ami_copy_id = null,
    architecture = null,
    description = null,
    ebs_block_device = null,
    ena_support = null,
    encrypted = null,
    ephemeral_block_device = null,
    image_location = null,
    kernel_id = null,
    kms_key_id = null,
    manage_ebs_snapshots = null,
    ramdisk_id = null,
    root_device_name = null,
    root_snapshot_id = null,
    sriov_net_support = null,
    tags = null,
    virtualization_type = null
  }: {
    name: string,
    source_ami_id: string,
    source_ami_region: string,
    aws_ami_copy_id?: string|null,
    architecture?: string|null,
    description?: string|null,
    ebs_block_device?: Aws_ami_copy_ebs_block_device_23[]|null,
    ena_support?: boolean|null,
    encrypted?: boolean|null,
    ephemeral_block_device?: Aws_ami_copy_ephemeral_block_device_24[]|null,
    image_location?: string|null,
    kernel_id?: string|null,
    kms_key_id?: string|null,
    manage_ebs_snapshots?: boolean|null,
    ramdisk_id?: string|null,
    root_device_name?: string|null,
    root_snapshot_id?: string|null,
    sriov_net_support?: string|null,
    tags?: {[s: string]: string}|null,
    virtualization_type?: string|null
  }) {
    this.name = name;
    this.source_ami_id = source_ami_id;
    this.source_ami_region = source_ami_region;
    this.aws_ami_copy_id = aws_ami_copy_id;
    this.architecture = architecture;
    this.description = description;
    this.ebs_block_device = ebs_block_device;
    this.ena_support = ena_support;
    this.encrypted = encrypted;
    this.ephemeral_block_device = ephemeral_block_device;
    this.image_location = image_location;
    this.kernel_id = kernel_id;
    this.kms_key_id = kms_key_id;
    this.manage_ebs_snapshots = manage_ebs_snapshots;
    this.ramdisk_id = ramdisk_id;
    this.root_device_name = root_device_name;
    this.root_snapshot_id = root_snapshot_id;
    this.sriov_net_support = sriov_net_support;
    this.tags = tags;
    this.virtualization_type = virtualization_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['source_ami_id'] = this.source_ami_id;
    ih['source_ami_region'] = this.source_ami_region;
    if (this.aws_ami_copy_id !== null) {
      ih['aws_ami_copy_id'] = this.aws_ami_copy_id;
    }
    if (this.architecture !== null) {
      ih['architecture'] = this.architecture;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ebs_block_device !== null) {
      ih['ebs_block_device'] = this.ebs_block_device;
    }
    if (this.ena_support !== null) {
      ih['ena_support'] = this.ena_support;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.ephemeral_block_device !== null) {
      ih['ephemeral_block_device'] = this.ephemeral_block_device;
    }
    if (this.image_location !== null) {
      ih['image_location'] = this.image_location;
    }
    if (this.kernel_id !== null) {
      ih['kernel_id'] = this.kernel_id;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.manage_ebs_snapshots !== null) {
      ih['manage_ebs_snapshots'] = this.manage_ebs_snapshots;
    }
    if (this.ramdisk_id !== null) {
      ih['ramdisk_id'] = this.ramdisk_id;
    }
    if (this.root_device_name !== null) {
      ih['root_device_name'] = this.root_device_name;
    }
    if (this.root_snapshot_id !== null) {
      ih['root_snapshot_id'] = this.root_snapshot_id;
    }
    if (this.sriov_net_support !== null) {
      ih['sriov_net_support'] = this.sriov_net_support;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.virtualization_type !== null) {
      ih['virtualization_type'] = this.virtualization_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_copy';
  }
}

export class Aws_ami_copyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_copyHandler';
  }
}

export class Aws_ami_copy_ebs_block_device_23 implements PcoreValue {
  readonly delete_on_termination: boolean|null;
  readonly device_name: string|null;
  readonly encrypted: boolean|null;
  readonly iops: number|null;
  readonly snapshot_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    delete_on_termination = null,
    device_name = null,
    encrypted = null,
    iops = null,
    snapshot_id = null,
    volume_size = null,
    volume_type = null
  }: {
    delete_on_termination?: boolean|null,
    device_name?: string|null,
    encrypted?: boolean|null,
    iops?: number|null,
    snapshot_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.delete_on_termination = delete_on_termination;
    this.device_name = device_name;
    this.encrypted = encrypted;
    this.iops = iops;
    this.snapshot_id = snapshot_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.device_name !== null) {
      ih['device_name'] = this.device_name;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_copy_ebs_block_device_23';
  }
}

export class Aws_ami_copy_ephemeral_block_device_24 implements PcoreValue {
  readonly device_name: string|null;
  readonly virtual_name: string|null;

  constructor({
    device_name = null,
    virtual_name = null
  }: {
    device_name?: string|null,
    virtual_name?: string|null
  }) {
    this.device_name = device_name;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.device_name !== null) {
      ih['device_name'] = this.device_name;
    }
    if (this.virtual_name !== null) {
      ih['virtual_name'] = this.virtual_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_copy_ephemeral_block_device_24';
  }
}

export class Aws_ami_ebs_block_device_21 implements PcoreValue {
  readonly device_name: string;
  readonly delete_on_termination: boolean|null;
  readonly encrypted: boolean|null;
  readonly iops: number|null;
  readonly snapshot_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    device_name,
    delete_on_termination = null,
    encrypted = null,
    iops = null,
    snapshot_id = null,
    volume_size = null,
    volume_type = null
  }: {
    device_name: string,
    delete_on_termination?: boolean|null,
    encrypted?: boolean|null,
    iops?: number|null,
    snapshot_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.device_name = device_name;
    this.delete_on_termination = delete_on_termination;
    this.encrypted = encrypted;
    this.iops = iops;
    this.snapshot_id = snapshot_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_ebs_block_device_21';
  }
}

export class Aws_ami_ephemeral_block_device_22 implements PcoreValue {
  readonly device_name: string;
  readonly virtual_name: string;

  constructor({
    device_name,
    virtual_name
  }: {
    device_name: string,
    virtual_name: string
  }) {
    this.device_name = device_name;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    ih['virtual_name'] = this.virtual_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_ephemeral_block_device_22';
  }
}

export class Aws_ami_from_instance implements PcoreValue {
  readonly name: string;
  readonly source_instance_id: string;
  readonly aws_ami_from_instance_id: string|null;
  readonly architecture: string|null;
  readonly description: string|null;
  readonly ebs_block_device: Aws_ami_from_instance_ebs_block_device_25[]|null;
  readonly ena_support: boolean|null;
  readonly ephemeral_block_device: Aws_ami_from_instance_ephemeral_block_device_26[]|null;
  readonly image_location: string|null;
  readonly kernel_id: string|null;
  readonly manage_ebs_snapshots: boolean|null;
  readonly ramdisk_id: string|null;
  readonly root_device_name: string|null;
  readonly root_snapshot_id: string|null;
  readonly snapshot_without_reboot: boolean|null;
  readonly sriov_net_support: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly virtualization_type: string|null;

  constructor({
    name,
    source_instance_id,
    aws_ami_from_instance_id = null,
    architecture = null,
    description = null,
    ebs_block_device = null,
    ena_support = null,
    ephemeral_block_device = null,
    image_location = null,
    kernel_id = null,
    manage_ebs_snapshots = null,
    ramdisk_id = null,
    root_device_name = null,
    root_snapshot_id = null,
    snapshot_without_reboot = null,
    sriov_net_support = null,
    tags = null,
    virtualization_type = null
  }: {
    name: string,
    source_instance_id: string,
    aws_ami_from_instance_id?: string|null,
    architecture?: string|null,
    description?: string|null,
    ebs_block_device?: Aws_ami_from_instance_ebs_block_device_25[]|null,
    ena_support?: boolean|null,
    ephemeral_block_device?: Aws_ami_from_instance_ephemeral_block_device_26[]|null,
    image_location?: string|null,
    kernel_id?: string|null,
    manage_ebs_snapshots?: boolean|null,
    ramdisk_id?: string|null,
    root_device_name?: string|null,
    root_snapshot_id?: string|null,
    snapshot_without_reboot?: boolean|null,
    sriov_net_support?: string|null,
    tags?: {[s: string]: string}|null,
    virtualization_type?: string|null
  }) {
    this.name = name;
    this.source_instance_id = source_instance_id;
    this.aws_ami_from_instance_id = aws_ami_from_instance_id;
    this.architecture = architecture;
    this.description = description;
    this.ebs_block_device = ebs_block_device;
    this.ena_support = ena_support;
    this.ephemeral_block_device = ephemeral_block_device;
    this.image_location = image_location;
    this.kernel_id = kernel_id;
    this.manage_ebs_snapshots = manage_ebs_snapshots;
    this.ramdisk_id = ramdisk_id;
    this.root_device_name = root_device_name;
    this.root_snapshot_id = root_snapshot_id;
    this.snapshot_without_reboot = snapshot_without_reboot;
    this.sriov_net_support = sriov_net_support;
    this.tags = tags;
    this.virtualization_type = virtualization_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['source_instance_id'] = this.source_instance_id;
    if (this.aws_ami_from_instance_id !== null) {
      ih['aws_ami_from_instance_id'] = this.aws_ami_from_instance_id;
    }
    if (this.architecture !== null) {
      ih['architecture'] = this.architecture;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ebs_block_device !== null) {
      ih['ebs_block_device'] = this.ebs_block_device;
    }
    if (this.ena_support !== null) {
      ih['ena_support'] = this.ena_support;
    }
    if (this.ephemeral_block_device !== null) {
      ih['ephemeral_block_device'] = this.ephemeral_block_device;
    }
    if (this.image_location !== null) {
      ih['image_location'] = this.image_location;
    }
    if (this.kernel_id !== null) {
      ih['kernel_id'] = this.kernel_id;
    }
    if (this.manage_ebs_snapshots !== null) {
      ih['manage_ebs_snapshots'] = this.manage_ebs_snapshots;
    }
    if (this.ramdisk_id !== null) {
      ih['ramdisk_id'] = this.ramdisk_id;
    }
    if (this.root_device_name !== null) {
      ih['root_device_name'] = this.root_device_name;
    }
    if (this.root_snapshot_id !== null) {
      ih['root_snapshot_id'] = this.root_snapshot_id;
    }
    if (this.snapshot_without_reboot !== null) {
      ih['snapshot_without_reboot'] = this.snapshot_without_reboot;
    }
    if (this.sriov_net_support !== null) {
      ih['sriov_net_support'] = this.sriov_net_support;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.virtualization_type !== null) {
      ih['virtualization_type'] = this.virtualization_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_from_instance';
  }
}

export class Aws_ami_from_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_from_instanceHandler';
  }
}

export class Aws_ami_from_instance_ebs_block_device_25 implements PcoreValue {
  readonly delete_on_termination: boolean|null;
  readonly device_name: string|null;
  readonly encrypted: boolean|null;
  readonly iops: number|null;
  readonly snapshot_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    delete_on_termination = null,
    device_name = null,
    encrypted = null,
    iops = null,
    snapshot_id = null,
    volume_size = null,
    volume_type = null
  }: {
    delete_on_termination?: boolean|null,
    device_name?: string|null,
    encrypted?: boolean|null,
    iops?: number|null,
    snapshot_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.delete_on_termination = delete_on_termination;
    this.device_name = device_name;
    this.encrypted = encrypted;
    this.iops = iops;
    this.snapshot_id = snapshot_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.device_name !== null) {
      ih['device_name'] = this.device_name;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_from_instance_ebs_block_device_25';
  }
}

export class Aws_ami_from_instance_ephemeral_block_device_26 implements PcoreValue {
  readonly device_name: string|null;
  readonly virtual_name: string|null;

  constructor({
    device_name = null,
    virtual_name = null
  }: {
    device_name?: string|null,
    virtual_name?: string|null
  }) {
    this.device_name = device_name;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.device_name !== null) {
      ih['device_name'] = this.device_name;
    }
    if (this.virtual_name !== null) {
      ih['virtual_name'] = this.virtual_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_from_instance_ephemeral_block_device_26';
  }
}

export class Aws_ami_launch_permission implements PcoreValue {
  readonly account_id: string;
  readonly image_id: string;
  readonly aws_ami_launch_permission_id: string|null;

  constructor({
    account_id,
    image_id,
    aws_ami_launch_permission_id = null
  }: {
    account_id: string,
    image_id: string,
    aws_ami_launch_permission_id?: string|null
  }) {
    this.account_id = account_id;
    this.image_id = image_id;
    this.aws_ami_launch_permission_id = aws_ami_launch_permission_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['account_id'] = this.account_id;
    ih['image_id'] = this.image_id;
    if (this.aws_ami_launch_permission_id !== null) {
      ih['aws_ami_launch_permission_id'] = this.aws_ami_launch_permission_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_launch_permission';
  }
}

export class Aws_ami_launch_permissionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ami_launch_permissionHandler';
  }
}

export class Aws_api_gateway_account implements PcoreValue {
  readonly aws_api_gateway_account_id: string|null;
  readonly cloudwatch_role_arn: string|null;
  readonly throttle_settings: Aws_api_gateway_account_throttle_settings_27[]|null;

  constructor({
    aws_api_gateway_account_id = null,
    cloudwatch_role_arn = null,
    throttle_settings = null
  }: {
    aws_api_gateway_account_id?: string|null,
    cloudwatch_role_arn?: string|null,
    throttle_settings?: Aws_api_gateway_account_throttle_settings_27[]|null
  }) {
    this.aws_api_gateway_account_id = aws_api_gateway_account_id;
    this.cloudwatch_role_arn = cloudwatch_role_arn;
    this.throttle_settings = throttle_settings;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_api_gateway_account_id !== null) {
      ih['aws_api_gateway_account_id'] = this.aws_api_gateway_account_id;
    }
    if (this.cloudwatch_role_arn !== null) {
      ih['cloudwatch_role_arn'] = this.cloudwatch_role_arn;
    }
    if (this.throttle_settings !== null) {
      ih['throttle_settings'] = this.throttle_settings;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_account';
  }
}

export class Aws_api_gateway_accountHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_accountHandler';
  }
}

export class Aws_api_gateway_account_throttle_settings_27 implements PcoreValue {
  readonly burst_limit: number|null;
  readonly rate_limit: number|null;

  constructor({
    burst_limit = null,
    rate_limit = null
  }: {
    burst_limit?: number|null,
    rate_limit?: number|null
  }) {
    this.burst_limit = burst_limit;
    this.rate_limit = rate_limit;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.burst_limit !== null) {
      ih['burst_limit'] = this.burst_limit;
    }
    if (this.rate_limit !== null) {
      ih['rate_limit'] = this.rate_limit;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_account_throttle_settings_27';
  }
}

export class Aws_api_gateway_api_key implements PcoreValue {
  readonly name: string;
  readonly aws_api_gateway_api_key_id: string|null;
  readonly created_date: string|null;
  readonly description: string|null;
  readonly enabled: boolean|null;
  readonly last_updated_date: string|null;
  readonly stage_key: Aws_api_gateway_api_key_stage_key_28[]|null;
  readonly value: string|null;

  constructor({
    name,
    aws_api_gateway_api_key_id = null,
    created_date = null,
    description = null,
    enabled = null,
    last_updated_date = null,
    stage_key = null,
    value = null
  }: {
    name: string,
    aws_api_gateway_api_key_id?: string|null,
    created_date?: string|null,
    description?: string|null,
    enabled?: boolean|null,
    last_updated_date?: string|null,
    stage_key?: Aws_api_gateway_api_key_stage_key_28[]|null,
    value?: string|null
  }) {
    this.name = name;
    this.aws_api_gateway_api_key_id = aws_api_gateway_api_key_id;
    this.created_date = created_date;
    this.description = description;
    this.enabled = enabled;
    this.last_updated_date = last_updated_date;
    this.stage_key = stage_key;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_api_gateway_api_key_id !== null) {
      ih['aws_api_gateway_api_key_id'] = this.aws_api_gateway_api_key_id;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.last_updated_date !== null) {
      ih['last_updated_date'] = this.last_updated_date;
    }
    if (this.stage_key !== null) {
      ih['stage_key'] = this.stage_key;
    }
    if (this.value !== null) {
      ih['value'] = this.value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_api_key';
  }
}

export class Aws_api_gateway_api_keyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_api_keyHandler';
  }
}

export class Aws_api_gateway_api_key_stage_key_28 implements PcoreValue {
  readonly rest_api_id: string;
  readonly stage_name: string;

  constructor({
    rest_api_id,
    stage_name
  }: {
    rest_api_id: string,
    stage_name: string
  }) {
    this.rest_api_id = rest_api_id;
    this.stage_name = stage_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['rest_api_id'] = this.rest_api_id;
    ih['stage_name'] = this.stage_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_api_key_stage_key_28';
  }
}

export class Aws_api_gateway_authorizer implements PcoreValue {
  readonly name: string;
  readonly rest_api_id: string;
  readonly aws_api_gateway_authorizer_id: string|null;
  readonly authorizer_credentials: string|null;
  readonly authorizer_result_ttl_in_seconds: number|null;
  readonly authorizer_uri: string|null;
  readonly identity_source: string|null;
  readonly identity_validation_expression: string|null;
  readonly provider_arns: string[]|null;
  readonly type: string|null;

  constructor({
    name,
    rest_api_id,
    aws_api_gateway_authorizer_id = null,
    authorizer_credentials = null,
    authorizer_result_ttl_in_seconds = null,
    authorizer_uri = null,
    identity_source = null,
    identity_validation_expression = null,
    provider_arns = null,
    type = null
  }: {
    name: string,
    rest_api_id: string,
    aws_api_gateway_authorizer_id?: string|null,
    authorizer_credentials?: string|null,
    authorizer_result_ttl_in_seconds?: number|null,
    authorizer_uri?: string|null,
    identity_source?: string|null,
    identity_validation_expression?: string|null,
    provider_arns?: string[]|null,
    type?: string|null
  }) {
    this.name = name;
    this.rest_api_id = rest_api_id;
    this.aws_api_gateway_authorizer_id = aws_api_gateway_authorizer_id;
    this.authorizer_credentials = authorizer_credentials;
    this.authorizer_result_ttl_in_seconds = authorizer_result_ttl_in_seconds;
    this.authorizer_uri = authorizer_uri;
    this.identity_source = identity_source;
    this.identity_validation_expression = identity_validation_expression;
    this.provider_arns = provider_arns;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['rest_api_id'] = this.rest_api_id;
    if (this.aws_api_gateway_authorizer_id !== null) {
      ih['aws_api_gateway_authorizer_id'] = this.aws_api_gateway_authorizer_id;
    }
    if (this.authorizer_credentials !== null) {
      ih['authorizer_credentials'] = this.authorizer_credentials;
    }
    if (this.authorizer_result_ttl_in_seconds !== null) {
      ih['authorizer_result_ttl_in_seconds'] = this.authorizer_result_ttl_in_seconds;
    }
    if (this.authorizer_uri !== null) {
      ih['authorizer_uri'] = this.authorizer_uri;
    }
    if (this.identity_source !== null) {
      ih['identity_source'] = this.identity_source;
    }
    if (this.identity_validation_expression !== null) {
      ih['identity_validation_expression'] = this.identity_validation_expression;
    }
    if (this.provider_arns !== null) {
      ih['provider_arns'] = this.provider_arns;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_authorizer';
  }
}

export class Aws_api_gateway_authorizerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_authorizerHandler';
  }
}

export class Aws_api_gateway_base_path_mapping implements PcoreValue {
  readonly api_id: string;
  readonly domain_name: string;
  readonly aws_api_gateway_base_path_mapping_id: string|null;
  readonly base_path: string|null;
  readonly stage_name: string|null;

  constructor({
    api_id,
    domain_name,
    aws_api_gateway_base_path_mapping_id = null,
    base_path = null,
    stage_name = null
  }: {
    api_id: string,
    domain_name: string,
    aws_api_gateway_base_path_mapping_id?: string|null,
    base_path?: string|null,
    stage_name?: string|null
  }) {
    this.api_id = api_id;
    this.domain_name = domain_name;
    this.aws_api_gateway_base_path_mapping_id = aws_api_gateway_base_path_mapping_id;
    this.base_path = base_path;
    this.stage_name = stage_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['api_id'] = this.api_id;
    ih['domain_name'] = this.domain_name;
    if (this.aws_api_gateway_base_path_mapping_id !== null) {
      ih['aws_api_gateway_base_path_mapping_id'] = this.aws_api_gateway_base_path_mapping_id;
    }
    if (this.base_path !== null) {
      ih['base_path'] = this.base_path;
    }
    if (this.stage_name !== null) {
      ih['stage_name'] = this.stage_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_base_path_mapping';
  }
}

export class Aws_api_gateway_base_path_mappingHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_base_path_mappingHandler';
  }
}

export class Aws_api_gateway_client_certificate implements PcoreValue {
  readonly aws_api_gateway_client_certificate_id: string|null;
  readonly created_date: string|null;
  readonly description: string|null;
  readonly expiration_date: string|null;
  readonly pem_encoded_certificate: string|null;

  constructor({
    aws_api_gateway_client_certificate_id = null,
    created_date = null,
    description = null,
    expiration_date = null,
    pem_encoded_certificate = null
  }: {
    aws_api_gateway_client_certificate_id?: string|null,
    created_date?: string|null,
    description?: string|null,
    expiration_date?: string|null,
    pem_encoded_certificate?: string|null
  }) {
    this.aws_api_gateway_client_certificate_id = aws_api_gateway_client_certificate_id;
    this.created_date = created_date;
    this.description = description;
    this.expiration_date = expiration_date;
    this.pem_encoded_certificate = pem_encoded_certificate;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_api_gateway_client_certificate_id !== null) {
      ih['aws_api_gateway_client_certificate_id'] = this.aws_api_gateway_client_certificate_id;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.expiration_date !== null) {
      ih['expiration_date'] = this.expiration_date;
    }
    if (this.pem_encoded_certificate !== null) {
      ih['pem_encoded_certificate'] = this.pem_encoded_certificate;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_client_certificate';
  }
}

export class Aws_api_gateway_client_certificateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_client_certificateHandler';
  }
}

export class Aws_api_gateway_deployment implements PcoreValue {
  readonly rest_api_id: string;
  readonly stage_name: string;
  readonly aws_api_gateway_deployment_id: string|null;
  readonly created_date: string|null;
  readonly description: string|null;
  readonly execution_arn: string|null;
  readonly invoke_url: string|null;
  readonly stage_description: string|null;
  readonly variables: {[s: string]: string}|null;

  constructor({
    rest_api_id,
    stage_name,
    aws_api_gateway_deployment_id = null,
    created_date = null,
    description = null,
    execution_arn = null,
    invoke_url = null,
    stage_description = null,
    variables = null
  }: {
    rest_api_id: string,
    stage_name: string,
    aws_api_gateway_deployment_id?: string|null,
    created_date?: string|null,
    description?: string|null,
    execution_arn?: string|null,
    invoke_url?: string|null,
    stage_description?: string|null,
    variables?: {[s: string]: string}|null
  }) {
    this.rest_api_id = rest_api_id;
    this.stage_name = stage_name;
    this.aws_api_gateway_deployment_id = aws_api_gateway_deployment_id;
    this.created_date = created_date;
    this.description = description;
    this.execution_arn = execution_arn;
    this.invoke_url = invoke_url;
    this.stage_description = stage_description;
    this.variables = variables;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['rest_api_id'] = this.rest_api_id;
    ih['stage_name'] = this.stage_name;
    if (this.aws_api_gateway_deployment_id !== null) {
      ih['aws_api_gateway_deployment_id'] = this.aws_api_gateway_deployment_id;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.execution_arn !== null) {
      ih['execution_arn'] = this.execution_arn;
    }
    if (this.invoke_url !== null) {
      ih['invoke_url'] = this.invoke_url;
    }
    if (this.stage_description !== null) {
      ih['stage_description'] = this.stage_description;
    }
    if (this.variables !== null) {
      ih['variables'] = this.variables;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_deployment';
  }
}

export class Aws_api_gateway_deploymentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_deploymentHandler';
  }
}

export class Aws_api_gateway_documentation_part implements PcoreValue {
  readonly location: Aws_api_gateway_documentation_part_location_29[];
  readonly properties: string;
  readonly rest_api_id: string;
  readonly aws_api_gateway_documentation_part_id: string|null;

  constructor({
    location,
    properties,
    rest_api_id,
    aws_api_gateway_documentation_part_id = null
  }: {
    location: Aws_api_gateway_documentation_part_location_29[],
    properties: string,
    rest_api_id: string,
    aws_api_gateway_documentation_part_id?: string|null
  }) {
    this.location = location;
    this.properties = properties;
    this.rest_api_id = rest_api_id;
    this.aws_api_gateway_documentation_part_id = aws_api_gateway_documentation_part_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['location'] = this.location;
    ih['properties'] = this.properties;
    ih['rest_api_id'] = this.rest_api_id;
    if (this.aws_api_gateway_documentation_part_id !== null) {
      ih['aws_api_gateway_documentation_part_id'] = this.aws_api_gateway_documentation_part_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_documentation_part';
  }
}

export class Aws_api_gateway_documentation_partHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_documentation_partHandler';
  }
}

export class Aws_api_gateway_documentation_part_location_29 implements PcoreValue {
  readonly type: string;
  readonly method: string|null;
  readonly name: string|null;
  readonly path: string|null;
  readonly status_code: string|null;

  constructor({
    type,
    method = null,
    name = null,
    path = null,
    status_code = null
  }: {
    type: string,
    method?: string|null,
    name?: string|null,
    path?: string|null,
    status_code?: string|null
  }) {
    this.type = type;
    this.method = method;
    this.name = name;
    this.path = path;
    this.status_code = status_code;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.method !== null) {
      ih['method'] = this.method;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.status_code !== null) {
      ih['status_code'] = this.status_code;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_documentation_part_location_29';
  }
}

export class Aws_api_gateway_documentation_version implements PcoreValue {
  readonly rest_api_id: string;
  readonly version: string;
  readonly aws_api_gateway_documentation_version_id: string|null;
  readonly description: string|null;

  constructor({
    rest_api_id,
    version,
    aws_api_gateway_documentation_version_id = null,
    description = null
  }: {
    rest_api_id: string,
    version: string,
    aws_api_gateway_documentation_version_id?: string|null,
    description?: string|null
  }) {
    this.rest_api_id = rest_api_id;
    this.version = version;
    this.aws_api_gateway_documentation_version_id = aws_api_gateway_documentation_version_id;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['rest_api_id'] = this.rest_api_id;
    ih['version'] = this.version;
    if (this.aws_api_gateway_documentation_version_id !== null) {
      ih['aws_api_gateway_documentation_version_id'] = this.aws_api_gateway_documentation_version_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_documentation_version';
  }
}

export class Aws_api_gateway_documentation_versionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_documentation_versionHandler';
  }
}

export class Aws_api_gateway_domain_name implements PcoreValue {
  readonly domain_name: string;
  readonly aws_api_gateway_domain_name_id: string|null;
  readonly certificate_arn: string|null;
  readonly certificate_body: string|null;
  readonly certificate_chain: string|null;
  readonly certificate_name: string|null;
  readonly certificate_private_key: string|null;
  readonly certificate_upload_date: string|null;
  readonly cloudfront_domain_name: string|null;
  readonly cloudfront_zone_id: string|null;
  readonly endpoint_configuration: Aws_api_gateway_domain_name_endpoint_configuration_30[]|null;
  readonly regional_certificate_arn: string|null;
  readonly regional_certificate_name: string|null;
  readonly regional_domain_name: string|null;
  readonly regional_zone_id: string|null;

  constructor({
    domain_name,
    aws_api_gateway_domain_name_id = null,
    certificate_arn = null,
    certificate_body = null,
    certificate_chain = null,
    certificate_name = null,
    certificate_private_key = null,
    certificate_upload_date = null,
    cloudfront_domain_name = null,
    cloudfront_zone_id = null,
    endpoint_configuration = null,
    regional_certificate_arn = null,
    regional_certificate_name = null,
    regional_domain_name = null,
    regional_zone_id = null
  }: {
    domain_name: string,
    aws_api_gateway_domain_name_id?: string|null,
    certificate_arn?: string|null,
    certificate_body?: string|null,
    certificate_chain?: string|null,
    certificate_name?: string|null,
    certificate_private_key?: string|null,
    certificate_upload_date?: string|null,
    cloudfront_domain_name?: string|null,
    cloudfront_zone_id?: string|null,
    endpoint_configuration?: Aws_api_gateway_domain_name_endpoint_configuration_30[]|null,
    regional_certificate_arn?: string|null,
    regional_certificate_name?: string|null,
    regional_domain_name?: string|null,
    regional_zone_id?: string|null
  }) {
    this.domain_name = domain_name;
    this.aws_api_gateway_domain_name_id = aws_api_gateway_domain_name_id;
    this.certificate_arn = certificate_arn;
    this.certificate_body = certificate_body;
    this.certificate_chain = certificate_chain;
    this.certificate_name = certificate_name;
    this.certificate_private_key = certificate_private_key;
    this.certificate_upload_date = certificate_upload_date;
    this.cloudfront_domain_name = cloudfront_domain_name;
    this.cloudfront_zone_id = cloudfront_zone_id;
    this.endpoint_configuration = endpoint_configuration;
    this.regional_certificate_arn = regional_certificate_arn;
    this.regional_certificate_name = regional_certificate_name;
    this.regional_domain_name = regional_domain_name;
    this.regional_zone_id = regional_zone_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain_name'] = this.domain_name;
    if (this.aws_api_gateway_domain_name_id !== null) {
      ih['aws_api_gateway_domain_name_id'] = this.aws_api_gateway_domain_name_id;
    }
    if (this.certificate_arn !== null) {
      ih['certificate_arn'] = this.certificate_arn;
    }
    if (this.certificate_body !== null) {
      ih['certificate_body'] = this.certificate_body;
    }
    if (this.certificate_chain !== null) {
      ih['certificate_chain'] = this.certificate_chain;
    }
    if (this.certificate_name !== null) {
      ih['certificate_name'] = this.certificate_name;
    }
    if (this.certificate_private_key !== null) {
      ih['certificate_private_key'] = this.certificate_private_key;
    }
    if (this.certificate_upload_date !== null) {
      ih['certificate_upload_date'] = this.certificate_upload_date;
    }
    if (this.cloudfront_domain_name !== null) {
      ih['cloudfront_domain_name'] = this.cloudfront_domain_name;
    }
    if (this.cloudfront_zone_id !== null) {
      ih['cloudfront_zone_id'] = this.cloudfront_zone_id;
    }
    if (this.endpoint_configuration !== null) {
      ih['endpoint_configuration'] = this.endpoint_configuration;
    }
    if (this.regional_certificate_arn !== null) {
      ih['regional_certificate_arn'] = this.regional_certificate_arn;
    }
    if (this.regional_certificate_name !== null) {
      ih['regional_certificate_name'] = this.regional_certificate_name;
    }
    if (this.regional_domain_name !== null) {
      ih['regional_domain_name'] = this.regional_domain_name;
    }
    if (this.regional_zone_id !== null) {
      ih['regional_zone_id'] = this.regional_zone_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_domain_name';
  }
}

export class Aws_api_gateway_domain_nameHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_domain_nameHandler';
  }
}

export class Aws_api_gateway_domain_name_endpoint_configuration_30 implements PcoreValue {
  readonly types: string[];

  constructor({
    types
  }: {
    types: string[]
  }) {
    this.types = types;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['types'] = this.types;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_domain_name_endpoint_configuration_30';
  }
}

export class Aws_api_gateway_gateway_response implements PcoreValue {
  readonly response_type: string;
  readonly rest_api_id: string;
  readonly aws_api_gateway_gateway_response_id: string|null;
  readonly response_parameters: {[s: string]: string}|null;
  readonly response_templates: {[s: string]: string}|null;
  readonly status_code: string|null;

  constructor({
    response_type,
    rest_api_id,
    aws_api_gateway_gateway_response_id = null,
    response_parameters = null,
    response_templates = null,
    status_code = null
  }: {
    response_type: string,
    rest_api_id: string,
    aws_api_gateway_gateway_response_id?: string|null,
    response_parameters?: {[s: string]: string}|null,
    response_templates?: {[s: string]: string}|null,
    status_code?: string|null
  }) {
    this.response_type = response_type;
    this.rest_api_id = rest_api_id;
    this.aws_api_gateway_gateway_response_id = aws_api_gateway_gateway_response_id;
    this.response_parameters = response_parameters;
    this.response_templates = response_templates;
    this.status_code = status_code;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['response_type'] = this.response_type;
    ih['rest_api_id'] = this.rest_api_id;
    if (this.aws_api_gateway_gateway_response_id !== null) {
      ih['aws_api_gateway_gateway_response_id'] = this.aws_api_gateway_gateway_response_id;
    }
    if (this.response_parameters !== null) {
      ih['response_parameters'] = this.response_parameters;
    }
    if (this.response_templates !== null) {
      ih['response_templates'] = this.response_templates;
    }
    if (this.status_code !== null) {
      ih['status_code'] = this.status_code;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_gateway_response';
  }
}

export class Aws_api_gateway_gateway_responseHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_gateway_responseHandler';
  }
}

export class Aws_api_gateway_integration implements PcoreValue {
  readonly http_method: string;
  readonly resource_id: string;
  readonly rest_api_id: string;
  readonly type: string;
  readonly aws_api_gateway_integration_id: string|null;
  readonly cache_key_parameters: string[]|null;
  readonly cache_namespace: string|null;
  readonly connection_id: string|null;
  readonly connection_type: string|null;
  readonly content_handling: string|null;
  readonly credentials: string|null;
  readonly integration_http_method: string|null;
  readonly passthrough_behavior: string|null;
  readonly request_parameters: {[s: string]: string}|null;
  readonly request_parameters_in_json: string|null;
  readonly request_templates: {[s: string]: string}|null;
  readonly timeout_milliseconds: number|null;
  readonly uri: string|null;

  constructor({
    http_method,
    resource_id,
    rest_api_id,
    type,
    aws_api_gateway_integration_id = null,
    cache_key_parameters = null,
    cache_namespace = null,
    connection_id = null,
    connection_type = null,
    content_handling = null,
    credentials = null,
    integration_http_method = null,
    passthrough_behavior = null,
    request_parameters = null,
    request_parameters_in_json = null,
    request_templates = null,
    timeout_milliseconds = null,
    uri = null
  }: {
    http_method: string,
    resource_id: string,
    rest_api_id: string,
    type: string,
    aws_api_gateway_integration_id?: string|null,
    cache_key_parameters?: string[]|null,
    cache_namespace?: string|null,
    connection_id?: string|null,
    connection_type?: string|null,
    content_handling?: string|null,
    credentials?: string|null,
    integration_http_method?: string|null,
    passthrough_behavior?: string|null,
    request_parameters?: {[s: string]: string}|null,
    request_parameters_in_json?: string|null,
    request_templates?: {[s: string]: string}|null,
    timeout_milliseconds?: number|null,
    uri?: string|null
  }) {
    this.http_method = http_method;
    this.resource_id = resource_id;
    this.rest_api_id = rest_api_id;
    this.type = type;
    this.aws_api_gateway_integration_id = aws_api_gateway_integration_id;
    this.cache_key_parameters = cache_key_parameters;
    this.cache_namespace = cache_namespace;
    this.connection_id = connection_id;
    this.connection_type = connection_type;
    this.content_handling = content_handling;
    this.credentials = credentials;
    this.integration_http_method = integration_http_method;
    this.passthrough_behavior = passthrough_behavior;
    this.request_parameters = request_parameters;
    this.request_parameters_in_json = request_parameters_in_json;
    this.request_templates = request_templates;
    this.timeout_milliseconds = timeout_milliseconds;
    this.uri = uri;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['http_method'] = this.http_method;
    ih['resource_id'] = this.resource_id;
    ih['rest_api_id'] = this.rest_api_id;
    ih['type'] = this.type;
    if (this.aws_api_gateway_integration_id !== null) {
      ih['aws_api_gateway_integration_id'] = this.aws_api_gateway_integration_id;
    }
    if (this.cache_key_parameters !== null) {
      ih['cache_key_parameters'] = this.cache_key_parameters;
    }
    if (this.cache_namespace !== null) {
      ih['cache_namespace'] = this.cache_namespace;
    }
    if (this.connection_id !== null) {
      ih['connection_id'] = this.connection_id;
    }
    if (this.connection_type !== null) {
      ih['connection_type'] = this.connection_type;
    }
    if (this.content_handling !== null) {
      ih['content_handling'] = this.content_handling;
    }
    if (this.credentials !== null) {
      ih['credentials'] = this.credentials;
    }
    if (this.integration_http_method !== null) {
      ih['integration_http_method'] = this.integration_http_method;
    }
    if (this.passthrough_behavior !== null) {
      ih['passthrough_behavior'] = this.passthrough_behavior;
    }
    if (this.request_parameters !== null) {
      ih['request_parameters'] = this.request_parameters;
    }
    if (this.request_parameters_in_json !== null) {
      ih['request_parameters_in_json'] = this.request_parameters_in_json;
    }
    if (this.request_templates !== null) {
      ih['request_templates'] = this.request_templates;
    }
    if (this.timeout_milliseconds !== null) {
      ih['timeout_milliseconds'] = this.timeout_milliseconds;
    }
    if (this.uri !== null) {
      ih['uri'] = this.uri;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_integration';
  }
}

export class Aws_api_gateway_integrationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_integrationHandler';
  }
}

export class Aws_api_gateway_integration_response implements PcoreValue {
  readonly http_method: string;
  readonly resource_id: string;
  readonly rest_api_id: string;
  readonly status_code: string;
  readonly aws_api_gateway_integration_response_id: string|null;
  readonly content_handling: string|null;
  readonly response_parameters: {[s: string]: string}|null;
  readonly response_parameters_in_json: string|null;
  readonly response_templates: {[s: string]: string}|null;
  readonly selection_pattern: string|null;

  constructor({
    http_method,
    resource_id,
    rest_api_id,
    status_code,
    aws_api_gateway_integration_response_id = null,
    content_handling = null,
    response_parameters = null,
    response_parameters_in_json = null,
    response_templates = null,
    selection_pattern = null
  }: {
    http_method: string,
    resource_id: string,
    rest_api_id: string,
    status_code: string,
    aws_api_gateway_integration_response_id?: string|null,
    content_handling?: string|null,
    response_parameters?: {[s: string]: string}|null,
    response_parameters_in_json?: string|null,
    response_templates?: {[s: string]: string}|null,
    selection_pattern?: string|null
  }) {
    this.http_method = http_method;
    this.resource_id = resource_id;
    this.rest_api_id = rest_api_id;
    this.status_code = status_code;
    this.aws_api_gateway_integration_response_id = aws_api_gateway_integration_response_id;
    this.content_handling = content_handling;
    this.response_parameters = response_parameters;
    this.response_parameters_in_json = response_parameters_in_json;
    this.response_templates = response_templates;
    this.selection_pattern = selection_pattern;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['http_method'] = this.http_method;
    ih['resource_id'] = this.resource_id;
    ih['rest_api_id'] = this.rest_api_id;
    ih['status_code'] = this.status_code;
    if (this.aws_api_gateway_integration_response_id !== null) {
      ih['aws_api_gateway_integration_response_id'] = this.aws_api_gateway_integration_response_id;
    }
    if (this.content_handling !== null) {
      ih['content_handling'] = this.content_handling;
    }
    if (this.response_parameters !== null) {
      ih['response_parameters'] = this.response_parameters;
    }
    if (this.response_parameters_in_json !== null) {
      ih['response_parameters_in_json'] = this.response_parameters_in_json;
    }
    if (this.response_templates !== null) {
      ih['response_templates'] = this.response_templates;
    }
    if (this.selection_pattern !== null) {
      ih['selection_pattern'] = this.selection_pattern;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_integration_response';
  }
}

export class Aws_api_gateway_integration_responseHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_integration_responseHandler';
  }
}

export class Aws_api_gateway_method implements PcoreValue {
  readonly authorization: string;
  readonly http_method: string;
  readonly resource_id: string;
  readonly rest_api_id: string;
  readonly aws_api_gateway_method_id: string|null;
  readonly api_key_required: boolean|null;
  readonly authorization_scopes: string[]|null;
  readonly authorizer_id: string|null;
  readonly request_models: {[s: string]: string}|null;
  readonly request_parameters: {[s: string]: string}|null;
  readonly request_parameters_in_json: string|null;
  readonly request_validator_id: string|null;

  constructor({
    authorization,
    http_method,
    resource_id,
    rest_api_id,
    aws_api_gateway_method_id = null,
    api_key_required = null,
    authorization_scopes = null,
    authorizer_id = null,
    request_models = null,
    request_parameters = null,
    request_parameters_in_json = null,
    request_validator_id = null
  }: {
    authorization: string,
    http_method: string,
    resource_id: string,
    rest_api_id: string,
    aws_api_gateway_method_id?: string|null,
    api_key_required?: boolean|null,
    authorization_scopes?: string[]|null,
    authorizer_id?: string|null,
    request_models?: {[s: string]: string}|null,
    request_parameters?: {[s: string]: string}|null,
    request_parameters_in_json?: string|null,
    request_validator_id?: string|null
  }) {
    this.authorization = authorization;
    this.http_method = http_method;
    this.resource_id = resource_id;
    this.rest_api_id = rest_api_id;
    this.aws_api_gateway_method_id = aws_api_gateway_method_id;
    this.api_key_required = api_key_required;
    this.authorization_scopes = authorization_scopes;
    this.authorizer_id = authorizer_id;
    this.request_models = request_models;
    this.request_parameters = request_parameters;
    this.request_parameters_in_json = request_parameters_in_json;
    this.request_validator_id = request_validator_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['authorization'] = this.authorization;
    ih['http_method'] = this.http_method;
    ih['resource_id'] = this.resource_id;
    ih['rest_api_id'] = this.rest_api_id;
    if (this.aws_api_gateway_method_id !== null) {
      ih['aws_api_gateway_method_id'] = this.aws_api_gateway_method_id;
    }
    if (this.api_key_required !== null) {
      ih['api_key_required'] = this.api_key_required;
    }
    if (this.authorization_scopes !== null) {
      ih['authorization_scopes'] = this.authorization_scopes;
    }
    if (this.authorizer_id !== null) {
      ih['authorizer_id'] = this.authorizer_id;
    }
    if (this.request_models !== null) {
      ih['request_models'] = this.request_models;
    }
    if (this.request_parameters !== null) {
      ih['request_parameters'] = this.request_parameters;
    }
    if (this.request_parameters_in_json !== null) {
      ih['request_parameters_in_json'] = this.request_parameters_in_json;
    }
    if (this.request_validator_id !== null) {
      ih['request_validator_id'] = this.request_validator_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_method';
  }
}

export class Aws_api_gateway_methodHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_methodHandler';
  }
}

export class Aws_api_gateway_method_response implements PcoreValue {
  readonly http_method: string;
  readonly resource_id: string;
  readonly rest_api_id: string;
  readonly status_code: string;
  readonly aws_api_gateway_method_response_id: string|null;
  readonly response_models: {[s: string]: string}|null;
  readonly response_parameters: {[s: string]: string}|null;
  readonly response_parameters_in_json: string|null;

  constructor({
    http_method,
    resource_id,
    rest_api_id,
    status_code,
    aws_api_gateway_method_response_id = null,
    response_models = null,
    response_parameters = null,
    response_parameters_in_json = null
  }: {
    http_method: string,
    resource_id: string,
    rest_api_id: string,
    status_code: string,
    aws_api_gateway_method_response_id?: string|null,
    response_models?: {[s: string]: string}|null,
    response_parameters?: {[s: string]: string}|null,
    response_parameters_in_json?: string|null
  }) {
    this.http_method = http_method;
    this.resource_id = resource_id;
    this.rest_api_id = rest_api_id;
    this.status_code = status_code;
    this.aws_api_gateway_method_response_id = aws_api_gateway_method_response_id;
    this.response_models = response_models;
    this.response_parameters = response_parameters;
    this.response_parameters_in_json = response_parameters_in_json;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['http_method'] = this.http_method;
    ih['resource_id'] = this.resource_id;
    ih['rest_api_id'] = this.rest_api_id;
    ih['status_code'] = this.status_code;
    if (this.aws_api_gateway_method_response_id !== null) {
      ih['aws_api_gateway_method_response_id'] = this.aws_api_gateway_method_response_id;
    }
    if (this.response_models !== null) {
      ih['response_models'] = this.response_models;
    }
    if (this.response_parameters !== null) {
      ih['response_parameters'] = this.response_parameters;
    }
    if (this.response_parameters_in_json !== null) {
      ih['response_parameters_in_json'] = this.response_parameters_in_json;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_method_response';
  }
}

export class Aws_api_gateway_method_responseHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_method_responseHandler';
  }
}

export class Aws_api_gateway_method_settings implements PcoreValue {
  readonly method_path: string;
  readonly rest_api_id: string;
  readonly settings: Aws_api_gateway_method_settings_settings_31[];
  readonly stage_name: string;
  readonly aws_api_gateway_method_settings_id: string|null;

  constructor({
    method_path,
    rest_api_id,
    settings,
    stage_name,
    aws_api_gateway_method_settings_id = null
  }: {
    method_path: string,
    rest_api_id: string,
    settings: Aws_api_gateway_method_settings_settings_31[],
    stage_name: string,
    aws_api_gateway_method_settings_id?: string|null
  }) {
    this.method_path = method_path;
    this.rest_api_id = rest_api_id;
    this.settings = settings;
    this.stage_name = stage_name;
    this.aws_api_gateway_method_settings_id = aws_api_gateway_method_settings_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['method_path'] = this.method_path;
    ih['rest_api_id'] = this.rest_api_id;
    ih['settings'] = this.settings;
    ih['stage_name'] = this.stage_name;
    if (this.aws_api_gateway_method_settings_id !== null) {
      ih['aws_api_gateway_method_settings_id'] = this.aws_api_gateway_method_settings_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_method_settings';
  }
}

export class Aws_api_gateway_method_settingsHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_method_settingsHandler';
  }
}

export class Aws_api_gateway_method_settings_settings_31 implements PcoreValue {
  readonly cache_data_encrypted: boolean|null;
  readonly cache_ttl_in_seconds: number|null;
  readonly caching_enabled: boolean|null;
  readonly data_trace_enabled: boolean|null;
  readonly logging_level: string|null;
  readonly metrics_enabled: boolean|null;
  readonly require_authorization_for_cache_control: boolean|null;
  readonly throttling_burst_limit: number|null;
  readonly throttling_rate_limit: number|null;
  readonly unauthorized_cache_control_header_strategy: string|null;

  constructor({
    cache_data_encrypted = null,
    cache_ttl_in_seconds = null,
    caching_enabled = null,
    data_trace_enabled = null,
    logging_level = null,
    metrics_enabled = null,
    require_authorization_for_cache_control = null,
    throttling_burst_limit = null,
    throttling_rate_limit = null,
    unauthorized_cache_control_header_strategy = null
  }: {
    cache_data_encrypted?: boolean|null,
    cache_ttl_in_seconds?: number|null,
    caching_enabled?: boolean|null,
    data_trace_enabled?: boolean|null,
    logging_level?: string|null,
    metrics_enabled?: boolean|null,
    require_authorization_for_cache_control?: boolean|null,
    throttling_burst_limit?: number|null,
    throttling_rate_limit?: number|null,
    unauthorized_cache_control_header_strategy?: string|null
  }) {
    this.cache_data_encrypted = cache_data_encrypted;
    this.cache_ttl_in_seconds = cache_ttl_in_seconds;
    this.caching_enabled = caching_enabled;
    this.data_trace_enabled = data_trace_enabled;
    this.logging_level = logging_level;
    this.metrics_enabled = metrics_enabled;
    this.require_authorization_for_cache_control = require_authorization_for_cache_control;
    this.throttling_burst_limit = throttling_burst_limit;
    this.throttling_rate_limit = throttling_rate_limit;
    this.unauthorized_cache_control_header_strategy = unauthorized_cache_control_header_strategy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cache_data_encrypted !== null) {
      ih['cache_data_encrypted'] = this.cache_data_encrypted;
    }
    if (this.cache_ttl_in_seconds !== null) {
      ih['cache_ttl_in_seconds'] = this.cache_ttl_in_seconds;
    }
    if (this.caching_enabled !== null) {
      ih['caching_enabled'] = this.caching_enabled;
    }
    if (this.data_trace_enabled !== null) {
      ih['data_trace_enabled'] = this.data_trace_enabled;
    }
    if (this.logging_level !== null) {
      ih['logging_level'] = this.logging_level;
    }
    if (this.metrics_enabled !== null) {
      ih['metrics_enabled'] = this.metrics_enabled;
    }
    if (this.require_authorization_for_cache_control !== null) {
      ih['require_authorization_for_cache_control'] = this.require_authorization_for_cache_control;
    }
    if (this.throttling_burst_limit !== null) {
      ih['throttling_burst_limit'] = this.throttling_burst_limit;
    }
    if (this.throttling_rate_limit !== null) {
      ih['throttling_rate_limit'] = this.throttling_rate_limit;
    }
    if (this.unauthorized_cache_control_header_strategy !== null) {
      ih['unauthorized_cache_control_header_strategy'] = this.unauthorized_cache_control_header_strategy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_method_settings_settings_31';
  }
}

export class Aws_api_gateway_model implements PcoreValue {
  readonly content_type: string;
  readonly name: string;
  readonly rest_api_id: string;
  readonly aws_api_gateway_model_id: string|null;
  readonly description: string|null;
  readonly schema: string|null;

  constructor({
    content_type,
    name,
    rest_api_id,
    aws_api_gateway_model_id = null,
    description = null,
    schema = null
  }: {
    content_type: string,
    name: string,
    rest_api_id: string,
    aws_api_gateway_model_id?: string|null,
    description?: string|null,
    schema?: string|null
  }) {
    this.content_type = content_type;
    this.name = name;
    this.rest_api_id = rest_api_id;
    this.aws_api_gateway_model_id = aws_api_gateway_model_id;
    this.description = description;
    this.schema = schema;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['content_type'] = this.content_type;
    ih['name'] = this.name;
    ih['rest_api_id'] = this.rest_api_id;
    if (this.aws_api_gateway_model_id !== null) {
      ih['aws_api_gateway_model_id'] = this.aws_api_gateway_model_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.schema !== null) {
      ih['schema'] = this.schema;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_model';
  }
}

export class Aws_api_gateway_modelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_modelHandler';
  }
}

export class Aws_api_gateway_request_validator implements PcoreValue {
  readonly name: string;
  readonly rest_api_id: string;
  readonly aws_api_gateway_request_validator_id: string|null;
  readonly validate_request_body: boolean|null;
  readonly validate_request_parameters: boolean|null;

  constructor({
    name,
    rest_api_id,
    aws_api_gateway_request_validator_id = null,
    validate_request_body = null,
    validate_request_parameters = null
  }: {
    name: string,
    rest_api_id: string,
    aws_api_gateway_request_validator_id?: string|null,
    validate_request_body?: boolean|null,
    validate_request_parameters?: boolean|null
  }) {
    this.name = name;
    this.rest_api_id = rest_api_id;
    this.aws_api_gateway_request_validator_id = aws_api_gateway_request_validator_id;
    this.validate_request_body = validate_request_body;
    this.validate_request_parameters = validate_request_parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['rest_api_id'] = this.rest_api_id;
    if (this.aws_api_gateway_request_validator_id !== null) {
      ih['aws_api_gateway_request_validator_id'] = this.aws_api_gateway_request_validator_id;
    }
    if (this.validate_request_body !== null) {
      ih['validate_request_body'] = this.validate_request_body;
    }
    if (this.validate_request_parameters !== null) {
      ih['validate_request_parameters'] = this.validate_request_parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_request_validator';
  }
}

export class Aws_api_gateway_request_validatorHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_request_validatorHandler';
  }
}

export class Aws_api_gateway_resource implements PcoreValue {
  readonly parent_id: string;
  readonly path_part: string;
  readonly rest_api_id: string;
  readonly aws_api_gateway_resource_id: string|null;
  readonly path: string|null;

  constructor({
    parent_id,
    path_part,
    rest_api_id,
    aws_api_gateway_resource_id = null,
    path = null
  }: {
    parent_id: string,
    path_part: string,
    rest_api_id: string,
    aws_api_gateway_resource_id?: string|null,
    path?: string|null
  }) {
    this.parent_id = parent_id;
    this.path_part = path_part;
    this.rest_api_id = rest_api_id;
    this.aws_api_gateway_resource_id = aws_api_gateway_resource_id;
    this.path = path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['parent_id'] = this.parent_id;
    ih['path_part'] = this.path_part;
    ih['rest_api_id'] = this.rest_api_id;
    if (this.aws_api_gateway_resource_id !== null) {
      ih['aws_api_gateway_resource_id'] = this.aws_api_gateway_resource_id;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_resource';
  }
}

export class Aws_api_gateway_resourceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_resourceHandler';
  }
}

export class Aws_api_gateway_rest_api implements PcoreValue {
  readonly name: string;
  readonly aws_api_gateway_rest_api_id: string|null;
  readonly api_key_source: string|null;
  readonly binary_media_types: string[]|null;
  readonly body: string|null;
  readonly created_date: string|null;
  readonly description: string|null;
  readonly endpoint_configuration: Aws_api_gateway_rest_api_endpoint_configuration_32[]|null;
  readonly execution_arn: string|null;
  readonly minimum_compression_size: number|null;
  readonly policy: string|null;
  readonly root_resource_id: string|null;

  constructor({
    name,
    aws_api_gateway_rest_api_id = null,
    api_key_source = null,
    binary_media_types = null,
    body = null,
    created_date = null,
    description = null,
    endpoint_configuration = null,
    execution_arn = null,
    minimum_compression_size = null,
    policy = null,
    root_resource_id = null
  }: {
    name: string,
    aws_api_gateway_rest_api_id?: string|null,
    api_key_source?: string|null,
    binary_media_types?: string[]|null,
    body?: string|null,
    created_date?: string|null,
    description?: string|null,
    endpoint_configuration?: Aws_api_gateway_rest_api_endpoint_configuration_32[]|null,
    execution_arn?: string|null,
    minimum_compression_size?: number|null,
    policy?: string|null,
    root_resource_id?: string|null
  }) {
    this.name = name;
    this.aws_api_gateway_rest_api_id = aws_api_gateway_rest_api_id;
    this.api_key_source = api_key_source;
    this.binary_media_types = binary_media_types;
    this.body = body;
    this.created_date = created_date;
    this.description = description;
    this.endpoint_configuration = endpoint_configuration;
    this.execution_arn = execution_arn;
    this.minimum_compression_size = minimum_compression_size;
    this.policy = policy;
    this.root_resource_id = root_resource_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_api_gateway_rest_api_id !== null) {
      ih['aws_api_gateway_rest_api_id'] = this.aws_api_gateway_rest_api_id;
    }
    if (this.api_key_source !== null) {
      ih['api_key_source'] = this.api_key_source;
    }
    if (this.binary_media_types !== null) {
      ih['binary_media_types'] = this.binary_media_types;
    }
    if (this.body !== null) {
      ih['body'] = this.body;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.endpoint_configuration !== null) {
      ih['endpoint_configuration'] = this.endpoint_configuration;
    }
    if (this.execution_arn !== null) {
      ih['execution_arn'] = this.execution_arn;
    }
    if (this.minimum_compression_size !== null) {
      ih['minimum_compression_size'] = this.minimum_compression_size;
    }
    if (this.policy !== null) {
      ih['policy'] = this.policy;
    }
    if (this.root_resource_id !== null) {
      ih['root_resource_id'] = this.root_resource_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_rest_api';
  }
}

export class Aws_api_gateway_rest_apiHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_rest_apiHandler';
  }
}

export class Aws_api_gateway_rest_api_endpoint_configuration_32 implements PcoreValue {
  readonly types: string[];

  constructor({
    types
  }: {
    types: string[]
  }) {
    this.types = types;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['types'] = this.types;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_rest_api_endpoint_configuration_32';
  }
}

export class Aws_api_gateway_stage implements PcoreValue {
  readonly deployment_id: string;
  readonly rest_api_id: string;
  readonly stage_name: string;
  readonly aws_api_gateway_stage_id: string|null;
  readonly access_log_settings: Aws_api_gateway_stage_access_log_settings_33[]|null;
  readonly cache_cluster_enabled: boolean|null;
  readonly cache_cluster_size: string|null;
  readonly client_certificate_id: string|null;
  readonly description: string|null;
  readonly documentation_version: string|null;
  readonly execution_arn: string|null;
  readonly invoke_url: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly variables: {[s: string]: string}|null;
  readonly xray_tracing_enabled: boolean|null;

  constructor({
    deployment_id,
    rest_api_id,
    stage_name,
    aws_api_gateway_stage_id = null,
    access_log_settings = null,
    cache_cluster_enabled = null,
    cache_cluster_size = null,
    client_certificate_id = null,
    description = null,
    documentation_version = null,
    execution_arn = null,
    invoke_url = null,
    tags = null,
    variables = null,
    xray_tracing_enabled = null
  }: {
    deployment_id: string,
    rest_api_id: string,
    stage_name: string,
    aws_api_gateway_stage_id?: string|null,
    access_log_settings?: Aws_api_gateway_stage_access_log_settings_33[]|null,
    cache_cluster_enabled?: boolean|null,
    cache_cluster_size?: string|null,
    client_certificate_id?: string|null,
    description?: string|null,
    documentation_version?: string|null,
    execution_arn?: string|null,
    invoke_url?: string|null,
    tags?: {[s: string]: string}|null,
    variables?: {[s: string]: string}|null,
    xray_tracing_enabled?: boolean|null
  }) {
    this.deployment_id = deployment_id;
    this.rest_api_id = rest_api_id;
    this.stage_name = stage_name;
    this.aws_api_gateway_stage_id = aws_api_gateway_stage_id;
    this.access_log_settings = access_log_settings;
    this.cache_cluster_enabled = cache_cluster_enabled;
    this.cache_cluster_size = cache_cluster_size;
    this.client_certificate_id = client_certificate_id;
    this.description = description;
    this.documentation_version = documentation_version;
    this.execution_arn = execution_arn;
    this.invoke_url = invoke_url;
    this.tags = tags;
    this.variables = variables;
    this.xray_tracing_enabled = xray_tracing_enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['deployment_id'] = this.deployment_id;
    ih['rest_api_id'] = this.rest_api_id;
    ih['stage_name'] = this.stage_name;
    if (this.aws_api_gateway_stage_id !== null) {
      ih['aws_api_gateway_stage_id'] = this.aws_api_gateway_stage_id;
    }
    if (this.access_log_settings !== null) {
      ih['access_log_settings'] = this.access_log_settings;
    }
    if (this.cache_cluster_enabled !== null) {
      ih['cache_cluster_enabled'] = this.cache_cluster_enabled;
    }
    if (this.cache_cluster_size !== null) {
      ih['cache_cluster_size'] = this.cache_cluster_size;
    }
    if (this.client_certificate_id !== null) {
      ih['client_certificate_id'] = this.client_certificate_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.documentation_version !== null) {
      ih['documentation_version'] = this.documentation_version;
    }
    if (this.execution_arn !== null) {
      ih['execution_arn'] = this.execution_arn;
    }
    if (this.invoke_url !== null) {
      ih['invoke_url'] = this.invoke_url;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.variables !== null) {
      ih['variables'] = this.variables;
    }
    if (this.xray_tracing_enabled !== null) {
      ih['xray_tracing_enabled'] = this.xray_tracing_enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_stage';
  }
}

export class Aws_api_gateway_stageHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_stageHandler';
  }
}

export class Aws_api_gateway_stage_access_log_settings_33 implements PcoreValue {
  readonly destination_arn: string;
  readonly format: string;

  constructor({
    destination_arn,
    format
  }: {
    destination_arn: string,
    format: string
  }) {
    this.destination_arn = destination_arn;
    this.format = format;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination_arn'] = this.destination_arn;
    ih['format'] = this.format;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_stage_access_log_settings_33';
  }
}

export class Aws_api_gateway_usage_plan implements PcoreValue {
  readonly name: string;
  readonly aws_api_gateway_usage_plan_id: string|null;
  readonly api_stages: Aws_api_gateway_usage_plan_api_stages_34[]|null;
  readonly description: string|null;
  readonly product_code: string|null;
  readonly quota_settings: Aws_api_gateway_usage_plan_quota_settings_35[]|null;
  readonly throttle_settings: Aws_api_gateway_usage_plan_throttle_settings_36[]|null;

  constructor({
    name,
    aws_api_gateway_usage_plan_id = null,
    api_stages = null,
    description = null,
    product_code = null,
    quota_settings = null,
    throttle_settings = null
  }: {
    name: string,
    aws_api_gateway_usage_plan_id?: string|null,
    api_stages?: Aws_api_gateway_usage_plan_api_stages_34[]|null,
    description?: string|null,
    product_code?: string|null,
    quota_settings?: Aws_api_gateway_usage_plan_quota_settings_35[]|null,
    throttle_settings?: Aws_api_gateway_usage_plan_throttle_settings_36[]|null
  }) {
    this.name = name;
    this.aws_api_gateway_usage_plan_id = aws_api_gateway_usage_plan_id;
    this.api_stages = api_stages;
    this.description = description;
    this.product_code = product_code;
    this.quota_settings = quota_settings;
    this.throttle_settings = throttle_settings;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_api_gateway_usage_plan_id !== null) {
      ih['aws_api_gateway_usage_plan_id'] = this.aws_api_gateway_usage_plan_id;
    }
    if (this.api_stages !== null) {
      ih['api_stages'] = this.api_stages;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.product_code !== null) {
      ih['product_code'] = this.product_code;
    }
    if (this.quota_settings !== null) {
      ih['quota_settings'] = this.quota_settings;
    }
    if (this.throttle_settings !== null) {
      ih['throttle_settings'] = this.throttle_settings;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_usage_plan';
  }
}

export class Aws_api_gateway_usage_planHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_usage_planHandler';
  }
}

export class Aws_api_gateway_usage_plan_api_stages_34 implements PcoreValue {
  readonly api_id: string;
  readonly stage: string;

  constructor({
    api_id,
    stage
  }: {
    api_id: string,
    stage: string
  }) {
    this.api_id = api_id;
    this.stage = stage;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['api_id'] = this.api_id;
    ih['stage'] = this.stage;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_usage_plan_api_stages_34';
  }
}

export class Aws_api_gateway_usage_plan_key implements PcoreValue {
  readonly key_id: string;
  readonly key_type: string;
  readonly usage_plan_id: string;
  readonly aws_api_gateway_usage_plan_key_id: string|null;
  readonly name: string|null;
  readonly value: string|null;

  constructor({
    key_id,
    key_type,
    usage_plan_id,
    aws_api_gateway_usage_plan_key_id = null,
    name = null,
    value = null
  }: {
    key_id: string,
    key_type: string,
    usage_plan_id: string,
    aws_api_gateway_usage_plan_key_id?: string|null,
    name?: string|null,
    value?: string|null
  }) {
    this.key_id = key_id;
    this.key_type = key_type;
    this.usage_plan_id = usage_plan_id;
    this.aws_api_gateway_usage_plan_key_id = aws_api_gateway_usage_plan_key_id;
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key_id'] = this.key_id;
    ih['key_type'] = this.key_type;
    ih['usage_plan_id'] = this.usage_plan_id;
    if (this.aws_api_gateway_usage_plan_key_id !== null) {
      ih['aws_api_gateway_usage_plan_key_id'] = this.aws_api_gateway_usage_plan_key_id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.value !== null) {
      ih['value'] = this.value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_usage_plan_key';
  }
}

export class Aws_api_gateway_usage_plan_keyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_usage_plan_keyHandler';
  }
}

export class Aws_api_gateway_usage_plan_quota_settings_35 implements PcoreValue {
  readonly limit: number;
  readonly period: string;
  readonly offset: number|null;

  constructor({
    limit,
    period,
    offset = null
  }: {
    limit: number,
    period: string,
    offset?: number|null
  }) {
    this.limit = limit;
    this.period = period;
    this.offset = offset;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['limit'] = this.limit;
    ih['period'] = this.period;
    if (this.offset !== null) {
      ih['offset'] = this.offset;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_usage_plan_quota_settings_35';
  }
}

export class Aws_api_gateway_usage_plan_throttle_settings_36 implements PcoreValue {
  readonly burst_limit: number|null;
  readonly rate_limit: number|null;

  constructor({
    burst_limit = null,
    rate_limit = null
  }: {
    burst_limit?: number|null,
    rate_limit?: number|null
  }) {
    this.burst_limit = burst_limit;
    this.rate_limit = rate_limit;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.burst_limit !== null) {
      ih['burst_limit'] = this.burst_limit;
    }
    if (this.rate_limit !== null) {
      ih['rate_limit'] = this.rate_limit;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_usage_plan_throttle_settings_36';
  }
}

export class Aws_api_gateway_vpc_link implements PcoreValue {
  readonly name: string;
  readonly target_arns: string[];
  readonly aws_api_gateway_vpc_link_id: string|null;
  readonly description: string|null;

  constructor({
    name,
    target_arns,
    aws_api_gateway_vpc_link_id = null,
    description = null
  }: {
    name: string,
    target_arns: string[],
    aws_api_gateway_vpc_link_id?: string|null,
    description?: string|null
  }) {
    this.name = name;
    this.target_arns = target_arns;
    this.aws_api_gateway_vpc_link_id = aws_api_gateway_vpc_link_id;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['target_arns'] = this.target_arns;
    if (this.aws_api_gateway_vpc_link_id !== null) {
      ih['aws_api_gateway_vpc_link_id'] = this.aws_api_gateway_vpc_link_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_vpc_link';
  }
}

export class Aws_api_gateway_vpc_linkHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_api_gateway_vpc_linkHandler';
  }
}

export class Aws_app_cookie_stickiness_policy implements PcoreValue {
  readonly cookie_name: string;
  readonly lb_port: number;
  readonly load_balancer: string;
  readonly name: string;
  readonly aws_app_cookie_stickiness_policy_id: string|null;

  constructor({
    cookie_name,
    lb_port,
    load_balancer,
    name,
    aws_app_cookie_stickiness_policy_id = null
  }: {
    cookie_name: string,
    lb_port: number,
    load_balancer: string,
    name: string,
    aws_app_cookie_stickiness_policy_id?: string|null
  }) {
    this.cookie_name = cookie_name;
    this.lb_port = lb_port;
    this.load_balancer = load_balancer;
    this.name = name;
    this.aws_app_cookie_stickiness_policy_id = aws_app_cookie_stickiness_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cookie_name'] = this.cookie_name;
    ih['lb_port'] = this.lb_port;
    ih['load_balancer'] = this.load_balancer;
    ih['name'] = this.name;
    if (this.aws_app_cookie_stickiness_policy_id !== null) {
      ih['aws_app_cookie_stickiness_policy_id'] = this.aws_app_cookie_stickiness_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_app_cookie_stickiness_policy';
  }
}

export class Aws_app_cookie_stickiness_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_app_cookie_stickiness_policyHandler';
  }
}

export class Aws_appautoscaling_policy implements PcoreValue {
  readonly name: string;
  readonly resource_id: string;
  readonly scalable_dimension: string;
  readonly service_namespace: string;
  readonly aws_appautoscaling_policy_id: string|null;
  readonly adjustment_type: string|null;
  readonly alarms: string[]|null;
  readonly arn: string|null;
  readonly cooldown: number|null;
  readonly metric_aggregation_type: string|null;
  readonly min_adjustment_magnitude: number|null;
  readonly policy_type: string|null;
  readonly step_adjustment: Aws_appautoscaling_policy_step_adjustment_37[]|null;
  readonly step_scaling_policy_configuration: Aws_appautoscaling_policy_step_scaling_policy_configuration_38[]|null;
  readonly target_tracking_scaling_policy_configuration: Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40[]|null;

  constructor({
    name,
    resource_id,
    scalable_dimension,
    service_namespace,
    aws_appautoscaling_policy_id = null,
    adjustment_type = null,
    alarms = null,
    arn = null,
    cooldown = null,
    metric_aggregation_type = null,
    min_adjustment_magnitude = null,
    policy_type = null,
    step_adjustment = null,
    step_scaling_policy_configuration = null,
    target_tracking_scaling_policy_configuration = null
  }: {
    name: string,
    resource_id: string,
    scalable_dimension: string,
    service_namespace: string,
    aws_appautoscaling_policy_id?: string|null,
    adjustment_type?: string|null,
    alarms?: string[]|null,
    arn?: string|null,
    cooldown?: number|null,
    metric_aggregation_type?: string|null,
    min_adjustment_magnitude?: number|null,
    policy_type?: string|null,
    step_adjustment?: Aws_appautoscaling_policy_step_adjustment_37[]|null,
    step_scaling_policy_configuration?: Aws_appautoscaling_policy_step_scaling_policy_configuration_38[]|null,
    target_tracking_scaling_policy_configuration?: Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40[]|null
  }) {
    this.name = name;
    this.resource_id = resource_id;
    this.scalable_dimension = scalable_dimension;
    this.service_namespace = service_namespace;
    this.aws_appautoscaling_policy_id = aws_appautoscaling_policy_id;
    this.adjustment_type = adjustment_type;
    this.alarms = alarms;
    this.arn = arn;
    this.cooldown = cooldown;
    this.metric_aggregation_type = metric_aggregation_type;
    this.min_adjustment_magnitude = min_adjustment_magnitude;
    this.policy_type = policy_type;
    this.step_adjustment = step_adjustment;
    this.step_scaling_policy_configuration = step_scaling_policy_configuration;
    this.target_tracking_scaling_policy_configuration = target_tracking_scaling_policy_configuration;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['resource_id'] = this.resource_id;
    ih['scalable_dimension'] = this.scalable_dimension;
    ih['service_namespace'] = this.service_namespace;
    if (this.aws_appautoscaling_policy_id !== null) {
      ih['aws_appautoscaling_policy_id'] = this.aws_appautoscaling_policy_id;
    }
    if (this.adjustment_type !== null) {
      ih['adjustment_type'] = this.adjustment_type;
    }
    if (this.alarms !== null) {
      ih['alarms'] = this.alarms;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cooldown !== null) {
      ih['cooldown'] = this.cooldown;
    }
    if (this.metric_aggregation_type !== null) {
      ih['metric_aggregation_type'] = this.metric_aggregation_type;
    }
    if (this.min_adjustment_magnitude !== null) {
      ih['min_adjustment_magnitude'] = this.min_adjustment_magnitude;
    }
    if (this.policy_type !== null) {
      ih['policy_type'] = this.policy_type;
    }
    if (this.step_adjustment !== null) {
      ih['step_adjustment'] = this.step_adjustment;
    }
    if (this.step_scaling_policy_configuration !== null) {
      ih['step_scaling_policy_configuration'] = this.step_scaling_policy_configuration;
    }
    if (this.target_tracking_scaling_policy_configuration !== null) {
      ih['target_tracking_scaling_policy_configuration'] = this.target_tracking_scaling_policy_configuration;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policy';
  }
}

export class Aws_appautoscaling_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policyHandler';
  }
}

export class Aws_appautoscaling_policy_step_adjustment_37 implements PcoreValue {
  readonly scaling_adjustment: number;
  readonly metric_interval_lower_bound: string|null;
  readonly metric_interval_upper_bound: string|null;

  constructor({
    scaling_adjustment,
    metric_interval_lower_bound = null,
    metric_interval_upper_bound = null
  }: {
    scaling_adjustment: number,
    metric_interval_lower_bound?: string|null,
    metric_interval_upper_bound?: string|null
  }) {
    this.scaling_adjustment = scaling_adjustment;
    this.metric_interval_lower_bound = metric_interval_lower_bound;
    this.metric_interval_upper_bound = metric_interval_upper_bound;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['scaling_adjustment'] = this.scaling_adjustment;
    if (this.metric_interval_lower_bound !== null) {
      ih['metric_interval_lower_bound'] = this.metric_interval_lower_bound;
    }
    if (this.metric_interval_upper_bound !== null) {
      ih['metric_interval_upper_bound'] = this.metric_interval_upper_bound;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policy_step_adjustment_37';
  }
}

export class Aws_appautoscaling_policy_step_scaling_policy_configuration_38 implements PcoreValue {
  readonly adjustment_type: string|null;
  readonly cooldown: number|null;
  readonly metric_aggregation_type: string|null;
  readonly min_adjustment_magnitude: number|null;
  readonly step_adjustment: Aws_appautoscaling_policy_step_scaling_policy_configuration_38_step_adjustment_39[]|null;

  constructor({
    adjustment_type = null,
    cooldown = null,
    metric_aggregation_type = null,
    min_adjustment_magnitude = null,
    step_adjustment = null
  }: {
    adjustment_type?: string|null,
    cooldown?: number|null,
    metric_aggregation_type?: string|null,
    min_adjustment_magnitude?: number|null,
    step_adjustment?: Aws_appautoscaling_policy_step_scaling_policy_configuration_38_step_adjustment_39[]|null
  }) {
    this.adjustment_type = adjustment_type;
    this.cooldown = cooldown;
    this.metric_aggregation_type = metric_aggregation_type;
    this.min_adjustment_magnitude = min_adjustment_magnitude;
    this.step_adjustment = step_adjustment;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.adjustment_type !== null) {
      ih['adjustment_type'] = this.adjustment_type;
    }
    if (this.cooldown !== null) {
      ih['cooldown'] = this.cooldown;
    }
    if (this.metric_aggregation_type !== null) {
      ih['metric_aggregation_type'] = this.metric_aggregation_type;
    }
    if (this.min_adjustment_magnitude !== null) {
      ih['min_adjustment_magnitude'] = this.min_adjustment_magnitude;
    }
    if (this.step_adjustment !== null) {
      ih['step_adjustment'] = this.step_adjustment;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policy_step_scaling_policy_configuration_38';
  }
}

export class Aws_appautoscaling_policy_step_scaling_policy_configuration_38_step_adjustment_39 implements PcoreValue {
  readonly scaling_adjustment: number;
  readonly metric_interval_lower_bound: string|null;
  readonly metric_interval_upper_bound: string|null;

  constructor({
    scaling_adjustment,
    metric_interval_lower_bound = null,
    metric_interval_upper_bound = null
  }: {
    scaling_adjustment: number,
    metric_interval_lower_bound?: string|null,
    metric_interval_upper_bound?: string|null
  }) {
    this.scaling_adjustment = scaling_adjustment;
    this.metric_interval_lower_bound = metric_interval_lower_bound;
    this.metric_interval_upper_bound = metric_interval_upper_bound;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['scaling_adjustment'] = this.scaling_adjustment;
    if (this.metric_interval_lower_bound !== null) {
      ih['metric_interval_lower_bound'] = this.metric_interval_lower_bound;
    }
    if (this.metric_interval_upper_bound !== null) {
      ih['metric_interval_upper_bound'] = this.metric_interval_upper_bound;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policy_step_scaling_policy_configuration_38_step_adjustment_39';
  }
}

export class Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40 implements PcoreValue {
  readonly target_value: number;
  readonly customized_metric_specification: Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41[]|null;
  readonly disable_scale_in: boolean|null;
  readonly predefined_metric_specification: Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_predefined_metric_specification_43[]|null;
  readonly scale_in_cooldown: number|null;
  readonly scale_out_cooldown: number|null;

  constructor({
    target_value,
    customized_metric_specification = null,
    disable_scale_in = null,
    predefined_metric_specification = null,
    scale_in_cooldown = null,
    scale_out_cooldown = null
  }: {
    target_value: number,
    customized_metric_specification?: Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41[]|null,
    disable_scale_in?: boolean|null,
    predefined_metric_specification?: Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_predefined_metric_specification_43[]|null,
    scale_in_cooldown?: number|null,
    scale_out_cooldown?: number|null
  }) {
    this.target_value = target_value;
    this.customized_metric_specification = customized_metric_specification;
    this.disable_scale_in = disable_scale_in;
    this.predefined_metric_specification = predefined_metric_specification;
    this.scale_in_cooldown = scale_in_cooldown;
    this.scale_out_cooldown = scale_out_cooldown;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['target_value'] = this.target_value;
    if (this.customized_metric_specification !== null) {
      ih['customized_metric_specification'] = this.customized_metric_specification;
    }
    if (this.disable_scale_in !== null) {
      ih['disable_scale_in'] = this.disable_scale_in;
    }
    if (this.predefined_metric_specification !== null) {
      ih['predefined_metric_specification'] = this.predefined_metric_specification;
    }
    if (this.scale_in_cooldown !== null) {
      ih['scale_in_cooldown'] = this.scale_in_cooldown;
    }
    if (this.scale_out_cooldown !== null) {
      ih['scale_out_cooldown'] = this.scale_out_cooldown;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40';
  }
}

export class Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41 implements PcoreValue {
  readonly metric_name: string;
  readonly namespace: string;
  readonly statistic: string;
  readonly dimensions: Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41_dimensions_42[]|null;
  readonly unit: string|null;

  constructor({
    metric_name,
    namespace,
    statistic,
    dimensions = null,
    unit = null
  }: {
    metric_name: string,
    namespace: string,
    statistic: string,
    dimensions?: Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41_dimensions_42[]|null,
    unit?: string|null
  }) {
    this.metric_name = metric_name;
    this.namespace = namespace;
    this.statistic = statistic;
    this.dimensions = dimensions;
    this.unit = unit;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['namespace'] = this.namespace;
    ih['statistic'] = this.statistic;
    if (this.dimensions !== null) {
      ih['dimensions'] = this.dimensions;
    }
    if (this.unit !== null) {
      ih['unit'] = this.unit;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41';
  }
}

export class Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41_dimensions_42 implements PcoreValue {
  readonly name: string;
  readonly value: string;

  constructor({
    name,
    value
  }: {
    name: string,
    value: string
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_customized_metric_specification_41_dimensions_42';
  }
}

export class Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_predefined_metric_specification_43 implements PcoreValue {
  readonly predefined_metric_type: string;
  readonly resource_label: string|null;

  constructor({
    predefined_metric_type,
    resource_label = null
  }: {
    predefined_metric_type: string,
    resource_label?: string|null
  }) {
    this.predefined_metric_type = predefined_metric_type;
    this.resource_label = resource_label;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['predefined_metric_type'] = this.predefined_metric_type;
    if (this.resource_label !== null) {
      ih['resource_label'] = this.resource_label;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_policy_target_tracking_scaling_policy_configuration_40_predefined_metric_specification_43';
  }
}

export class Aws_appautoscaling_scheduled_action implements PcoreValue {
  readonly name: string;
  readonly resource_id: string;
  readonly service_namespace: string;
  readonly aws_appautoscaling_scheduled_action_id: string|null;
  readonly arn: string|null;
  readonly end_time: string|null;
  readonly scalable_dimension: string|null;
  readonly scalable_target_action: Aws_appautoscaling_scheduled_action_scalable_target_action_44[]|null;
  readonly schedule: string|null;
  readonly start_time: string|null;

  constructor({
    name,
    resource_id,
    service_namespace,
    aws_appautoscaling_scheduled_action_id = null,
    arn = null,
    end_time = null,
    scalable_dimension = null,
    scalable_target_action = null,
    schedule = null,
    start_time = null
  }: {
    name: string,
    resource_id: string,
    service_namespace: string,
    aws_appautoscaling_scheduled_action_id?: string|null,
    arn?: string|null,
    end_time?: string|null,
    scalable_dimension?: string|null,
    scalable_target_action?: Aws_appautoscaling_scheduled_action_scalable_target_action_44[]|null,
    schedule?: string|null,
    start_time?: string|null
  }) {
    this.name = name;
    this.resource_id = resource_id;
    this.service_namespace = service_namespace;
    this.aws_appautoscaling_scheduled_action_id = aws_appautoscaling_scheduled_action_id;
    this.arn = arn;
    this.end_time = end_time;
    this.scalable_dimension = scalable_dimension;
    this.scalable_target_action = scalable_target_action;
    this.schedule = schedule;
    this.start_time = start_time;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['resource_id'] = this.resource_id;
    ih['service_namespace'] = this.service_namespace;
    if (this.aws_appautoscaling_scheduled_action_id !== null) {
      ih['aws_appautoscaling_scheduled_action_id'] = this.aws_appautoscaling_scheduled_action_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.end_time !== null) {
      ih['end_time'] = this.end_time;
    }
    if (this.scalable_dimension !== null) {
      ih['scalable_dimension'] = this.scalable_dimension;
    }
    if (this.scalable_target_action !== null) {
      ih['scalable_target_action'] = this.scalable_target_action;
    }
    if (this.schedule !== null) {
      ih['schedule'] = this.schedule;
    }
    if (this.start_time !== null) {
      ih['start_time'] = this.start_time;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_scheduled_action';
  }
}

export class Aws_appautoscaling_scheduled_actionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_scheduled_actionHandler';
  }
}

export class Aws_appautoscaling_scheduled_action_scalable_target_action_44 implements PcoreValue {
  readonly max_capacity: number|null;
  readonly min_capacity: number|null;

  constructor({
    max_capacity = null,
    min_capacity = null
  }: {
    max_capacity?: number|null,
    min_capacity?: number|null
  }) {
    this.max_capacity = max_capacity;
    this.min_capacity = min_capacity;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.max_capacity !== null) {
      ih['max_capacity'] = this.max_capacity;
    }
    if (this.min_capacity !== null) {
      ih['min_capacity'] = this.min_capacity;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_scheduled_action_scalable_target_action_44';
  }
}

export class Aws_appautoscaling_target implements PcoreValue {
  readonly max_capacity: number;
  readonly min_capacity: number;
  readonly resource_id: string;
  readonly scalable_dimension: string;
  readonly service_namespace: string;
  readonly aws_appautoscaling_target_id: string|null;
  readonly role_arn: string|null;

  constructor({
    max_capacity,
    min_capacity,
    resource_id,
    scalable_dimension,
    service_namespace,
    aws_appautoscaling_target_id = null,
    role_arn = null
  }: {
    max_capacity: number,
    min_capacity: number,
    resource_id: string,
    scalable_dimension: string,
    service_namespace: string,
    aws_appautoscaling_target_id?: string|null,
    role_arn?: string|null
  }) {
    this.max_capacity = max_capacity;
    this.min_capacity = min_capacity;
    this.resource_id = resource_id;
    this.scalable_dimension = scalable_dimension;
    this.service_namespace = service_namespace;
    this.aws_appautoscaling_target_id = aws_appautoscaling_target_id;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['max_capacity'] = this.max_capacity;
    ih['min_capacity'] = this.min_capacity;
    ih['resource_id'] = this.resource_id;
    ih['scalable_dimension'] = this.scalable_dimension;
    ih['service_namespace'] = this.service_namespace;
    if (this.aws_appautoscaling_target_id !== null) {
      ih['aws_appautoscaling_target_id'] = this.aws_appautoscaling_target_id;
    }
    if (this.role_arn !== null) {
      ih['role_arn'] = this.role_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_target';
  }
}

export class Aws_appautoscaling_targetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appautoscaling_targetHandler';
  }
}

export class Aws_appmesh_mesh implements PcoreValue {
  readonly name: string;
  readonly aws_appmesh_mesh_id: string|null;
  readonly arn: string|null;
  readonly created_date: string|null;
  readonly last_updated_date: string|null;

  constructor({
    name,
    aws_appmesh_mesh_id = null,
    arn = null,
    created_date = null,
    last_updated_date = null
  }: {
    name: string,
    aws_appmesh_mesh_id?: string|null,
    arn?: string|null,
    created_date?: string|null,
    last_updated_date?: string|null
  }) {
    this.name = name;
    this.aws_appmesh_mesh_id = aws_appmesh_mesh_id;
    this.arn = arn;
    this.created_date = created_date;
    this.last_updated_date = last_updated_date;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_appmesh_mesh_id !== null) {
      ih['aws_appmesh_mesh_id'] = this.aws_appmesh_mesh_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.last_updated_date !== null) {
      ih['last_updated_date'] = this.last_updated_date;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_mesh';
  }
}

export class Aws_appmesh_meshHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_meshHandler';
  }
}

export class Aws_appmesh_route implements PcoreValue {
  readonly mesh_name: string;
  readonly name: string;
  readonly spec: Aws_appmesh_route_spec_45[];
  readonly virtual_router_name: string;
  readonly aws_appmesh_route_id: string|null;
  readonly arn: string|null;
  readonly created_date: string|null;
  readonly last_updated_date: string|null;

  constructor({
    mesh_name,
    name,
    spec,
    virtual_router_name,
    aws_appmesh_route_id = null,
    arn = null,
    created_date = null,
    last_updated_date = null
  }: {
    mesh_name: string,
    name: string,
    spec: Aws_appmesh_route_spec_45[],
    virtual_router_name: string,
    aws_appmesh_route_id?: string|null,
    arn?: string|null,
    created_date?: string|null,
    last_updated_date?: string|null
  }) {
    this.mesh_name = mesh_name;
    this.name = name;
    this.spec = spec;
    this.virtual_router_name = virtual_router_name;
    this.aws_appmesh_route_id = aws_appmesh_route_id;
    this.arn = arn;
    this.created_date = created_date;
    this.last_updated_date = last_updated_date;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mesh_name'] = this.mesh_name;
    ih['name'] = this.name;
    ih['spec'] = this.spec;
    ih['virtual_router_name'] = this.virtual_router_name;
    if (this.aws_appmesh_route_id !== null) {
      ih['aws_appmesh_route_id'] = this.aws_appmesh_route_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.last_updated_date !== null) {
      ih['last_updated_date'] = this.last_updated_date;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_route';
  }
}

export class Aws_appmesh_routeHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_routeHandler';
  }
}

export class Aws_appmesh_route_spec_45 implements PcoreValue {
  readonly http_route: Aws_appmesh_route_spec_45_http_route_46[]|null;

  constructor({
    http_route = null
  }: {
    http_route?: Aws_appmesh_route_spec_45_http_route_46[]|null
  }) {
    this.http_route = http_route;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.http_route !== null) {
      ih['http_route'] = this.http_route;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_route_spec_45';
  }
}

export class Aws_appmesh_route_spec_45_http_route_46 implements PcoreValue {
  readonly action: Aws_appmesh_route_spec_45_http_route_46_action_47[];
  readonly match: Aws_appmesh_route_spec_45_http_route_46_match_49[];

  constructor({
    action,
    match
  }: {
    action: Aws_appmesh_route_spec_45_http_route_46_action_47[],
    match: Aws_appmesh_route_spec_45_http_route_46_match_49[]
  }) {
    this.action = action;
    this.match = match;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['match'] = this.match;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_route_spec_45_http_route_46';
  }
}

export class Aws_appmesh_route_spec_45_http_route_46_action_47 implements PcoreValue {
  readonly weighted_target: Aws_appmesh_route_spec_45_http_route_46_action_47_weighted_target_48[];

  constructor({
    weighted_target
  }: {
    weighted_target: Aws_appmesh_route_spec_45_http_route_46_action_47_weighted_target_48[]
  }) {
    this.weighted_target = weighted_target;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['weighted_target'] = this.weighted_target;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_route_spec_45_http_route_46_action_47';
  }
}

export class Aws_appmesh_route_spec_45_http_route_46_action_47_weighted_target_48 implements PcoreValue {
  readonly virtual_node: string;
  readonly weight: number;

  constructor({
    virtual_node,
    weight
  }: {
    virtual_node: string,
    weight: number
  }) {
    this.virtual_node = virtual_node;
    this.weight = weight;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['virtual_node'] = this.virtual_node;
    ih['weight'] = this.weight;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_route_spec_45_http_route_46_action_47_weighted_target_48';
  }
}

export class Aws_appmesh_route_spec_45_http_route_46_match_49 implements PcoreValue {
  readonly prefix: string;

  constructor({
    prefix
  }: {
    prefix: string
  }) {
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['prefix'] = this.prefix;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_route_spec_45_http_route_46_match_49';
  }
}

export class Aws_appmesh_virtual_node implements PcoreValue {
  readonly mesh_name: string;
  readonly name: string;
  readonly spec: Aws_appmesh_virtual_node_spec_50[];
  readonly aws_appmesh_virtual_node_id: string|null;
  readonly arn: string|null;
  readonly created_date: string|null;
  readonly last_updated_date: string|null;

  constructor({
    mesh_name,
    name,
    spec,
    aws_appmesh_virtual_node_id = null,
    arn = null,
    created_date = null,
    last_updated_date = null
  }: {
    mesh_name: string,
    name: string,
    spec: Aws_appmesh_virtual_node_spec_50[],
    aws_appmesh_virtual_node_id?: string|null,
    arn?: string|null,
    created_date?: string|null,
    last_updated_date?: string|null
  }) {
    this.mesh_name = mesh_name;
    this.name = name;
    this.spec = spec;
    this.aws_appmesh_virtual_node_id = aws_appmesh_virtual_node_id;
    this.arn = arn;
    this.created_date = created_date;
    this.last_updated_date = last_updated_date;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mesh_name'] = this.mesh_name;
    ih['name'] = this.name;
    ih['spec'] = this.spec;
    if (this.aws_appmesh_virtual_node_id !== null) {
      ih['aws_appmesh_virtual_node_id'] = this.aws_appmesh_virtual_node_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.last_updated_date !== null) {
      ih['last_updated_date'] = this.last_updated_date;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_node';
  }
}

export class Aws_appmesh_virtual_nodeHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_nodeHandler';
  }
}

export class Aws_appmesh_virtual_node_spec_50 implements PcoreValue {
  readonly backends: string[]|null;
  readonly listener: Aws_appmesh_virtual_node_spec_50_listener_51[]|null;
  readonly service_discovery: Aws_appmesh_virtual_node_spec_50_service_discovery_53[]|null;

  constructor({
    backends = null,
    listener = null,
    service_discovery = null
  }: {
    backends?: string[]|null,
    listener?: Aws_appmesh_virtual_node_spec_50_listener_51[]|null,
    service_discovery?: Aws_appmesh_virtual_node_spec_50_service_discovery_53[]|null
  }) {
    this.backends = backends;
    this.listener = listener;
    this.service_discovery = service_discovery;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.backends !== null) {
      ih['backends'] = this.backends;
    }
    if (this.listener !== null) {
      ih['listener'] = this.listener;
    }
    if (this.service_discovery !== null) {
      ih['service_discovery'] = this.service_discovery;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_node_spec_50';
  }
}

export class Aws_appmesh_virtual_node_spec_50_listener_51 implements PcoreValue {
  readonly port_mapping: Aws_appmesh_virtual_node_spec_50_listener_51_port_mapping_52[];

  constructor({
    port_mapping
  }: {
    port_mapping: Aws_appmesh_virtual_node_spec_50_listener_51_port_mapping_52[]
  }) {
    this.port_mapping = port_mapping;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['port_mapping'] = this.port_mapping;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_node_spec_50_listener_51';
  }
}

export class Aws_appmesh_virtual_node_spec_50_listener_51_port_mapping_52 implements PcoreValue {
  readonly port: number;
  readonly protocol: string;

  constructor({
    port,
    protocol
  }: {
    port: number,
    protocol: string
  }) {
    this.port = port;
    this.protocol = protocol;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['port'] = this.port;
    ih['protocol'] = this.protocol;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_node_spec_50_listener_51_port_mapping_52';
  }
}

export class Aws_appmesh_virtual_node_spec_50_service_discovery_53 implements PcoreValue {
  readonly dns: Aws_appmesh_virtual_node_spec_50_service_discovery_53_dns_54[];

  constructor({
    dns
  }: {
    dns: Aws_appmesh_virtual_node_spec_50_service_discovery_53_dns_54[]
  }) {
    this.dns = dns;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['dns'] = this.dns;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_node_spec_50_service_discovery_53';
  }
}

export class Aws_appmesh_virtual_node_spec_50_service_discovery_53_dns_54 implements PcoreValue {
  readonly service_name: string;

  constructor({
    service_name
  }: {
    service_name: string
  }) {
    this.service_name = service_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['service_name'] = this.service_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_node_spec_50_service_discovery_53_dns_54';
  }
}

export class Aws_appmesh_virtual_router implements PcoreValue {
  readonly mesh_name: string;
  readonly name: string;
  readonly spec: Aws_appmesh_virtual_router_spec_55[];
  readonly aws_appmesh_virtual_router_id: string|null;
  readonly arn: string|null;
  readonly created_date: string|null;
  readonly last_updated_date: string|null;

  constructor({
    mesh_name,
    name,
    spec,
    aws_appmesh_virtual_router_id = null,
    arn = null,
    created_date = null,
    last_updated_date = null
  }: {
    mesh_name: string,
    name: string,
    spec: Aws_appmesh_virtual_router_spec_55[],
    aws_appmesh_virtual_router_id?: string|null,
    arn?: string|null,
    created_date?: string|null,
    last_updated_date?: string|null
  }) {
    this.mesh_name = mesh_name;
    this.name = name;
    this.spec = spec;
    this.aws_appmesh_virtual_router_id = aws_appmesh_virtual_router_id;
    this.arn = arn;
    this.created_date = created_date;
    this.last_updated_date = last_updated_date;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mesh_name'] = this.mesh_name;
    ih['name'] = this.name;
    ih['spec'] = this.spec;
    if (this.aws_appmesh_virtual_router_id !== null) {
      ih['aws_appmesh_virtual_router_id'] = this.aws_appmesh_virtual_router_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.last_updated_date !== null) {
      ih['last_updated_date'] = this.last_updated_date;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_router';
  }
}

export class Aws_appmesh_virtual_routerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_routerHandler';
  }
}

export class Aws_appmesh_virtual_router_spec_55 implements PcoreValue {
  readonly service_names: string[];

  constructor({
    service_names
  }: {
    service_names: string[]
  }) {
    this.service_names = service_names;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['service_names'] = this.service_names;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appmesh_virtual_router_spec_55';
  }
}

export class Aws_appsync_api_key implements PcoreValue {
  readonly api_id: string;
  readonly aws_appsync_api_key_id: string|null;
  readonly description: string|null;
  readonly expires: string|null;
  readonly key: string|null;

  constructor({
    api_id,
    aws_appsync_api_key_id = null,
    description = null,
    expires = null,
    key = null
  }: {
    api_id: string,
    aws_appsync_api_key_id?: string|null,
    description?: string|null,
    expires?: string|null,
    key?: string|null
  }) {
    this.api_id = api_id;
    this.aws_appsync_api_key_id = aws_appsync_api_key_id;
    this.description = description;
    this.expires = expires;
    this.key = key;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['api_id'] = this.api_id;
    if (this.aws_appsync_api_key_id !== null) {
      ih['aws_appsync_api_key_id'] = this.aws_appsync_api_key_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.expires !== null) {
      ih['expires'] = this.expires;
    }
    if (this.key !== null) {
      ih['key'] = this.key;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_api_key';
  }
}

export class Aws_appsync_api_keyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_api_keyHandler';
  }
}

export class Aws_appsync_datasource implements PcoreValue {
  readonly api_id: string;
  readonly name: string;
  readonly type: string;
  readonly aws_appsync_datasource_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly dynamodb_config: Aws_appsync_datasource_dynamodb_config_56[]|null;
  readonly elasticsearch_config: Aws_appsync_datasource_elasticsearch_config_57[]|null;
  readonly http_config: Aws_appsync_datasource_http_config_58[]|null;
  readonly lambda_config: Aws_appsync_datasource_lambda_config_59[]|null;
  readonly service_role_arn: string|null;

  constructor({
    api_id,
    name,
    type,
    aws_appsync_datasource_id = null,
    arn = null,
    description = null,
    dynamodb_config = null,
    elasticsearch_config = null,
    http_config = null,
    lambda_config = null,
    service_role_arn = null
  }: {
    api_id: string,
    name: string,
    type: string,
    aws_appsync_datasource_id?: string|null,
    arn?: string|null,
    description?: string|null,
    dynamodb_config?: Aws_appsync_datasource_dynamodb_config_56[]|null,
    elasticsearch_config?: Aws_appsync_datasource_elasticsearch_config_57[]|null,
    http_config?: Aws_appsync_datasource_http_config_58[]|null,
    lambda_config?: Aws_appsync_datasource_lambda_config_59[]|null,
    service_role_arn?: string|null
  }) {
    this.api_id = api_id;
    this.name = name;
    this.type = type;
    this.aws_appsync_datasource_id = aws_appsync_datasource_id;
    this.arn = arn;
    this.description = description;
    this.dynamodb_config = dynamodb_config;
    this.elasticsearch_config = elasticsearch_config;
    this.http_config = http_config;
    this.lambda_config = lambda_config;
    this.service_role_arn = service_role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['api_id'] = this.api_id;
    ih['name'] = this.name;
    ih['type'] = this.type;
    if (this.aws_appsync_datasource_id !== null) {
      ih['aws_appsync_datasource_id'] = this.aws_appsync_datasource_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.dynamodb_config !== null) {
      ih['dynamodb_config'] = this.dynamodb_config;
    }
    if (this.elasticsearch_config !== null) {
      ih['elasticsearch_config'] = this.elasticsearch_config;
    }
    if (this.http_config !== null) {
      ih['http_config'] = this.http_config;
    }
    if (this.lambda_config !== null) {
      ih['lambda_config'] = this.lambda_config;
    }
    if (this.service_role_arn !== null) {
      ih['service_role_arn'] = this.service_role_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_datasource';
  }
}

export class Aws_appsync_datasourceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_datasourceHandler';
  }
}

export class Aws_appsync_datasource_dynamodb_config_56 implements PcoreValue {
  readonly table_name: string;
  readonly region: string|null;
  readonly use_caller_credentials: boolean|null;

  constructor({
    table_name,
    region = null,
    use_caller_credentials = null
  }: {
    table_name: string,
    region?: string|null,
    use_caller_credentials?: boolean|null
  }) {
    this.table_name = table_name;
    this.region = region;
    this.use_caller_credentials = use_caller_credentials;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['table_name'] = this.table_name;
    if (this.region !== null) {
      ih['region'] = this.region;
    }
    if (this.use_caller_credentials !== null) {
      ih['use_caller_credentials'] = this.use_caller_credentials;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_datasource_dynamodb_config_56';
  }
}

export class Aws_appsync_datasource_elasticsearch_config_57 implements PcoreValue {
  readonly endpoint: string;
  readonly region: string|null;

  constructor({
    endpoint,
    region = null
  }: {
    endpoint: string,
    region?: string|null
  }) {
    this.endpoint = endpoint;
    this.region = region;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['endpoint'] = this.endpoint;
    if (this.region !== null) {
      ih['region'] = this.region;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_datasource_elasticsearch_config_57';
  }
}

export class Aws_appsync_datasource_http_config_58 implements PcoreValue {
  readonly endpoint: string;

  constructor({
    endpoint
  }: {
    endpoint: string
  }) {
    this.endpoint = endpoint;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['endpoint'] = this.endpoint;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_datasource_http_config_58';
  }
}

export class Aws_appsync_datasource_lambda_config_59 implements PcoreValue {
  readonly function_arn: string;

  constructor({
    function_arn
  }: {
    function_arn: string
  }) {
    this.function_arn = function_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['function_arn'] = this.function_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_datasource_lambda_config_59';
  }
}

export class Aws_appsync_graphql_api implements PcoreValue {
  readonly authentication_type: string;
  readonly name: string;
  readonly aws_appsync_graphql_api_id: string|null;
  readonly arn: string|null;
  readonly log_config: Aws_appsync_graphql_api_log_config_60[]|null;
  readonly openid_connect_config: Aws_appsync_graphql_api_openid_connect_config_61[]|null;
  readonly uris: {[s: string]: string}|null;
  readonly user_pool_config: Aws_appsync_graphql_api_user_pool_config_62[]|null;

  constructor({
    authentication_type,
    name,
    aws_appsync_graphql_api_id = null,
    arn = null,
    log_config = null,
    openid_connect_config = null,
    uris = null,
    user_pool_config = null
  }: {
    authentication_type: string,
    name: string,
    aws_appsync_graphql_api_id?: string|null,
    arn?: string|null,
    log_config?: Aws_appsync_graphql_api_log_config_60[]|null,
    openid_connect_config?: Aws_appsync_graphql_api_openid_connect_config_61[]|null,
    uris?: {[s: string]: string}|null,
    user_pool_config?: Aws_appsync_graphql_api_user_pool_config_62[]|null
  }) {
    this.authentication_type = authentication_type;
    this.name = name;
    this.aws_appsync_graphql_api_id = aws_appsync_graphql_api_id;
    this.arn = arn;
    this.log_config = log_config;
    this.openid_connect_config = openid_connect_config;
    this.uris = uris;
    this.user_pool_config = user_pool_config;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['authentication_type'] = this.authentication_type;
    ih['name'] = this.name;
    if (this.aws_appsync_graphql_api_id !== null) {
      ih['aws_appsync_graphql_api_id'] = this.aws_appsync_graphql_api_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.log_config !== null) {
      ih['log_config'] = this.log_config;
    }
    if (this.openid_connect_config !== null) {
      ih['openid_connect_config'] = this.openid_connect_config;
    }
    if (this.uris !== null) {
      ih['uris'] = this.uris;
    }
    if (this.user_pool_config !== null) {
      ih['user_pool_config'] = this.user_pool_config;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_graphql_api';
  }
}

export class Aws_appsync_graphql_apiHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_graphql_apiHandler';
  }
}

export class Aws_appsync_graphql_api_log_config_60 implements PcoreValue {
  readonly cloudwatch_logs_role_arn: string;
  readonly field_log_level: string;

  constructor({
    cloudwatch_logs_role_arn,
    field_log_level
  }: {
    cloudwatch_logs_role_arn: string,
    field_log_level: string
  }) {
    this.cloudwatch_logs_role_arn = cloudwatch_logs_role_arn;
    this.field_log_level = field_log_level;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cloudwatch_logs_role_arn'] = this.cloudwatch_logs_role_arn;
    ih['field_log_level'] = this.field_log_level;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_graphql_api_log_config_60';
  }
}

export class Aws_appsync_graphql_api_openid_connect_config_61 implements PcoreValue {
  readonly issuer: string;
  readonly auth_ttl: number|null;
  readonly client_id: string|null;
  readonly iat_ttl: number|null;

  constructor({
    issuer,
    auth_ttl = null,
    client_id = null,
    iat_ttl = null
  }: {
    issuer: string,
    auth_ttl?: number|null,
    client_id?: string|null,
    iat_ttl?: number|null
  }) {
    this.issuer = issuer;
    this.auth_ttl = auth_ttl;
    this.client_id = client_id;
    this.iat_ttl = iat_ttl;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['issuer'] = this.issuer;
    if (this.auth_ttl !== null) {
      ih['auth_ttl'] = this.auth_ttl;
    }
    if (this.client_id !== null) {
      ih['client_id'] = this.client_id;
    }
    if (this.iat_ttl !== null) {
      ih['iat_ttl'] = this.iat_ttl;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_graphql_api_openid_connect_config_61';
  }
}

export class Aws_appsync_graphql_api_user_pool_config_62 implements PcoreValue {
  readonly default_action: string;
  readonly user_pool_id: string;
  readonly app_id_client_regex: string|null;
  readonly aws_region: string|null;

  constructor({
    default_action,
    user_pool_id,
    app_id_client_regex = null,
    aws_region = null
  }: {
    default_action: string,
    user_pool_id: string,
    app_id_client_regex?: string|null,
    aws_region?: string|null
  }) {
    this.default_action = default_action;
    this.user_pool_id = user_pool_id;
    this.app_id_client_regex = app_id_client_regex;
    this.aws_region = aws_region;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_action'] = this.default_action;
    ih['user_pool_id'] = this.user_pool_id;
    if (this.app_id_client_regex !== null) {
      ih['app_id_client_regex'] = this.app_id_client_regex;
    }
    if (this.aws_region !== null) {
      ih['aws_region'] = this.aws_region;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_appsync_graphql_api_user_pool_config_62';
  }
}

export class Aws_athena_database implements PcoreValue {
  readonly bucket: string;
  readonly name: string;
  readonly aws_athena_database_id: string|null;
  readonly encryption_configuration: Aws_athena_database_encryption_configuration_63[]|null;
  readonly force_destroy: boolean|null;

  constructor({
    bucket,
    name,
    aws_athena_database_id = null,
    encryption_configuration = null,
    force_destroy = null
  }: {
    bucket: string,
    name: string,
    aws_athena_database_id?: string|null,
    encryption_configuration?: Aws_athena_database_encryption_configuration_63[]|null,
    force_destroy?: boolean|null
  }) {
    this.bucket = bucket;
    this.name = name;
    this.aws_athena_database_id = aws_athena_database_id;
    this.encryption_configuration = encryption_configuration;
    this.force_destroy = force_destroy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    ih['name'] = this.name;
    if (this.aws_athena_database_id !== null) {
      ih['aws_athena_database_id'] = this.aws_athena_database_id;
    }
    if (this.encryption_configuration !== null) {
      ih['encryption_configuration'] = this.encryption_configuration;
    }
    if (this.force_destroy !== null) {
      ih['force_destroy'] = this.force_destroy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_athena_database';
  }
}

export class Aws_athena_databaseHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_athena_databaseHandler';
  }
}

export class Aws_athena_database_encryption_configuration_63 implements PcoreValue {
  readonly encryption_option: string;
  readonly kms_key: string|null;

  constructor({
    encryption_option,
    kms_key = null
  }: {
    encryption_option: string,
    kms_key?: string|null
  }) {
    this.encryption_option = encryption_option;
    this.kms_key = kms_key;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['encryption_option'] = this.encryption_option;
    if (this.kms_key !== null) {
      ih['kms_key'] = this.kms_key;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_athena_database_encryption_configuration_63';
  }
}

export class Aws_athena_named_query implements PcoreValue {
  readonly database: string;
  readonly name: string;
  readonly query: string;
  readonly aws_athena_named_query_id: string|null;
  readonly description: string|null;

  constructor({
    database,
    name,
    query,
    aws_athena_named_query_id = null,
    description = null
  }: {
    database: string,
    name: string,
    query: string,
    aws_athena_named_query_id?: string|null,
    description?: string|null
  }) {
    this.database = database;
    this.name = name;
    this.query = query;
    this.aws_athena_named_query_id = aws_athena_named_query_id;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['database'] = this.database;
    ih['name'] = this.name;
    ih['query'] = this.query;
    if (this.aws_athena_named_query_id !== null) {
      ih['aws_athena_named_query_id'] = this.aws_athena_named_query_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_athena_named_query';
  }
}

export class Aws_athena_named_queryHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_athena_named_queryHandler';
  }
}

export class Aws_autoscaling_attachment implements PcoreValue {
  readonly autoscaling_group_name: string;
  readonly aws_autoscaling_attachment_id: string|null;
  readonly alb_target_group_arn: string|null;
  readonly elb: string|null;

  constructor({
    autoscaling_group_name,
    aws_autoscaling_attachment_id = null,
    alb_target_group_arn = null,
    elb = null
  }: {
    autoscaling_group_name: string,
    aws_autoscaling_attachment_id?: string|null,
    alb_target_group_arn?: string|null,
    elb?: string|null
  }) {
    this.autoscaling_group_name = autoscaling_group_name;
    this.aws_autoscaling_attachment_id = aws_autoscaling_attachment_id;
    this.alb_target_group_arn = alb_target_group_arn;
    this.elb = elb;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['autoscaling_group_name'] = this.autoscaling_group_name;
    if (this.aws_autoscaling_attachment_id !== null) {
      ih['aws_autoscaling_attachment_id'] = this.aws_autoscaling_attachment_id;
    }
    if (this.alb_target_group_arn !== null) {
      ih['alb_target_group_arn'] = this.alb_target_group_arn;
    }
    if (this.elb !== null) {
      ih['elb'] = this.elb;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_attachment';
  }
}

export class Aws_autoscaling_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_attachmentHandler';
  }
}

export class Aws_autoscaling_group implements PcoreValue {
  readonly max_size: number;
  readonly min_size: number;
  readonly aws_autoscaling_group_id: string|null;
  readonly arn: string|null;
  readonly availability_zones: string[]|null;
  readonly default_cooldown: number|null;
  readonly desired_capacity: number|null;
  readonly enabled_metrics: string[]|null;
  readonly force_delete: boolean|null;
  readonly health_check_grace_period: number|null;
  readonly health_check_type: string|null;
  readonly initial_lifecycle_hook: Aws_autoscaling_group_initial_lifecycle_hook_64[]|null;
  readonly launch_configuration: string|null;
  readonly launch_template: Aws_autoscaling_group_launch_template_65[]|null;
  readonly load_balancers: string[]|null;
  readonly metrics_granularity: string|null;
  readonly min_elb_capacity: number|null;
  readonly mixed_instances_policy: Aws_autoscaling_group_mixed_instances_policy_66[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly placement_group: string|null;
  readonly protect_from_scale_in: boolean|null;
  readonly service_linked_role_arn: string|null;
  readonly suspended_processes: string[]|null;
  readonly tag: Aws_autoscaling_group_tag_71[]|null;
  readonly tags: Array<{[s: string]: string}>|null;
  readonly target_group_arns: string[]|null;
  readonly termination_policies: string[]|null;
  readonly vpc_zone_identifier: string[]|null;
  readonly wait_for_capacity_timeout: string|null;
  readonly wait_for_elb_capacity: number|null;

  constructor({
    max_size,
    min_size,
    aws_autoscaling_group_id = null,
    arn = null,
    availability_zones = null,
    default_cooldown = null,
    desired_capacity = null,
    enabled_metrics = null,
    force_delete = null,
    health_check_grace_period = null,
    health_check_type = null,
    initial_lifecycle_hook = null,
    launch_configuration = null,
    launch_template = null,
    load_balancers = null,
    metrics_granularity = null,
    min_elb_capacity = null,
    mixed_instances_policy = null,
    name = null,
    name_prefix = null,
    placement_group = null,
    protect_from_scale_in = null,
    service_linked_role_arn = null,
    suspended_processes = null,
    tag = null,
    tags = null,
    target_group_arns = null,
    termination_policies = null,
    vpc_zone_identifier = null,
    wait_for_capacity_timeout = null,
    wait_for_elb_capacity = null
  }: {
    max_size: number,
    min_size: number,
    aws_autoscaling_group_id?: string|null,
    arn?: string|null,
    availability_zones?: string[]|null,
    default_cooldown?: number|null,
    desired_capacity?: number|null,
    enabled_metrics?: string[]|null,
    force_delete?: boolean|null,
    health_check_grace_period?: number|null,
    health_check_type?: string|null,
    initial_lifecycle_hook?: Aws_autoscaling_group_initial_lifecycle_hook_64[]|null,
    launch_configuration?: string|null,
    launch_template?: Aws_autoscaling_group_launch_template_65[]|null,
    load_balancers?: string[]|null,
    metrics_granularity?: string|null,
    min_elb_capacity?: number|null,
    mixed_instances_policy?: Aws_autoscaling_group_mixed_instances_policy_66[]|null,
    name?: string|null,
    name_prefix?: string|null,
    placement_group?: string|null,
    protect_from_scale_in?: boolean|null,
    service_linked_role_arn?: string|null,
    suspended_processes?: string[]|null,
    tag?: Aws_autoscaling_group_tag_71[]|null,
    tags?: Array<{[s: string]: string}>|null,
    target_group_arns?: string[]|null,
    termination_policies?: string[]|null,
    vpc_zone_identifier?: string[]|null,
    wait_for_capacity_timeout?: string|null,
    wait_for_elb_capacity?: number|null
  }) {
    this.max_size = max_size;
    this.min_size = min_size;
    this.aws_autoscaling_group_id = aws_autoscaling_group_id;
    this.arn = arn;
    this.availability_zones = availability_zones;
    this.default_cooldown = default_cooldown;
    this.desired_capacity = desired_capacity;
    this.enabled_metrics = enabled_metrics;
    this.force_delete = force_delete;
    this.health_check_grace_period = health_check_grace_period;
    this.health_check_type = health_check_type;
    this.initial_lifecycle_hook = initial_lifecycle_hook;
    this.launch_configuration = launch_configuration;
    this.launch_template = launch_template;
    this.load_balancers = load_balancers;
    this.metrics_granularity = metrics_granularity;
    this.min_elb_capacity = min_elb_capacity;
    this.mixed_instances_policy = mixed_instances_policy;
    this.name = name;
    this.name_prefix = name_prefix;
    this.placement_group = placement_group;
    this.protect_from_scale_in = protect_from_scale_in;
    this.service_linked_role_arn = service_linked_role_arn;
    this.suspended_processes = suspended_processes;
    this.tag = tag;
    this.tags = tags;
    this.target_group_arns = target_group_arns;
    this.termination_policies = termination_policies;
    this.vpc_zone_identifier = vpc_zone_identifier;
    this.wait_for_capacity_timeout = wait_for_capacity_timeout;
    this.wait_for_elb_capacity = wait_for_elb_capacity;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['max_size'] = this.max_size;
    ih['min_size'] = this.min_size;
    if (this.aws_autoscaling_group_id !== null) {
      ih['aws_autoscaling_group_id'] = this.aws_autoscaling_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.default_cooldown !== null) {
      ih['default_cooldown'] = this.default_cooldown;
    }
    if (this.desired_capacity !== null) {
      ih['desired_capacity'] = this.desired_capacity;
    }
    if (this.enabled_metrics !== null) {
      ih['enabled_metrics'] = this.enabled_metrics;
    }
    if (this.force_delete !== null) {
      ih['force_delete'] = this.force_delete;
    }
    if (this.health_check_grace_period !== null) {
      ih['health_check_grace_period'] = this.health_check_grace_period;
    }
    if (this.health_check_type !== null) {
      ih['health_check_type'] = this.health_check_type;
    }
    if (this.initial_lifecycle_hook !== null) {
      ih['initial_lifecycle_hook'] = this.initial_lifecycle_hook;
    }
    if (this.launch_configuration !== null) {
      ih['launch_configuration'] = this.launch_configuration;
    }
    if (this.launch_template !== null) {
      ih['launch_template'] = this.launch_template;
    }
    if (this.load_balancers !== null) {
      ih['load_balancers'] = this.load_balancers;
    }
    if (this.metrics_granularity !== null) {
      ih['metrics_granularity'] = this.metrics_granularity;
    }
    if (this.min_elb_capacity !== null) {
      ih['min_elb_capacity'] = this.min_elb_capacity;
    }
    if (this.mixed_instances_policy !== null) {
      ih['mixed_instances_policy'] = this.mixed_instances_policy;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.placement_group !== null) {
      ih['placement_group'] = this.placement_group;
    }
    if (this.protect_from_scale_in !== null) {
      ih['protect_from_scale_in'] = this.protect_from_scale_in;
    }
    if (this.service_linked_role_arn !== null) {
      ih['service_linked_role_arn'] = this.service_linked_role_arn;
    }
    if (this.suspended_processes !== null) {
      ih['suspended_processes'] = this.suspended_processes;
    }
    if (this.tag !== null) {
      ih['tag'] = this.tag;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.target_group_arns !== null) {
      ih['target_group_arns'] = this.target_group_arns;
    }
    if (this.termination_policies !== null) {
      ih['termination_policies'] = this.termination_policies;
    }
    if (this.vpc_zone_identifier !== null) {
      ih['vpc_zone_identifier'] = this.vpc_zone_identifier;
    }
    if (this.wait_for_capacity_timeout !== null) {
      ih['wait_for_capacity_timeout'] = this.wait_for_capacity_timeout;
    }
    if (this.wait_for_elb_capacity !== null) {
      ih['wait_for_elb_capacity'] = this.wait_for_elb_capacity;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group';
  }
}

export class Aws_autoscaling_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_groupHandler';
  }
}

export class Aws_autoscaling_group_initial_lifecycle_hook_64 implements PcoreValue {
  readonly lifecycle_transition: string;
  readonly name: string;
  readonly default_result: string|null;
  readonly heartbeat_timeout: number|null;
  readonly notification_metadata: string|null;
  readonly notification_target_arn: string|null;
  readonly role_arn: string|null;

  constructor({
    lifecycle_transition,
    name,
    default_result = null,
    heartbeat_timeout = null,
    notification_metadata = null,
    notification_target_arn = null,
    role_arn = null
  }: {
    lifecycle_transition: string,
    name: string,
    default_result?: string|null,
    heartbeat_timeout?: number|null,
    notification_metadata?: string|null,
    notification_target_arn?: string|null,
    role_arn?: string|null
  }) {
    this.lifecycle_transition = lifecycle_transition;
    this.name = name;
    this.default_result = default_result;
    this.heartbeat_timeout = heartbeat_timeout;
    this.notification_metadata = notification_metadata;
    this.notification_target_arn = notification_target_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['lifecycle_transition'] = this.lifecycle_transition;
    ih['name'] = this.name;
    if (this.default_result !== null) {
      ih['default_result'] = this.default_result;
    }
    if (this.heartbeat_timeout !== null) {
      ih['heartbeat_timeout'] = this.heartbeat_timeout;
    }
    if (this.notification_metadata !== null) {
      ih['notification_metadata'] = this.notification_metadata;
    }
    if (this.notification_target_arn !== null) {
      ih['notification_target_arn'] = this.notification_target_arn;
    }
    if (this.role_arn !== null) {
      ih['role_arn'] = this.role_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group_initial_lifecycle_hook_64';
  }
}

export class Aws_autoscaling_group_launch_template_65 implements PcoreValue {
  readonly id: string|null;
  readonly name: string|null;
  readonly version: string|null;

  constructor({
    id = null,
    name = null,
    version = null
  }: {
    id?: string|null,
    name?: string|null,
    version?: string|null
  }) {
    this.id = id;
    this.name = name;
    this.version = version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group_launch_template_65';
  }
}

export class Aws_autoscaling_group_mixed_instances_policy_66 implements PcoreValue {
  readonly launch_template: Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68[];
  readonly instances_distribution: Aws_autoscaling_group_mixed_instances_policy_66_instances_distribution_67[]|null;

  constructor({
    launch_template,
    instances_distribution = null
  }: {
    launch_template: Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68[],
    instances_distribution?: Aws_autoscaling_group_mixed_instances_policy_66_instances_distribution_67[]|null
  }) {
    this.launch_template = launch_template;
    this.instances_distribution = instances_distribution;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['launch_template'] = this.launch_template;
    if (this.instances_distribution !== null) {
      ih['instances_distribution'] = this.instances_distribution;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group_mixed_instances_policy_66';
  }
}

export class Aws_autoscaling_group_mixed_instances_policy_66_instances_distribution_67 implements PcoreValue {
  readonly on_demand_allocation_strategy: string|null;
  readonly on_demand_base_capacity: number|null;
  readonly on_demand_percentage_above_base_capacity: number|null;
  readonly spot_allocation_strategy: string|null;
  readonly spot_instance_pools: number|null;
  readonly spot_max_price: string|null;

  constructor({
    on_demand_allocation_strategy = null,
    on_demand_base_capacity = null,
    on_demand_percentage_above_base_capacity = null,
    spot_allocation_strategy = null,
    spot_instance_pools = null,
    spot_max_price = null
  }: {
    on_demand_allocation_strategy?: string|null,
    on_demand_base_capacity?: number|null,
    on_demand_percentage_above_base_capacity?: number|null,
    spot_allocation_strategy?: string|null,
    spot_instance_pools?: number|null,
    spot_max_price?: string|null
  }) {
    this.on_demand_allocation_strategy = on_demand_allocation_strategy;
    this.on_demand_base_capacity = on_demand_base_capacity;
    this.on_demand_percentage_above_base_capacity = on_demand_percentage_above_base_capacity;
    this.spot_allocation_strategy = spot_allocation_strategy;
    this.spot_instance_pools = spot_instance_pools;
    this.spot_max_price = spot_max_price;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.on_demand_allocation_strategy !== null) {
      ih['on_demand_allocation_strategy'] = this.on_demand_allocation_strategy;
    }
    if (this.on_demand_base_capacity !== null) {
      ih['on_demand_base_capacity'] = this.on_demand_base_capacity;
    }
    if (this.on_demand_percentage_above_base_capacity !== null) {
      ih['on_demand_percentage_above_base_capacity'] = this.on_demand_percentage_above_base_capacity;
    }
    if (this.spot_allocation_strategy !== null) {
      ih['spot_allocation_strategy'] = this.spot_allocation_strategy;
    }
    if (this.spot_instance_pools !== null) {
      ih['spot_instance_pools'] = this.spot_instance_pools;
    }
    if (this.spot_max_price !== null) {
      ih['spot_max_price'] = this.spot_max_price;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group_mixed_instances_policy_66_instances_distribution_67';
  }
}

export class Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68 implements PcoreValue {
  readonly launch_template_specification: Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_launch_template_specification_69[];
  readonly override: Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_override_70[]|null;

  constructor({
    launch_template_specification,
    override = null
  }: {
    launch_template_specification: Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_launch_template_specification_69[],
    override?: Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_override_70[]|null
  }) {
    this.launch_template_specification = launch_template_specification;
    this.override = override;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['launch_template_specification'] = this.launch_template_specification;
    if (this.override !== null) {
      ih['override'] = this.override;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68';
  }
}

export class Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_launch_template_specification_69 implements PcoreValue {
  readonly launch_template_id: string|null;
  readonly launch_template_name: string|null;
  readonly version: string|null;

  constructor({
    launch_template_id = null,
    launch_template_name = null,
    version = null
  }: {
    launch_template_id?: string|null,
    launch_template_name?: string|null,
    version?: string|null
  }) {
    this.launch_template_id = launch_template_id;
    this.launch_template_name = launch_template_name;
    this.version = version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.launch_template_id !== null) {
      ih['launch_template_id'] = this.launch_template_id;
    }
    if (this.launch_template_name !== null) {
      ih['launch_template_name'] = this.launch_template_name;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_launch_template_specification_69';
  }
}

export class Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_override_70 implements PcoreValue {
  readonly instance_type: string|null;

  constructor({
    instance_type = null
  }: {
    instance_type?: string|null
  }) {
    this.instance_type = instance_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.instance_type !== null) {
      ih['instance_type'] = this.instance_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group_mixed_instances_policy_66_launch_template_68_override_70';
  }
}

export class Aws_autoscaling_group_tag_71 implements PcoreValue {
  readonly key: string;
  readonly propagate_at_launch: boolean;
  readonly value: string;

  constructor({
    key,
    propagate_at_launch,
    value
  }: {
    key: string,
    propagate_at_launch: boolean,
    value: string
  }) {
    this.key = key;
    this.propagate_at_launch = propagate_at_launch;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['propagate_at_launch'] = this.propagate_at_launch;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_group_tag_71';
  }
}

export class Aws_autoscaling_lifecycle_hook implements PcoreValue {
  readonly autoscaling_group_name: string;
  readonly lifecycle_transition: string;
  readonly name: string;
  readonly aws_autoscaling_lifecycle_hook_id: string|null;
  readonly default_result: string|null;
  readonly heartbeat_timeout: number|null;
  readonly notification_metadata: string|null;
  readonly notification_target_arn: string|null;
  readonly role_arn: string|null;

  constructor({
    autoscaling_group_name,
    lifecycle_transition,
    name,
    aws_autoscaling_lifecycle_hook_id = null,
    default_result = null,
    heartbeat_timeout = null,
    notification_metadata = null,
    notification_target_arn = null,
    role_arn = null
  }: {
    autoscaling_group_name: string,
    lifecycle_transition: string,
    name: string,
    aws_autoscaling_lifecycle_hook_id?: string|null,
    default_result?: string|null,
    heartbeat_timeout?: number|null,
    notification_metadata?: string|null,
    notification_target_arn?: string|null,
    role_arn?: string|null
  }) {
    this.autoscaling_group_name = autoscaling_group_name;
    this.lifecycle_transition = lifecycle_transition;
    this.name = name;
    this.aws_autoscaling_lifecycle_hook_id = aws_autoscaling_lifecycle_hook_id;
    this.default_result = default_result;
    this.heartbeat_timeout = heartbeat_timeout;
    this.notification_metadata = notification_metadata;
    this.notification_target_arn = notification_target_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['autoscaling_group_name'] = this.autoscaling_group_name;
    ih['lifecycle_transition'] = this.lifecycle_transition;
    ih['name'] = this.name;
    if (this.aws_autoscaling_lifecycle_hook_id !== null) {
      ih['aws_autoscaling_lifecycle_hook_id'] = this.aws_autoscaling_lifecycle_hook_id;
    }
    if (this.default_result !== null) {
      ih['default_result'] = this.default_result;
    }
    if (this.heartbeat_timeout !== null) {
      ih['heartbeat_timeout'] = this.heartbeat_timeout;
    }
    if (this.notification_metadata !== null) {
      ih['notification_metadata'] = this.notification_metadata;
    }
    if (this.notification_target_arn !== null) {
      ih['notification_target_arn'] = this.notification_target_arn;
    }
    if (this.role_arn !== null) {
      ih['role_arn'] = this.role_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_lifecycle_hook';
  }
}

export class Aws_autoscaling_lifecycle_hookHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_lifecycle_hookHandler';
  }
}

export class Aws_autoscaling_notification implements PcoreValue {
  readonly group_names: string[];
  readonly notifications: string[];
  readonly topic_arn: string;
  readonly aws_autoscaling_notification_id: string|null;

  constructor({
    group_names,
    notifications,
    topic_arn,
    aws_autoscaling_notification_id = null
  }: {
    group_names: string[],
    notifications: string[],
    topic_arn: string,
    aws_autoscaling_notification_id?: string|null
  }) {
    this.group_names = group_names;
    this.notifications = notifications;
    this.topic_arn = topic_arn;
    this.aws_autoscaling_notification_id = aws_autoscaling_notification_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['group_names'] = this.group_names;
    ih['notifications'] = this.notifications;
    ih['topic_arn'] = this.topic_arn;
    if (this.aws_autoscaling_notification_id !== null) {
      ih['aws_autoscaling_notification_id'] = this.aws_autoscaling_notification_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_notification';
  }
}

export class Aws_autoscaling_notificationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_notificationHandler';
  }
}

export class Aws_autoscaling_policy implements PcoreValue {
  readonly autoscaling_group_name: string;
  readonly name: string;
  readonly aws_autoscaling_policy_id: string|null;
  readonly adjustment_type: string|null;
  readonly arn: string|null;
  readonly cooldown: number|null;
  readonly estimated_instance_warmup: number|null;
  readonly metric_aggregation_type: string|null;
  readonly min_adjustment_magnitude: number|null;
  readonly min_adjustment_step: number|null;
  readonly policy_type: string|null;
  readonly scaling_adjustment: number|null;
  readonly step_adjustment: Aws_autoscaling_policy_step_adjustment_72[]|null;
  readonly target_tracking_configuration: Aws_autoscaling_policy_target_tracking_configuration_73[]|null;

  constructor({
    autoscaling_group_name,
    name,
    aws_autoscaling_policy_id = null,
    adjustment_type = null,
    arn = null,
    cooldown = null,
    estimated_instance_warmup = null,
    metric_aggregation_type = null,
    min_adjustment_magnitude = null,
    min_adjustment_step = null,
    policy_type = null,
    scaling_adjustment = null,
    step_adjustment = null,
    target_tracking_configuration = null
  }: {
    autoscaling_group_name: string,
    name: string,
    aws_autoscaling_policy_id?: string|null,
    adjustment_type?: string|null,
    arn?: string|null,
    cooldown?: number|null,
    estimated_instance_warmup?: number|null,
    metric_aggregation_type?: string|null,
    min_adjustment_magnitude?: number|null,
    min_adjustment_step?: number|null,
    policy_type?: string|null,
    scaling_adjustment?: number|null,
    step_adjustment?: Aws_autoscaling_policy_step_adjustment_72[]|null,
    target_tracking_configuration?: Aws_autoscaling_policy_target_tracking_configuration_73[]|null
  }) {
    this.autoscaling_group_name = autoscaling_group_name;
    this.name = name;
    this.aws_autoscaling_policy_id = aws_autoscaling_policy_id;
    this.adjustment_type = adjustment_type;
    this.arn = arn;
    this.cooldown = cooldown;
    this.estimated_instance_warmup = estimated_instance_warmup;
    this.metric_aggregation_type = metric_aggregation_type;
    this.min_adjustment_magnitude = min_adjustment_magnitude;
    this.min_adjustment_step = min_adjustment_step;
    this.policy_type = policy_type;
    this.scaling_adjustment = scaling_adjustment;
    this.step_adjustment = step_adjustment;
    this.target_tracking_configuration = target_tracking_configuration;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['autoscaling_group_name'] = this.autoscaling_group_name;
    ih['name'] = this.name;
    if (this.aws_autoscaling_policy_id !== null) {
      ih['aws_autoscaling_policy_id'] = this.aws_autoscaling_policy_id;
    }
    if (this.adjustment_type !== null) {
      ih['adjustment_type'] = this.adjustment_type;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cooldown !== null) {
      ih['cooldown'] = this.cooldown;
    }
    if (this.estimated_instance_warmup !== null) {
      ih['estimated_instance_warmup'] = this.estimated_instance_warmup;
    }
    if (this.metric_aggregation_type !== null) {
      ih['metric_aggregation_type'] = this.metric_aggregation_type;
    }
    if (this.min_adjustment_magnitude !== null) {
      ih['min_adjustment_magnitude'] = this.min_adjustment_magnitude;
    }
    if (this.min_adjustment_step !== null) {
      ih['min_adjustment_step'] = this.min_adjustment_step;
    }
    if (this.policy_type !== null) {
      ih['policy_type'] = this.policy_type;
    }
    if (this.scaling_adjustment !== null) {
      ih['scaling_adjustment'] = this.scaling_adjustment;
    }
    if (this.step_adjustment !== null) {
      ih['step_adjustment'] = this.step_adjustment;
    }
    if (this.target_tracking_configuration !== null) {
      ih['target_tracking_configuration'] = this.target_tracking_configuration;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_policy';
  }
}

export class Aws_autoscaling_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_policyHandler';
  }
}

export class Aws_autoscaling_policy_step_adjustment_72 implements PcoreValue {
  readonly scaling_adjustment: number;
  readonly metric_interval_lower_bound: string|null;
  readonly metric_interval_upper_bound: string|null;

  constructor({
    scaling_adjustment,
    metric_interval_lower_bound = null,
    metric_interval_upper_bound = null
  }: {
    scaling_adjustment: number,
    metric_interval_lower_bound?: string|null,
    metric_interval_upper_bound?: string|null
  }) {
    this.scaling_adjustment = scaling_adjustment;
    this.metric_interval_lower_bound = metric_interval_lower_bound;
    this.metric_interval_upper_bound = metric_interval_upper_bound;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['scaling_adjustment'] = this.scaling_adjustment;
    if (this.metric_interval_lower_bound !== null) {
      ih['metric_interval_lower_bound'] = this.metric_interval_lower_bound;
    }
    if (this.metric_interval_upper_bound !== null) {
      ih['metric_interval_upper_bound'] = this.metric_interval_upper_bound;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_policy_step_adjustment_72';
  }
}

export class Aws_autoscaling_policy_target_tracking_configuration_73 implements PcoreValue {
  readonly target_value: number;
  readonly customized_metric_specification: Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74[]|null;
  readonly disable_scale_in: boolean|null;
  readonly predefined_metric_specification: Aws_autoscaling_policy_target_tracking_configuration_73_predefined_metric_specification_76[]|null;

  constructor({
    target_value,
    customized_metric_specification = null,
    disable_scale_in = null,
    predefined_metric_specification = null
  }: {
    target_value: number,
    customized_metric_specification?: Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74[]|null,
    disable_scale_in?: boolean|null,
    predefined_metric_specification?: Aws_autoscaling_policy_target_tracking_configuration_73_predefined_metric_specification_76[]|null
  }) {
    this.target_value = target_value;
    this.customized_metric_specification = customized_metric_specification;
    this.disable_scale_in = disable_scale_in;
    this.predefined_metric_specification = predefined_metric_specification;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['target_value'] = this.target_value;
    if (this.customized_metric_specification !== null) {
      ih['customized_metric_specification'] = this.customized_metric_specification;
    }
    if (this.disable_scale_in !== null) {
      ih['disable_scale_in'] = this.disable_scale_in;
    }
    if (this.predefined_metric_specification !== null) {
      ih['predefined_metric_specification'] = this.predefined_metric_specification;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_policy_target_tracking_configuration_73';
  }
}

export class Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74 implements PcoreValue {
  readonly metric_name: string;
  readonly namespace: string;
  readonly statistic: string;
  readonly metric_dimension: Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74_metric_dimension_75[]|null;
  readonly unit: string|null;

  constructor({
    metric_name,
    namespace,
    statistic,
    metric_dimension = null,
    unit = null
  }: {
    metric_name: string,
    namespace: string,
    statistic: string,
    metric_dimension?: Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74_metric_dimension_75[]|null,
    unit?: string|null
  }) {
    this.metric_name = metric_name;
    this.namespace = namespace;
    this.statistic = statistic;
    this.metric_dimension = metric_dimension;
    this.unit = unit;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['namespace'] = this.namespace;
    ih['statistic'] = this.statistic;
    if (this.metric_dimension !== null) {
      ih['metric_dimension'] = this.metric_dimension;
    }
    if (this.unit !== null) {
      ih['unit'] = this.unit;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74';
  }
}

export class Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74_metric_dimension_75 implements PcoreValue {
  readonly name: string;
  readonly value: string;

  constructor({
    name,
    value
  }: {
    name: string,
    value: string
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_policy_target_tracking_configuration_73_customized_metric_specification_74_metric_dimension_75';
  }
}

export class Aws_autoscaling_policy_target_tracking_configuration_73_predefined_metric_specification_76 implements PcoreValue {
  readonly predefined_metric_type: string;
  readonly resource_label: string|null;

  constructor({
    predefined_metric_type,
    resource_label = null
  }: {
    predefined_metric_type: string,
    resource_label?: string|null
  }) {
    this.predefined_metric_type = predefined_metric_type;
    this.resource_label = resource_label;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['predefined_metric_type'] = this.predefined_metric_type;
    if (this.resource_label !== null) {
      ih['resource_label'] = this.resource_label;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_policy_target_tracking_configuration_73_predefined_metric_specification_76';
  }
}

export class Aws_autoscaling_schedule implements PcoreValue {
  readonly autoscaling_group_name: string;
  readonly scheduled_action_name: string;
  readonly aws_autoscaling_schedule_id: string|null;
  readonly arn: string|null;
  readonly desired_capacity: number|null;
  readonly end_time: string|null;
  readonly max_size: number|null;
  readonly min_size: number|null;
  readonly recurrence: string|null;
  readonly start_time: string|null;

  constructor({
    autoscaling_group_name,
    scheduled_action_name,
    aws_autoscaling_schedule_id = null,
    arn = null,
    desired_capacity = null,
    end_time = null,
    max_size = null,
    min_size = null,
    recurrence = null,
    start_time = null
  }: {
    autoscaling_group_name: string,
    scheduled_action_name: string,
    aws_autoscaling_schedule_id?: string|null,
    arn?: string|null,
    desired_capacity?: number|null,
    end_time?: string|null,
    max_size?: number|null,
    min_size?: number|null,
    recurrence?: string|null,
    start_time?: string|null
  }) {
    this.autoscaling_group_name = autoscaling_group_name;
    this.scheduled_action_name = scheduled_action_name;
    this.aws_autoscaling_schedule_id = aws_autoscaling_schedule_id;
    this.arn = arn;
    this.desired_capacity = desired_capacity;
    this.end_time = end_time;
    this.max_size = max_size;
    this.min_size = min_size;
    this.recurrence = recurrence;
    this.start_time = start_time;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['autoscaling_group_name'] = this.autoscaling_group_name;
    ih['scheduled_action_name'] = this.scheduled_action_name;
    if (this.aws_autoscaling_schedule_id !== null) {
      ih['aws_autoscaling_schedule_id'] = this.aws_autoscaling_schedule_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.desired_capacity !== null) {
      ih['desired_capacity'] = this.desired_capacity;
    }
    if (this.end_time !== null) {
      ih['end_time'] = this.end_time;
    }
    if (this.max_size !== null) {
      ih['max_size'] = this.max_size;
    }
    if (this.min_size !== null) {
      ih['min_size'] = this.min_size;
    }
    if (this.recurrence !== null) {
      ih['recurrence'] = this.recurrence;
    }
    if (this.start_time !== null) {
      ih['start_time'] = this.start_time;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_schedule';
  }
}

export class Aws_autoscaling_scheduleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_autoscaling_scheduleHandler';
  }
}

export class Aws_batch_compute_environment implements PcoreValue {
  readonly compute_environment_name: string;
  readonly service_role: string;
  readonly type: string;
  readonly aws_batch_compute_environment_id: string|null;
  readonly arn: string|null;
  readonly compute_resources: Aws_batch_compute_environment_compute_resources_77[]|null;
  readonly ecc_cluster_arn: string|null;
  readonly ecs_cluster_arn: string|null;
  readonly state: string|null;
  readonly status: string|null;
  readonly status_reason: string|null;

  constructor({
    compute_environment_name,
    service_role,
    type,
    aws_batch_compute_environment_id = null,
    arn = null,
    compute_resources = null,
    ecc_cluster_arn = null,
    ecs_cluster_arn = null,
    state = null,
    status = null,
    status_reason = null
  }: {
    compute_environment_name: string,
    service_role: string,
    type: string,
    aws_batch_compute_environment_id?: string|null,
    arn?: string|null,
    compute_resources?: Aws_batch_compute_environment_compute_resources_77[]|null,
    ecc_cluster_arn?: string|null,
    ecs_cluster_arn?: string|null,
    state?: string|null,
    status?: string|null,
    status_reason?: string|null
  }) {
    this.compute_environment_name = compute_environment_name;
    this.service_role = service_role;
    this.type = type;
    this.aws_batch_compute_environment_id = aws_batch_compute_environment_id;
    this.arn = arn;
    this.compute_resources = compute_resources;
    this.ecc_cluster_arn = ecc_cluster_arn;
    this.ecs_cluster_arn = ecs_cluster_arn;
    this.state = state;
    this.status = status;
    this.status_reason = status_reason;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['compute_environment_name'] = this.compute_environment_name;
    ih['service_role'] = this.service_role;
    ih['type'] = this.type;
    if (this.aws_batch_compute_environment_id !== null) {
      ih['aws_batch_compute_environment_id'] = this.aws_batch_compute_environment_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.compute_resources !== null) {
      ih['compute_resources'] = this.compute_resources;
    }
    if (this.ecc_cluster_arn !== null) {
      ih['ecc_cluster_arn'] = this.ecc_cluster_arn;
    }
    if (this.ecs_cluster_arn !== null) {
      ih['ecs_cluster_arn'] = this.ecs_cluster_arn;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.status_reason !== null) {
      ih['status_reason'] = this.status_reason;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_compute_environment';
  }
}

export class Aws_batch_compute_environmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_compute_environmentHandler';
  }
}

export class Aws_batch_compute_environment_compute_resources_77 implements PcoreValue {
  readonly instance_role: string;
  readonly instance_type: string[];
  readonly max_vcpus: number;
  readonly min_vcpus: number;
  readonly security_group_ids: string[];
  readonly subnets: string[];
  readonly type: string;
  readonly bid_percentage: number|null;
  readonly desired_vcpus: number|null;
  readonly ec2_key_pair: string|null;
  readonly image_id: string|null;
  readonly spot_iam_fleet_role: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    instance_role,
    instance_type,
    max_vcpus,
    min_vcpus,
    security_group_ids,
    subnets,
    type,
    bid_percentage = null,
    desired_vcpus = null,
    ec2_key_pair = null,
    image_id = null,
    spot_iam_fleet_role = null,
    tags = null
  }: {
    instance_role: string,
    instance_type: string[],
    max_vcpus: number,
    min_vcpus: number,
    security_group_ids: string[],
    subnets: string[],
    type: string,
    bid_percentage?: number|null,
    desired_vcpus?: number|null,
    ec2_key_pair?: string|null,
    image_id?: string|null,
    spot_iam_fleet_role?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.instance_role = instance_role;
    this.instance_type = instance_type;
    this.max_vcpus = max_vcpus;
    this.min_vcpus = min_vcpus;
    this.security_group_ids = security_group_ids;
    this.subnets = subnets;
    this.type = type;
    this.bid_percentage = bid_percentage;
    this.desired_vcpus = desired_vcpus;
    this.ec2_key_pair = ec2_key_pair;
    this.image_id = image_id;
    this.spot_iam_fleet_role = spot_iam_fleet_role;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_role'] = this.instance_role;
    ih['instance_type'] = this.instance_type;
    ih['max_vcpus'] = this.max_vcpus;
    ih['min_vcpus'] = this.min_vcpus;
    ih['security_group_ids'] = this.security_group_ids;
    ih['subnets'] = this.subnets;
    ih['type'] = this.type;
    if (this.bid_percentage !== null) {
      ih['bid_percentage'] = this.bid_percentage;
    }
    if (this.desired_vcpus !== null) {
      ih['desired_vcpus'] = this.desired_vcpus;
    }
    if (this.ec2_key_pair !== null) {
      ih['ec2_key_pair'] = this.ec2_key_pair;
    }
    if (this.image_id !== null) {
      ih['image_id'] = this.image_id;
    }
    if (this.spot_iam_fleet_role !== null) {
      ih['spot_iam_fleet_role'] = this.spot_iam_fleet_role;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_compute_environment_compute_resources_77';
  }
}

export class Aws_batch_job_definition implements PcoreValue {
  readonly name: string;
  readonly type: string;
  readonly aws_batch_job_definition_id: string|null;
  readonly arn: string|null;
  readonly container_properties: string|null;
  readonly parameters: {[s: string]: string}|null;
  readonly retry_strategy: Aws_batch_job_definition_retry_strategy_78[]|null;
  readonly revision: number|null;
  readonly timeout: Aws_batch_job_definition_timeout_79[]|null;

  constructor({
    name,
    type,
    aws_batch_job_definition_id = null,
    arn = null,
    container_properties = null,
    parameters = null,
    retry_strategy = null,
    revision = null,
    timeout = null
  }: {
    name: string,
    type: string,
    aws_batch_job_definition_id?: string|null,
    arn?: string|null,
    container_properties?: string|null,
    parameters?: {[s: string]: string}|null,
    retry_strategy?: Aws_batch_job_definition_retry_strategy_78[]|null,
    revision?: number|null,
    timeout?: Aws_batch_job_definition_timeout_79[]|null
  }) {
    this.name = name;
    this.type = type;
    this.aws_batch_job_definition_id = aws_batch_job_definition_id;
    this.arn = arn;
    this.container_properties = container_properties;
    this.parameters = parameters;
    this.retry_strategy = retry_strategy;
    this.revision = revision;
    this.timeout = timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['type'] = this.type;
    if (this.aws_batch_job_definition_id !== null) {
      ih['aws_batch_job_definition_id'] = this.aws_batch_job_definition_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.container_properties !== null) {
      ih['container_properties'] = this.container_properties;
    }
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    if (this.retry_strategy !== null) {
      ih['retry_strategy'] = this.retry_strategy;
    }
    if (this.revision !== null) {
      ih['revision'] = this.revision;
    }
    if (this.timeout !== null) {
      ih['timeout'] = this.timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_job_definition';
  }
}

export class Aws_batch_job_definitionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_job_definitionHandler';
  }
}

export class Aws_batch_job_definition_retry_strategy_78 implements PcoreValue {
  readonly attempts: number|null;

  constructor({
    attempts = null
  }: {
    attempts?: number|null
  }) {
    this.attempts = attempts;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.attempts !== null) {
      ih['attempts'] = this.attempts;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_job_definition_retry_strategy_78';
  }
}

export class Aws_batch_job_definition_timeout_79 implements PcoreValue {
  readonly attempt_duration_seconds: number|null;

  constructor({
    attempt_duration_seconds = null
  }: {
    attempt_duration_seconds?: number|null
  }) {
    this.attempt_duration_seconds = attempt_duration_seconds;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.attempt_duration_seconds !== null) {
      ih['attempt_duration_seconds'] = this.attempt_duration_seconds;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_job_definition_timeout_79';
  }
}

export class Aws_batch_job_queue implements PcoreValue {
  readonly compute_environments: string[];
  readonly name: string;
  readonly priority: number;
  readonly state: string;
  readonly aws_batch_job_queue_id: string|null;
  readonly arn: string|null;

  constructor({
    compute_environments,
    name,
    priority,
    state,
    aws_batch_job_queue_id = null,
    arn = null
  }: {
    compute_environments: string[],
    name: string,
    priority: number,
    state: string,
    aws_batch_job_queue_id?: string|null,
    arn?: string|null
  }) {
    this.compute_environments = compute_environments;
    this.name = name;
    this.priority = priority;
    this.state = state;
    this.aws_batch_job_queue_id = aws_batch_job_queue_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['compute_environments'] = this.compute_environments;
    ih['name'] = this.name;
    ih['priority'] = this.priority;
    ih['state'] = this.state;
    if (this.aws_batch_job_queue_id !== null) {
      ih['aws_batch_job_queue_id'] = this.aws_batch_job_queue_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_job_queue';
  }
}

export class Aws_batch_job_queueHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_batch_job_queueHandler';
  }
}

export class Aws_budgets_budget implements PcoreValue {
  readonly budget_type: string;
  readonly limit_amount: string;
  readonly limit_unit: string;
  readonly time_period_start: string;
  readonly time_unit: string;
  readonly aws_budgets_budget_id: string|null;
  readonly account_id: string|null;
  readonly cost_filters: {[s: string]: string}|null;
  readonly cost_types: Aws_budgets_budget_cost_types_80[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly time_period_end: string|null;

  constructor({
    budget_type,
    limit_amount,
    limit_unit,
    time_period_start,
    time_unit,
    aws_budgets_budget_id = null,
    account_id = null,
    cost_filters = null,
    cost_types = null,
    name = null,
    name_prefix = null,
    time_period_end = null
  }: {
    budget_type: string,
    limit_amount: string,
    limit_unit: string,
    time_period_start: string,
    time_unit: string,
    aws_budgets_budget_id?: string|null,
    account_id?: string|null,
    cost_filters?: {[s: string]: string}|null,
    cost_types?: Aws_budgets_budget_cost_types_80[]|null,
    name?: string|null,
    name_prefix?: string|null,
    time_period_end?: string|null
  }) {
    this.budget_type = budget_type;
    this.limit_amount = limit_amount;
    this.limit_unit = limit_unit;
    this.time_period_start = time_period_start;
    this.time_unit = time_unit;
    this.aws_budgets_budget_id = aws_budgets_budget_id;
    this.account_id = account_id;
    this.cost_filters = cost_filters;
    this.cost_types = cost_types;
    this.name = name;
    this.name_prefix = name_prefix;
    this.time_period_end = time_period_end;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['budget_type'] = this.budget_type;
    ih['limit_amount'] = this.limit_amount;
    ih['limit_unit'] = this.limit_unit;
    ih['time_period_start'] = this.time_period_start;
    ih['time_unit'] = this.time_unit;
    if (this.aws_budgets_budget_id !== null) {
      ih['aws_budgets_budget_id'] = this.aws_budgets_budget_id;
    }
    if (this.account_id !== null) {
      ih['account_id'] = this.account_id;
    }
    if (this.cost_filters !== null) {
      ih['cost_filters'] = this.cost_filters;
    }
    if (this.cost_types !== null) {
      ih['cost_types'] = this.cost_types;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.time_period_end !== null) {
      ih['time_period_end'] = this.time_period_end;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_budgets_budget';
  }
}

export class Aws_budgets_budgetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_budgets_budgetHandler';
  }
}

export class Aws_budgets_budget_cost_types_80 implements PcoreValue {
  readonly include_credit: boolean|null;
  readonly include_discount: boolean|null;
  readonly include_other_subscription: boolean|null;
  readonly include_recurring: boolean|null;
  readonly include_refund: boolean|null;
  readonly include_subscription: boolean|null;
  readonly include_support: boolean|null;
  readonly include_tax: boolean|null;
  readonly include_upfront: boolean|null;
  readonly use_amortized: boolean|null;
  readonly use_blended: boolean|null;

  constructor({
    include_credit = null,
    include_discount = null,
    include_other_subscription = null,
    include_recurring = null,
    include_refund = null,
    include_subscription = null,
    include_support = null,
    include_tax = null,
    include_upfront = null,
    use_amortized = null,
    use_blended = null
  }: {
    include_credit?: boolean|null,
    include_discount?: boolean|null,
    include_other_subscription?: boolean|null,
    include_recurring?: boolean|null,
    include_refund?: boolean|null,
    include_subscription?: boolean|null,
    include_support?: boolean|null,
    include_tax?: boolean|null,
    include_upfront?: boolean|null,
    use_amortized?: boolean|null,
    use_blended?: boolean|null
  }) {
    this.include_credit = include_credit;
    this.include_discount = include_discount;
    this.include_other_subscription = include_other_subscription;
    this.include_recurring = include_recurring;
    this.include_refund = include_refund;
    this.include_subscription = include_subscription;
    this.include_support = include_support;
    this.include_tax = include_tax;
    this.include_upfront = include_upfront;
    this.use_amortized = use_amortized;
    this.use_blended = use_blended;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.include_credit !== null) {
      ih['include_credit'] = this.include_credit;
    }
    if (this.include_discount !== null) {
      ih['include_discount'] = this.include_discount;
    }
    if (this.include_other_subscription !== null) {
      ih['include_other_subscription'] = this.include_other_subscription;
    }
    if (this.include_recurring !== null) {
      ih['include_recurring'] = this.include_recurring;
    }
    if (this.include_refund !== null) {
      ih['include_refund'] = this.include_refund;
    }
    if (this.include_subscription !== null) {
      ih['include_subscription'] = this.include_subscription;
    }
    if (this.include_support !== null) {
      ih['include_support'] = this.include_support;
    }
    if (this.include_tax !== null) {
      ih['include_tax'] = this.include_tax;
    }
    if (this.include_upfront !== null) {
      ih['include_upfront'] = this.include_upfront;
    }
    if (this.use_amortized !== null) {
      ih['use_amortized'] = this.use_amortized;
    }
    if (this.use_blended !== null) {
      ih['use_blended'] = this.use_blended;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_budgets_budget_cost_types_80';
  }
}

export class Aws_cloud9_environment_ec2 implements PcoreValue {
  readonly instance_type: string;
  readonly name: string;
  readonly aws_cloud9_environment_ec2_id: string|null;
  readonly arn: string|null;
  readonly automatic_stop_time_minutes: number|null;
  readonly description: string|null;
  readonly owner_arn: string|null;
  readonly subnet_id: string|null;
  readonly type: string|null;

  constructor({
    instance_type,
    name,
    aws_cloud9_environment_ec2_id = null,
    arn = null,
    automatic_stop_time_minutes = null,
    description = null,
    owner_arn = null,
    subnet_id = null,
    type = null
  }: {
    instance_type: string,
    name: string,
    aws_cloud9_environment_ec2_id?: string|null,
    arn?: string|null,
    automatic_stop_time_minutes?: number|null,
    description?: string|null,
    owner_arn?: string|null,
    subnet_id?: string|null,
    type?: string|null
  }) {
    this.instance_type = instance_type;
    this.name = name;
    this.aws_cloud9_environment_ec2_id = aws_cloud9_environment_ec2_id;
    this.arn = arn;
    this.automatic_stop_time_minutes = automatic_stop_time_minutes;
    this.description = description;
    this.owner_arn = owner_arn;
    this.subnet_id = subnet_id;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_type'] = this.instance_type;
    ih['name'] = this.name;
    if (this.aws_cloud9_environment_ec2_id !== null) {
      ih['aws_cloud9_environment_ec2_id'] = this.aws_cloud9_environment_ec2_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.automatic_stop_time_minutes !== null) {
      ih['automatic_stop_time_minutes'] = this.automatic_stop_time_minutes;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.owner_arn !== null) {
      ih['owner_arn'] = this.owner_arn;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloud9_environment_ec2';
  }
}

export class Aws_cloud9_environment_ec2Handler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloud9_environment_ec2Handler';
  }
}

export class Aws_cloudformation_stack implements PcoreValue {
  readonly name: string;
  readonly aws_cloudformation_stack_id: string|null;
  readonly capabilities: string[]|null;
  readonly disable_rollback: boolean|null;
  readonly iam_role_arn: string|null;
  readonly notification_arns: string[]|null;
  readonly on_failure: string|null;
  readonly outputs: {[s: string]: string}|null;
  readonly parameters: {[s: string]: string}|null;
  readonly policy_body: string|null;
  readonly policy_url: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly template_body: string|null;
  readonly template_url: string|null;
  readonly timeout_in_minutes: number|null;

  constructor({
    name,
    aws_cloudformation_stack_id = null,
    capabilities = null,
    disable_rollback = null,
    iam_role_arn = null,
    notification_arns = null,
    on_failure = null,
    outputs = null,
    parameters = null,
    policy_body = null,
    policy_url = null,
    tags = null,
    template_body = null,
    template_url = null,
    timeout_in_minutes = null
  }: {
    name: string,
    aws_cloudformation_stack_id?: string|null,
    capabilities?: string[]|null,
    disable_rollback?: boolean|null,
    iam_role_arn?: string|null,
    notification_arns?: string[]|null,
    on_failure?: string|null,
    outputs?: {[s: string]: string}|null,
    parameters?: {[s: string]: string}|null,
    policy_body?: string|null,
    policy_url?: string|null,
    tags?: {[s: string]: string}|null,
    template_body?: string|null,
    template_url?: string|null,
    timeout_in_minutes?: number|null
  }) {
    this.name = name;
    this.aws_cloudformation_stack_id = aws_cloudformation_stack_id;
    this.capabilities = capabilities;
    this.disable_rollback = disable_rollback;
    this.iam_role_arn = iam_role_arn;
    this.notification_arns = notification_arns;
    this.on_failure = on_failure;
    this.outputs = outputs;
    this.parameters = parameters;
    this.policy_body = policy_body;
    this.policy_url = policy_url;
    this.tags = tags;
    this.template_body = template_body;
    this.template_url = template_url;
    this.timeout_in_minutes = timeout_in_minutes;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_cloudformation_stack_id !== null) {
      ih['aws_cloudformation_stack_id'] = this.aws_cloudformation_stack_id;
    }
    if (this.capabilities !== null) {
      ih['capabilities'] = this.capabilities;
    }
    if (this.disable_rollback !== null) {
      ih['disable_rollback'] = this.disable_rollback;
    }
    if (this.iam_role_arn !== null) {
      ih['iam_role_arn'] = this.iam_role_arn;
    }
    if (this.notification_arns !== null) {
      ih['notification_arns'] = this.notification_arns;
    }
    if (this.on_failure !== null) {
      ih['on_failure'] = this.on_failure;
    }
    if (this.outputs !== null) {
      ih['outputs'] = this.outputs;
    }
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    if (this.policy_body !== null) {
      ih['policy_body'] = this.policy_body;
    }
    if (this.policy_url !== null) {
      ih['policy_url'] = this.policy_url;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.template_body !== null) {
      ih['template_body'] = this.template_body;
    }
    if (this.template_url !== null) {
      ih['template_url'] = this.template_url;
    }
    if (this.timeout_in_minutes !== null) {
      ih['timeout_in_minutes'] = this.timeout_in_minutes;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudformation_stack';
  }
}

export class Aws_cloudformation_stackHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudformation_stackHandler';
  }
}

export class Aws_cloudfront_distribution implements PcoreValue {
  readonly default_cache_behavior: Aws_cloudfront_distribution_default_cache_behavior_86[];
  readonly enabled: boolean;
  readonly origin: Aws_cloudfront_distribution_origin_95[];
  readonly restrictions: Aws_cloudfront_distribution_restrictions_99[];
  readonly viewer_certificate: Aws_cloudfront_distribution_viewer_certificate_101[];
  readonly aws_cloudfront_distribution_id: string|null;
  readonly active_trusted_signers: {[s: string]: string}|null;
  readonly aliases: string[]|null;
  readonly arn: string|null;
  readonly cache_behavior: Aws_cloudfront_distribution_cache_behavior_81[]|null;
  readonly caller_reference: string|null;
  readonly comment: string|null;
  readonly custom_error_response: Aws_cloudfront_distribution_custom_error_response_85[]|null;
  readonly default_root_object: string|null;
  readonly domain_name: string|null;
  readonly etag: string|null;
  readonly hosted_zone_id: string|null;
  readonly http_version: string|null;
  readonly in_progress_validation_batches: number|null;
  readonly is_ipv6_enabled: boolean|null;
  readonly last_modified_time: string|null;
  readonly logging_config: Aws_cloudfront_distribution_logging_config_90[]|null;
  readonly ordered_cache_behavior: Aws_cloudfront_distribution_ordered_cache_behavior_91[]|null;
  readonly price_class: string|null;
  readonly retain_on_delete: boolean|null;
  readonly status: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly web_acl_id: string|null;

  constructor({
    default_cache_behavior,
    enabled,
    origin,
    restrictions,
    viewer_certificate,
    aws_cloudfront_distribution_id = null,
    active_trusted_signers = null,
    aliases = null,
    arn = null,
    cache_behavior = null,
    caller_reference = null,
    comment = null,
    custom_error_response = null,
    default_root_object = null,
    domain_name = null,
    etag = null,
    hosted_zone_id = null,
    http_version = null,
    in_progress_validation_batches = null,
    is_ipv6_enabled = null,
    last_modified_time = null,
    logging_config = null,
    ordered_cache_behavior = null,
    price_class = null,
    retain_on_delete = null,
    status = null,
    tags = null,
    web_acl_id = null
  }: {
    default_cache_behavior: Aws_cloudfront_distribution_default_cache_behavior_86[],
    enabled: boolean,
    origin: Aws_cloudfront_distribution_origin_95[],
    restrictions: Aws_cloudfront_distribution_restrictions_99[],
    viewer_certificate: Aws_cloudfront_distribution_viewer_certificate_101[],
    aws_cloudfront_distribution_id?: string|null,
    active_trusted_signers?: {[s: string]: string}|null,
    aliases?: string[]|null,
    arn?: string|null,
    cache_behavior?: Aws_cloudfront_distribution_cache_behavior_81[]|null,
    caller_reference?: string|null,
    comment?: string|null,
    custom_error_response?: Aws_cloudfront_distribution_custom_error_response_85[]|null,
    default_root_object?: string|null,
    domain_name?: string|null,
    etag?: string|null,
    hosted_zone_id?: string|null,
    http_version?: string|null,
    in_progress_validation_batches?: number|null,
    is_ipv6_enabled?: boolean|null,
    last_modified_time?: string|null,
    logging_config?: Aws_cloudfront_distribution_logging_config_90[]|null,
    ordered_cache_behavior?: Aws_cloudfront_distribution_ordered_cache_behavior_91[]|null,
    price_class?: string|null,
    retain_on_delete?: boolean|null,
    status?: string|null,
    tags?: {[s: string]: string}|null,
    web_acl_id?: string|null
  }) {
    this.default_cache_behavior = default_cache_behavior;
    this.enabled = enabled;
    this.origin = origin;
    this.restrictions = restrictions;
    this.viewer_certificate = viewer_certificate;
    this.aws_cloudfront_distribution_id = aws_cloudfront_distribution_id;
    this.active_trusted_signers = active_trusted_signers;
    this.aliases = aliases;
    this.arn = arn;
    this.cache_behavior = cache_behavior;
    this.caller_reference = caller_reference;
    this.comment = comment;
    this.custom_error_response = custom_error_response;
    this.default_root_object = default_root_object;
    this.domain_name = domain_name;
    this.etag = etag;
    this.hosted_zone_id = hosted_zone_id;
    this.http_version = http_version;
    this.in_progress_validation_batches = in_progress_validation_batches;
    this.is_ipv6_enabled = is_ipv6_enabled;
    this.last_modified_time = last_modified_time;
    this.logging_config = logging_config;
    this.ordered_cache_behavior = ordered_cache_behavior;
    this.price_class = price_class;
    this.retain_on_delete = retain_on_delete;
    this.status = status;
    this.tags = tags;
    this.web_acl_id = web_acl_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_cache_behavior'] = this.default_cache_behavior;
    ih['enabled'] = this.enabled;
    ih['origin'] = this.origin;
    ih['restrictions'] = this.restrictions;
    ih['viewer_certificate'] = this.viewer_certificate;
    if (this.aws_cloudfront_distribution_id !== null) {
      ih['aws_cloudfront_distribution_id'] = this.aws_cloudfront_distribution_id;
    }
    if (this.active_trusted_signers !== null) {
      ih['active_trusted_signers'] = this.active_trusted_signers;
    }
    if (this.aliases !== null) {
      ih['aliases'] = this.aliases;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cache_behavior !== null) {
      ih['cache_behavior'] = this.cache_behavior;
    }
    if (this.caller_reference !== null) {
      ih['caller_reference'] = this.caller_reference;
    }
    if (this.comment !== null) {
      ih['comment'] = this.comment;
    }
    if (this.custom_error_response !== null) {
      ih['custom_error_response'] = this.custom_error_response;
    }
    if (this.default_root_object !== null) {
      ih['default_root_object'] = this.default_root_object;
    }
    if (this.domain_name !== null) {
      ih['domain_name'] = this.domain_name;
    }
    if (this.etag !== null) {
      ih['etag'] = this.etag;
    }
    if (this.hosted_zone_id !== null) {
      ih['hosted_zone_id'] = this.hosted_zone_id;
    }
    if (this.http_version !== null) {
      ih['http_version'] = this.http_version;
    }
    if (this.in_progress_validation_batches !== null) {
      ih['in_progress_validation_batches'] = this.in_progress_validation_batches;
    }
    if (this.is_ipv6_enabled !== null) {
      ih['is_ipv6_enabled'] = this.is_ipv6_enabled;
    }
    if (this.last_modified_time !== null) {
      ih['last_modified_time'] = this.last_modified_time;
    }
    if (this.logging_config !== null) {
      ih['logging_config'] = this.logging_config;
    }
    if (this.ordered_cache_behavior !== null) {
      ih['ordered_cache_behavior'] = this.ordered_cache_behavior;
    }
    if (this.price_class !== null) {
      ih['price_class'] = this.price_class;
    }
    if (this.retain_on_delete !== null) {
      ih['retain_on_delete'] = this.retain_on_delete;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.web_acl_id !== null) {
      ih['web_acl_id'] = this.web_acl_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution';
  }
}

export class Aws_cloudfront_distributionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distributionHandler';
  }
}

export class Aws_cloudfront_distribution_cache_behavior_81 implements PcoreValue {
  readonly allowed_methods: string[];
  readonly cached_methods: string[];
  readonly forwarded_values: Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82[];
  readonly path_pattern: string;
  readonly target_origin_id: string;
  readonly viewer_protocol_policy: string;
  readonly compress: boolean|null;
  readonly default_ttl: number|null;
  readonly field_level_encryption_id: string|null;
  readonly lambda_function_association: Aws_cloudfront_distribution_cache_behavior_81_lambda_function_association_84[]|null;
  readonly max_ttl: number|null;
  readonly min_ttl: number|null;
  readonly smooth_streaming: boolean|null;
  readonly trusted_signers: string[]|null;

  constructor({
    allowed_methods,
    cached_methods,
    forwarded_values,
    path_pattern,
    target_origin_id,
    viewer_protocol_policy,
    compress = null,
    default_ttl = null,
    field_level_encryption_id = null,
    lambda_function_association = null,
    max_ttl = null,
    min_ttl = null,
    smooth_streaming = null,
    trusted_signers = null
  }: {
    allowed_methods: string[],
    cached_methods: string[],
    forwarded_values: Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82[],
    path_pattern: string,
    target_origin_id: string,
    viewer_protocol_policy: string,
    compress?: boolean|null,
    default_ttl?: number|null,
    field_level_encryption_id?: string|null,
    lambda_function_association?: Aws_cloudfront_distribution_cache_behavior_81_lambda_function_association_84[]|null,
    max_ttl?: number|null,
    min_ttl?: number|null,
    smooth_streaming?: boolean|null,
    trusted_signers?: string[]|null
  }) {
    this.allowed_methods = allowed_methods;
    this.cached_methods = cached_methods;
    this.forwarded_values = forwarded_values;
    this.path_pattern = path_pattern;
    this.target_origin_id = target_origin_id;
    this.viewer_protocol_policy = viewer_protocol_policy;
    this.compress = compress;
    this.default_ttl = default_ttl;
    this.field_level_encryption_id = field_level_encryption_id;
    this.lambda_function_association = lambda_function_association;
    this.max_ttl = max_ttl;
    this.min_ttl = min_ttl;
    this.smooth_streaming = smooth_streaming;
    this.trusted_signers = trusted_signers;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['allowed_methods'] = this.allowed_methods;
    ih['cached_methods'] = this.cached_methods;
    ih['forwarded_values'] = this.forwarded_values;
    ih['path_pattern'] = this.path_pattern;
    ih['target_origin_id'] = this.target_origin_id;
    ih['viewer_protocol_policy'] = this.viewer_protocol_policy;
    if (this.compress !== null) {
      ih['compress'] = this.compress;
    }
    if (this.default_ttl !== null) {
      ih['default_ttl'] = this.default_ttl;
    }
    if (this.field_level_encryption_id !== null) {
      ih['field_level_encryption_id'] = this.field_level_encryption_id;
    }
    if (this.lambda_function_association !== null) {
      ih['lambda_function_association'] = this.lambda_function_association;
    }
    if (this.max_ttl !== null) {
      ih['max_ttl'] = this.max_ttl;
    }
    if (this.min_ttl !== null) {
      ih['min_ttl'] = this.min_ttl;
    }
    if (this.smooth_streaming !== null) {
      ih['smooth_streaming'] = this.smooth_streaming;
    }
    if (this.trusted_signers !== null) {
      ih['trusted_signers'] = this.trusted_signers;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_cache_behavior_81';
  }
}

export class Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82 implements PcoreValue {
  readonly cookies: Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82_cookies_83[];
  readonly query_string: boolean;
  readonly headers: string[]|null;
  readonly query_string_cache_keys: string[]|null;

  constructor({
    cookies,
    query_string,
    headers = null,
    query_string_cache_keys = null
  }: {
    cookies: Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82_cookies_83[],
    query_string: boolean,
    headers?: string[]|null,
    query_string_cache_keys?: string[]|null
  }) {
    this.cookies = cookies;
    this.query_string = query_string;
    this.headers = headers;
    this.query_string_cache_keys = query_string_cache_keys;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cookies'] = this.cookies;
    ih['query_string'] = this.query_string;
    if (this.headers !== null) {
      ih['headers'] = this.headers;
    }
    if (this.query_string_cache_keys !== null) {
      ih['query_string_cache_keys'] = this.query_string_cache_keys;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82';
  }
}

export class Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82_cookies_83 implements PcoreValue {
  readonly forward: string;
  readonly whitelisted_names: string[]|null;

  constructor({
    forward,
    whitelisted_names = null
  }: {
    forward: string,
    whitelisted_names?: string[]|null
  }) {
    this.forward = forward;
    this.whitelisted_names = whitelisted_names;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['forward'] = this.forward;
    if (this.whitelisted_names !== null) {
      ih['whitelisted_names'] = this.whitelisted_names;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_cache_behavior_81_forwarded_values_82_cookies_83';
  }
}

export class Aws_cloudfront_distribution_cache_behavior_81_lambda_function_association_84 implements PcoreValue {
  readonly event_type: string;
  readonly lambda_arn: string;
  readonly include_body: boolean|null;

  constructor({
    event_type,
    lambda_arn,
    include_body = null
  }: {
    event_type: string,
    lambda_arn: string,
    include_body?: boolean|null
  }) {
    this.event_type = event_type;
    this.lambda_arn = lambda_arn;
    this.include_body = include_body;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['event_type'] = this.event_type;
    ih['lambda_arn'] = this.lambda_arn;
    if (this.include_body !== null) {
      ih['include_body'] = this.include_body;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_cache_behavior_81_lambda_function_association_84';
  }
}

export class Aws_cloudfront_distribution_custom_error_response_85 implements PcoreValue {
  readonly error_code: number;
  readonly error_caching_min_ttl: number|null;
  readonly response_code: number|null;
  readonly response_page_path: string|null;

  constructor({
    error_code,
    error_caching_min_ttl = null,
    response_code = null,
    response_page_path = null
  }: {
    error_code: number,
    error_caching_min_ttl?: number|null,
    response_code?: number|null,
    response_page_path?: string|null
  }) {
    this.error_code = error_code;
    this.error_caching_min_ttl = error_caching_min_ttl;
    this.response_code = response_code;
    this.response_page_path = response_page_path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['error_code'] = this.error_code;
    if (this.error_caching_min_ttl !== null) {
      ih['error_caching_min_ttl'] = this.error_caching_min_ttl;
    }
    if (this.response_code !== null) {
      ih['response_code'] = this.response_code;
    }
    if (this.response_page_path !== null) {
      ih['response_page_path'] = this.response_page_path;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_custom_error_response_85';
  }
}

export class Aws_cloudfront_distribution_default_cache_behavior_86 implements PcoreValue {
  readonly allowed_methods: string[];
  readonly cached_methods: string[];
  readonly forwarded_values: Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87[];
  readonly target_origin_id: string;
  readonly viewer_protocol_policy: string;
  readonly compress: boolean|null;
  readonly default_ttl: number|null;
  readonly field_level_encryption_id: string|null;
  readonly lambda_function_association: Aws_cloudfront_distribution_default_cache_behavior_86_lambda_function_association_89[]|null;
  readonly max_ttl: number|null;
  readonly min_ttl: number|null;
  readonly smooth_streaming: boolean|null;
  readonly trusted_signers: string[]|null;

  constructor({
    allowed_methods,
    cached_methods,
    forwarded_values,
    target_origin_id,
    viewer_protocol_policy,
    compress = null,
    default_ttl = null,
    field_level_encryption_id = null,
    lambda_function_association = null,
    max_ttl = null,
    min_ttl = null,
    smooth_streaming = null,
    trusted_signers = null
  }: {
    allowed_methods: string[],
    cached_methods: string[],
    forwarded_values: Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87[],
    target_origin_id: string,
    viewer_protocol_policy: string,
    compress?: boolean|null,
    default_ttl?: number|null,
    field_level_encryption_id?: string|null,
    lambda_function_association?: Aws_cloudfront_distribution_default_cache_behavior_86_lambda_function_association_89[]|null,
    max_ttl?: number|null,
    min_ttl?: number|null,
    smooth_streaming?: boolean|null,
    trusted_signers?: string[]|null
  }) {
    this.allowed_methods = allowed_methods;
    this.cached_methods = cached_methods;
    this.forwarded_values = forwarded_values;
    this.target_origin_id = target_origin_id;
    this.viewer_protocol_policy = viewer_protocol_policy;
    this.compress = compress;
    this.default_ttl = default_ttl;
    this.field_level_encryption_id = field_level_encryption_id;
    this.lambda_function_association = lambda_function_association;
    this.max_ttl = max_ttl;
    this.min_ttl = min_ttl;
    this.smooth_streaming = smooth_streaming;
    this.trusted_signers = trusted_signers;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['allowed_methods'] = this.allowed_methods;
    ih['cached_methods'] = this.cached_methods;
    ih['forwarded_values'] = this.forwarded_values;
    ih['target_origin_id'] = this.target_origin_id;
    ih['viewer_protocol_policy'] = this.viewer_protocol_policy;
    if (this.compress !== null) {
      ih['compress'] = this.compress;
    }
    if (this.default_ttl !== null) {
      ih['default_ttl'] = this.default_ttl;
    }
    if (this.field_level_encryption_id !== null) {
      ih['field_level_encryption_id'] = this.field_level_encryption_id;
    }
    if (this.lambda_function_association !== null) {
      ih['lambda_function_association'] = this.lambda_function_association;
    }
    if (this.max_ttl !== null) {
      ih['max_ttl'] = this.max_ttl;
    }
    if (this.min_ttl !== null) {
      ih['min_ttl'] = this.min_ttl;
    }
    if (this.smooth_streaming !== null) {
      ih['smooth_streaming'] = this.smooth_streaming;
    }
    if (this.trusted_signers !== null) {
      ih['trusted_signers'] = this.trusted_signers;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_default_cache_behavior_86';
  }
}

export class Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87 implements PcoreValue {
  readonly cookies: Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87_cookies_88[];
  readonly query_string: boolean;
  readonly headers: string[]|null;
  readonly query_string_cache_keys: string[]|null;

  constructor({
    cookies,
    query_string,
    headers = null,
    query_string_cache_keys = null
  }: {
    cookies: Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87_cookies_88[],
    query_string: boolean,
    headers?: string[]|null,
    query_string_cache_keys?: string[]|null
  }) {
    this.cookies = cookies;
    this.query_string = query_string;
    this.headers = headers;
    this.query_string_cache_keys = query_string_cache_keys;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cookies'] = this.cookies;
    ih['query_string'] = this.query_string;
    if (this.headers !== null) {
      ih['headers'] = this.headers;
    }
    if (this.query_string_cache_keys !== null) {
      ih['query_string_cache_keys'] = this.query_string_cache_keys;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87';
  }
}

export class Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87_cookies_88 implements PcoreValue {
  readonly forward: string;
  readonly whitelisted_names: string[]|null;

  constructor({
    forward,
    whitelisted_names = null
  }: {
    forward: string,
    whitelisted_names?: string[]|null
  }) {
    this.forward = forward;
    this.whitelisted_names = whitelisted_names;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['forward'] = this.forward;
    if (this.whitelisted_names !== null) {
      ih['whitelisted_names'] = this.whitelisted_names;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_default_cache_behavior_86_forwarded_values_87_cookies_88';
  }
}

export class Aws_cloudfront_distribution_default_cache_behavior_86_lambda_function_association_89 implements PcoreValue {
  readonly event_type: string;
  readonly lambda_arn: string;
  readonly include_body: boolean|null;

  constructor({
    event_type,
    lambda_arn,
    include_body = null
  }: {
    event_type: string,
    lambda_arn: string,
    include_body?: boolean|null
  }) {
    this.event_type = event_type;
    this.lambda_arn = lambda_arn;
    this.include_body = include_body;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['event_type'] = this.event_type;
    ih['lambda_arn'] = this.lambda_arn;
    if (this.include_body !== null) {
      ih['include_body'] = this.include_body;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_default_cache_behavior_86_lambda_function_association_89';
  }
}

export class Aws_cloudfront_distribution_logging_config_90 implements PcoreValue {
  readonly bucket: string;
  readonly include_cookies: boolean|null;
  readonly prefix: string|null;

  constructor({
    bucket,
    include_cookies = null,
    prefix = null
  }: {
    bucket: string,
    include_cookies?: boolean|null,
    prefix?: string|null
  }) {
    this.bucket = bucket;
    this.include_cookies = include_cookies;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    if (this.include_cookies !== null) {
      ih['include_cookies'] = this.include_cookies;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_logging_config_90';
  }
}

export class Aws_cloudfront_distribution_ordered_cache_behavior_91 implements PcoreValue {
  readonly allowed_methods: string[];
  readonly cached_methods: string[];
  readonly forwarded_values: Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92[];
  readonly path_pattern: string;
  readonly target_origin_id: string;
  readonly viewer_protocol_policy: string;
  readonly compress: boolean|null;
  readonly default_ttl: number|null;
  readonly field_level_encryption_id: string|null;
  readonly lambda_function_association: Aws_cloudfront_distribution_ordered_cache_behavior_91_lambda_function_association_94[]|null;
  readonly max_ttl: number|null;
  readonly min_ttl: number|null;
  readonly smooth_streaming: boolean|null;
  readonly trusted_signers: string[]|null;

  constructor({
    allowed_methods,
    cached_methods,
    forwarded_values,
    path_pattern,
    target_origin_id,
    viewer_protocol_policy,
    compress = null,
    default_ttl = null,
    field_level_encryption_id = null,
    lambda_function_association = null,
    max_ttl = null,
    min_ttl = null,
    smooth_streaming = null,
    trusted_signers = null
  }: {
    allowed_methods: string[],
    cached_methods: string[],
    forwarded_values: Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92[],
    path_pattern: string,
    target_origin_id: string,
    viewer_protocol_policy: string,
    compress?: boolean|null,
    default_ttl?: number|null,
    field_level_encryption_id?: string|null,
    lambda_function_association?: Aws_cloudfront_distribution_ordered_cache_behavior_91_lambda_function_association_94[]|null,
    max_ttl?: number|null,
    min_ttl?: number|null,
    smooth_streaming?: boolean|null,
    trusted_signers?: string[]|null
  }) {
    this.allowed_methods = allowed_methods;
    this.cached_methods = cached_methods;
    this.forwarded_values = forwarded_values;
    this.path_pattern = path_pattern;
    this.target_origin_id = target_origin_id;
    this.viewer_protocol_policy = viewer_protocol_policy;
    this.compress = compress;
    this.default_ttl = default_ttl;
    this.field_level_encryption_id = field_level_encryption_id;
    this.lambda_function_association = lambda_function_association;
    this.max_ttl = max_ttl;
    this.min_ttl = min_ttl;
    this.smooth_streaming = smooth_streaming;
    this.trusted_signers = trusted_signers;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['allowed_methods'] = this.allowed_methods;
    ih['cached_methods'] = this.cached_methods;
    ih['forwarded_values'] = this.forwarded_values;
    ih['path_pattern'] = this.path_pattern;
    ih['target_origin_id'] = this.target_origin_id;
    ih['viewer_protocol_policy'] = this.viewer_protocol_policy;
    if (this.compress !== null) {
      ih['compress'] = this.compress;
    }
    if (this.default_ttl !== null) {
      ih['default_ttl'] = this.default_ttl;
    }
    if (this.field_level_encryption_id !== null) {
      ih['field_level_encryption_id'] = this.field_level_encryption_id;
    }
    if (this.lambda_function_association !== null) {
      ih['lambda_function_association'] = this.lambda_function_association;
    }
    if (this.max_ttl !== null) {
      ih['max_ttl'] = this.max_ttl;
    }
    if (this.min_ttl !== null) {
      ih['min_ttl'] = this.min_ttl;
    }
    if (this.smooth_streaming !== null) {
      ih['smooth_streaming'] = this.smooth_streaming;
    }
    if (this.trusted_signers !== null) {
      ih['trusted_signers'] = this.trusted_signers;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_ordered_cache_behavior_91';
  }
}

export class Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92 implements PcoreValue {
  readonly cookies: Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92_cookies_93[];
  readonly query_string: boolean;
  readonly headers: string[]|null;
  readonly query_string_cache_keys: string[]|null;

  constructor({
    cookies,
    query_string,
    headers = null,
    query_string_cache_keys = null
  }: {
    cookies: Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92_cookies_93[],
    query_string: boolean,
    headers?: string[]|null,
    query_string_cache_keys?: string[]|null
  }) {
    this.cookies = cookies;
    this.query_string = query_string;
    this.headers = headers;
    this.query_string_cache_keys = query_string_cache_keys;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cookies'] = this.cookies;
    ih['query_string'] = this.query_string;
    if (this.headers !== null) {
      ih['headers'] = this.headers;
    }
    if (this.query_string_cache_keys !== null) {
      ih['query_string_cache_keys'] = this.query_string_cache_keys;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92';
  }
}

export class Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92_cookies_93 implements PcoreValue {
  readonly forward: string;
  readonly whitelisted_names: string[]|null;

  constructor({
    forward,
    whitelisted_names = null
  }: {
    forward: string,
    whitelisted_names?: string[]|null
  }) {
    this.forward = forward;
    this.whitelisted_names = whitelisted_names;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['forward'] = this.forward;
    if (this.whitelisted_names !== null) {
      ih['whitelisted_names'] = this.whitelisted_names;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_ordered_cache_behavior_91_forwarded_values_92_cookies_93';
  }
}

export class Aws_cloudfront_distribution_ordered_cache_behavior_91_lambda_function_association_94 implements PcoreValue {
  readonly event_type: string;
  readonly lambda_arn: string;
  readonly include_body: boolean|null;

  constructor({
    event_type,
    lambda_arn,
    include_body = null
  }: {
    event_type: string,
    lambda_arn: string,
    include_body?: boolean|null
  }) {
    this.event_type = event_type;
    this.lambda_arn = lambda_arn;
    this.include_body = include_body;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['event_type'] = this.event_type;
    ih['lambda_arn'] = this.lambda_arn;
    if (this.include_body !== null) {
      ih['include_body'] = this.include_body;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_ordered_cache_behavior_91_lambda_function_association_94';
  }
}

export class Aws_cloudfront_distribution_origin_95 implements PcoreValue {
  readonly domain_name: string;
  readonly origin_id: string;
  readonly custom_header: Aws_cloudfront_distribution_origin_95_custom_header_96[]|null;
  readonly custom_origin_config: Aws_cloudfront_distribution_origin_95_custom_origin_config_97[]|null;
  readonly origin_path: string|null;
  readonly s3_origin_config: Aws_cloudfront_distribution_origin_95_s3_origin_config_98[]|null;

  constructor({
    domain_name,
    origin_id,
    custom_header = null,
    custom_origin_config = null,
    origin_path = null,
    s3_origin_config = null
  }: {
    domain_name: string,
    origin_id: string,
    custom_header?: Aws_cloudfront_distribution_origin_95_custom_header_96[]|null,
    custom_origin_config?: Aws_cloudfront_distribution_origin_95_custom_origin_config_97[]|null,
    origin_path?: string|null,
    s3_origin_config?: Aws_cloudfront_distribution_origin_95_s3_origin_config_98[]|null
  }) {
    this.domain_name = domain_name;
    this.origin_id = origin_id;
    this.custom_header = custom_header;
    this.custom_origin_config = custom_origin_config;
    this.origin_path = origin_path;
    this.s3_origin_config = s3_origin_config;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain_name'] = this.domain_name;
    ih['origin_id'] = this.origin_id;
    if (this.custom_header !== null) {
      ih['custom_header'] = this.custom_header;
    }
    if (this.custom_origin_config !== null) {
      ih['custom_origin_config'] = this.custom_origin_config;
    }
    if (this.origin_path !== null) {
      ih['origin_path'] = this.origin_path;
    }
    if (this.s3_origin_config !== null) {
      ih['s3_origin_config'] = this.s3_origin_config;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_origin_95';
  }
}

export class Aws_cloudfront_distribution_origin_95_custom_header_96 implements PcoreValue {
  readonly name: string;
  readonly value: string;

  constructor({
    name,
    value
  }: {
    name: string,
    value: string
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_origin_95_custom_header_96';
  }
}

export class Aws_cloudfront_distribution_origin_95_custom_origin_config_97 implements PcoreValue {
  readonly http_port: number;
  readonly https_port: number;
  readonly origin_protocol_policy: string;
  readonly origin_ssl_protocols: string[];
  readonly origin_keepalive_timeout: number|null;
  readonly origin_read_timeout: number|null;

  constructor({
    http_port,
    https_port,
    origin_protocol_policy,
    origin_ssl_protocols,
    origin_keepalive_timeout = null,
    origin_read_timeout = null
  }: {
    http_port: number,
    https_port: number,
    origin_protocol_policy: string,
    origin_ssl_protocols: string[],
    origin_keepalive_timeout?: number|null,
    origin_read_timeout?: number|null
  }) {
    this.http_port = http_port;
    this.https_port = https_port;
    this.origin_protocol_policy = origin_protocol_policy;
    this.origin_ssl_protocols = origin_ssl_protocols;
    this.origin_keepalive_timeout = origin_keepalive_timeout;
    this.origin_read_timeout = origin_read_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['http_port'] = this.http_port;
    ih['https_port'] = this.https_port;
    ih['origin_protocol_policy'] = this.origin_protocol_policy;
    ih['origin_ssl_protocols'] = this.origin_ssl_protocols;
    if (this.origin_keepalive_timeout !== null) {
      ih['origin_keepalive_timeout'] = this.origin_keepalive_timeout;
    }
    if (this.origin_read_timeout !== null) {
      ih['origin_read_timeout'] = this.origin_read_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_origin_95_custom_origin_config_97';
  }
}

export class Aws_cloudfront_distribution_origin_95_s3_origin_config_98 implements PcoreValue {
  readonly origin_access_identity: string;

  constructor({
    origin_access_identity
  }: {
    origin_access_identity: string
  }) {
    this.origin_access_identity = origin_access_identity;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['origin_access_identity'] = this.origin_access_identity;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_origin_95_s3_origin_config_98';
  }
}

export class Aws_cloudfront_distribution_restrictions_99 implements PcoreValue {
  readonly geo_restriction: Aws_cloudfront_distribution_restrictions_99_geo_restriction_100[];

  constructor({
    geo_restriction
  }: {
    geo_restriction: Aws_cloudfront_distribution_restrictions_99_geo_restriction_100[]
  }) {
    this.geo_restriction = geo_restriction;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['geo_restriction'] = this.geo_restriction;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_restrictions_99';
  }
}

export class Aws_cloudfront_distribution_restrictions_99_geo_restriction_100 implements PcoreValue {
  readonly restriction_type: string;
  readonly locations: string[]|null;

  constructor({
    restriction_type,
    locations = null
  }: {
    restriction_type: string,
    locations?: string[]|null
  }) {
    this.restriction_type = restriction_type;
    this.locations = locations;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['restriction_type'] = this.restriction_type;
    if (this.locations !== null) {
      ih['locations'] = this.locations;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_restrictions_99_geo_restriction_100';
  }
}

export class Aws_cloudfront_distribution_viewer_certificate_101 implements PcoreValue {
  readonly acm_certificate_arn: string|null;
  readonly cloudfront_default_certificate: boolean|null;
  readonly iam_certificate_id: string|null;
  readonly minimum_protocol_version: string|null;
  readonly ssl_support_method: string|null;

  constructor({
    acm_certificate_arn = null,
    cloudfront_default_certificate = null,
    iam_certificate_id = null,
    minimum_protocol_version = null,
    ssl_support_method = null
  }: {
    acm_certificate_arn?: string|null,
    cloudfront_default_certificate?: boolean|null,
    iam_certificate_id?: string|null,
    minimum_protocol_version?: string|null,
    ssl_support_method?: string|null
  }) {
    this.acm_certificate_arn = acm_certificate_arn;
    this.cloudfront_default_certificate = cloudfront_default_certificate;
    this.iam_certificate_id = iam_certificate_id;
    this.minimum_protocol_version = minimum_protocol_version;
    this.ssl_support_method = ssl_support_method;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.acm_certificate_arn !== null) {
      ih['acm_certificate_arn'] = this.acm_certificate_arn;
    }
    if (this.cloudfront_default_certificate !== null) {
      ih['cloudfront_default_certificate'] = this.cloudfront_default_certificate;
    }
    if (this.iam_certificate_id !== null) {
      ih['iam_certificate_id'] = this.iam_certificate_id;
    }
    if (this.minimum_protocol_version !== null) {
      ih['minimum_protocol_version'] = this.minimum_protocol_version;
    }
    if (this.ssl_support_method !== null) {
      ih['ssl_support_method'] = this.ssl_support_method;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_distribution_viewer_certificate_101';
  }
}

export class Aws_cloudfront_origin_access_identity implements PcoreValue {
  readonly aws_cloudfront_origin_access_identity_id: string|null;
  readonly caller_reference: string|null;
  readonly cloudfront_access_identity_path: string|null;
  readonly comment: string|null;
  readonly etag: string|null;
  readonly iam_arn: string|null;
  readonly s3_canonical_user_id: string|null;

  constructor({
    aws_cloudfront_origin_access_identity_id = null,
    caller_reference = null,
    cloudfront_access_identity_path = null,
    comment = null,
    etag = null,
    iam_arn = null,
    s3_canonical_user_id = null
  }: {
    aws_cloudfront_origin_access_identity_id?: string|null,
    caller_reference?: string|null,
    cloudfront_access_identity_path?: string|null,
    comment?: string|null,
    etag?: string|null,
    iam_arn?: string|null,
    s3_canonical_user_id?: string|null
  }) {
    this.aws_cloudfront_origin_access_identity_id = aws_cloudfront_origin_access_identity_id;
    this.caller_reference = caller_reference;
    this.cloudfront_access_identity_path = cloudfront_access_identity_path;
    this.comment = comment;
    this.etag = etag;
    this.iam_arn = iam_arn;
    this.s3_canonical_user_id = s3_canonical_user_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_cloudfront_origin_access_identity_id !== null) {
      ih['aws_cloudfront_origin_access_identity_id'] = this.aws_cloudfront_origin_access_identity_id;
    }
    if (this.caller_reference !== null) {
      ih['caller_reference'] = this.caller_reference;
    }
    if (this.cloudfront_access_identity_path !== null) {
      ih['cloudfront_access_identity_path'] = this.cloudfront_access_identity_path;
    }
    if (this.comment !== null) {
      ih['comment'] = this.comment;
    }
    if (this.etag !== null) {
      ih['etag'] = this.etag;
    }
    if (this.iam_arn !== null) {
      ih['iam_arn'] = this.iam_arn;
    }
    if (this.s3_canonical_user_id !== null) {
      ih['s3_canonical_user_id'] = this.s3_canonical_user_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_origin_access_identity';
  }
}

export class Aws_cloudfront_origin_access_identityHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_origin_access_identityHandler';
  }
}

export class Aws_cloudfront_public_key implements PcoreValue {
  readonly encoded_key: string;
  readonly aws_cloudfront_public_key_id: string|null;
  readonly caller_reference: string|null;
  readonly comment: string|null;
  readonly etag: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;

  constructor({
    encoded_key,
    aws_cloudfront_public_key_id = null,
    caller_reference = null,
    comment = null,
    etag = null,
    name = null,
    name_prefix = null
  }: {
    encoded_key: string,
    aws_cloudfront_public_key_id?: string|null,
    caller_reference?: string|null,
    comment?: string|null,
    etag?: string|null,
    name?: string|null,
    name_prefix?: string|null
  }) {
    this.encoded_key = encoded_key;
    this.aws_cloudfront_public_key_id = aws_cloudfront_public_key_id;
    this.caller_reference = caller_reference;
    this.comment = comment;
    this.etag = etag;
    this.name = name;
    this.name_prefix = name_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['encoded_key'] = this.encoded_key;
    if (this.aws_cloudfront_public_key_id !== null) {
      ih['aws_cloudfront_public_key_id'] = this.aws_cloudfront_public_key_id;
    }
    if (this.caller_reference !== null) {
      ih['caller_reference'] = this.caller_reference;
    }
    if (this.comment !== null) {
      ih['comment'] = this.comment;
    }
    if (this.etag !== null) {
      ih['etag'] = this.etag;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_public_key';
  }
}

export class Aws_cloudfront_public_keyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudfront_public_keyHandler';
  }
}

export class Aws_cloudhsm_v2_cluster implements PcoreValue {
  readonly hsm_type: string;
  readonly subnet_ids: string[];
  readonly aws_cloudhsm_v2_cluster_id: string|null;
  readonly cluster_certificates: Aws_cloudhsm_v2_cluster_cluster_certificates_102[]|null;
  readonly cluster_id: string|null;
  readonly cluster_state: string|null;
  readonly security_group_id: string|null;
  readonly source_backup_identifier: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    hsm_type,
    subnet_ids,
    aws_cloudhsm_v2_cluster_id = null,
    cluster_certificates = null,
    cluster_id = null,
    cluster_state = null,
    security_group_id = null,
    source_backup_identifier = null,
    tags = null,
    vpc_id = null
  }: {
    hsm_type: string,
    subnet_ids: string[],
    aws_cloudhsm_v2_cluster_id?: string|null,
    cluster_certificates?: Aws_cloudhsm_v2_cluster_cluster_certificates_102[]|null,
    cluster_id?: string|null,
    cluster_state?: string|null,
    security_group_id?: string|null,
    source_backup_identifier?: string|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.hsm_type = hsm_type;
    this.subnet_ids = subnet_ids;
    this.aws_cloudhsm_v2_cluster_id = aws_cloudhsm_v2_cluster_id;
    this.cluster_certificates = cluster_certificates;
    this.cluster_id = cluster_id;
    this.cluster_state = cluster_state;
    this.security_group_id = security_group_id;
    this.source_backup_identifier = source_backup_identifier;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['hsm_type'] = this.hsm_type;
    ih['subnet_ids'] = this.subnet_ids;
    if (this.aws_cloudhsm_v2_cluster_id !== null) {
      ih['aws_cloudhsm_v2_cluster_id'] = this.aws_cloudhsm_v2_cluster_id;
    }
    if (this.cluster_certificates !== null) {
      ih['cluster_certificates'] = this.cluster_certificates;
    }
    if (this.cluster_id !== null) {
      ih['cluster_id'] = this.cluster_id;
    }
    if (this.cluster_state !== null) {
      ih['cluster_state'] = this.cluster_state;
    }
    if (this.security_group_id !== null) {
      ih['security_group_id'] = this.security_group_id;
    }
    if (this.source_backup_identifier !== null) {
      ih['source_backup_identifier'] = this.source_backup_identifier;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudhsm_v2_cluster';
  }
}

export class Aws_cloudhsm_v2_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudhsm_v2_clusterHandler';
  }
}

export class Aws_cloudhsm_v2_cluster_cluster_certificates_102 implements PcoreValue {
  readonly aws_hardware_certificate: string|null;
  readonly cluster_certificate: string|null;
  readonly cluster_csr: string|null;
  readonly hsm_certificate: string|null;
  readonly manufacturer_hardware_certificate: string|null;

  constructor({
    aws_hardware_certificate = null,
    cluster_certificate = null,
    cluster_csr = null,
    hsm_certificate = null,
    manufacturer_hardware_certificate = null
  }: {
    aws_hardware_certificate?: string|null,
    cluster_certificate?: string|null,
    cluster_csr?: string|null,
    hsm_certificate?: string|null,
    manufacturer_hardware_certificate?: string|null
  }) {
    this.aws_hardware_certificate = aws_hardware_certificate;
    this.cluster_certificate = cluster_certificate;
    this.cluster_csr = cluster_csr;
    this.hsm_certificate = hsm_certificate;
    this.manufacturer_hardware_certificate = manufacturer_hardware_certificate;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_hardware_certificate !== null) {
      ih['aws_hardware_certificate'] = this.aws_hardware_certificate;
    }
    if (this.cluster_certificate !== null) {
      ih['cluster_certificate'] = this.cluster_certificate;
    }
    if (this.cluster_csr !== null) {
      ih['cluster_csr'] = this.cluster_csr;
    }
    if (this.hsm_certificate !== null) {
      ih['hsm_certificate'] = this.hsm_certificate;
    }
    if (this.manufacturer_hardware_certificate !== null) {
      ih['manufacturer_hardware_certificate'] = this.manufacturer_hardware_certificate;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudhsm_v2_cluster_cluster_certificates_102';
  }
}

export class Aws_cloudhsm_v2_hsm implements PcoreValue {
  readonly cluster_id: string;
  readonly aws_cloudhsm_v2_hsm_id: string|null;
  readonly availability_zone: string|null;
  readonly hsm_eni_id: string|null;
  readonly hsm_id: string|null;
  readonly hsm_state: string|null;
  readonly ip_address: string|null;
  readonly subnet_id: string|null;

  constructor({
    cluster_id,
    aws_cloudhsm_v2_hsm_id = null,
    availability_zone = null,
    hsm_eni_id = null,
    hsm_id = null,
    hsm_state = null,
    ip_address = null,
    subnet_id = null
  }: {
    cluster_id: string,
    aws_cloudhsm_v2_hsm_id?: string|null,
    availability_zone?: string|null,
    hsm_eni_id?: string|null,
    hsm_id?: string|null,
    hsm_state?: string|null,
    ip_address?: string|null,
    subnet_id?: string|null
  }) {
    this.cluster_id = cluster_id;
    this.aws_cloudhsm_v2_hsm_id = aws_cloudhsm_v2_hsm_id;
    this.availability_zone = availability_zone;
    this.hsm_eni_id = hsm_eni_id;
    this.hsm_id = hsm_id;
    this.hsm_state = hsm_state;
    this.ip_address = ip_address;
    this.subnet_id = subnet_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_id'] = this.cluster_id;
    if (this.aws_cloudhsm_v2_hsm_id !== null) {
      ih['aws_cloudhsm_v2_hsm_id'] = this.aws_cloudhsm_v2_hsm_id;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.hsm_eni_id !== null) {
      ih['hsm_eni_id'] = this.hsm_eni_id;
    }
    if (this.hsm_id !== null) {
      ih['hsm_id'] = this.hsm_id;
    }
    if (this.hsm_state !== null) {
      ih['hsm_state'] = this.hsm_state;
    }
    if (this.ip_address !== null) {
      ih['ip_address'] = this.ip_address;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudhsm_v2_hsm';
  }
}

export class Aws_cloudhsm_v2_hsmHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudhsm_v2_hsmHandler';
  }
}

export class Aws_cloudtrail implements PcoreValue {
  readonly name: string;
  readonly s3_bucket_name: string;
  readonly aws_cloudtrail_id: string|null;
  readonly arn: string|null;
  readonly cloud_watch_logs_group_arn: string|null;
  readonly cloud_watch_logs_role_arn: string|null;
  readonly enable_log_file_validation: boolean|null;
  readonly enable_logging: boolean|null;
  readonly event_selector: Aws_cloudtrail_event_selector_103[]|null;
  readonly home_region: string|null;
  readonly include_global_service_events: boolean|null;
  readonly is_multi_region_trail: boolean|null;
  readonly is_organization_trail: boolean|null;
  readonly kms_key_id: string|null;
  readonly s3_key_prefix: string|null;
  readonly sns_topic_name: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    s3_bucket_name,
    aws_cloudtrail_id = null,
    arn = null,
    cloud_watch_logs_group_arn = null,
    cloud_watch_logs_role_arn = null,
    enable_log_file_validation = null,
    enable_logging = null,
    event_selector = null,
    home_region = null,
    include_global_service_events = null,
    is_multi_region_trail = null,
    is_organization_trail = null,
    kms_key_id = null,
    s3_key_prefix = null,
    sns_topic_name = null,
    tags = null
  }: {
    name: string,
    s3_bucket_name: string,
    aws_cloudtrail_id?: string|null,
    arn?: string|null,
    cloud_watch_logs_group_arn?: string|null,
    cloud_watch_logs_role_arn?: string|null,
    enable_log_file_validation?: boolean|null,
    enable_logging?: boolean|null,
    event_selector?: Aws_cloudtrail_event_selector_103[]|null,
    home_region?: string|null,
    include_global_service_events?: boolean|null,
    is_multi_region_trail?: boolean|null,
    is_organization_trail?: boolean|null,
    kms_key_id?: string|null,
    s3_key_prefix?: string|null,
    sns_topic_name?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.s3_bucket_name = s3_bucket_name;
    this.aws_cloudtrail_id = aws_cloudtrail_id;
    this.arn = arn;
    this.cloud_watch_logs_group_arn = cloud_watch_logs_group_arn;
    this.cloud_watch_logs_role_arn = cloud_watch_logs_role_arn;
    this.enable_log_file_validation = enable_log_file_validation;
    this.enable_logging = enable_logging;
    this.event_selector = event_selector;
    this.home_region = home_region;
    this.include_global_service_events = include_global_service_events;
    this.is_multi_region_trail = is_multi_region_trail;
    this.is_organization_trail = is_organization_trail;
    this.kms_key_id = kms_key_id;
    this.s3_key_prefix = s3_key_prefix;
    this.sns_topic_name = sns_topic_name;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['s3_bucket_name'] = this.s3_bucket_name;
    if (this.aws_cloudtrail_id !== null) {
      ih['aws_cloudtrail_id'] = this.aws_cloudtrail_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cloud_watch_logs_group_arn !== null) {
      ih['cloud_watch_logs_group_arn'] = this.cloud_watch_logs_group_arn;
    }
    if (this.cloud_watch_logs_role_arn !== null) {
      ih['cloud_watch_logs_role_arn'] = this.cloud_watch_logs_role_arn;
    }
    if (this.enable_log_file_validation !== null) {
      ih['enable_log_file_validation'] = this.enable_log_file_validation;
    }
    if (this.enable_logging !== null) {
      ih['enable_logging'] = this.enable_logging;
    }
    if (this.event_selector !== null) {
      ih['event_selector'] = this.event_selector;
    }
    if (this.home_region !== null) {
      ih['home_region'] = this.home_region;
    }
    if (this.include_global_service_events !== null) {
      ih['include_global_service_events'] = this.include_global_service_events;
    }
    if (this.is_multi_region_trail !== null) {
      ih['is_multi_region_trail'] = this.is_multi_region_trail;
    }
    if (this.is_organization_trail !== null) {
      ih['is_organization_trail'] = this.is_organization_trail;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.s3_key_prefix !== null) {
      ih['s3_key_prefix'] = this.s3_key_prefix;
    }
    if (this.sns_topic_name !== null) {
      ih['sns_topic_name'] = this.sns_topic_name;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudtrail';
  }
}

export class Aws_cloudtrailHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudtrailHandler';
  }
}

export class Aws_cloudtrail_event_selector_103 implements PcoreValue {
  readonly data_resource: Aws_cloudtrail_event_selector_103_data_resource_104[]|null;
  readonly include_management_events: boolean|null;
  readonly read_write_type: string|null;

  constructor({
    data_resource = null,
    include_management_events = null,
    read_write_type = null
  }: {
    data_resource?: Aws_cloudtrail_event_selector_103_data_resource_104[]|null,
    include_management_events?: boolean|null,
    read_write_type?: string|null
  }) {
    this.data_resource = data_resource;
    this.include_management_events = include_management_events;
    this.read_write_type = read_write_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.data_resource !== null) {
      ih['data_resource'] = this.data_resource;
    }
    if (this.include_management_events !== null) {
      ih['include_management_events'] = this.include_management_events;
    }
    if (this.read_write_type !== null) {
      ih['read_write_type'] = this.read_write_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudtrail_event_selector_103';
  }
}

export class Aws_cloudtrail_event_selector_103_data_resource_104 implements PcoreValue {
  readonly type: string;
  readonly values: string[];

  constructor({
    type,
    values
  }: {
    type: string,
    values: string[]
  }) {
    this.type = type;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    ih['values'] = this.values;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudtrail_event_selector_103_data_resource_104';
  }
}

export class Aws_cloudwatch_dashboard implements PcoreValue {
  readonly dashboard_body: string;
  readonly dashboard_name: string;
  readonly aws_cloudwatch_dashboard_id: string|null;
  readonly dashboard_arn: string|null;

  constructor({
    dashboard_body,
    dashboard_name,
    aws_cloudwatch_dashboard_id = null,
    dashboard_arn = null
  }: {
    dashboard_body: string,
    dashboard_name: string,
    aws_cloudwatch_dashboard_id?: string|null,
    dashboard_arn?: string|null
  }) {
    this.dashboard_body = dashboard_body;
    this.dashboard_name = dashboard_name;
    this.aws_cloudwatch_dashboard_id = aws_cloudwatch_dashboard_id;
    this.dashboard_arn = dashboard_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['dashboard_body'] = this.dashboard_body;
    ih['dashboard_name'] = this.dashboard_name;
    if (this.aws_cloudwatch_dashboard_id !== null) {
      ih['aws_cloudwatch_dashboard_id'] = this.aws_cloudwatch_dashboard_id;
    }
    if (this.dashboard_arn !== null) {
      ih['dashboard_arn'] = this.dashboard_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_dashboard';
  }
}

export class Aws_cloudwatch_dashboardHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_dashboardHandler';
  }
}

export class Aws_cloudwatch_event_permission implements PcoreValue {
  readonly principal: string;
  readonly statement_id: string;
  readonly aws_cloudwatch_event_permission_id: string|null;
  readonly action: string|null;
  readonly condition: Aws_cloudwatch_event_permission_condition_105[]|null;

  constructor({
    principal,
    statement_id,
    aws_cloudwatch_event_permission_id = null,
    action = null,
    condition = null
  }: {
    principal: string,
    statement_id: string,
    aws_cloudwatch_event_permission_id?: string|null,
    action?: string|null,
    condition?: Aws_cloudwatch_event_permission_condition_105[]|null
  }) {
    this.principal = principal;
    this.statement_id = statement_id;
    this.aws_cloudwatch_event_permission_id = aws_cloudwatch_event_permission_id;
    this.action = action;
    this.condition = condition;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['principal'] = this.principal;
    ih['statement_id'] = this.statement_id;
    if (this.aws_cloudwatch_event_permission_id !== null) {
      ih['aws_cloudwatch_event_permission_id'] = this.aws_cloudwatch_event_permission_id;
    }
    if (this.action !== null) {
      ih['action'] = this.action;
    }
    if (this.condition !== null) {
      ih['condition'] = this.condition;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_permission';
  }
}

export class Aws_cloudwatch_event_permissionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_permissionHandler';
  }
}

export class Aws_cloudwatch_event_permission_condition_105 implements PcoreValue {
  readonly key: string;
  readonly type: string;
  readonly value: string;

  constructor({
    key,
    type,
    value
  }: {
    key: string,
    type: string,
    value: string
  }) {
    this.key = key;
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['type'] = this.type;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_permission_condition_105';
  }
}

export class Aws_cloudwatch_event_rule implements PcoreValue {
  readonly aws_cloudwatch_event_rule_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly event_pattern: string|null;
  readonly is_enabled: boolean|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly role_arn: string|null;
  readonly schedule_expression: string|null;

  constructor({
    aws_cloudwatch_event_rule_id = null,
    arn = null,
    description = null,
    event_pattern = null,
    is_enabled = null,
    name = null,
    name_prefix = null,
    role_arn = null,
    schedule_expression = null
  }: {
    aws_cloudwatch_event_rule_id?: string|null,
    arn?: string|null,
    description?: string|null,
    event_pattern?: string|null,
    is_enabled?: boolean|null,
    name?: string|null,
    name_prefix?: string|null,
    role_arn?: string|null,
    schedule_expression?: string|null
  }) {
    this.aws_cloudwatch_event_rule_id = aws_cloudwatch_event_rule_id;
    this.arn = arn;
    this.description = description;
    this.event_pattern = event_pattern;
    this.is_enabled = is_enabled;
    this.name = name;
    this.name_prefix = name_prefix;
    this.role_arn = role_arn;
    this.schedule_expression = schedule_expression;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_cloudwatch_event_rule_id !== null) {
      ih['aws_cloudwatch_event_rule_id'] = this.aws_cloudwatch_event_rule_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.event_pattern !== null) {
      ih['event_pattern'] = this.event_pattern;
    }
    if (this.is_enabled !== null) {
      ih['is_enabled'] = this.is_enabled;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.role_arn !== null) {
      ih['role_arn'] = this.role_arn;
    }
    if (this.schedule_expression !== null) {
      ih['schedule_expression'] = this.schedule_expression;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_rule';
  }
}

export class Aws_cloudwatch_event_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_ruleHandler';
  }
}

export class Aws_cloudwatch_event_target implements PcoreValue {
  readonly arn: string;
  readonly rule: string;
  readonly aws_cloudwatch_event_target_id: string|null;
  readonly batch_target: Aws_cloudwatch_event_target_batch_target_106[]|null;
  readonly ecs_target: Aws_cloudwatch_event_target_ecs_target_107[]|null;
  readonly input: string|null;
  readonly input_path: string|null;
  readonly input_transformer: Aws_cloudwatch_event_target_input_transformer_109[]|null;
  readonly kinesis_target: Aws_cloudwatch_event_target_kinesis_target_110[]|null;
  readonly role_arn: string|null;
  readonly run_command_targets: Aws_cloudwatch_event_target_run_command_targets_111[]|null;
  readonly sqs_target: Aws_cloudwatch_event_target_sqs_target_112[]|null;
  readonly target_id: string|null;

  constructor({
    arn,
    rule,
    aws_cloudwatch_event_target_id = null,
    batch_target = null,
    ecs_target = null,
    input = null,
    input_path = null,
    input_transformer = null,
    kinesis_target = null,
    role_arn = null,
    run_command_targets = null,
    sqs_target = null,
    target_id = null
  }: {
    arn: string,
    rule: string,
    aws_cloudwatch_event_target_id?: string|null,
    batch_target?: Aws_cloudwatch_event_target_batch_target_106[]|null,
    ecs_target?: Aws_cloudwatch_event_target_ecs_target_107[]|null,
    input?: string|null,
    input_path?: string|null,
    input_transformer?: Aws_cloudwatch_event_target_input_transformer_109[]|null,
    kinesis_target?: Aws_cloudwatch_event_target_kinesis_target_110[]|null,
    role_arn?: string|null,
    run_command_targets?: Aws_cloudwatch_event_target_run_command_targets_111[]|null,
    sqs_target?: Aws_cloudwatch_event_target_sqs_target_112[]|null,
    target_id?: string|null
  }) {
    this.arn = arn;
    this.rule = rule;
    this.aws_cloudwatch_event_target_id = aws_cloudwatch_event_target_id;
    this.batch_target = batch_target;
    this.ecs_target = ecs_target;
    this.input = input;
    this.input_path = input_path;
    this.input_transformer = input_transformer;
    this.kinesis_target = kinesis_target;
    this.role_arn = role_arn;
    this.run_command_targets = run_command_targets;
    this.sqs_target = sqs_target;
    this.target_id = target_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['arn'] = this.arn;
    ih['rule'] = this.rule;
    if (this.aws_cloudwatch_event_target_id !== null) {
      ih['aws_cloudwatch_event_target_id'] = this.aws_cloudwatch_event_target_id;
    }
    if (this.batch_target !== null) {
      ih['batch_target'] = this.batch_target;
    }
    if (this.ecs_target !== null) {
      ih['ecs_target'] = this.ecs_target;
    }
    if (this.input !== null) {
      ih['input'] = this.input;
    }
    if (this.input_path !== null) {
      ih['input_path'] = this.input_path;
    }
    if (this.input_transformer !== null) {
      ih['input_transformer'] = this.input_transformer;
    }
    if (this.kinesis_target !== null) {
      ih['kinesis_target'] = this.kinesis_target;
    }
    if (this.role_arn !== null) {
      ih['role_arn'] = this.role_arn;
    }
    if (this.run_command_targets !== null) {
      ih['run_command_targets'] = this.run_command_targets;
    }
    if (this.sqs_target !== null) {
      ih['sqs_target'] = this.sqs_target;
    }
    if (this.target_id !== null) {
      ih['target_id'] = this.target_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_target';
  }
}

export class Aws_cloudwatch_event_targetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_targetHandler';
  }
}

export class Aws_cloudwatch_event_target_batch_target_106 implements PcoreValue {
  readonly job_definition: string;
  readonly job_name: string;
  readonly array_size: number|null;
  readonly job_attempts: number|null;

  constructor({
    job_definition,
    job_name,
    array_size = null,
    job_attempts = null
  }: {
    job_definition: string,
    job_name: string,
    array_size?: number|null,
    job_attempts?: number|null
  }) {
    this.job_definition = job_definition;
    this.job_name = job_name;
    this.array_size = array_size;
    this.job_attempts = job_attempts;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['job_definition'] = this.job_definition;
    ih['job_name'] = this.job_name;
    if (this.array_size !== null) {
      ih['array_size'] = this.array_size;
    }
    if (this.job_attempts !== null) {
      ih['job_attempts'] = this.job_attempts;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_target_batch_target_106';
  }
}

export class Aws_cloudwatch_event_target_ecs_target_107 implements PcoreValue {
  readonly task_definition_arn: string;
  readonly group: string|null;
  readonly launch_type: string|null;
  readonly network_configuration: Aws_cloudwatch_event_target_ecs_target_107_network_configuration_108[]|null;
  readonly platform_version: string|null;
  readonly task_count: number|null;

  constructor({
    task_definition_arn,
    group = null,
    launch_type = null,
    network_configuration = null,
    platform_version = null,
    task_count = null
  }: {
    task_definition_arn: string,
    group?: string|null,
    launch_type?: string|null,
    network_configuration?: Aws_cloudwatch_event_target_ecs_target_107_network_configuration_108[]|null,
    platform_version?: string|null,
    task_count?: number|null
  }) {
    this.task_definition_arn = task_definition_arn;
    this.group = group;
    this.launch_type = launch_type;
    this.network_configuration = network_configuration;
    this.platform_version = platform_version;
    this.task_count = task_count;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['task_definition_arn'] = this.task_definition_arn;
    if (this.group !== null) {
      ih['group'] = this.group;
    }
    if (this.launch_type !== null) {
      ih['launch_type'] = this.launch_type;
    }
    if (this.network_configuration !== null) {
      ih['network_configuration'] = this.network_configuration;
    }
    if (this.platform_version !== null) {
      ih['platform_version'] = this.platform_version;
    }
    if (this.task_count !== null) {
      ih['task_count'] = this.task_count;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_target_ecs_target_107';
  }
}

export class Aws_cloudwatch_event_target_ecs_target_107_network_configuration_108 implements PcoreValue {
  readonly subnets: string[];
  readonly assign_public_ip: boolean|null;
  readonly security_groups: string[]|null;

  constructor({
    subnets,
    assign_public_ip = null,
    security_groups = null
  }: {
    subnets: string[],
    assign_public_ip?: boolean|null,
    security_groups?: string[]|null
  }) {
    this.subnets = subnets;
    this.assign_public_ip = assign_public_ip;
    this.security_groups = security_groups;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnets'] = this.subnets;
    if (this.assign_public_ip !== null) {
      ih['assign_public_ip'] = this.assign_public_ip;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_target_ecs_target_107_network_configuration_108';
  }
}

export class Aws_cloudwatch_event_target_input_transformer_109 implements PcoreValue {
  readonly input_template: string;
  readonly input_paths: {[s: string]: string}|null;

  constructor({
    input_template,
    input_paths = null
  }: {
    input_template: string,
    input_paths?: {[s: string]: string}|null
  }) {
    this.input_template = input_template;
    this.input_paths = input_paths;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['input_template'] = this.input_template;
    if (this.input_paths !== null) {
      ih['input_paths'] = this.input_paths;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_target_input_transformer_109';
  }
}

export class Aws_cloudwatch_event_target_kinesis_target_110 implements PcoreValue {
  readonly partition_key_path: string|null;

  constructor({
    partition_key_path = null
  }: {
    partition_key_path?: string|null
  }) {
    this.partition_key_path = partition_key_path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.partition_key_path !== null) {
      ih['partition_key_path'] = this.partition_key_path;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_target_kinesis_target_110';
  }
}

export class Aws_cloudwatch_event_target_run_command_targets_111 implements PcoreValue {
  readonly key: string;
  readonly values: string[];

  constructor({
    key,
    values
  }: {
    key: string,
    values: string[]
  }) {
    this.key = key;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['values'] = this.values;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_target_run_command_targets_111';
  }
}

export class Aws_cloudwatch_event_target_sqs_target_112 implements PcoreValue {
  readonly message_group_id: string|null;

  constructor({
    message_group_id = null
  }: {
    message_group_id?: string|null
  }) {
    this.message_group_id = message_group_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.message_group_id !== null) {
      ih['message_group_id'] = this.message_group_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_event_target_sqs_target_112';
  }
}

export class Aws_cloudwatch_log_destination implements PcoreValue {
  readonly name: string;
  readonly role_arn: string;
  readonly target_arn: string;
  readonly aws_cloudwatch_log_destination_id: string|null;
  readonly arn: string|null;

  constructor({
    name,
    role_arn,
    target_arn,
    aws_cloudwatch_log_destination_id = null,
    arn = null
  }: {
    name: string,
    role_arn: string,
    target_arn: string,
    aws_cloudwatch_log_destination_id?: string|null,
    arn?: string|null
  }) {
    this.name = name;
    this.role_arn = role_arn;
    this.target_arn = target_arn;
    this.aws_cloudwatch_log_destination_id = aws_cloudwatch_log_destination_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['role_arn'] = this.role_arn;
    ih['target_arn'] = this.target_arn;
    if (this.aws_cloudwatch_log_destination_id !== null) {
      ih['aws_cloudwatch_log_destination_id'] = this.aws_cloudwatch_log_destination_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_destination';
  }
}

export class Aws_cloudwatch_log_destinationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_destinationHandler';
  }
}

export class Aws_cloudwatch_log_destination_policy implements PcoreValue {
  readonly access_policy: string;
  readonly destination_name: string;
  readonly aws_cloudwatch_log_destination_policy_id: string|null;

  constructor({
    access_policy,
    destination_name,
    aws_cloudwatch_log_destination_policy_id = null
  }: {
    access_policy: string,
    destination_name: string,
    aws_cloudwatch_log_destination_policy_id?: string|null
  }) {
    this.access_policy = access_policy;
    this.destination_name = destination_name;
    this.aws_cloudwatch_log_destination_policy_id = aws_cloudwatch_log_destination_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['access_policy'] = this.access_policy;
    ih['destination_name'] = this.destination_name;
    if (this.aws_cloudwatch_log_destination_policy_id !== null) {
      ih['aws_cloudwatch_log_destination_policy_id'] = this.aws_cloudwatch_log_destination_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_destination_policy';
  }
}

export class Aws_cloudwatch_log_destination_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_destination_policyHandler';
  }
}

export class Aws_cloudwatch_log_group implements PcoreValue {
  readonly aws_cloudwatch_log_group_id: string|null;
  readonly arn: string|null;
  readonly kms_key_id: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly retention_in_days: number|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    aws_cloudwatch_log_group_id = null,
    arn = null,
    kms_key_id = null,
    name = null,
    name_prefix = null,
    retention_in_days = null,
    tags = null
  }: {
    aws_cloudwatch_log_group_id?: string|null,
    arn?: string|null,
    kms_key_id?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    retention_in_days?: number|null,
    tags?: {[s: string]: string}|null
  }) {
    this.aws_cloudwatch_log_group_id = aws_cloudwatch_log_group_id;
    this.arn = arn;
    this.kms_key_id = kms_key_id;
    this.name = name;
    this.name_prefix = name_prefix;
    this.retention_in_days = retention_in_days;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_cloudwatch_log_group_id !== null) {
      ih['aws_cloudwatch_log_group_id'] = this.aws_cloudwatch_log_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.retention_in_days !== null) {
      ih['retention_in_days'] = this.retention_in_days;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_group';
  }
}

export class Aws_cloudwatch_log_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_groupHandler';
  }
}

export class Aws_cloudwatch_log_metric_filter implements PcoreValue {
  readonly log_group_name: string;
  readonly metric_transformation: Aws_cloudwatch_log_metric_filter_metric_transformation_113[];
  readonly name: string;
  readonly pattern: string;
  readonly aws_cloudwatch_log_metric_filter_id: string|null;

  constructor({
    log_group_name,
    metric_transformation,
    name,
    pattern,
    aws_cloudwatch_log_metric_filter_id = null
  }: {
    log_group_name: string,
    metric_transformation: Aws_cloudwatch_log_metric_filter_metric_transformation_113[],
    name: string,
    pattern: string,
    aws_cloudwatch_log_metric_filter_id?: string|null
  }) {
    this.log_group_name = log_group_name;
    this.metric_transformation = metric_transformation;
    this.name = name;
    this.pattern = pattern;
    this.aws_cloudwatch_log_metric_filter_id = aws_cloudwatch_log_metric_filter_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['log_group_name'] = this.log_group_name;
    ih['metric_transformation'] = this.metric_transformation;
    ih['name'] = this.name;
    ih['pattern'] = this.pattern;
    if (this.aws_cloudwatch_log_metric_filter_id !== null) {
      ih['aws_cloudwatch_log_metric_filter_id'] = this.aws_cloudwatch_log_metric_filter_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_metric_filter';
  }
}

export class Aws_cloudwatch_log_metric_filterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_metric_filterHandler';
  }
}

export class Aws_cloudwatch_log_metric_filter_metric_transformation_113 implements PcoreValue {
  readonly name: string;
  readonly namespace: string;
  readonly value: string;
  readonly default_value: string|null;

  constructor({
    name,
    namespace,
    value,
    default_value = null
  }: {
    name: string,
    namespace: string,
    value: string,
    default_value?: string|null
  }) {
    this.name = name;
    this.namespace = namespace;
    this.value = value;
    this.default_value = default_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['namespace'] = this.namespace;
    ih['value'] = this.value;
    if (this.default_value !== null) {
      ih['default_value'] = this.default_value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_metric_filter_metric_transformation_113';
  }
}

export class Aws_cloudwatch_log_resource_policy implements PcoreValue {
  readonly policy_document: string;
  readonly policy_name: string;
  readonly aws_cloudwatch_log_resource_policy_id: string|null;

  constructor({
    policy_document,
    policy_name,
    aws_cloudwatch_log_resource_policy_id = null
  }: {
    policy_document: string,
    policy_name: string,
    aws_cloudwatch_log_resource_policy_id?: string|null
  }) {
    this.policy_document = policy_document;
    this.policy_name = policy_name;
    this.aws_cloudwatch_log_resource_policy_id = aws_cloudwatch_log_resource_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy_document'] = this.policy_document;
    ih['policy_name'] = this.policy_name;
    if (this.aws_cloudwatch_log_resource_policy_id !== null) {
      ih['aws_cloudwatch_log_resource_policy_id'] = this.aws_cloudwatch_log_resource_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_resource_policy';
  }
}

export class Aws_cloudwatch_log_resource_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_resource_policyHandler';
  }
}

export class Aws_cloudwatch_log_stream implements PcoreValue {
  readonly log_group_name: string;
  readonly name: string;
  readonly aws_cloudwatch_log_stream_id: string|null;
  readonly arn: string|null;

  constructor({
    log_group_name,
    name,
    aws_cloudwatch_log_stream_id = null,
    arn = null
  }: {
    log_group_name: string,
    name: string,
    aws_cloudwatch_log_stream_id?: string|null,
    arn?: string|null
  }) {
    this.log_group_name = log_group_name;
    this.name = name;
    this.aws_cloudwatch_log_stream_id = aws_cloudwatch_log_stream_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['log_group_name'] = this.log_group_name;
    ih['name'] = this.name;
    if (this.aws_cloudwatch_log_stream_id !== null) {
      ih['aws_cloudwatch_log_stream_id'] = this.aws_cloudwatch_log_stream_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_stream';
  }
}

export class Aws_cloudwatch_log_streamHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_streamHandler';
  }
}

export class Aws_cloudwatch_log_subscription_filter implements PcoreValue {
  readonly destination_arn: string;
  readonly filter_pattern: string;
  readonly log_group_name: string;
  readonly name: string;
  readonly aws_cloudwatch_log_subscription_filter_id: string|null;
  readonly distribution: string|null;
  readonly role_arn: string|null;

  constructor({
    destination_arn,
    filter_pattern,
    log_group_name,
    name,
    aws_cloudwatch_log_subscription_filter_id = null,
    distribution = null,
    role_arn = null
  }: {
    destination_arn: string,
    filter_pattern: string,
    log_group_name: string,
    name: string,
    aws_cloudwatch_log_subscription_filter_id?: string|null,
    distribution?: string|null,
    role_arn?: string|null
  }) {
    this.destination_arn = destination_arn;
    this.filter_pattern = filter_pattern;
    this.log_group_name = log_group_name;
    this.name = name;
    this.aws_cloudwatch_log_subscription_filter_id = aws_cloudwatch_log_subscription_filter_id;
    this.distribution = distribution;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination_arn'] = this.destination_arn;
    ih['filter_pattern'] = this.filter_pattern;
    ih['log_group_name'] = this.log_group_name;
    ih['name'] = this.name;
    if (this.aws_cloudwatch_log_subscription_filter_id !== null) {
      ih['aws_cloudwatch_log_subscription_filter_id'] = this.aws_cloudwatch_log_subscription_filter_id;
    }
    if (this.distribution !== null) {
      ih['distribution'] = this.distribution;
    }
    if (this.role_arn !== null) {
      ih['role_arn'] = this.role_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_subscription_filter';
  }
}

export class Aws_cloudwatch_log_subscription_filterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_log_subscription_filterHandler';
  }
}

export class Aws_cloudwatch_metric_alarm implements PcoreValue {
  readonly alarm_name: string;
  readonly comparison_operator: string;
  readonly evaluation_periods: number;
  readonly metric_name: string;
  readonly namespace: string;
  readonly period: number;
  readonly threshold: number;
  readonly aws_cloudwatch_metric_alarm_id: string|null;
  readonly actions_enabled: boolean|null;
  readonly alarm_actions: string[]|null;
  readonly alarm_description: string|null;
  readonly arn: string|null;
  readonly datapoints_to_alarm: number|null;
  readonly dimensions: {[s: string]: string}|null;
  readonly evaluate_low_sample_count_percentiles: string|null;
  readonly extended_statistic: string|null;
  readonly insufficient_data_actions: string[]|null;
  readonly ok_actions: string[]|null;
  readonly statistic: string|null;
  readonly treat_missing_data: string|null;
  readonly unit: string|null;

  constructor({
    alarm_name,
    comparison_operator,
    evaluation_periods,
    metric_name,
    namespace,
    period,
    threshold,
    aws_cloudwatch_metric_alarm_id = null,
    actions_enabled = null,
    alarm_actions = null,
    alarm_description = null,
    arn = null,
    datapoints_to_alarm = null,
    dimensions = null,
    evaluate_low_sample_count_percentiles = null,
    extended_statistic = null,
    insufficient_data_actions = null,
    ok_actions = null,
    statistic = null,
    treat_missing_data = null,
    unit = null
  }: {
    alarm_name: string,
    comparison_operator: string,
    evaluation_periods: number,
    metric_name: string,
    namespace: string,
    period: number,
    threshold: number,
    aws_cloudwatch_metric_alarm_id?: string|null,
    actions_enabled?: boolean|null,
    alarm_actions?: string[]|null,
    alarm_description?: string|null,
    arn?: string|null,
    datapoints_to_alarm?: number|null,
    dimensions?: {[s: string]: string}|null,
    evaluate_low_sample_count_percentiles?: string|null,
    extended_statistic?: string|null,
    insufficient_data_actions?: string[]|null,
    ok_actions?: string[]|null,
    statistic?: string|null,
    treat_missing_data?: string|null,
    unit?: string|null
  }) {
    this.alarm_name = alarm_name;
    this.comparison_operator = comparison_operator;
    this.evaluation_periods = evaluation_periods;
    this.metric_name = metric_name;
    this.namespace = namespace;
    this.period = period;
    this.threshold = threshold;
    this.aws_cloudwatch_metric_alarm_id = aws_cloudwatch_metric_alarm_id;
    this.actions_enabled = actions_enabled;
    this.alarm_actions = alarm_actions;
    this.alarm_description = alarm_description;
    this.arn = arn;
    this.datapoints_to_alarm = datapoints_to_alarm;
    this.dimensions = dimensions;
    this.evaluate_low_sample_count_percentiles = evaluate_low_sample_count_percentiles;
    this.extended_statistic = extended_statistic;
    this.insufficient_data_actions = insufficient_data_actions;
    this.ok_actions = ok_actions;
    this.statistic = statistic;
    this.treat_missing_data = treat_missing_data;
    this.unit = unit;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['alarm_name'] = this.alarm_name;
    ih['comparison_operator'] = this.comparison_operator;
    ih['evaluation_periods'] = this.evaluation_periods;
    ih['metric_name'] = this.metric_name;
    ih['namespace'] = this.namespace;
    ih['period'] = this.period;
    ih['threshold'] = this.threshold;
    if (this.aws_cloudwatch_metric_alarm_id !== null) {
      ih['aws_cloudwatch_metric_alarm_id'] = this.aws_cloudwatch_metric_alarm_id;
    }
    if (this.actions_enabled !== null) {
      ih['actions_enabled'] = this.actions_enabled;
    }
    if (this.alarm_actions !== null) {
      ih['alarm_actions'] = this.alarm_actions;
    }
    if (this.alarm_description !== null) {
      ih['alarm_description'] = this.alarm_description;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.datapoints_to_alarm !== null) {
      ih['datapoints_to_alarm'] = this.datapoints_to_alarm;
    }
    if (this.dimensions !== null) {
      ih['dimensions'] = this.dimensions;
    }
    if (this.evaluate_low_sample_count_percentiles !== null) {
      ih['evaluate_low_sample_count_percentiles'] = this.evaluate_low_sample_count_percentiles;
    }
    if (this.extended_statistic !== null) {
      ih['extended_statistic'] = this.extended_statistic;
    }
    if (this.insufficient_data_actions !== null) {
      ih['insufficient_data_actions'] = this.insufficient_data_actions;
    }
    if (this.ok_actions !== null) {
      ih['ok_actions'] = this.ok_actions;
    }
    if (this.statistic !== null) {
      ih['statistic'] = this.statistic;
    }
    if (this.treat_missing_data !== null) {
      ih['treat_missing_data'] = this.treat_missing_data;
    }
    if (this.unit !== null) {
      ih['unit'] = this.unit;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_metric_alarm';
  }
}

export class Aws_cloudwatch_metric_alarmHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cloudwatch_metric_alarmHandler';
  }
}

export class Aws_codebuild_project implements PcoreValue {
  readonly artifacts: Aws_codebuild_project_artifacts_114[];
  readonly environment: Aws_codebuild_project_environment_116[];
  readonly name: string;
  readonly service_role: string;
  readonly source: Aws_codebuild_project_source_121[];
  readonly aws_codebuild_project_id: string|null;
  readonly arn: string|null;
  readonly badge_enabled: boolean|null;
  readonly badge_url: string|null;
  readonly build_timeout: number|null;
  readonly cache: Aws_codebuild_project_cache_115[]|null;
  readonly description: string|null;
  readonly encryption_key: string|null;
  readonly secondary_artifacts: Aws_codebuild_project_secondary_artifacts_118[]|null;
  readonly secondary_sources: Aws_codebuild_project_secondary_sources_119[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly timeout: number|null;
  readonly vpc_config: Aws_codebuild_project_vpc_config_123[]|null;

  constructor({
    artifacts,
    environment,
    name,
    service_role,
    source,
    aws_codebuild_project_id = null,
    arn = null,
    badge_enabled = null,
    badge_url = null,
    build_timeout = null,
    cache = null,
    description = null,
    encryption_key = null,
    secondary_artifacts = null,
    secondary_sources = null,
    tags = null,
    timeout = null,
    vpc_config = null
  }: {
    artifacts: Aws_codebuild_project_artifacts_114[],
    environment: Aws_codebuild_project_environment_116[],
    name: string,
    service_role: string,
    source: Aws_codebuild_project_source_121[],
    aws_codebuild_project_id?: string|null,
    arn?: string|null,
    badge_enabled?: boolean|null,
    badge_url?: string|null,
    build_timeout?: number|null,
    cache?: Aws_codebuild_project_cache_115[]|null,
    description?: string|null,
    encryption_key?: string|null,
    secondary_artifacts?: Aws_codebuild_project_secondary_artifacts_118[]|null,
    secondary_sources?: Aws_codebuild_project_secondary_sources_119[]|null,
    tags?: {[s: string]: string}|null,
    timeout?: number|null,
    vpc_config?: Aws_codebuild_project_vpc_config_123[]|null
  }) {
    this.artifacts = artifacts;
    this.environment = environment;
    this.name = name;
    this.service_role = service_role;
    this.source = source;
    this.aws_codebuild_project_id = aws_codebuild_project_id;
    this.arn = arn;
    this.badge_enabled = badge_enabled;
    this.badge_url = badge_url;
    this.build_timeout = build_timeout;
    this.cache = cache;
    this.description = description;
    this.encryption_key = encryption_key;
    this.secondary_artifacts = secondary_artifacts;
    this.secondary_sources = secondary_sources;
    this.tags = tags;
    this.timeout = timeout;
    this.vpc_config = vpc_config;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['artifacts'] = this.artifacts;
    ih['environment'] = this.environment;
    ih['name'] = this.name;
    ih['service_role'] = this.service_role;
    ih['source'] = this.source;
    if (this.aws_codebuild_project_id !== null) {
      ih['aws_codebuild_project_id'] = this.aws_codebuild_project_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.badge_enabled !== null) {
      ih['badge_enabled'] = this.badge_enabled;
    }
    if (this.badge_url !== null) {
      ih['badge_url'] = this.badge_url;
    }
    if (this.build_timeout !== null) {
      ih['build_timeout'] = this.build_timeout;
    }
    if (this.cache !== null) {
      ih['cache'] = this.cache;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.encryption_key !== null) {
      ih['encryption_key'] = this.encryption_key;
    }
    if (this.secondary_artifacts !== null) {
      ih['secondary_artifacts'] = this.secondary_artifacts;
    }
    if (this.secondary_sources !== null) {
      ih['secondary_sources'] = this.secondary_sources;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.timeout !== null) {
      ih['timeout'] = this.timeout;
    }
    if (this.vpc_config !== null) {
      ih['vpc_config'] = this.vpc_config;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project';
  }
}

export class Aws_codebuild_projectHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_projectHandler';
  }
}

export class Aws_codebuild_project_artifacts_114 implements PcoreValue {
  readonly type: string;
  readonly encryption_disabled: boolean|null;
  readonly location: string|null;
  readonly name: string|null;
  readonly namespace_type: string|null;
  readonly packaging: string|null;
  readonly path: string|null;

  constructor({
    type,
    encryption_disabled = null,
    location = null,
    name = null,
    namespace_type = null,
    packaging = null,
    path = null
  }: {
    type: string,
    encryption_disabled?: boolean|null,
    location?: string|null,
    name?: string|null,
    namespace_type?: string|null,
    packaging?: string|null,
    path?: string|null
  }) {
    this.type = type;
    this.encryption_disabled = encryption_disabled;
    this.location = location;
    this.name = name;
    this.namespace_type = namespace_type;
    this.packaging = packaging;
    this.path = path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.encryption_disabled !== null) {
      ih['encryption_disabled'] = this.encryption_disabled;
    }
    if (this.location !== null) {
      ih['location'] = this.location;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.namespace_type !== null) {
      ih['namespace_type'] = this.namespace_type;
    }
    if (this.packaging !== null) {
      ih['packaging'] = this.packaging;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_artifacts_114';
  }
}

export class Aws_codebuild_project_cache_115 implements PcoreValue {
  readonly location: string|null;
  readonly type: string|null;

  constructor({
    location = null,
    type = null
  }: {
    location?: string|null,
    type?: string|null
  }) {
    this.location = location;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.location !== null) {
      ih['location'] = this.location;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_cache_115';
  }
}

export class Aws_codebuild_project_environment_116 implements PcoreValue {
  readonly compute_type: string;
  readonly image: string;
  readonly type: string;
  readonly certificate: string|null;
  readonly environment_variable: Aws_codebuild_project_environment_116_environment_variable_117[]|null;
  readonly privileged_mode: boolean|null;

  constructor({
    compute_type,
    image,
    type,
    certificate = null,
    environment_variable = null,
    privileged_mode = null
  }: {
    compute_type: string,
    image: string,
    type: string,
    certificate?: string|null,
    environment_variable?: Aws_codebuild_project_environment_116_environment_variable_117[]|null,
    privileged_mode?: boolean|null
  }) {
    this.compute_type = compute_type;
    this.image = image;
    this.type = type;
    this.certificate = certificate;
    this.environment_variable = environment_variable;
    this.privileged_mode = privileged_mode;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['compute_type'] = this.compute_type;
    ih['image'] = this.image;
    ih['type'] = this.type;
    if (this.certificate !== null) {
      ih['certificate'] = this.certificate;
    }
    if (this.environment_variable !== null) {
      ih['environment_variable'] = this.environment_variable;
    }
    if (this.privileged_mode !== null) {
      ih['privileged_mode'] = this.privileged_mode;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_environment_116';
  }
}

export class Aws_codebuild_project_environment_116_environment_variable_117 implements PcoreValue {
  readonly name: string;
  readonly value: string;
  readonly type: string|null;

  constructor({
    name,
    value,
    type = null
  }: {
    name: string,
    value: string,
    type?: string|null
  }) {
    this.name = name;
    this.value = value;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_environment_116_environment_variable_117';
  }
}

export class Aws_codebuild_project_secondary_artifacts_118 implements PcoreValue {
  readonly artifact_identifier: string;
  readonly type: string;
  readonly encryption_disabled: boolean|null;
  readonly location: string|null;
  readonly name: string|null;
  readonly namespace_type: string|null;
  readonly packaging: string|null;
  readonly path: string|null;

  constructor({
    artifact_identifier,
    type,
    encryption_disabled = null,
    location = null,
    name = null,
    namespace_type = null,
    packaging = null,
    path = null
  }: {
    artifact_identifier: string,
    type: string,
    encryption_disabled?: boolean|null,
    location?: string|null,
    name?: string|null,
    namespace_type?: string|null,
    packaging?: string|null,
    path?: string|null
  }) {
    this.artifact_identifier = artifact_identifier;
    this.type = type;
    this.encryption_disabled = encryption_disabled;
    this.location = location;
    this.name = name;
    this.namespace_type = namespace_type;
    this.packaging = packaging;
    this.path = path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['artifact_identifier'] = this.artifact_identifier;
    ih['type'] = this.type;
    if (this.encryption_disabled !== null) {
      ih['encryption_disabled'] = this.encryption_disabled;
    }
    if (this.location !== null) {
      ih['location'] = this.location;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.namespace_type !== null) {
      ih['namespace_type'] = this.namespace_type;
    }
    if (this.packaging !== null) {
      ih['packaging'] = this.packaging;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_secondary_artifacts_118';
  }
}

export class Aws_codebuild_project_secondary_sources_119 implements PcoreValue {
  readonly source_identifier: string;
  readonly type: string;
  readonly auth: Aws_codebuild_project_secondary_sources_119_auth_120[]|null;
  readonly buildspec: string|null;
  readonly git_clone_depth: number|null;
  readonly insecure_ssl: boolean|null;
  readonly location: string|null;
  readonly report_build_status: boolean|null;

  constructor({
    source_identifier,
    type,
    auth = null,
    buildspec = null,
    git_clone_depth = null,
    insecure_ssl = null,
    location = null,
    report_build_status = null
  }: {
    source_identifier: string,
    type: string,
    auth?: Aws_codebuild_project_secondary_sources_119_auth_120[]|null,
    buildspec?: string|null,
    git_clone_depth?: number|null,
    insecure_ssl?: boolean|null,
    location?: string|null,
    report_build_status?: boolean|null
  }) {
    this.source_identifier = source_identifier;
    this.type = type;
    this.auth = auth;
    this.buildspec = buildspec;
    this.git_clone_depth = git_clone_depth;
    this.insecure_ssl = insecure_ssl;
    this.location = location;
    this.report_build_status = report_build_status;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['source_identifier'] = this.source_identifier;
    ih['type'] = this.type;
    if (this.auth !== null) {
      ih['auth'] = this.auth;
    }
    if (this.buildspec !== null) {
      ih['buildspec'] = this.buildspec;
    }
    if (this.git_clone_depth !== null) {
      ih['git_clone_depth'] = this.git_clone_depth;
    }
    if (this.insecure_ssl !== null) {
      ih['insecure_ssl'] = this.insecure_ssl;
    }
    if (this.location !== null) {
      ih['location'] = this.location;
    }
    if (this.report_build_status !== null) {
      ih['report_build_status'] = this.report_build_status;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_secondary_sources_119';
  }
}

export class Aws_codebuild_project_secondary_sources_119_auth_120 implements PcoreValue {
  readonly type: string;
  readonly resource: string|null;

  constructor({
    type,
    resource = null
  }: {
    type: string,
    resource?: string|null
  }) {
    this.type = type;
    this.resource = resource;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.resource !== null) {
      ih['resource'] = this.resource;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_secondary_sources_119_auth_120';
  }
}

export class Aws_codebuild_project_source_121 implements PcoreValue {
  readonly type: string;
  readonly auth: Aws_codebuild_project_source_121_auth_122[]|null;
  readonly buildspec: string|null;
  readonly git_clone_depth: number|null;
  readonly insecure_ssl: boolean|null;
  readonly location: string|null;
  readonly report_build_status: boolean|null;

  constructor({
    type,
    auth = null,
    buildspec = null,
    git_clone_depth = null,
    insecure_ssl = null,
    location = null,
    report_build_status = null
  }: {
    type: string,
    auth?: Aws_codebuild_project_source_121_auth_122[]|null,
    buildspec?: string|null,
    git_clone_depth?: number|null,
    insecure_ssl?: boolean|null,
    location?: string|null,
    report_build_status?: boolean|null
  }) {
    this.type = type;
    this.auth = auth;
    this.buildspec = buildspec;
    this.git_clone_depth = git_clone_depth;
    this.insecure_ssl = insecure_ssl;
    this.location = location;
    this.report_build_status = report_build_status;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.auth !== null) {
      ih['auth'] = this.auth;
    }
    if (this.buildspec !== null) {
      ih['buildspec'] = this.buildspec;
    }
    if (this.git_clone_depth !== null) {
      ih['git_clone_depth'] = this.git_clone_depth;
    }
    if (this.insecure_ssl !== null) {
      ih['insecure_ssl'] = this.insecure_ssl;
    }
    if (this.location !== null) {
      ih['location'] = this.location;
    }
    if (this.report_build_status !== null) {
      ih['report_build_status'] = this.report_build_status;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_source_121';
  }
}

export class Aws_codebuild_project_source_121_auth_122 implements PcoreValue {
  readonly type: string;
  readonly resource: string|null;

  constructor({
    type,
    resource = null
  }: {
    type: string,
    resource?: string|null
  }) {
    this.type = type;
    this.resource = resource;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.resource !== null) {
      ih['resource'] = this.resource;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_source_121_auth_122';
  }
}

export class Aws_codebuild_project_vpc_config_123 implements PcoreValue {
  readonly security_group_ids: string[];
  readonly subnets: string[];
  readonly vpc_id: string;

  constructor({
    security_group_ids,
    subnets,
    vpc_id
  }: {
    security_group_ids: string[],
    subnets: string[],
    vpc_id: string
  }) {
    this.security_group_ids = security_group_ids;
    this.subnets = subnets;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['security_group_ids'] = this.security_group_ids;
    ih['subnets'] = this.subnets;
    ih['vpc_id'] = this.vpc_id;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_project_vpc_config_123';
  }
}

export class Aws_codebuild_webhook implements PcoreValue {
  readonly project_name: string;
  readonly aws_codebuild_webhook_id: string|null;
  readonly branch_filter: string|null;
  readonly payload_url: string|null;
  readonly secret: string|null;
  readonly url: string|null;

  constructor({
    project_name,
    aws_codebuild_webhook_id = null,
    branch_filter = null,
    payload_url = null,
    secret = null,
    url = null
  }: {
    project_name: string,
    aws_codebuild_webhook_id?: string|null,
    branch_filter?: string|null,
    payload_url?: string|null,
    secret?: string|null,
    url?: string|null
  }) {
    this.project_name = project_name;
    this.aws_codebuild_webhook_id = aws_codebuild_webhook_id;
    this.branch_filter = branch_filter;
    this.payload_url = payload_url;
    this.secret = secret;
    this.url = url;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['project_name'] = this.project_name;
    if (this.aws_codebuild_webhook_id !== null) {
      ih['aws_codebuild_webhook_id'] = this.aws_codebuild_webhook_id;
    }
    if (this.branch_filter !== null) {
      ih['branch_filter'] = this.branch_filter;
    }
    if (this.payload_url !== null) {
      ih['payload_url'] = this.payload_url;
    }
    if (this.secret !== null) {
      ih['secret'] = this.secret;
    }
    if (this.url !== null) {
      ih['url'] = this.url;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_webhook';
  }
}

export class Aws_codebuild_webhookHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codebuild_webhookHandler';
  }
}

export class Aws_codecommit_repository implements PcoreValue {
  readonly repository_name: string;
  readonly aws_codecommit_repository_id: string|null;
  readonly arn: string|null;
  readonly clone_url_http: string|null;
  readonly clone_url_ssh: string|null;
  readonly default_branch: string|null;
  readonly description: string|null;
  readonly repository_id: string|null;

  constructor({
    repository_name,
    aws_codecommit_repository_id = null,
    arn = null,
    clone_url_http = null,
    clone_url_ssh = null,
    default_branch = null,
    description = null,
    repository_id = null
  }: {
    repository_name: string,
    aws_codecommit_repository_id?: string|null,
    arn?: string|null,
    clone_url_http?: string|null,
    clone_url_ssh?: string|null,
    default_branch?: string|null,
    description?: string|null,
    repository_id?: string|null
  }) {
    this.repository_name = repository_name;
    this.aws_codecommit_repository_id = aws_codecommit_repository_id;
    this.arn = arn;
    this.clone_url_http = clone_url_http;
    this.clone_url_ssh = clone_url_ssh;
    this.default_branch = default_branch;
    this.description = description;
    this.repository_id = repository_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['repository_name'] = this.repository_name;
    if (this.aws_codecommit_repository_id !== null) {
      ih['aws_codecommit_repository_id'] = this.aws_codecommit_repository_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.clone_url_http !== null) {
      ih['clone_url_http'] = this.clone_url_http;
    }
    if (this.clone_url_ssh !== null) {
      ih['clone_url_ssh'] = this.clone_url_ssh;
    }
    if (this.default_branch !== null) {
      ih['default_branch'] = this.default_branch;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.repository_id !== null) {
      ih['repository_id'] = this.repository_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codecommit_repository';
  }
}

export class Aws_codecommit_repositoryHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codecommit_repositoryHandler';
  }
}

export class Aws_codecommit_trigger implements PcoreValue {
  readonly repository_name: string;
  readonly trigger: Aws_codecommit_trigger_trigger_124[];
  readonly aws_codecommit_trigger_id: string|null;
  readonly configuration_id: string|null;

  constructor({
    repository_name,
    trigger,
    aws_codecommit_trigger_id = null,
    configuration_id = null
  }: {
    repository_name: string,
    trigger: Aws_codecommit_trigger_trigger_124[],
    aws_codecommit_trigger_id?: string|null,
    configuration_id?: string|null
  }) {
    this.repository_name = repository_name;
    this.trigger = trigger;
    this.aws_codecommit_trigger_id = aws_codecommit_trigger_id;
    this.configuration_id = configuration_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['repository_name'] = this.repository_name;
    ih['trigger'] = this.trigger;
    if (this.aws_codecommit_trigger_id !== null) {
      ih['aws_codecommit_trigger_id'] = this.aws_codecommit_trigger_id;
    }
    if (this.configuration_id !== null) {
      ih['configuration_id'] = this.configuration_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codecommit_trigger';
  }
}

export class Aws_codecommit_triggerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codecommit_triggerHandler';
  }
}

export class Aws_codecommit_trigger_trigger_124 implements PcoreValue {
  readonly destination_arn: string;
  readonly events: string[];
  readonly name: string;
  readonly branches: string[]|null;
  readonly custom_data: string|null;

  constructor({
    destination_arn,
    events,
    name,
    branches = null,
    custom_data = null
  }: {
    destination_arn: string,
    events: string[],
    name: string,
    branches?: string[]|null,
    custom_data?: string|null
  }) {
    this.destination_arn = destination_arn;
    this.events = events;
    this.name = name;
    this.branches = branches;
    this.custom_data = custom_data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination_arn'] = this.destination_arn;
    ih['events'] = this.events;
    ih['name'] = this.name;
    if (this.branches !== null) {
      ih['branches'] = this.branches;
    }
    if (this.custom_data !== null) {
      ih['custom_data'] = this.custom_data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codecommit_trigger_trigger_124';
  }
}

export class Aws_codedeploy_app implements PcoreValue {
  readonly name: string;
  readonly aws_codedeploy_app_id: string|null;
  readonly compute_platform: string|null;
  readonly unique_id: string|null;

  constructor({
    name,
    aws_codedeploy_app_id = null,
    compute_platform = null,
    unique_id = null
  }: {
    name: string,
    aws_codedeploy_app_id?: string|null,
    compute_platform?: string|null,
    unique_id?: string|null
  }) {
    this.name = name;
    this.aws_codedeploy_app_id = aws_codedeploy_app_id;
    this.compute_platform = compute_platform;
    this.unique_id = unique_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_codedeploy_app_id !== null) {
      ih['aws_codedeploy_app_id'] = this.aws_codedeploy_app_id;
    }
    if (this.compute_platform !== null) {
      ih['compute_platform'] = this.compute_platform;
    }
    if (this.unique_id !== null) {
      ih['unique_id'] = this.unique_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_app';
  }
}

export class Aws_codedeploy_appHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_appHandler';
  }
}

export class Aws_codedeploy_deployment_config implements PcoreValue {
  readonly deployment_config_name: string;
  readonly aws_codedeploy_deployment_config_id: string|null;
  readonly compute_platform: string|null;
  readonly deployment_config_id: string|null;
  readonly minimum_healthy_hosts: Aws_codedeploy_deployment_config_minimum_healthy_hosts_125[]|null;
  readonly traffic_routing_config: Aws_codedeploy_deployment_config_traffic_routing_config_126[]|null;

  constructor({
    deployment_config_name,
    aws_codedeploy_deployment_config_id = null,
    compute_platform = null,
    deployment_config_id = null,
    minimum_healthy_hosts = null,
    traffic_routing_config = null
  }: {
    deployment_config_name: string,
    aws_codedeploy_deployment_config_id?: string|null,
    compute_platform?: string|null,
    deployment_config_id?: string|null,
    minimum_healthy_hosts?: Aws_codedeploy_deployment_config_minimum_healthy_hosts_125[]|null,
    traffic_routing_config?: Aws_codedeploy_deployment_config_traffic_routing_config_126[]|null
  }) {
    this.deployment_config_name = deployment_config_name;
    this.aws_codedeploy_deployment_config_id = aws_codedeploy_deployment_config_id;
    this.compute_platform = compute_platform;
    this.deployment_config_id = deployment_config_id;
    this.minimum_healthy_hosts = minimum_healthy_hosts;
    this.traffic_routing_config = traffic_routing_config;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['deployment_config_name'] = this.deployment_config_name;
    if (this.aws_codedeploy_deployment_config_id !== null) {
      ih['aws_codedeploy_deployment_config_id'] = this.aws_codedeploy_deployment_config_id;
    }
    if (this.compute_platform !== null) {
      ih['compute_platform'] = this.compute_platform;
    }
    if (this.deployment_config_id !== null) {
      ih['deployment_config_id'] = this.deployment_config_id;
    }
    if (this.minimum_healthy_hosts !== null) {
      ih['minimum_healthy_hosts'] = this.minimum_healthy_hosts;
    }
    if (this.traffic_routing_config !== null) {
      ih['traffic_routing_config'] = this.traffic_routing_config;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_config';
  }
}

export class Aws_codedeploy_deployment_configHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_configHandler';
  }
}

export class Aws_codedeploy_deployment_config_minimum_healthy_hosts_125 implements PcoreValue {
  readonly type: string|null;
  readonly value: number|null;

  constructor({
    type = null,
    value = null
  }: {
    type?: string|null,
    value?: number|null
  }) {
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    if (this.value !== null) {
      ih['value'] = this.value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_config_minimum_healthy_hosts_125';
  }
}

export class Aws_codedeploy_deployment_config_traffic_routing_config_126 implements PcoreValue {
  readonly time_based_canary: Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_canary_127[]|null;
  readonly time_based_linear: Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_linear_128[]|null;
  readonly type: string|null;

  constructor({
    time_based_canary = null,
    time_based_linear = null,
    type = null
  }: {
    time_based_canary?: Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_canary_127[]|null,
    time_based_linear?: Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_linear_128[]|null,
    type?: string|null
  }) {
    this.time_based_canary = time_based_canary;
    this.time_based_linear = time_based_linear;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.time_based_canary !== null) {
      ih['time_based_canary'] = this.time_based_canary;
    }
    if (this.time_based_linear !== null) {
      ih['time_based_linear'] = this.time_based_linear;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_config_traffic_routing_config_126';
  }
}

export class Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_canary_127 implements PcoreValue {
  readonly interval: number|null;
  readonly percentage: number|null;

  constructor({
    interval = null,
    percentage = null
  }: {
    interval?: number|null,
    percentage?: number|null
  }) {
    this.interval = interval;
    this.percentage = percentage;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.interval !== null) {
      ih['interval'] = this.interval;
    }
    if (this.percentage !== null) {
      ih['percentage'] = this.percentage;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_canary_127';
  }
}

export class Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_linear_128 implements PcoreValue {
  readonly interval: number|null;
  readonly percentage: number|null;

  constructor({
    interval = null,
    percentage = null
  }: {
    interval?: number|null,
    percentage?: number|null
  }) {
    this.interval = interval;
    this.percentage = percentage;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.interval !== null) {
      ih['interval'] = this.interval;
    }
    if (this.percentage !== null) {
      ih['percentage'] = this.percentage;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_config_traffic_routing_config_126_time_based_linear_128';
  }
}

export class Aws_codedeploy_deployment_group implements PcoreValue {
  readonly app_name: string;
  readonly deployment_group_name: string;
  readonly service_role_arn: string;
  readonly aws_codedeploy_deployment_group_id: string|null;
  readonly alarm_configuration: Aws_codedeploy_deployment_group_alarm_configuration_129[]|null;
  readonly auto_rollback_configuration: Aws_codedeploy_deployment_group_auto_rollback_configuration_130[]|null;
  readonly autoscaling_groups: string[]|null;
  readonly blue_green_deployment_config: Aws_codedeploy_deployment_group_blue_green_deployment_config_131[]|null;
  readonly deployment_config_name: string|null;
  readonly deployment_style: Aws_codedeploy_deployment_group_deployment_style_135[]|null;
  readonly ec2_tag_filter: Aws_codedeploy_deployment_group_ec2_tag_filter_136[]|null;
  readonly ec2_tag_set: Aws_codedeploy_deployment_group_ec2_tag_set_137[]|null;
  readonly ecs_service: Aws_codedeploy_deployment_group_ecs_service_139[]|null;
  readonly load_balancer_info: Aws_codedeploy_deployment_group_load_balancer_info_140[]|null;
  readonly on_premises_instance_tag_filter: Aws_codedeploy_deployment_group_on_premises_instance_tag_filter_147[]|null;
  readonly trigger_configuration: Aws_codedeploy_deployment_group_trigger_configuration_148[]|null;

  constructor({
    app_name,
    deployment_group_name,
    service_role_arn,
    aws_codedeploy_deployment_group_id = null,
    alarm_configuration = null,
    auto_rollback_configuration = null,
    autoscaling_groups = null,
    blue_green_deployment_config = null,
    deployment_config_name = null,
    deployment_style = null,
    ec2_tag_filter = null,
    ec2_tag_set = null,
    ecs_service = null,
    load_balancer_info = null,
    on_premises_instance_tag_filter = null,
    trigger_configuration = null
  }: {
    app_name: string,
    deployment_group_name: string,
    service_role_arn: string,
    aws_codedeploy_deployment_group_id?: string|null,
    alarm_configuration?: Aws_codedeploy_deployment_group_alarm_configuration_129[]|null,
    auto_rollback_configuration?: Aws_codedeploy_deployment_group_auto_rollback_configuration_130[]|null,
    autoscaling_groups?: string[]|null,
    blue_green_deployment_config?: Aws_codedeploy_deployment_group_blue_green_deployment_config_131[]|null,
    deployment_config_name?: string|null,
    deployment_style?: Aws_codedeploy_deployment_group_deployment_style_135[]|null,
    ec2_tag_filter?: Aws_codedeploy_deployment_group_ec2_tag_filter_136[]|null,
    ec2_tag_set?: Aws_codedeploy_deployment_group_ec2_tag_set_137[]|null,
    ecs_service?: Aws_codedeploy_deployment_group_ecs_service_139[]|null,
    load_balancer_info?: Aws_codedeploy_deployment_group_load_balancer_info_140[]|null,
    on_premises_instance_tag_filter?: Aws_codedeploy_deployment_group_on_premises_instance_tag_filter_147[]|null,
    trigger_configuration?: Aws_codedeploy_deployment_group_trigger_configuration_148[]|null
  }) {
    this.app_name = app_name;
    this.deployment_group_name = deployment_group_name;
    this.service_role_arn = service_role_arn;
    this.aws_codedeploy_deployment_group_id = aws_codedeploy_deployment_group_id;
    this.alarm_configuration = alarm_configuration;
    this.auto_rollback_configuration = auto_rollback_configuration;
    this.autoscaling_groups = autoscaling_groups;
    this.blue_green_deployment_config = blue_green_deployment_config;
    this.deployment_config_name = deployment_config_name;
    this.deployment_style = deployment_style;
    this.ec2_tag_filter = ec2_tag_filter;
    this.ec2_tag_set = ec2_tag_set;
    this.ecs_service = ecs_service;
    this.load_balancer_info = load_balancer_info;
    this.on_premises_instance_tag_filter = on_premises_instance_tag_filter;
    this.trigger_configuration = trigger_configuration;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['app_name'] = this.app_name;
    ih['deployment_group_name'] = this.deployment_group_name;
    ih['service_role_arn'] = this.service_role_arn;
    if (this.aws_codedeploy_deployment_group_id !== null) {
      ih['aws_codedeploy_deployment_group_id'] = this.aws_codedeploy_deployment_group_id;
    }
    if (this.alarm_configuration !== null) {
      ih['alarm_configuration'] = this.alarm_configuration;
    }
    if (this.auto_rollback_configuration !== null) {
      ih['auto_rollback_configuration'] = this.auto_rollback_configuration;
    }
    if (this.autoscaling_groups !== null) {
      ih['autoscaling_groups'] = this.autoscaling_groups;
    }
    if (this.blue_green_deployment_config !== null) {
      ih['blue_green_deployment_config'] = this.blue_green_deployment_config;
    }
    if (this.deployment_config_name !== null) {
      ih['deployment_config_name'] = this.deployment_config_name;
    }
    if (this.deployment_style !== null) {
      ih['deployment_style'] = this.deployment_style;
    }
    if (this.ec2_tag_filter !== null) {
      ih['ec2_tag_filter'] = this.ec2_tag_filter;
    }
    if (this.ec2_tag_set !== null) {
      ih['ec2_tag_set'] = this.ec2_tag_set;
    }
    if (this.ecs_service !== null) {
      ih['ecs_service'] = this.ecs_service;
    }
    if (this.load_balancer_info !== null) {
      ih['load_balancer_info'] = this.load_balancer_info;
    }
    if (this.on_premises_instance_tag_filter !== null) {
      ih['on_premises_instance_tag_filter'] = this.on_premises_instance_tag_filter;
    }
    if (this.trigger_configuration !== null) {
      ih['trigger_configuration'] = this.trigger_configuration;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group';
  }
}

export class Aws_codedeploy_deployment_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_groupHandler';
  }
}

export class Aws_codedeploy_deployment_group_alarm_configuration_129 implements PcoreValue {
  readonly alarms: string[]|null;
  readonly enabled: boolean|null;
  readonly ignore_poll_alarm_failure: boolean|null;

  constructor({
    alarms = null,
    enabled = null,
    ignore_poll_alarm_failure = null
  }: {
    alarms?: string[]|null,
    enabled?: boolean|null,
    ignore_poll_alarm_failure?: boolean|null
  }) {
    this.alarms = alarms;
    this.enabled = enabled;
    this.ignore_poll_alarm_failure = ignore_poll_alarm_failure;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.alarms !== null) {
      ih['alarms'] = this.alarms;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.ignore_poll_alarm_failure !== null) {
      ih['ignore_poll_alarm_failure'] = this.ignore_poll_alarm_failure;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_alarm_configuration_129';
  }
}

export class Aws_codedeploy_deployment_group_auto_rollback_configuration_130 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly events: string[]|null;

  constructor({
    enabled = null,
    events = null
  }: {
    enabled?: boolean|null,
    events?: string[]|null
  }) {
    this.enabled = enabled;
    this.events = events;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.events !== null) {
      ih['events'] = this.events;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_auto_rollback_configuration_130';
  }
}

export class Aws_codedeploy_deployment_group_blue_green_deployment_config_131 implements PcoreValue {
  readonly deployment_ready_option: Aws_codedeploy_deployment_group_blue_green_deployment_config_131_deployment_ready_option_132[]|null;
  readonly green_fleet_provisioning_option: Aws_codedeploy_deployment_group_blue_green_deployment_config_131_green_fleet_provisioning_option_133[]|null;
  readonly terminate_blue_instances_on_deployment_success: Aws_codedeploy_deployment_group_blue_green_deployment_config_131_terminate_blue_instances_on_deployment_success_134[]|null;

  constructor({
    deployment_ready_option = null,
    green_fleet_provisioning_option = null,
    terminate_blue_instances_on_deployment_success = null
  }: {
    deployment_ready_option?: Aws_codedeploy_deployment_group_blue_green_deployment_config_131_deployment_ready_option_132[]|null,
    green_fleet_provisioning_option?: Aws_codedeploy_deployment_group_blue_green_deployment_config_131_green_fleet_provisioning_option_133[]|null,
    terminate_blue_instances_on_deployment_success?: Aws_codedeploy_deployment_group_blue_green_deployment_config_131_terminate_blue_instances_on_deployment_success_134[]|null
  }) {
    this.deployment_ready_option = deployment_ready_option;
    this.green_fleet_provisioning_option = green_fleet_provisioning_option;
    this.terminate_blue_instances_on_deployment_success = terminate_blue_instances_on_deployment_success;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.deployment_ready_option !== null) {
      ih['deployment_ready_option'] = this.deployment_ready_option;
    }
    if (this.green_fleet_provisioning_option !== null) {
      ih['green_fleet_provisioning_option'] = this.green_fleet_provisioning_option;
    }
    if (this.terminate_blue_instances_on_deployment_success !== null) {
      ih['terminate_blue_instances_on_deployment_success'] = this.terminate_blue_instances_on_deployment_success;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_blue_green_deployment_config_131';
  }
}

export class Aws_codedeploy_deployment_group_blue_green_deployment_config_131_deployment_ready_option_132 implements PcoreValue {
  readonly action_on_timeout: string|null;
  readonly wait_time_in_minutes: number|null;

  constructor({
    action_on_timeout = null,
    wait_time_in_minutes = null
  }: {
    action_on_timeout?: string|null,
    wait_time_in_minutes?: number|null
  }) {
    this.action_on_timeout = action_on_timeout;
    this.wait_time_in_minutes = wait_time_in_minutes;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.action_on_timeout !== null) {
      ih['action_on_timeout'] = this.action_on_timeout;
    }
    if (this.wait_time_in_minutes !== null) {
      ih['wait_time_in_minutes'] = this.wait_time_in_minutes;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_blue_green_deployment_config_131_deployment_ready_option_132';
  }
}

export class Aws_codedeploy_deployment_group_blue_green_deployment_config_131_green_fleet_provisioning_option_133 implements PcoreValue {
  readonly action: string|null;

  constructor({
    action = null
  }: {
    action?: string|null
  }) {
    this.action = action;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.action !== null) {
      ih['action'] = this.action;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_blue_green_deployment_config_131_green_fleet_provisioning_option_133';
  }
}

export class Aws_codedeploy_deployment_group_blue_green_deployment_config_131_terminate_blue_instances_on_deployment_success_134 implements PcoreValue {
  readonly action: string|null;
  readonly termination_wait_time_in_minutes: number|null;

  constructor({
    action = null,
    termination_wait_time_in_minutes = null
  }: {
    action?: string|null,
    termination_wait_time_in_minutes?: number|null
  }) {
    this.action = action;
    this.termination_wait_time_in_minutes = termination_wait_time_in_minutes;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.action !== null) {
      ih['action'] = this.action;
    }
    if (this.termination_wait_time_in_minutes !== null) {
      ih['termination_wait_time_in_minutes'] = this.termination_wait_time_in_minutes;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_blue_green_deployment_config_131_terminate_blue_instances_on_deployment_success_134';
  }
}

export class Aws_codedeploy_deployment_group_deployment_style_135 implements PcoreValue {
  readonly deployment_option: string|null;
  readonly deployment_type: string|null;

  constructor({
    deployment_option = null,
    deployment_type = null
  }: {
    deployment_option?: string|null,
    deployment_type?: string|null
  }) {
    this.deployment_option = deployment_option;
    this.deployment_type = deployment_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.deployment_option !== null) {
      ih['deployment_option'] = this.deployment_option;
    }
    if (this.deployment_type !== null) {
      ih['deployment_type'] = this.deployment_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_deployment_style_135';
  }
}

export class Aws_codedeploy_deployment_group_ec2_tag_filter_136 implements PcoreValue {
  readonly key: string|null;
  readonly type: string|null;
  readonly value: string|null;

  constructor({
    key = null,
    type = null,
    value = null
  }: {
    key?: string|null,
    type?: string|null,
    value?: string|null
  }) {
    this.key = key;
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.key !== null) {
      ih['key'] = this.key;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    if (this.value !== null) {
      ih['value'] = this.value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_ec2_tag_filter_136';
  }
}

export class Aws_codedeploy_deployment_group_ec2_tag_set_137 implements PcoreValue {
  readonly ec2_tag_filter: Aws_codedeploy_deployment_group_ec2_tag_set_137_ec2_tag_filter_138[]|null;

  constructor({
    ec2_tag_filter = null
  }: {
    ec2_tag_filter?: Aws_codedeploy_deployment_group_ec2_tag_set_137_ec2_tag_filter_138[]|null
  }) {
    this.ec2_tag_filter = ec2_tag_filter;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.ec2_tag_filter !== null) {
      ih['ec2_tag_filter'] = this.ec2_tag_filter;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_ec2_tag_set_137';
  }
}

export class Aws_codedeploy_deployment_group_ec2_tag_set_137_ec2_tag_filter_138 implements PcoreValue {
  readonly key: string|null;
  readonly type: string|null;
  readonly value: string|null;

  constructor({
    key = null,
    type = null,
    value = null
  }: {
    key?: string|null,
    type?: string|null,
    value?: string|null
  }) {
    this.key = key;
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.key !== null) {
      ih['key'] = this.key;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    if (this.value !== null) {
      ih['value'] = this.value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_ec2_tag_set_137_ec2_tag_filter_138';
  }
}

export class Aws_codedeploy_deployment_group_ecs_service_139 implements PcoreValue {
  readonly cluster_name: string;
  readonly service_name: string;

  constructor({
    cluster_name,
    service_name
  }: {
    cluster_name: string,
    service_name: string
  }) {
    this.cluster_name = cluster_name;
    this.service_name = service_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_name'] = this.cluster_name;
    ih['service_name'] = this.service_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_ecs_service_139';
  }
}

export class Aws_codedeploy_deployment_group_load_balancer_info_140 implements PcoreValue {
  readonly elb_info: Aws_codedeploy_deployment_group_load_balancer_info_140_elb_info_141[]|null;
  readonly target_group_info: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_info_142[]|null;
  readonly target_group_pair_info: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143[]|null;

  constructor({
    elb_info = null,
    target_group_info = null,
    target_group_pair_info = null
  }: {
    elb_info?: Aws_codedeploy_deployment_group_load_balancer_info_140_elb_info_141[]|null,
    target_group_info?: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_info_142[]|null,
    target_group_pair_info?: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143[]|null
  }) {
    this.elb_info = elb_info;
    this.target_group_info = target_group_info;
    this.target_group_pair_info = target_group_pair_info;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.elb_info !== null) {
      ih['elb_info'] = this.elb_info;
    }
    if (this.target_group_info !== null) {
      ih['target_group_info'] = this.target_group_info;
    }
    if (this.target_group_pair_info !== null) {
      ih['target_group_pair_info'] = this.target_group_pair_info;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_load_balancer_info_140';
  }
}

export class Aws_codedeploy_deployment_group_load_balancer_info_140_elb_info_141 implements PcoreValue {
  readonly name: string|null;

  constructor({
    name = null
  }: {
    name?: string|null
  }) {
    this.name = name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_load_balancer_info_140_elb_info_141';
  }
}

export class Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_info_142 implements PcoreValue {
  readonly name: string|null;

  constructor({
    name = null
  }: {
    name?: string|null
  }) {
    this.name = name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_info_142';
  }
}

export class Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143 implements PcoreValue {
  readonly prod_traffic_route: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_prod_traffic_route_144[];
  readonly target_group: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_target_group_145[];
  readonly test_traffic_route: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_test_traffic_route_146[]|null;

  constructor({
    prod_traffic_route,
    target_group,
    test_traffic_route = null
  }: {
    prod_traffic_route: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_prod_traffic_route_144[],
    target_group: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_target_group_145[],
    test_traffic_route?: Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_test_traffic_route_146[]|null
  }) {
    this.prod_traffic_route = prod_traffic_route;
    this.target_group = target_group;
    this.test_traffic_route = test_traffic_route;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['prod_traffic_route'] = this.prod_traffic_route;
    ih['target_group'] = this.target_group;
    if (this.test_traffic_route !== null) {
      ih['test_traffic_route'] = this.test_traffic_route;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143';
  }
}

export class Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_prod_traffic_route_144 implements PcoreValue {
  readonly listener_arns: string[];

  constructor({
    listener_arns
  }: {
    listener_arns: string[]
  }) {
    this.listener_arns = listener_arns;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['listener_arns'] = this.listener_arns;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_prod_traffic_route_144';
  }
}

export class Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_target_group_145 implements PcoreValue {
  readonly name: string;

  constructor({
    name
  }: {
    name: string
  }) {
    this.name = name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_target_group_145';
  }
}

export class Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_test_traffic_route_146 implements PcoreValue {
  readonly listener_arns: string[];

  constructor({
    listener_arns
  }: {
    listener_arns: string[]
  }) {
    this.listener_arns = listener_arns;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['listener_arns'] = this.listener_arns;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_load_balancer_info_140_target_group_pair_info_143_test_traffic_route_146';
  }
}

export class Aws_codedeploy_deployment_group_on_premises_instance_tag_filter_147 implements PcoreValue {
  readonly key: string|null;
  readonly type: string|null;
  readonly value: string|null;

  constructor({
    key = null,
    type = null,
    value = null
  }: {
    key?: string|null,
    type?: string|null,
    value?: string|null
  }) {
    this.key = key;
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.key !== null) {
      ih['key'] = this.key;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    if (this.value !== null) {
      ih['value'] = this.value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_on_premises_instance_tag_filter_147';
  }
}

export class Aws_codedeploy_deployment_group_trigger_configuration_148 implements PcoreValue {
  readonly trigger_events: string[];
  readonly trigger_name: string;
  readonly trigger_target_arn: string;

  constructor({
    trigger_events,
    trigger_name,
    trigger_target_arn
  }: {
    trigger_events: string[],
    trigger_name: string,
    trigger_target_arn: string
  }) {
    this.trigger_events = trigger_events;
    this.trigger_name = trigger_name;
    this.trigger_target_arn = trigger_target_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['trigger_events'] = this.trigger_events;
    ih['trigger_name'] = this.trigger_name;
    ih['trigger_target_arn'] = this.trigger_target_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codedeploy_deployment_group_trigger_configuration_148';
  }
}

export class Aws_codepipeline implements PcoreValue {
  readonly artifact_store: Aws_codepipeline_artifact_store_149[];
  readonly name: string;
  readonly role_arn: string;
  readonly stage: Aws_codepipeline_stage_151[];
  readonly aws_codepipeline_id: string|null;
  readonly arn: string|null;

  constructor({
    artifact_store,
    name,
    role_arn,
    stage,
    aws_codepipeline_id = null,
    arn = null
  }: {
    artifact_store: Aws_codepipeline_artifact_store_149[],
    name: string,
    role_arn: string,
    stage: Aws_codepipeline_stage_151[],
    aws_codepipeline_id?: string|null,
    arn?: string|null
  }) {
    this.artifact_store = artifact_store;
    this.name = name;
    this.role_arn = role_arn;
    this.stage = stage;
    this.aws_codepipeline_id = aws_codepipeline_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['artifact_store'] = this.artifact_store;
    ih['name'] = this.name;
    ih['role_arn'] = this.role_arn;
    ih['stage'] = this.stage;
    if (this.aws_codepipeline_id !== null) {
      ih['aws_codepipeline_id'] = this.aws_codepipeline_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline';
  }
}

export class Aws_codepipelineHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipelineHandler';
  }
}

export class Aws_codepipeline_artifact_store_149 implements PcoreValue {
  readonly location: string;
  readonly type: string;
  readonly encryption_key: Aws_codepipeline_artifact_store_149_encryption_key_150[]|null;

  constructor({
    location,
    type,
    encryption_key = null
  }: {
    location: string,
    type: string,
    encryption_key?: Aws_codepipeline_artifact_store_149_encryption_key_150[]|null
  }) {
    this.location = location;
    this.type = type;
    this.encryption_key = encryption_key;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['location'] = this.location;
    ih['type'] = this.type;
    if (this.encryption_key !== null) {
      ih['encryption_key'] = this.encryption_key;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline_artifact_store_149';
  }
}

export class Aws_codepipeline_artifact_store_149_encryption_key_150 implements PcoreValue {
  readonly id: string;
  readonly type: string;

  constructor({
    id,
    type
  }: {
    id: string,
    type: string
  }) {
    this.id = id;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['id'] = this.id;
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline_artifact_store_149_encryption_key_150';
  }
}

export class Aws_codepipeline_stage_151 implements PcoreValue {
  readonly action: Aws_codepipeline_stage_151_action_152[];
  readonly name: string;

  constructor({
    action,
    name
  }: {
    action: Aws_codepipeline_stage_151_action_152[],
    name: string
  }) {
    this.action = action;
    this.name = name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['name'] = this.name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline_stage_151';
  }
}

export class Aws_codepipeline_stage_151_action_152 implements PcoreValue {
  readonly category: string;
  readonly name: string;
  readonly owner: string;
  readonly provider: string;
  readonly version: string;
  readonly configuration: {[s: string]: string}|null;
  readonly input_artifacts: string[]|null;
  readonly output_artifacts: string[]|null;
  readonly role_arn: string|null;
  readonly run_order: number|null;

  constructor({
    category,
    name,
    owner,
    provider,
    version,
    configuration = null,
    input_artifacts = null,
    output_artifacts = null,
    role_arn = null,
    run_order = null
  }: {
    category: string,
    name: string,
    owner: string,
    provider: string,
    version: string,
    configuration?: {[s: string]: string}|null,
    input_artifacts?: string[]|null,
    output_artifacts?: string[]|null,
    role_arn?: string|null,
    run_order?: number|null
  }) {
    this.category = category;
    this.name = name;
    this.owner = owner;
    this.provider = provider;
    this.version = version;
    this.configuration = configuration;
    this.input_artifacts = input_artifacts;
    this.output_artifacts = output_artifacts;
    this.role_arn = role_arn;
    this.run_order = run_order;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['category'] = this.category;
    ih['name'] = this.name;
    ih['owner'] = this.owner;
    ih['provider'] = this.provider;
    ih['version'] = this.version;
    if (this.configuration !== null) {
      ih['configuration'] = this.configuration;
    }
    if (this.input_artifacts !== null) {
      ih['input_artifacts'] = this.input_artifacts;
    }
    if (this.output_artifacts !== null) {
      ih['output_artifacts'] = this.output_artifacts;
    }
    if (this.role_arn !== null) {
      ih['role_arn'] = this.role_arn;
    }
    if (this.run_order !== null) {
      ih['run_order'] = this.run_order;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline_stage_151_action_152';
  }
}

export class Aws_codepipeline_webhook implements PcoreValue {
  readonly authentication: string;
  readonly filter: Aws_codepipeline_webhook_filter_154[];
  readonly name: string;
  readonly target_action: string;
  readonly target_pipeline: string;
  readonly aws_codepipeline_webhook_id: string|null;
  readonly authentication_configuration: Aws_codepipeline_webhook_authentication_configuration_153[]|null;
  readonly url: string|null;

  constructor({
    authentication,
    filter,
    name,
    target_action,
    target_pipeline,
    aws_codepipeline_webhook_id = null,
    authentication_configuration = null,
    url = null
  }: {
    authentication: string,
    filter: Aws_codepipeline_webhook_filter_154[],
    name: string,
    target_action: string,
    target_pipeline: string,
    aws_codepipeline_webhook_id?: string|null,
    authentication_configuration?: Aws_codepipeline_webhook_authentication_configuration_153[]|null,
    url?: string|null
  }) {
    this.authentication = authentication;
    this.filter = filter;
    this.name = name;
    this.target_action = target_action;
    this.target_pipeline = target_pipeline;
    this.aws_codepipeline_webhook_id = aws_codepipeline_webhook_id;
    this.authentication_configuration = authentication_configuration;
    this.url = url;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['authentication'] = this.authentication;
    ih['filter'] = this.filter;
    ih['name'] = this.name;
    ih['target_action'] = this.target_action;
    ih['target_pipeline'] = this.target_pipeline;
    if (this.aws_codepipeline_webhook_id !== null) {
      ih['aws_codepipeline_webhook_id'] = this.aws_codepipeline_webhook_id;
    }
    if (this.authentication_configuration !== null) {
      ih['authentication_configuration'] = this.authentication_configuration;
    }
    if (this.url !== null) {
      ih['url'] = this.url;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline_webhook';
  }
}

export class Aws_codepipeline_webhookHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline_webhookHandler';
  }
}

export class Aws_codepipeline_webhook_authentication_configuration_153 implements PcoreValue {
  readonly allowed_ip_range: string|null;
  readonly secret_token: string|null;

  constructor({
    allowed_ip_range = null,
    secret_token = null
  }: {
    allowed_ip_range?: string|null,
    secret_token?: string|null
  }) {
    this.allowed_ip_range = allowed_ip_range;
    this.secret_token = secret_token;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allowed_ip_range !== null) {
      ih['allowed_ip_range'] = this.allowed_ip_range;
    }
    if (this.secret_token !== null) {
      ih['secret_token'] = this.secret_token;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline_webhook_authentication_configuration_153';
  }
}

export class Aws_codepipeline_webhook_filter_154 implements PcoreValue {
  readonly json_path: string;
  readonly match_equals: string;

  constructor({
    json_path,
    match_equals
  }: {
    json_path: string,
    match_equals: string
  }) {
    this.json_path = json_path;
    this.match_equals = match_equals;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['json_path'] = this.json_path;
    ih['match_equals'] = this.match_equals;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_codepipeline_webhook_filter_154';
  }
}

export class Aws_cognito_identity_pool implements PcoreValue {
  readonly identity_pool_name: string;
  readonly aws_cognito_identity_pool_id: string|null;
  readonly allow_unauthenticated_identities: boolean|null;
  readonly arn: string|null;
  readonly cognito_identity_providers: Aws_cognito_identity_pool_cognito_identity_providers_155[]|null;
  readonly developer_provider_name: string|null;
  readonly openid_connect_provider_arns: string[]|null;
  readonly saml_provider_arns: string[]|null;
  readonly supported_login_providers: {[s: string]: string}|null;

  constructor({
    identity_pool_name,
    aws_cognito_identity_pool_id = null,
    allow_unauthenticated_identities = null,
    arn = null,
    cognito_identity_providers = null,
    developer_provider_name = null,
    openid_connect_provider_arns = null,
    saml_provider_arns = null,
    supported_login_providers = null
  }: {
    identity_pool_name: string,
    aws_cognito_identity_pool_id?: string|null,
    allow_unauthenticated_identities?: boolean|null,
    arn?: string|null,
    cognito_identity_providers?: Aws_cognito_identity_pool_cognito_identity_providers_155[]|null,
    developer_provider_name?: string|null,
    openid_connect_provider_arns?: string[]|null,
    saml_provider_arns?: string[]|null,
    supported_login_providers?: {[s: string]: string}|null
  }) {
    this.identity_pool_name = identity_pool_name;
    this.aws_cognito_identity_pool_id = aws_cognito_identity_pool_id;
    this.allow_unauthenticated_identities = allow_unauthenticated_identities;
    this.arn = arn;
    this.cognito_identity_providers = cognito_identity_providers;
    this.developer_provider_name = developer_provider_name;
    this.openid_connect_provider_arns = openid_connect_provider_arns;
    this.saml_provider_arns = saml_provider_arns;
    this.supported_login_providers = supported_login_providers;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['identity_pool_name'] = this.identity_pool_name;
    if (this.aws_cognito_identity_pool_id !== null) {
      ih['aws_cognito_identity_pool_id'] = this.aws_cognito_identity_pool_id;
    }
    if (this.allow_unauthenticated_identities !== null) {
      ih['allow_unauthenticated_identities'] = this.allow_unauthenticated_identities;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cognito_identity_providers !== null) {
      ih['cognito_identity_providers'] = this.cognito_identity_providers;
    }
    if (this.developer_provider_name !== null) {
      ih['developer_provider_name'] = this.developer_provider_name;
    }
    if (this.openid_connect_provider_arns !== null) {
      ih['openid_connect_provider_arns'] = this.openid_connect_provider_arns;
    }
    if (this.saml_provider_arns !== null) {
      ih['saml_provider_arns'] = this.saml_provider_arns;
    }
    if (this.supported_login_providers !== null) {
      ih['supported_login_providers'] = this.supported_login_providers;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_pool';
  }
}

export class Aws_cognito_identity_poolHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_poolHandler';
  }
}

export class Aws_cognito_identity_pool_cognito_identity_providers_155 implements PcoreValue {
  readonly client_id: string|null;
  readonly provider_name: string|null;
  readonly server_side_token_check: boolean|null;

  constructor({
    client_id = null,
    provider_name = null,
    server_side_token_check = null
  }: {
    client_id?: string|null,
    provider_name?: string|null,
    server_side_token_check?: boolean|null
  }) {
    this.client_id = client_id;
    this.provider_name = provider_name;
    this.server_side_token_check = server_side_token_check;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.client_id !== null) {
      ih['client_id'] = this.client_id;
    }
    if (this.provider_name !== null) {
      ih['provider_name'] = this.provider_name;
    }
    if (this.server_side_token_check !== null) {
      ih['server_side_token_check'] = this.server_side_token_check;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_pool_cognito_identity_providers_155';
  }
}

export class Aws_cognito_identity_pool_roles_attachment implements PcoreValue {
  readonly identity_pool_id: string;
  readonly roles: {[s: string]: string};
  readonly aws_cognito_identity_pool_roles_attachment_id: string|null;
  readonly role_mapping: Aws_cognito_identity_pool_roles_attachment_role_mapping_156[]|null;

  constructor({
    identity_pool_id,
    roles,
    aws_cognito_identity_pool_roles_attachment_id = null,
    role_mapping = null
  }: {
    identity_pool_id: string,
    roles: {[s: string]: string},
    aws_cognito_identity_pool_roles_attachment_id?: string|null,
    role_mapping?: Aws_cognito_identity_pool_roles_attachment_role_mapping_156[]|null
  }) {
    this.identity_pool_id = identity_pool_id;
    this.roles = roles;
    this.aws_cognito_identity_pool_roles_attachment_id = aws_cognito_identity_pool_roles_attachment_id;
    this.role_mapping = role_mapping;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['identity_pool_id'] = this.identity_pool_id;
    ih['roles'] = this.roles;
    if (this.aws_cognito_identity_pool_roles_attachment_id !== null) {
      ih['aws_cognito_identity_pool_roles_attachment_id'] = this.aws_cognito_identity_pool_roles_attachment_id;
    }
    if (this.role_mapping !== null) {
      ih['role_mapping'] = this.role_mapping;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_pool_roles_attachment';
  }
}

export class Aws_cognito_identity_pool_roles_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_pool_roles_attachmentHandler';
  }
}

export class Aws_cognito_identity_pool_roles_attachment_role_mapping_156 implements PcoreValue {
  readonly identity_provider: string;
  readonly type: string;
  readonly ambiguous_role_resolution: string|null;
  readonly mapping_rule: Aws_cognito_identity_pool_roles_attachment_role_mapping_156_mapping_rule_157[]|null;

  constructor({
    identity_provider,
    type,
    ambiguous_role_resolution = null,
    mapping_rule = null
  }: {
    identity_provider: string,
    type: string,
    ambiguous_role_resolution?: string|null,
    mapping_rule?: Aws_cognito_identity_pool_roles_attachment_role_mapping_156_mapping_rule_157[]|null
  }) {
    this.identity_provider = identity_provider;
    this.type = type;
    this.ambiguous_role_resolution = ambiguous_role_resolution;
    this.mapping_rule = mapping_rule;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['identity_provider'] = this.identity_provider;
    ih['type'] = this.type;
    if (this.ambiguous_role_resolution !== null) {
      ih['ambiguous_role_resolution'] = this.ambiguous_role_resolution;
    }
    if (this.mapping_rule !== null) {
      ih['mapping_rule'] = this.mapping_rule;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_pool_roles_attachment_role_mapping_156';
  }
}

export class Aws_cognito_identity_pool_roles_attachment_role_mapping_156_mapping_rule_157 implements PcoreValue {
  readonly claim: string;
  readonly match_type: string;
  readonly role_arn: string;
  readonly value: string;

  constructor({
    claim,
    match_type,
    role_arn,
    value
  }: {
    claim: string,
    match_type: string,
    role_arn: string,
    value: string
  }) {
    this.claim = claim;
    this.match_type = match_type;
    this.role_arn = role_arn;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['claim'] = this.claim;
    ih['match_type'] = this.match_type;
    ih['role_arn'] = this.role_arn;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_pool_roles_attachment_role_mapping_156_mapping_rule_157';
  }
}

export class Aws_cognito_identity_provider implements PcoreValue {
  readonly provider_details: {[s: string]: string};
  readonly provider_name: string;
  readonly provider_type: string;
  readonly user_pool_id: string;
  readonly aws_cognito_identity_provider_id: string|null;
  readonly attribute_mapping: {[s: string]: string}|null;
  readonly idp_identifiers: string[]|null;

  constructor({
    provider_details,
    provider_name,
    provider_type,
    user_pool_id,
    aws_cognito_identity_provider_id = null,
    attribute_mapping = null,
    idp_identifiers = null
  }: {
    provider_details: {[s: string]: string},
    provider_name: string,
    provider_type: string,
    user_pool_id: string,
    aws_cognito_identity_provider_id?: string|null,
    attribute_mapping?: {[s: string]: string}|null,
    idp_identifiers?: string[]|null
  }) {
    this.provider_details = provider_details;
    this.provider_name = provider_name;
    this.provider_type = provider_type;
    this.user_pool_id = user_pool_id;
    this.aws_cognito_identity_provider_id = aws_cognito_identity_provider_id;
    this.attribute_mapping = attribute_mapping;
    this.idp_identifiers = idp_identifiers;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['provider_details'] = this.provider_details;
    ih['provider_name'] = this.provider_name;
    ih['provider_type'] = this.provider_type;
    ih['user_pool_id'] = this.user_pool_id;
    if (this.aws_cognito_identity_provider_id !== null) {
      ih['aws_cognito_identity_provider_id'] = this.aws_cognito_identity_provider_id;
    }
    if (this.attribute_mapping !== null) {
      ih['attribute_mapping'] = this.attribute_mapping;
    }
    if (this.idp_identifiers !== null) {
      ih['idp_identifiers'] = this.idp_identifiers;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_provider';
  }
}

export class Aws_cognito_identity_providerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_identity_providerHandler';
  }
}

export class Aws_cognito_resource_server implements PcoreValue {
  readonly identifier: string;
  readonly name: string;
  readonly user_pool_id: string;
  readonly aws_cognito_resource_server_id: string|null;
  readonly scope: Aws_cognito_resource_server_scope_158[]|null;
  readonly scope_identifiers: string[]|null;

  constructor({
    identifier,
    name,
    user_pool_id,
    aws_cognito_resource_server_id = null,
    scope = null,
    scope_identifiers = null
  }: {
    identifier: string,
    name: string,
    user_pool_id: string,
    aws_cognito_resource_server_id?: string|null,
    scope?: Aws_cognito_resource_server_scope_158[]|null,
    scope_identifiers?: string[]|null
  }) {
    this.identifier = identifier;
    this.name = name;
    this.user_pool_id = user_pool_id;
    this.aws_cognito_resource_server_id = aws_cognito_resource_server_id;
    this.scope = scope;
    this.scope_identifiers = scope_identifiers;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['identifier'] = this.identifier;
    ih['name'] = this.name;
    ih['user_pool_id'] = this.user_pool_id;
    if (this.aws_cognito_resource_server_id !== null) {
      ih['aws_cognito_resource_server_id'] = this.aws_cognito_resource_server_id;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.scope_identifiers !== null) {
      ih['scope_identifiers'] = this.scope_identifiers;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_resource_server';
  }
}

export class Aws_cognito_resource_serverHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_resource_serverHandler';
  }
}

export class Aws_cognito_resource_server_scope_158 implements PcoreValue {
  readonly scope_description: string;
  readonly scope_name: string;

  constructor({
    scope_description,
    scope_name
  }: {
    scope_description: string,
    scope_name: string
  }) {
    this.scope_description = scope_description;
    this.scope_name = scope_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['scope_description'] = this.scope_description;
    ih['scope_name'] = this.scope_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_resource_server_scope_158';
  }
}

export class Aws_cognito_user_group implements PcoreValue {
  readonly name: string;
  readonly user_pool_id: string;
  readonly aws_cognito_user_group_id: string|null;
  readonly description: string|null;
  readonly precedence: number|null;
  readonly role_arn: string|null;

  constructor({
    name,
    user_pool_id,
    aws_cognito_user_group_id = null,
    description = null,
    precedence = null,
    role_arn = null
  }: {
    name: string,
    user_pool_id: string,
    aws_cognito_user_group_id?: string|null,
    description?: string|null,
    precedence?: number|null,
    role_arn?: string|null
  }) {
    this.name = name;
    this.user_pool_id = user_pool_id;
    this.aws_cognito_user_group_id = aws_cognito_user_group_id;
    this.description = description;
    this.precedence = precedence;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['user_pool_id'] = this.user_pool_id;
    if (this.aws_cognito_user_group_id !== null) {
      ih['aws_cognito_user_group_id'] = this.aws_cognito_user_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.precedence !== null) {
      ih['precedence'] = this.precedence;
    }
    if (this.role_arn !== null) {
      ih['role_arn'] = this.role_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_group';
  }
}

export class Aws_cognito_user_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_groupHandler';
  }
}

export class Aws_cognito_user_pool implements PcoreValue {
  readonly name: string;
  readonly aws_cognito_user_pool_id: string|null;
  readonly admin_create_user_config: Aws_cognito_user_pool_admin_create_user_config_159[]|null;
  readonly alias_attributes: string[]|null;
  readonly arn: string|null;
  readonly auto_verified_attributes: string[]|null;
  readonly creation_date: string|null;
  readonly device_configuration: Aws_cognito_user_pool_device_configuration_161[]|null;
  readonly email_configuration: Aws_cognito_user_pool_email_configuration_162[]|null;
  readonly email_verification_message: string|null;
  readonly email_verification_subject: string|null;
  readonly endpoint: string|null;
  readonly lambda_config: Aws_cognito_user_pool_lambda_config_163[]|null;
  readonly last_modified_date: string|null;
  readonly mfa_configuration: string|null;
  readonly password_policy: Aws_cognito_user_pool_password_policy_164[]|null;
  readonly schema: Aws_cognito_user_pool_schema_165[]|null;
  readonly sms_authentication_message: string|null;
  readonly sms_configuration: Aws_cognito_user_pool_sms_configuration_168[]|null;
  readonly sms_verification_message: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly username_attributes: string[]|null;
  readonly verification_message_template: Aws_cognito_user_pool_verification_message_template_169[]|null;

  constructor({
    name,
    aws_cognito_user_pool_id = null,
    admin_create_user_config = null,
    alias_attributes = null,
    arn = null,
    auto_verified_attributes = null,
    creation_date = null,
    device_configuration = null,
    email_configuration = null,
    email_verification_message = null,
    email_verification_subject = null,
    endpoint = null,
    lambda_config = null,
    last_modified_date = null,
    mfa_configuration = null,
    password_policy = null,
    schema = null,
    sms_authentication_message = null,
    sms_configuration = null,
    sms_verification_message = null,
    tags = null,
    username_attributes = null,
    verification_message_template = null
  }: {
    name: string,
    aws_cognito_user_pool_id?: string|null,
    admin_create_user_config?: Aws_cognito_user_pool_admin_create_user_config_159[]|null,
    alias_attributes?: string[]|null,
    arn?: string|null,
    auto_verified_attributes?: string[]|null,
    creation_date?: string|null,
    device_configuration?: Aws_cognito_user_pool_device_configuration_161[]|null,
    email_configuration?: Aws_cognito_user_pool_email_configuration_162[]|null,
    email_verification_message?: string|null,
    email_verification_subject?: string|null,
    endpoint?: string|null,
    lambda_config?: Aws_cognito_user_pool_lambda_config_163[]|null,
    last_modified_date?: string|null,
    mfa_configuration?: string|null,
    password_policy?: Aws_cognito_user_pool_password_policy_164[]|null,
    schema?: Aws_cognito_user_pool_schema_165[]|null,
    sms_authentication_message?: string|null,
    sms_configuration?: Aws_cognito_user_pool_sms_configuration_168[]|null,
    sms_verification_message?: string|null,
    tags?: {[s: string]: string}|null,
    username_attributes?: string[]|null,
    verification_message_template?: Aws_cognito_user_pool_verification_message_template_169[]|null
  }) {
    this.name = name;
    this.aws_cognito_user_pool_id = aws_cognito_user_pool_id;
    this.admin_create_user_config = admin_create_user_config;
    this.alias_attributes = alias_attributes;
    this.arn = arn;
    this.auto_verified_attributes = auto_verified_attributes;
    this.creation_date = creation_date;
    this.device_configuration = device_configuration;
    this.email_configuration = email_configuration;
    this.email_verification_message = email_verification_message;
    this.email_verification_subject = email_verification_subject;
    this.endpoint = endpoint;
    this.lambda_config = lambda_config;
    this.last_modified_date = last_modified_date;
    this.mfa_configuration = mfa_configuration;
    this.password_policy = password_policy;
    this.schema = schema;
    this.sms_authentication_message = sms_authentication_message;
    this.sms_configuration = sms_configuration;
    this.sms_verification_message = sms_verification_message;
    this.tags = tags;
    this.username_attributes = username_attributes;
    this.verification_message_template = verification_message_template;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_cognito_user_pool_id !== null) {
      ih['aws_cognito_user_pool_id'] = this.aws_cognito_user_pool_id;
    }
    if (this.admin_create_user_config !== null) {
      ih['admin_create_user_config'] = this.admin_create_user_config;
    }
    if (this.alias_attributes !== null) {
      ih['alias_attributes'] = this.alias_attributes;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.auto_verified_attributes !== null) {
      ih['auto_verified_attributes'] = this.auto_verified_attributes;
    }
    if (this.creation_date !== null) {
      ih['creation_date'] = this.creation_date;
    }
    if (this.device_configuration !== null) {
      ih['device_configuration'] = this.device_configuration;
    }
    if (this.email_configuration !== null) {
      ih['email_configuration'] = this.email_configuration;
    }
    if (this.email_verification_message !== null) {
      ih['email_verification_message'] = this.email_verification_message;
    }
    if (this.email_verification_subject !== null) {
      ih['email_verification_subject'] = this.email_verification_subject;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.lambda_config !== null) {
      ih['lambda_config'] = this.lambda_config;
    }
    if (this.last_modified_date !== null) {
      ih['last_modified_date'] = this.last_modified_date;
    }
    if (this.mfa_configuration !== null) {
      ih['mfa_configuration'] = this.mfa_configuration;
    }
    if (this.password_policy !== null) {
      ih['password_policy'] = this.password_policy;
    }
    if (this.schema !== null) {
      ih['schema'] = this.schema;
    }
    if (this.sms_authentication_message !== null) {
      ih['sms_authentication_message'] = this.sms_authentication_message;
    }
    if (this.sms_configuration !== null) {
      ih['sms_configuration'] = this.sms_configuration;
    }
    if (this.sms_verification_message !== null) {
      ih['sms_verification_message'] = this.sms_verification_message;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.username_attributes !== null) {
      ih['username_attributes'] = this.username_attributes;
    }
    if (this.verification_message_template !== null) {
      ih['verification_message_template'] = this.verification_message_template;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool';
  }
}

export class Aws_cognito_user_poolHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_poolHandler';
  }
}

export class Aws_cognito_user_pool_admin_create_user_config_159 implements PcoreValue {
  readonly allow_admin_create_user_only: boolean|null;
  readonly invite_message_template: Aws_cognito_user_pool_admin_create_user_config_159_invite_message_template_160[]|null;
  readonly unused_account_validity_days: number|null;

  constructor({
    allow_admin_create_user_only = null,
    invite_message_template = null,
    unused_account_validity_days = null
  }: {
    allow_admin_create_user_only?: boolean|null,
    invite_message_template?: Aws_cognito_user_pool_admin_create_user_config_159_invite_message_template_160[]|null,
    unused_account_validity_days?: number|null
  }) {
    this.allow_admin_create_user_only = allow_admin_create_user_only;
    this.invite_message_template = invite_message_template;
    this.unused_account_validity_days = unused_account_validity_days;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allow_admin_create_user_only !== null) {
      ih['allow_admin_create_user_only'] = this.allow_admin_create_user_only;
    }
    if (this.invite_message_template !== null) {
      ih['invite_message_template'] = this.invite_message_template;
    }
    if (this.unused_account_validity_days !== null) {
      ih['unused_account_validity_days'] = this.unused_account_validity_days;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_admin_create_user_config_159';
  }
}

export class Aws_cognito_user_pool_admin_create_user_config_159_invite_message_template_160 implements PcoreValue {
  readonly email_message: string|null;
  readonly email_subject: string|null;
  readonly sms_message: string|null;

  constructor({
    email_message = null,
    email_subject = null,
    sms_message = null
  }: {
    email_message?: string|null,
    email_subject?: string|null,
    sms_message?: string|null
  }) {
    this.email_message = email_message;
    this.email_subject = email_subject;
    this.sms_message = sms_message;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.email_message !== null) {
      ih['email_message'] = this.email_message;
    }
    if (this.email_subject !== null) {
      ih['email_subject'] = this.email_subject;
    }
    if (this.sms_message !== null) {
      ih['sms_message'] = this.sms_message;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_admin_create_user_config_159_invite_message_template_160';
  }
}

export class Aws_cognito_user_pool_client implements PcoreValue {
  readonly name: string;
  readonly user_pool_id: string;
  readonly aws_cognito_user_pool_client_id: string|null;
  readonly allowed_oauth_flows: string[]|null;
  readonly allowed_oauth_flows_user_pool_client: boolean|null;
  readonly allowed_oauth_scopes: string[]|null;
  readonly callback_urls: string[]|null;
  readonly client_secret: string|null;
  readonly default_redirect_uri: string|null;
  readonly explicit_auth_flows: string[]|null;
  readonly generate_secret: boolean|null;
  readonly logout_urls: string[]|null;
  readonly read_attributes: string[]|null;
  readonly refresh_token_validity: number|null;
  readonly supported_identity_providers: string[]|null;
  readonly write_attributes: string[]|null;

  constructor({
    name,
    user_pool_id,
    aws_cognito_user_pool_client_id = null,
    allowed_oauth_flows = null,
    allowed_oauth_flows_user_pool_client = null,
    allowed_oauth_scopes = null,
    callback_urls = null,
    client_secret = null,
    default_redirect_uri = null,
    explicit_auth_flows = null,
    generate_secret = null,
    logout_urls = null,
    read_attributes = null,
    refresh_token_validity = null,
    supported_identity_providers = null,
    write_attributes = null
  }: {
    name: string,
    user_pool_id: string,
    aws_cognito_user_pool_client_id?: string|null,
    allowed_oauth_flows?: string[]|null,
    allowed_oauth_flows_user_pool_client?: boolean|null,
    allowed_oauth_scopes?: string[]|null,
    callback_urls?: string[]|null,
    client_secret?: string|null,
    default_redirect_uri?: string|null,
    explicit_auth_flows?: string[]|null,
    generate_secret?: boolean|null,
    logout_urls?: string[]|null,
    read_attributes?: string[]|null,
    refresh_token_validity?: number|null,
    supported_identity_providers?: string[]|null,
    write_attributes?: string[]|null
  }) {
    this.name = name;
    this.user_pool_id = user_pool_id;
    this.aws_cognito_user_pool_client_id = aws_cognito_user_pool_client_id;
    this.allowed_oauth_flows = allowed_oauth_flows;
    this.allowed_oauth_flows_user_pool_client = allowed_oauth_flows_user_pool_client;
    this.allowed_oauth_scopes = allowed_oauth_scopes;
    this.callback_urls = callback_urls;
    this.client_secret = client_secret;
    this.default_redirect_uri = default_redirect_uri;
    this.explicit_auth_flows = explicit_auth_flows;
    this.generate_secret = generate_secret;
    this.logout_urls = logout_urls;
    this.read_attributes = read_attributes;
    this.refresh_token_validity = refresh_token_validity;
    this.supported_identity_providers = supported_identity_providers;
    this.write_attributes = write_attributes;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['user_pool_id'] = this.user_pool_id;
    if (this.aws_cognito_user_pool_client_id !== null) {
      ih['aws_cognito_user_pool_client_id'] = this.aws_cognito_user_pool_client_id;
    }
    if (this.allowed_oauth_flows !== null) {
      ih['allowed_oauth_flows'] = this.allowed_oauth_flows;
    }
    if (this.allowed_oauth_flows_user_pool_client !== null) {
      ih['allowed_oauth_flows_user_pool_client'] = this.allowed_oauth_flows_user_pool_client;
    }
    if (this.allowed_oauth_scopes !== null) {
      ih['allowed_oauth_scopes'] = this.allowed_oauth_scopes;
    }
    if (this.callback_urls !== null) {
      ih['callback_urls'] = this.callback_urls;
    }
    if (this.client_secret !== null) {
      ih['client_secret'] = this.client_secret;
    }
    if (this.default_redirect_uri !== null) {
      ih['default_redirect_uri'] = this.default_redirect_uri;
    }
    if (this.explicit_auth_flows !== null) {
      ih['explicit_auth_flows'] = this.explicit_auth_flows;
    }
    if (this.generate_secret !== null) {
      ih['generate_secret'] = this.generate_secret;
    }
    if (this.logout_urls !== null) {
      ih['logout_urls'] = this.logout_urls;
    }
    if (this.read_attributes !== null) {
      ih['read_attributes'] = this.read_attributes;
    }
    if (this.refresh_token_validity !== null) {
      ih['refresh_token_validity'] = this.refresh_token_validity;
    }
    if (this.supported_identity_providers !== null) {
      ih['supported_identity_providers'] = this.supported_identity_providers;
    }
    if (this.write_attributes !== null) {
      ih['write_attributes'] = this.write_attributes;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_client';
  }
}

export class Aws_cognito_user_pool_clientHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_clientHandler';
  }
}

export class Aws_cognito_user_pool_device_configuration_161 implements PcoreValue {
  readonly challenge_required_on_new_device: boolean|null;
  readonly device_only_remembered_on_user_prompt: boolean|null;

  constructor({
    challenge_required_on_new_device = null,
    device_only_remembered_on_user_prompt = null
  }: {
    challenge_required_on_new_device?: boolean|null,
    device_only_remembered_on_user_prompt?: boolean|null
  }) {
    this.challenge_required_on_new_device = challenge_required_on_new_device;
    this.device_only_remembered_on_user_prompt = device_only_remembered_on_user_prompt;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.challenge_required_on_new_device !== null) {
      ih['challenge_required_on_new_device'] = this.challenge_required_on_new_device;
    }
    if (this.device_only_remembered_on_user_prompt !== null) {
      ih['device_only_remembered_on_user_prompt'] = this.device_only_remembered_on_user_prompt;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_device_configuration_161';
  }
}

export class Aws_cognito_user_pool_domain implements PcoreValue {
  readonly domain: string;
  readonly user_pool_id: string;
  readonly aws_cognito_user_pool_domain_id: string|null;
  readonly aws_account_id: string|null;
  readonly certificate_arn: string|null;
  readonly cloudfront_distribution_arn: string|null;
  readonly s3_bucket: string|null;
  readonly version: string|null;

  constructor({
    domain,
    user_pool_id,
    aws_cognito_user_pool_domain_id = null,
    aws_account_id = null,
    certificate_arn = null,
    cloudfront_distribution_arn = null,
    s3_bucket = null,
    version = null
  }: {
    domain: string,
    user_pool_id: string,
    aws_cognito_user_pool_domain_id?: string|null,
    aws_account_id?: string|null,
    certificate_arn?: string|null,
    cloudfront_distribution_arn?: string|null,
    s3_bucket?: string|null,
    version?: string|null
  }) {
    this.domain = domain;
    this.user_pool_id = user_pool_id;
    this.aws_cognito_user_pool_domain_id = aws_cognito_user_pool_domain_id;
    this.aws_account_id = aws_account_id;
    this.certificate_arn = certificate_arn;
    this.cloudfront_distribution_arn = cloudfront_distribution_arn;
    this.s3_bucket = s3_bucket;
    this.version = version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain'] = this.domain;
    ih['user_pool_id'] = this.user_pool_id;
    if (this.aws_cognito_user_pool_domain_id !== null) {
      ih['aws_cognito_user_pool_domain_id'] = this.aws_cognito_user_pool_domain_id;
    }
    if (this.aws_account_id !== null) {
      ih['aws_account_id'] = this.aws_account_id;
    }
    if (this.certificate_arn !== null) {
      ih['certificate_arn'] = this.certificate_arn;
    }
    if (this.cloudfront_distribution_arn !== null) {
      ih['cloudfront_distribution_arn'] = this.cloudfront_distribution_arn;
    }
    if (this.s3_bucket !== null) {
      ih['s3_bucket'] = this.s3_bucket;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_domain';
  }
}

export class Aws_cognito_user_pool_domainHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_domainHandler';
  }
}

export class Aws_cognito_user_pool_email_configuration_162 implements PcoreValue {
  readonly reply_to_email_address: string|null;
  readonly source_arn: string|null;

  constructor({
    reply_to_email_address = null,
    source_arn = null
  }: {
    reply_to_email_address?: string|null,
    source_arn?: string|null
  }) {
    this.reply_to_email_address = reply_to_email_address;
    this.source_arn = source_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.reply_to_email_address !== null) {
      ih['reply_to_email_address'] = this.reply_to_email_address;
    }
    if (this.source_arn !== null) {
      ih['source_arn'] = this.source_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_email_configuration_162';
  }
}

export class Aws_cognito_user_pool_lambda_config_163 implements PcoreValue {
  readonly create_auth_challenge: string|null;
  readonly custom_message: string|null;
  readonly define_auth_challenge: string|null;
  readonly post_authentication: string|null;
  readonly post_confirmation: string|null;
  readonly pre_authentication: string|null;
  readonly pre_sign_up: string|null;
  readonly pre_token_generation: string|null;
  readonly user_migration: string|null;
  readonly verify_auth_challenge_response: string|null;

  constructor({
    create_auth_challenge = null,
    custom_message = null,
    define_auth_challenge = null,
    post_authentication = null,
    post_confirmation = null,
    pre_authentication = null,
    pre_sign_up = null,
    pre_token_generation = null,
    user_migration = null,
    verify_auth_challenge_response = null
  }: {
    create_auth_challenge?: string|null,
    custom_message?: string|null,
    define_auth_challenge?: string|null,
    post_authentication?: string|null,
    post_confirmation?: string|null,
    pre_authentication?: string|null,
    pre_sign_up?: string|null,
    pre_token_generation?: string|null,
    user_migration?: string|null,
    verify_auth_challenge_response?: string|null
  }) {
    this.create_auth_challenge = create_auth_challenge;
    this.custom_message = custom_message;
    this.define_auth_challenge = define_auth_challenge;
    this.post_authentication = post_authentication;
    this.post_confirmation = post_confirmation;
    this.pre_authentication = pre_authentication;
    this.pre_sign_up = pre_sign_up;
    this.pre_token_generation = pre_token_generation;
    this.user_migration = user_migration;
    this.verify_auth_challenge_response = verify_auth_challenge_response;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.create_auth_challenge !== null) {
      ih['create_auth_challenge'] = this.create_auth_challenge;
    }
    if (this.custom_message !== null) {
      ih['custom_message'] = this.custom_message;
    }
    if (this.define_auth_challenge !== null) {
      ih['define_auth_challenge'] = this.define_auth_challenge;
    }
    if (this.post_authentication !== null) {
      ih['post_authentication'] = this.post_authentication;
    }
    if (this.post_confirmation !== null) {
      ih['post_confirmation'] = this.post_confirmation;
    }
    if (this.pre_authentication !== null) {
      ih['pre_authentication'] = this.pre_authentication;
    }
    if (this.pre_sign_up !== null) {
      ih['pre_sign_up'] = this.pre_sign_up;
    }
    if (this.pre_token_generation !== null) {
      ih['pre_token_generation'] = this.pre_token_generation;
    }
    if (this.user_migration !== null) {
      ih['user_migration'] = this.user_migration;
    }
    if (this.verify_auth_challenge_response !== null) {
      ih['verify_auth_challenge_response'] = this.verify_auth_challenge_response;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_lambda_config_163';
  }
}

export class Aws_cognito_user_pool_password_policy_164 implements PcoreValue {
  readonly minimum_length: number|null;
  readonly require_lowercase: boolean|null;
  readonly require_numbers: boolean|null;
  readonly require_symbols: boolean|null;
  readonly require_uppercase: boolean|null;

  constructor({
    minimum_length = null,
    require_lowercase = null,
    require_numbers = null,
    require_symbols = null,
    require_uppercase = null
  }: {
    minimum_length?: number|null,
    require_lowercase?: boolean|null,
    require_numbers?: boolean|null,
    require_symbols?: boolean|null,
    require_uppercase?: boolean|null
  }) {
    this.minimum_length = minimum_length;
    this.require_lowercase = require_lowercase;
    this.require_numbers = require_numbers;
    this.require_symbols = require_symbols;
    this.require_uppercase = require_uppercase;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.minimum_length !== null) {
      ih['minimum_length'] = this.minimum_length;
    }
    if (this.require_lowercase !== null) {
      ih['require_lowercase'] = this.require_lowercase;
    }
    if (this.require_numbers !== null) {
      ih['require_numbers'] = this.require_numbers;
    }
    if (this.require_symbols !== null) {
      ih['require_symbols'] = this.require_symbols;
    }
    if (this.require_uppercase !== null) {
      ih['require_uppercase'] = this.require_uppercase;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_password_policy_164';
  }
}

export class Aws_cognito_user_pool_schema_165 implements PcoreValue {
  readonly attribute_data_type: string;
  readonly name: string;
  readonly developer_only_attribute: boolean|null;
  readonly mutable: boolean|null;
  readonly number_attribute_constraints: Aws_cognito_user_pool_schema_165_number_attribute_constraints_166[]|null;
  readonly required: boolean|null;
  readonly string_attribute_constraints: Aws_cognito_user_pool_schema_165_string_attribute_constraints_167[]|null;

  constructor({
    attribute_data_type,
    name,
    developer_only_attribute = null,
    mutable = null,
    number_attribute_constraints = null,
    required = null,
    string_attribute_constraints = null
  }: {
    attribute_data_type: string,
    name: string,
    developer_only_attribute?: boolean|null,
    mutable?: boolean|null,
    number_attribute_constraints?: Aws_cognito_user_pool_schema_165_number_attribute_constraints_166[]|null,
    required?: boolean|null,
    string_attribute_constraints?: Aws_cognito_user_pool_schema_165_string_attribute_constraints_167[]|null
  }) {
    this.attribute_data_type = attribute_data_type;
    this.name = name;
    this.developer_only_attribute = developer_only_attribute;
    this.mutable = mutable;
    this.number_attribute_constraints = number_attribute_constraints;
    this.required = required;
    this.string_attribute_constraints = string_attribute_constraints;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['attribute_data_type'] = this.attribute_data_type;
    ih['name'] = this.name;
    if (this.developer_only_attribute !== null) {
      ih['developer_only_attribute'] = this.developer_only_attribute;
    }
    if (this.mutable !== null) {
      ih['mutable'] = this.mutable;
    }
    if (this.number_attribute_constraints !== null) {
      ih['number_attribute_constraints'] = this.number_attribute_constraints;
    }
    if (this.required !== null) {
      ih['required'] = this.required;
    }
    if (this.string_attribute_constraints !== null) {
      ih['string_attribute_constraints'] = this.string_attribute_constraints;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_schema_165';
  }
}

export class Aws_cognito_user_pool_schema_165_number_attribute_constraints_166 implements PcoreValue {
  readonly max_value: string|null;
  readonly min_value: string|null;

  constructor({
    max_value = null,
    min_value = null
  }: {
    max_value?: string|null,
    min_value?: string|null
  }) {
    this.max_value = max_value;
    this.min_value = min_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.max_value !== null) {
      ih['max_value'] = this.max_value;
    }
    if (this.min_value !== null) {
      ih['min_value'] = this.min_value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_schema_165_number_attribute_constraints_166';
  }
}

export class Aws_cognito_user_pool_schema_165_string_attribute_constraints_167 implements PcoreValue {
  readonly max_length: string|null;
  readonly min_length: string|null;

  constructor({
    max_length = null,
    min_length = null
  }: {
    max_length?: string|null,
    min_length?: string|null
  }) {
    this.max_length = max_length;
    this.min_length = min_length;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.max_length !== null) {
      ih['max_length'] = this.max_length;
    }
    if (this.min_length !== null) {
      ih['min_length'] = this.min_length;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_schema_165_string_attribute_constraints_167';
  }
}

export class Aws_cognito_user_pool_sms_configuration_168 implements PcoreValue {
  readonly external_id: string;
  readonly sns_caller_arn: string;

  constructor({
    external_id,
    sns_caller_arn
  }: {
    external_id: string,
    sns_caller_arn: string
  }) {
    this.external_id = external_id;
    this.sns_caller_arn = sns_caller_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['external_id'] = this.external_id;
    ih['sns_caller_arn'] = this.sns_caller_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_sms_configuration_168';
  }
}

export class Aws_cognito_user_pool_verification_message_template_169 implements PcoreValue {
  readonly default_email_option: string|null;
  readonly email_message: string|null;
  readonly email_message_by_link: string|null;
  readonly email_subject: string|null;
  readonly email_subject_by_link: string|null;
  readonly sms_message: string|null;

  constructor({
    default_email_option = null,
    email_message = null,
    email_message_by_link = null,
    email_subject = null,
    email_subject_by_link = null,
    sms_message = null
  }: {
    default_email_option?: string|null,
    email_message?: string|null,
    email_message_by_link?: string|null,
    email_subject?: string|null,
    email_subject_by_link?: string|null,
    sms_message?: string|null
  }) {
    this.default_email_option = default_email_option;
    this.email_message = email_message;
    this.email_message_by_link = email_message_by_link;
    this.email_subject = email_subject;
    this.email_subject_by_link = email_subject_by_link;
    this.sms_message = sms_message;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.default_email_option !== null) {
      ih['default_email_option'] = this.default_email_option;
    }
    if (this.email_message !== null) {
      ih['email_message'] = this.email_message;
    }
    if (this.email_message_by_link !== null) {
      ih['email_message_by_link'] = this.email_message_by_link;
    }
    if (this.email_subject !== null) {
      ih['email_subject'] = this.email_subject;
    }
    if (this.email_subject_by_link !== null) {
      ih['email_subject_by_link'] = this.email_subject_by_link;
    }
    if (this.sms_message !== null) {
      ih['sms_message'] = this.sms_message;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_cognito_user_pool_verification_message_template_169';
  }
}

export class Aws_config_aggregate_authorization implements PcoreValue {
  readonly account_id: string;
  readonly region: string;
  readonly aws_config_aggregate_authorization_id: string|null;
  readonly arn: string|null;

  constructor({
    account_id,
    region,
    aws_config_aggregate_authorization_id = null,
    arn = null
  }: {
    account_id: string,
    region: string,
    aws_config_aggregate_authorization_id?: string|null,
    arn?: string|null
  }) {
    this.account_id = account_id;
    this.region = region;
    this.aws_config_aggregate_authorization_id = aws_config_aggregate_authorization_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['account_id'] = this.account_id;
    ih['region'] = this.region;
    if (this.aws_config_aggregate_authorization_id !== null) {
      ih['aws_config_aggregate_authorization_id'] = this.aws_config_aggregate_authorization_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_aggregate_authorization';
  }
}

export class Aws_config_aggregate_authorizationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_aggregate_authorizationHandler';
  }
}

export class Aws_config_config_rule implements PcoreValue {
  readonly name: string;
  readonly source: Aws_config_config_rule_source_171[];
  readonly aws_config_config_rule_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly input_parameters: string|null;
  readonly maximum_execution_frequency: string|null;
  readonly rule_id: string|null;
  readonly scope: Aws_config_config_rule_scope_170[]|null;

  constructor({
    name,
    source,
    aws_config_config_rule_id = null,
    arn = null,
    description = null,
    input_parameters = null,
    maximum_execution_frequency = null,
    rule_id = null,
    scope = null
  }: {
    name: string,
    source: Aws_config_config_rule_source_171[],
    aws_config_config_rule_id?: string|null,
    arn?: string|null,
    description?: string|null,
    input_parameters?: string|null,
    maximum_execution_frequency?: string|null,
    rule_id?: string|null,
    scope?: Aws_config_config_rule_scope_170[]|null
  }) {
    this.name = name;
    this.source = source;
    this.aws_config_config_rule_id = aws_config_config_rule_id;
    this.arn = arn;
    this.description = description;
    this.input_parameters = input_parameters;
    this.maximum_execution_frequency = maximum_execution_frequency;
    this.rule_id = rule_id;
    this.scope = scope;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['source'] = this.source;
    if (this.aws_config_config_rule_id !== null) {
      ih['aws_config_config_rule_id'] = this.aws_config_config_rule_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.input_parameters !== null) {
      ih['input_parameters'] = this.input_parameters;
    }
    if (this.maximum_execution_frequency !== null) {
      ih['maximum_execution_frequency'] = this.maximum_execution_frequency;
    }
    if (this.rule_id !== null) {
      ih['rule_id'] = this.rule_id;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_config_rule';
  }
}

export class Aws_config_config_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_config_ruleHandler';
  }
}

export class Aws_config_config_rule_scope_170 implements PcoreValue {
  readonly compliance_resource_id: string|null;
  readonly compliance_resource_types: string[]|null;
  readonly tag_key: string|null;
  readonly tag_value: string|null;

  constructor({
    compliance_resource_id = null,
    compliance_resource_types = null,
    tag_key = null,
    tag_value = null
  }: {
    compliance_resource_id?: string|null,
    compliance_resource_types?: string[]|null,
    tag_key?: string|null,
    tag_value?: string|null
  }) {
    this.compliance_resource_id = compliance_resource_id;
    this.compliance_resource_types = compliance_resource_types;
    this.tag_key = tag_key;
    this.tag_value = tag_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.compliance_resource_id !== null) {
      ih['compliance_resource_id'] = this.compliance_resource_id;
    }
    if (this.compliance_resource_types !== null) {
      ih['compliance_resource_types'] = this.compliance_resource_types;
    }
    if (this.tag_key !== null) {
      ih['tag_key'] = this.tag_key;
    }
    if (this.tag_value !== null) {
      ih['tag_value'] = this.tag_value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_config_rule_scope_170';
  }
}

export class Aws_config_config_rule_source_171 implements PcoreValue {
  readonly owner: string;
  readonly source_identifier: string;
  readonly source_detail: Aws_config_config_rule_source_171_source_detail_172[]|null;

  constructor({
    owner,
    source_identifier,
    source_detail = null
  }: {
    owner: string,
    source_identifier: string,
    source_detail?: Aws_config_config_rule_source_171_source_detail_172[]|null
  }) {
    this.owner = owner;
    this.source_identifier = source_identifier;
    this.source_detail = source_detail;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['owner'] = this.owner;
    ih['source_identifier'] = this.source_identifier;
    if (this.source_detail !== null) {
      ih['source_detail'] = this.source_detail;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_config_rule_source_171';
  }
}

export class Aws_config_config_rule_source_171_source_detail_172 implements PcoreValue {
  readonly event_source: string|null;
  readonly maximum_execution_frequency: string|null;
  readonly message_type: string|null;

  constructor({
    event_source = null,
    maximum_execution_frequency = null,
    message_type = null
  }: {
    event_source?: string|null,
    maximum_execution_frequency?: string|null,
    message_type?: string|null
  }) {
    this.event_source = event_source;
    this.maximum_execution_frequency = maximum_execution_frequency;
    this.message_type = message_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.event_source !== null) {
      ih['event_source'] = this.event_source;
    }
    if (this.maximum_execution_frequency !== null) {
      ih['maximum_execution_frequency'] = this.maximum_execution_frequency;
    }
    if (this.message_type !== null) {
      ih['message_type'] = this.message_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_config_rule_source_171_source_detail_172';
  }
}

export class Aws_config_configuration_aggregator implements PcoreValue {
  readonly name: string;
  readonly aws_config_configuration_aggregator_id: string|null;
  readonly account_aggregation_source: Aws_config_configuration_aggregator_account_aggregation_source_173[]|null;
  readonly arn: string|null;
  readonly organization_aggregation_source: Aws_config_configuration_aggregator_organization_aggregation_source_174[]|null;

  constructor({
    name,
    aws_config_configuration_aggregator_id = null,
    account_aggregation_source = null,
    arn = null,
    organization_aggregation_source = null
  }: {
    name: string,
    aws_config_configuration_aggregator_id?: string|null,
    account_aggregation_source?: Aws_config_configuration_aggregator_account_aggregation_source_173[]|null,
    arn?: string|null,
    organization_aggregation_source?: Aws_config_configuration_aggregator_organization_aggregation_source_174[]|null
  }) {
    this.name = name;
    this.aws_config_configuration_aggregator_id = aws_config_configuration_aggregator_id;
    this.account_aggregation_source = account_aggregation_source;
    this.arn = arn;
    this.organization_aggregation_source = organization_aggregation_source;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_config_configuration_aggregator_id !== null) {
      ih['aws_config_configuration_aggregator_id'] = this.aws_config_configuration_aggregator_id;
    }
    if (this.account_aggregation_source !== null) {
      ih['account_aggregation_source'] = this.account_aggregation_source;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.organization_aggregation_source !== null) {
      ih['organization_aggregation_source'] = this.organization_aggregation_source;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_aggregator';
  }
}

export class Aws_config_configuration_aggregatorHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_aggregatorHandler';
  }
}

export class Aws_config_configuration_aggregator_account_aggregation_source_173 implements PcoreValue {
  readonly account_ids: string[];
  readonly all_regions: boolean|null;
  readonly regions: string[]|null;

  constructor({
    account_ids,
    all_regions = null,
    regions = null
  }: {
    account_ids: string[],
    all_regions?: boolean|null,
    regions?: string[]|null
  }) {
    this.account_ids = account_ids;
    this.all_regions = all_regions;
    this.regions = regions;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['account_ids'] = this.account_ids;
    if (this.all_regions !== null) {
      ih['all_regions'] = this.all_regions;
    }
    if (this.regions !== null) {
      ih['regions'] = this.regions;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_aggregator_account_aggregation_source_173';
  }
}

export class Aws_config_configuration_aggregator_organization_aggregation_source_174 implements PcoreValue {
  readonly role_arn: string;
  readonly all_regions: boolean|null;
  readonly regions: string[]|null;

  constructor({
    role_arn,
    all_regions = null,
    regions = null
  }: {
    role_arn: string,
    all_regions?: boolean|null,
    regions?: string[]|null
  }) {
    this.role_arn = role_arn;
    this.all_regions = all_regions;
    this.regions = regions;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['role_arn'] = this.role_arn;
    if (this.all_regions !== null) {
      ih['all_regions'] = this.all_regions;
    }
    if (this.regions !== null) {
      ih['regions'] = this.regions;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_aggregator_organization_aggregation_source_174';
  }
}

export class Aws_config_configuration_recorder implements PcoreValue {
  readonly role_arn: string;
  readonly aws_config_configuration_recorder_id: string|null;
  readonly name: string|null;
  readonly recording_group: Aws_config_configuration_recorder_recording_group_175[]|null;

  constructor({
    role_arn,
    aws_config_configuration_recorder_id = null,
    name = null,
    recording_group = null
  }: {
    role_arn: string,
    aws_config_configuration_recorder_id?: string|null,
    name?: string|null,
    recording_group?: Aws_config_configuration_recorder_recording_group_175[]|null
  }) {
    this.role_arn = role_arn;
    this.aws_config_configuration_recorder_id = aws_config_configuration_recorder_id;
    this.name = name;
    this.recording_group = recording_group;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['role_arn'] = this.role_arn;
    if (this.aws_config_configuration_recorder_id !== null) {
      ih['aws_config_configuration_recorder_id'] = this.aws_config_configuration_recorder_id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.recording_group !== null) {
      ih['recording_group'] = this.recording_group;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_recorder';
  }
}

export class Aws_config_configuration_recorderHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_recorderHandler';
  }
}

export class Aws_config_configuration_recorder_recording_group_175 implements PcoreValue {
  readonly all_supported: boolean|null;
  readonly include_global_resource_types: boolean|null;
  readonly resource_types: string[]|null;

  constructor({
    all_supported = null,
    include_global_resource_types = null,
    resource_types = null
  }: {
    all_supported?: boolean|null,
    include_global_resource_types?: boolean|null,
    resource_types?: string[]|null
  }) {
    this.all_supported = all_supported;
    this.include_global_resource_types = include_global_resource_types;
    this.resource_types = resource_types;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.all_supported !== null) {
      ih['all_supported'] = this.all_supported;
    }
    if (this.include_global_resource_types !== null) {
      ih['include_global_resource_types'] = this.include_global_resource_types;
    }
    if (this.resource_types !== null) {
      ih['resource_types'] = this.resource_types;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_recorder_recording_group_175';
  }
}

export class Aws_config_configuration_recorder_status implements PcoreValue {
  readonly is_enabled: boolean;
  readonly name: string;
  readonly aws_config_configuration_recorder_status_id: string|null;

  constructor({
    is_enabled,
    name,
    aws_config_configuration_recorder_status_id = null
  }: {
    is_enabled: boolean,
    name: string,
    aws_config_configuration_recorder_status_id?: string|null
  }) {
    this.is_enabled = is_enabled;
    this.name = name;
    this.aws_config_configuration_recorder_status_id = aws_config_configuration_recorder_status_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['is_enabled'] = this.is_enabled;
    ih['name'] = this.name;
    if (this.aws_config_configuration_recorder_status_id !== null) {
      ih['aws_config_configuration_recorder_status_id'] = this.aws_config_configuration_recorder_status_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_recorder_status';
  }
}

export class Aws_config_configuration_recorder_statusHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_configuration_recorder_statusHandler';
  }
}

export class Aws_config_delivery_channel implements PcoreValue {
  readonly s3_bucket_name: string;
  readonly aws_config_delivery_channel_id: string|null;
  readonly name: string|null;
  readonly s3_key_prefix: string|null;
  readonly snapshot_delivery_properties: Aws_config_delivery_channel_snapshot_delivery_properties_176[]|null;
  readonly sns_topic_arn: string|null;

  constructor({
    s3_bucket_name,
    aws_config_delivery_channel_id = null,
    name = null,
    s3_key_prefix = null,
    snapshot_delivery_properties = null,
    sns_topic_arn = null
  }: {
    s3_bucket_name: string,
    aws_config_delivery_channel_id?: string|null,
    name?: string|null,
    s3_key_prefix?: string|null,
    snapshot_delivery_properties?: Aws_config_delivery_channel_snapshot_delivery_properties_176[]|null,
    sns_topic_arn?: string|null
  }) {
    this.s3_bucket_name = s3_bucket_name;
    this.aws_config_delivery_channel_id = aws_config_delivery_channel_id;
    this.name = name;
    this.s3_key_prefix = s3_key_prefix;
    this.snapshot_delivery_properties = snapshot_delivery_properties;
    this.sns_topic_arn = sns_topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['s3_bucket_name'] = this.s3_bucket_name;
    if (this.aws_config_delivery_channel_id !== null) {
      ih['aws_config_delivery_channel_id'] = this.aws_config_delivery_channel_id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.s3_key_prefix !== null) {
      ih['s3_key_prefix'] = this.s3_key_prefix;
    }
    if (this.snapshot_delivery_properties !== null) {
      ih['snapshot_delivery_properties'] = this.snapshot_delivery_properties;
    }
    if (this.sns_topic_arn !== null) {
      ih['sns_topic_arn'] = this.sns_topic_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_delivery_channel';
  }
}

export class Aws_config_delivery_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_delivery_channelHandler';
  }
}

export class Aws_config_delivery_channel_snapshot_delivery_properties_176 implements PcoreValue {
  readonly delivery_frequency: string|null;

  constructor({
    delivery_frequency = null
  }: {
    delivery_frequency?: string|null
  }) {
    this.delivery_frequency = delivery_frequency;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delivery_frequency !== null) {
      ih['delivery_frequency'] = this.delivery_frequency;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_config_delivery_channel_snapshot_delivery_properties_176';
  }
}

export class Aws_customer_gateway implements PcoreValue {
  readonly bgp_asn: number;
  readonly ip_address: string;
  readonly type: string;
  readonly aws_customer_gateway_id: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    bgp_asn,
    ip_address,
    type,
    aws_customer_gateway_id = null,
    tags = null
  }: {
    bgp_asn: number,
    ip_address: string,
    type: string,
    aws_customer_gateway_id?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.bgp_asn = bgp_asn;
    this.ip_address = ip_address;
    this.type = type;
    this.aws_customer_gateway_id = aws_customer_gateway_id;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bgp_asn'] = this.bgp_asn;
    ih['ip_address'] = this.ip_address;
    ih['type'] = this.type;
    if (this.aws_customer_gateway_id !== null) {
      ih['aws_customer_gateway_id'] = this.aws_customer_gateway_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_customer_gateway';
  }
}

export class Aws_customer_gatewayHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_customer_gatewayHandler';
  }
}

export class Aws_datasync_agent implements PcoreValue {
  readonly aws_datasync_agent_id: string|null;
  readonly activation_key: string|null;
  readonly arn: string|null;
  readonly ip_address: string|null;
  readonly name: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    aws_datasync_agent_id = null,
    activation_key = null,
    arn = null,
    ip_address = null,
    name = null,
    tags = null
  }: {
    aws_datasync_agent_id?: string|null,
    activation_key?: string|null,
    arn?: string|null,
    ip_address?: string|null,
    name?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.aws_datasync_agent_id = aws_datasync_agent_id;
    this.activation_key = activation_key;
    this.arn = arn;
    this.ip_address = ip_address;
    this.name = name;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_datasync_agent_id !== null) {
      ih['aws_datasync_agent_id'] = this.aws_datasync_agent_id;
    }
    if (this.activation_key !== null) {
      ih['activation_key'] = this.activation_key;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.ip_address !== null) {
      ih['ip_address'] = this.ip_address;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_agent';
  }
}

export class Aws_datasync_agentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_agentHandler';
  }
}

export class Aws_datasync_location_efs implements PcoreValue {
  readonly ec2_config: Aws_datasync_location_efs_ec2_config_177[];
  readonly efs_file_system_arn: string;
  readonly aws_datasync_location_efs_id: string|null;
  readonly arn: string|null;
  readonly subdirectory: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly uri: string|null;

  constructor({
    ec2_config,
    efs_file_system_arn,
    aws_datasync_location_efs_id = null,
    arn = null,
    subdirectory = null,
    tags = null,
    uri = null
  }: {
    ec2_config: Aws_datasync_location_efs_ec2_config_177[],
    efs_file_system_arn: string,
    aws_datasync_location_efs_id?: string|null,
    arn?: string|null,
    subdirectory?: string|null,
    tags?: {[s: string]: string}|null,
    uri?: string|null
  }) {
    this.ec2_config = ec2_config;
    this.efs_file_system_arn = efs_file_system_arn;
    this.aws_datasync_location_efs_id = aws_datasync_location_efs_id;
    this.arn = arn;
    this.subdirectory = subdirectory;
    this.tags = tags;
    this.uri = uri;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ec2_config'] = this.ec2_config;
    ih['efs_file_system_arn'] = this.efs_file_system_arn;
    if (this.aws_datasync_location_efs_id !== null) {
      ih['aws_datasync_location_efs_id'] = this.aws_datasync_location_efs_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.subdirectory !== null) {
      ih['subdirectory'] = this.subdirectory;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.uri !== null) {
      ih['uri'] = this.uri;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_efs';
  }
}

export class Aws_datasync_location_efsHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_efsHandler';
  }
}

export class Aws_datasync_location_efs_ec2_config_177 implements PcoreValue {
  readonly security_group_arns: string[];
  readonly subnet_arn: string;

  constructor({
    security_group_arns,
    subnet_arn
  }: {
    security_group_arns: string[],
    subnet_arn: string
  }) {
    this.security_group_arns = security_group_arns;
    this.subnet_arn = subnet_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['security_group_arns'] = this.security_group_arns;
    ih['subnet_arn'] = this.subnet_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_efs_ec2_config_177';
  }
}

export class Aws_datasync_location_nfs implements PcoreValue {
  readonly on_prem_config: Aws_datasync_location_nfs_on_prem_config_178[];
  readonly server_hostname: string;
  readonly subdirectory: string;
  readonly aws_datasync_location_nfs_id: string|null;
  readonly arn: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly uri: string|null;

  constructor({
    on_prem_config,
    server_hostname,
    subdirectory,
    aws_datasync_location_nfs_id = null,
    arn = null,
    tags = null,
    uri = null
  }: {
    on_prem_config: Aws_datasync_location_nfs_on_prem_config_178[],
    server_hostname: string,
    subdirectory: string,
    aws_datasync_location_nfs_id?: string|null,
    arn?: string|null,
    tags?: {[s: string]: string}|null,
    uri?: string|null
  }) {
    this.on_prem_config = on_prem_config;
    this.server_hostname = server_hostname;
    this.subdirectory = subdirectory;
    this.aws_datasync_location_nfs_id = aws_datasync_location_nfs_id;
    this.arn = arn;
    this.tags = tags;
    this.uri = uri;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['on_prem_config'] = this.on_prem_config;
    ih['server_hostname'] = this.server_hostname;
    ih['subdirectory'] = this.subdirectory;
    if (this.aws_datasync_location_nfs_id !== null) {
      ih['aws_datasync_location_nfs_id'] = this.aws_datasync_location_nfs_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.uri !== null) {
      ih['uri'] = this.uri;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_nfs';
  }
}

export class Aws_datasync_location_nfsHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_nfsHandler';
  }
}

export class Aws_datasync_location_nfs_on_prem_config_178 implements PcoreValue {
  readonly agent_arns: string[];

  constructor({
    agent_arns
  }: {
    agent_arns: string[]
  }) {
    this.agent_arns = agent_arns;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['agent_arns'] = this.agent_arns;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_nfs_on_prem_config_178';
  }
}

export class Aws_datasync_location_s3 implements PcoreValue {
  readonly s3_bucket_arn: string;
  readonly s3_config: Aws_datasync_location_s3_s3_config_179[];
  readonly subdirectory: string;
  readonly aws_datasync_location_s3_id: string|null;
  readonly arn: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly uri: string|null;

  constructor({
    s3_bucket_arn,
    s3_config,
    subdirectory,
    aws_datasync_location_s3_id = null,
    arn = null,
    tags = null,
    uri = null
  }: {
    s3_bucket_arn: string,
    s3_config: Aws_datasync_location_s3_s3_config_179[],
    subdirectory: string,
    aws_datasync_location_s3_id?: string|null,
    arn?: string|null,
    tags?: {[s: string]: string}|null,
    uri?: string|null
  }) {
    this.s3_bucket_arn = s3_bucket_arn;
    this.s3_config = s3_config;
    this.subdirectory = subdirectory;
    this.aws_datasync_location_s3_id = aws_datasync_location_s3_id;
    this.arn = arn;
    this.tags = tags;
    this.uri = uri;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['s3_bucket_arn'] = this.s3_bucket_arn;
    ih['s3_config'] = this.s3_config;
    ih['subdirectory'] = this.subdirectory;
    if (this.aws_datasync_location_s3_id !== null) {
      ih['aws_datasync_location_s3_id'] = this.aws_datasync_location_s3_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.uri !== null) {
      ih['uri'] = this.uri;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_s3';
  }
}

export class Aws_datasync_location_s3Handler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_s3Handler';
  }
}

export class Aws_datasync_location_s3_s3_config_179 implements PcoreValue {
  readonly bucket_access_role_arn: string;

  constructor({
    bucket_access_role_arn
  }: {
    bucket_access_role_arn: string
  }) {
    this.bucket_access_role_arn = bucket_access_role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_access_role_arn'] = this.bucket_access_role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_location_s3_s3_config_179';
  }
}

export class Aws_datasync_task implements PcoreValue {
  readonly destination_location_arn: string;
  readonly source_location_arn: string;
  readonly aws_datasync_task_id: string|null;
  readonly arn: string|null;
  readonly cloudwatch_log_group_arn: string|null;
  readonly name: string|null;
  readonly options: Aws_datasync_task_options_180[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    destination_location_arn,
    source_location_arn,
    aws_datasync_task_id = null,
    arn = null,
    cloudwatch_log_group_arn = null,
    name = null,
    options = null,
    tags = null
  }: {
    destination_location_arn: string,
    source_location_arn: string,
    aws_datasync_task_id?: string|null,
    arn?: string|null,
    cloudwatch_log_group_arn?: string|null,
    name?: string|null,
    options?: Aws_datasync_task_options_180[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.destination_location_arn = destination_location_arn;
    this.source_location_arn = source_location_arn;
    this.aws_datasync_task_id = aws_datasync_task_id;
    this.arn = arn;
    this.cloudwatch_log_group_arn = cloudwatch_log_group_arn;
    this.name = name;
    this.options = options;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination_location_arn'] = this.destination_location_arn;
    ih['source_location_arn'] = this.source_location_arn;
    if (this.aws_datasync_task_id !== null) {
      ih['aws_datasync_task_id'] = this.aws_datasync_task_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cloudwatch_log_group_arn !== null) {
      ih['cloudwatch_log_group_arn'] = this.cloudwatch_log_group_arn;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.options !== null) {
      ih['options'] = this.options;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_task';
  }
}

export class Aws_datasync_taskHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_taskHandler';
  }
}

export class Aws_datasync_task_options_180 implements PcoreValue {
  readonly atime: string|null;
  readonly bytes_per_second: number|null;
  readonly gid: string|null;
  readonly mtime: string|null;
  readonly posix_permissions: string|null;
  readonly preserve_deleted_files: string|null;
  readonly preserve_devices: string|null;
  readonly uid: string|null;
  readonly verify_mode: string|null;

  constructor({
    atime = null,
    bytes_per_second = null,
    gid = null,
    mtime = null,
    posix_permissions = null,
    preserve_deleted_files = null,
    preserve_devices = null,
    uid = null,
    verify_mode = null
  }: {
    atime?: string|null,
    bytes_per_second?: number|null,
    gid?: string|null,
    mtime?: string|null,
    posix_permissions?: string|null,
    preserve_deleted_files?: string|null,
    preserve_devices?: string|null,
    uid?: string|null,
    verify_mode?: string|null
  }) {
    this.atime = atime;
    this.bytes_per_second = bytes_per_second;
    this.gid = gid;
    this.mtime = mtime;
    this.posix_permissions = posix_permissions;
    this.preserve_deleted_files = preserve_deleted_files;
    this.preserve_devices = preserve_devices;
    this.uid = uid;
    this.verify_mode = verify_mode;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.atime !== null) {
      ih['atime'] = this.atime;
    }
    if (this.bytes_per_second !== null) {
      ih['bytes_per_second'] = this.bytes_per_second;
    }
    if (this.gid !== null) {
      ih['gid'] = this.gid;
    }
    if (this.mtime !== null) {
      ih['mtime'] = this.mtime;
    }
    if (this.posix_permissions !== null) {
      ih['posix_permissions'] = this.posix_permissions;
    }
    if (this.preserve_deleted_files !== null) {
      ih['preserve_deleted_files'] = this.preserve_deleted_files;
    }
    if (this.preserve_devices !== null) {
      ih['preserve_devices'] = this.preserve_devices;
    }
    if (this.uid !== null) {
      ih['uid'] = this.uid;
    }
    if (this.verify_mode !== null) {
      ih['verify_mode'] = this.verify_mode;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_datasync_task_options_180';
  }
}

export class Aws_dax_cluster implements PcoreValue {
  readonly cluster_name: string;
  readonly iam_role_arn: string;
  readonly node_type: string;
  readonly replication_factor: number;
  readonly aws_dax_cluster_id: string|null;
  readonly arn: string|null;
  readonly availability_zones: string[]|null;
  readonly cluster_address: string|null;
  readonly configuration_endpoint: string|null;
  readonly description: string|null;
  readonly maintenance_window: string|null;
  readonly nodes: Aws_dax_cluster_nodes_181[]|null;
  readonly notification_topic_arn: string|null;
  readonly parameter_group_name: string|null;
  readonly port: number|null;
  readonly security_group_ids: string[]|null;
  readonly server_side_encryption: Aws_dax_cluster_server_side_encryption_182[]|null;
  readonly subnet_group_name: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    cluster_name,
    iam_role_arn,
    node_type,
    replication_factor,
    aws_dax_cluster_id = null,
    arn = null,
    availability_zones = null,
    cluster_address = null,
    configuration_endpoint = null,
    description = null,
    maintenance_window = null,
    nodes = null,
    notification_topic_arn = null,
    parameter_group_name = null,
    port = null,
    security_group_ids = null,
    server_side_encryption = null,
    subnet_group_name = null,
    tags = null
  }: {
    cluster_name: string,
    iam_role_arn: string,
    node_type: string,
    replication_factor: number,
    aws_dax_cluster_id?: string|null,
    arn?: string|null,
    availability_zones?: string[]|null,
    cluster_address?: string|null,
    configuration_endpoint?: string|null,
    description?: string|null,
    maintenance_window?: string|null,
    nodes?: Aws_dax_cluster_nodes_181[]|null,
    notification_topic_arn?: string|null,
    parameter_group_name?: string|null,
    port?: number|null,
    security_group_ids?: string[]|null,
    server_side_encryption?: Aws_dax_cluster_server_side_encryption_182[]|null,
    subnet_group_name?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.cluster_name = cluster_name;
    this.iam_role_arn = iam_role_arn;
    this.node_type = node_type;
    this.replication_factor = replication_factor;
    this.aws_dax_cluster_id = aws_dax_cluster_id;
    this.arn = arn;
    this.availability_zones = availability_zones;
    this.cluster_address = cluster_address;
    this.configuration_endpoint = configuration_endpoint;
    this.description = description;
    this.maintenance_window = maintenance_window;
    this.nodes = nodes;
    this.notification_topic_arn = notification_topic_arn;
    this.parameter_group_name = parameter_group_name;
    this.port = port;
    this.security_group_ids = security_group_ids;
    this.server_side_encryption = server_side_encryption;
    this.subnet_group_name = subnet_group_name;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_name'] = this.cluster_name;
    ih['iam_role_arn'] = this.iam_role_arn;
    ih['node_type'] = this.node_type;
    ih['replication_factor'] = this.replication_factor;
    if (this.aws_dax_cluster_id !== null) {
      ih['aws_dax_cluster_id'] = this.aws_dax_cluster_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.cluster_address !== null) {
      ih['cluster_address'] = this.cluster_address;
    }
    if (this.configuration_endpoint !== null) {
      ih['configuration_endpoint'] = this.configuration_endpoint;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.maintenance_window !== null) {
      ih['maintenance_window'] = this.maintenance_window;
    }
    if (this.nodes !== null) {
      ih['nodes'] = this.nodes;
    }
    if (this.notification_topic_arn !== null) {
      ih['notification_topic_arn'] = this.notification_topic_arn;
    }
    if (this.parameter_group_name !== null) {
      ih['parameter_group_name'] = this.parameter_group_name;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.security_group_ids !== null) {
      ih['security_group_ids'] = this.security_group_ids;
    }
    if (this.server_side_encryption !== null) {
      ih['server_side_encryption'] = this.server_side_encryption;
    }
    if (this.subnet_group_name !== null) {
      ih['subnet_group_name'] = this.subnet_group_name;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_cluster';
  }
}

export class Aws_dax_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_clusterHandler';
  }
}

export class Aws_dax_cluster_nodes_181 implements PcoreValue {
  readonly address: string|null;
  readonly availability_zone: string|null;
  readonly id: string|null;
  readonly port: number|null;

  constructor({
    address = null,
    availability_zone = null,
    id = null,
    port = null
  }: {
    address?: string|null,
    availability_zone?: string|null,
    id?: string|null,
    port?: number|null
  }) {
    this.address = address;
    this.availability_zone = availability_zone;
    this.id = id;
    this.port = port;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.address !== null) {
      ih['address'] = this.address;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_cluster_nodes_181';
  }
}

export class Aws_dax_cluster_server_side_encryption_182 implements PcoreValue {
  readonly enabled: boolean|null;

  constructor({
    enabled = null
  }: {
    enabled?: boolean|null
  }) {
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_cluster_server_side_encryption_182';
  }
}

export class Aws_dax_parameter_group implements PcoreValue {
  readonly name: string;
  readonly aws_dax_parameter_group_id: string|null;
  readonly description: string|null;
  readonly parameters: Aws_dax_parameter_group_parameters_183[]|null;

  constructor({
    name,
    aws_dax_parameter_group_id = null,
    description = null,
    parameters = null
  }: {
    name: string,
    aws_dax_parameter_group_id?: string|null,
    description?: string|null,
    parameters?: Aws_dax_parameter_group_parameters_183[]|null
  }) {
    this.name = name;
    this.aws_dax_parameter_group_id = aws_dax_parameter_group_id;
    this.description = description;
    this.parameters = parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_dax_parameter_group_id !== null) {
      ih['aws_dax_parameter_group_id'] = this.aws_dax_parameter_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_parameter_group';
  }
}

export class Aws_dax_parameter_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_parameter_groupHandler';
  }
}

export class Aws_dax_parameter_group_parameters_183 implements PcoreValue {
  readonly name: string;
  readonly value: string;

  constructor({
    name,
    value
  }: {
    name: string,
    value: string
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_parameter_group_parameters_183';
  }
}

export class Aws_dax_subnet_group implements PcoreValue {
  readonly name: string;
  readonly subnet_ids: string[];
  readonly aws_dax_subnet_group_id: string|null;
  readonly description: string|null;
  readonly vpc_id: string|null;

  constructor({
    name,
    subnet_ids,
    aws_dax_subnet_group_id = null,
    description = null,
    vpc_id = null
  }: {
    name: string,
    subnet_ids: string[],
    aws_dax_subnet_group_id?: string|null,
    description?: string|null,
    vpc_id?: string|null
  }) {
    this.name = name;
    this.subnet_ids = subnet_ids;
    this.aws_dax_subnet_group_id = aws_dax_subnet_group_id;
    this.description = description;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['subnet_ids'] = this.subnet_ids;
    if (this.aws_dax_subnet_group_id !== null) {
      ih['aws_dax_subnet_group_id'] = this.aws_dax_subnet_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_subnet_group';
  }
}

export class Aws_dax_subnet_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dax_subnet_groupHandler';
  }
}

export class Aws_db_cluster_snapshot implements PcoreValue {
  readonly db_cluster_identifier: string;
  readonly db_cluster_snapshot_identifier: string;
  readonly aws_db_cluster_snapshot_id: string|null;
  readonly allocated_storage: number|null;
  readonly availability_zones: string[]|null;
  readonly db_cluster_snapshot_arn: string|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly kms_key_id: string|null;
  readonly license_model: string|null;
  readonly port: number|null;
  readonly snapshot_type: string|null;
  readonly source_db_cluster_snapshot_arn: string|null;
  readonly status: string|null;
  readonly storage_encrypted: boolean|null;
  readonly vpc_id: string|null;

  constructor({
    db_cluster_identifier,
    db_cluster_snapshot_identifier,
    aws_db_cluster_snapshot_id = null,
    allocated_storage = null,
    availability_zones = null,
    db_cluster_snapshot_arn = null,
    engine = null,
    engine_version = null,
    kms_key_id = null,
    license_model = null,
    port = null,
    snapshot_type = null,
    source_db_cluster_snapshot_arn = null,
    status = null,
    storage_encrypted = null,
    vpc_id = null
  }: {
    db_cluster_identifier: string,
    db_cluster_snapshot_identifier: string,
    aws_db_cluster_snapshot_id?: string|null,
    allocated_storage?: number|null,
    availability_zones?: string[]|null,
    db_cluster_snapshot_arn?: string|null,
    engine?: string|null,
    engine_version?: string|null,
    kms_key_id?: string|null,
    license_model?: string|null,
    port?: number|null,
    snapshot_type?: string|null,
    source_db_cluster_snapshot_arn?: string|null,
    status?: string|null,
    storage_encrypted?: boolean|null,
    vpc_id?: string|null
  }) {
    this.db_cluster_identifier = db_cluster_identifier;
    this.db_cluster_snapshot_identifier = db_cluster_snapshot_identifier;
    this.aws_db_cluster_snapshot_id = aws_db_cluster_snapshot_id;
    this.allocated_storage = allocated_storage;
    this.availability_zones = availability_zones;
    this.db_cluster_snapshot_arn = db_cluster_snapshot_arn;
    this.engine = engine;
    this.engine_version = engine_version;
    this.kms_key_id = kms_key_id;
    this.license_model = license_model;
    this.port = port;
    this.snapshot_type = snapshot_type;
    this.source_db_cluster_snapshot_arn = source_db_cluster_snapshot_arn;
    this.status = status;
    this.storage_encrypted = storage_encrypted;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['db_cluster_identifier'] = this.db_cluster_identifier;
    ih['db_cluster_snapshot_identifier'] = this.db_cluster_snapshot_identifier;
    if (this.aws_db_cluster_snapshot_id !== null) {
      ih['aws_db_cluster_snapshot_id'] = this.aws_db_cluster_snapshot_id;
    }
    if (this.allocated_storage !== null) {
      ih['allocated_storage'] = this.allocated_storage;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.db_cluster_snapshot_arn !== null) {
      ih['db_cluster_snapshot_arn'] = this.db_cluster_snapshot_arn;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.license_model !== null) {
      ih['license_model'] = this.license_model;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.snapshot_type !== null) {
      ih['snapshot_type'] = this.snapshot_type;
    }
    if (this.source_db_cluster_snapshot_arn !== null) {
      ih['source_db_cluster_snapshot_arn'] = this.source_db_cluster_snapshot_arn;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.storage_encrypted !== null) {
      ih['storage_encrypted'] = this.storage_encrypted;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_cluster_snapshot';
  }
}

export class Aws_db_cluster_snapshotHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_cluster_snapshotHandler';
  }
}

export class Aws_db_event_subscription implements PcoreValue {
  readonly sns_topic: string;
  readonly aws_db_event_subscription_id: string|null;
  readonly arn: string|null;
  readonly customer_aws_id: string|null;
  readonly enabled: boolean|null;
  readonly event_categories: string[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly source_ids: string[]|null;
  readonly source_type: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    sns_topic,
    aws_db_event_subscription_id = null,
    arn = null,
    customer_aws_id = null,
    enabled = null,
    event_categories = null,
    name = null,
    name_prefix = null,
    source_ids = null,
    source_type = null,
    tags = null
  }: {
    sns_topic: string,
    aws_db_event_subscription_id?: string|null,
    arn?: string|null,
    customer_aws_id?: string|null,
    enabled?: boolean|null,
    event_categories?: string[]|null,
    name?: string|null,
    name_prefix?: string|null,
    source_ids?: string[]|null,
    source_type?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.sns_topic = sns_topic;
    this.aws_db_event_subscription_id = aws_db_event_subscription_id;
    this.arn = arn;
    this.customer_aws_id = customer_aws_id;
    this.enabled = enabled;
    this.event_categories = event_categories;
    this.name = name;
    this.name_prefix = name_prefix;
    this.source_ids = source_ids;
    this.source_type = source_type;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['sns_topic'] = this.sns_topic;
    if (this.aws_db_event_subscription_id !== null) {
      ih['aws_db_event_subscription_id'] = this.aws_db_event_subscription_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.customer_aws_id !== null) {
      ih['customer_aws_id'] = this.customer_aws_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.event_categories !== null) {
      ih['event_categories'] = this.event_categories;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.source_ids !== null) {
      ih['source_ids'] = this.source_ids;
    }
    if (this.source_type !== null) {
      ih['source_type'] = this.source_type;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_event_subscription';
  }
}

export class Aws_db_event_subscriptionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_event_subscriptionHandler';
  }
}

export class Aws_db_instance implements PcoreValue {
  readonly instance_class: string;
  readonly aws_db_instance_id: string|null;
  readonly address: string|null;
  readonly allocated_storage: number|null;
  readonly allow_major_version_upgrade: boolean|null;
  readonly apply_immediately: boolean|null;
  readonly arn: string|null;
  readonly auto_minor_version_upgrade: boolean|null;
  readonly availability_zone: string|null;
  readonly backup_retention_period: number|null;
  readonly backup_window: string|null;
  readonly ca_cert_identifier: string|null;
  readonly character_set_name: string|null;
  readonly copy_tags_to_snapshot: boolean|null;
  readonly db_subnet_group_name: string|null;
  readonly deletion_protection: boolean|null;
  readonly domain: string|null;
  readonly domain_iam_role_name: string|null;
  readonly enabled_cloudwatch_logs_exports: string[]|null;
  readonly endpoint: string|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly final_snapshot_identifier: string|null;
  readonly hosted_zone_id: string|null;
  readonly iam_database_authentication_enabled: boolean|null;
  readonly identifier: string|null;
  readonly identifier_prefix: string|null;
  readonly iops: number|null;
  readonly kms_key_id: string|null;
  readonly license_model: string|null;
  readonly maintenance_window: string|null;
  readonly monitoring_interval: number|null;
  readonly monitoring_role_arn: string|null;
  readonly multi_az: boolean|null;
  readonly name: string|null;
  readonly option_group_name: string|null;
  readonly parameter_group_name: string|null;
  readonly password: string|null;
  readonly port: number|null;
  readonly publicly_accessible: boolean|null;
  readonly replicas: string[]|null;
  readonly replicate_source_db: string|null;
  readonly resource_id: string|null;
  readonly s3_import: Aws_db_instance_s3_import_184[]|null;
  readonly security_group_names: string[]|null;
  readonly skip_final_snapshot: boolean|null;
  readonly snapshot_identifier: string|null;
  readonly status: string|null;
  readonly storage_encrypted: boolean|null;
  readonly storage_type: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly timezone: string|null;
  readonly username: string|null;
  readonly vpc_security_group_ids: string[]|null;

  constructor({
    instance_class,
    aws_db_instance_id = null,
    address = null,
    allocated_storage = null,
    allow_major_version_upgrade = null,
    apply_immediately = null,
    arn = null,
    auto_minor_version_upgrade = null,
    availability_zone = null,
    backup_retention_period = null,
    backup_window = null,
    ca_cert_identifier = null,
    character_set_name = null,
    copy_tags_to_snapshot = null,
    db_subnet_group_name = null,
    deletion_protection = null,
    domain = null,
    domain_iam_role_name = null,
    enabled_cloudwatch_logs_exports = null,
    endpoint = null,
    engine = null,
    engine_version = null,
    final_snapshot_identifier = null,
    hosted_zone_id = null,
    iam_database_authentication_enabled = null,
    identifier = null,
    identifier_prefix = null,
    iops = null,
    kms_key_id = null,
    license_model = null,
    maintenance_window = null,
    monitoring_interval = null,
    monitoring_role_arn = null,
    multi_az = null,
    name = null,
    option_group_name = null,
    parameter_group_name = null,
    password = null,
    port = null,
    publicly_accessible = null,
    replicas = null,
    replicate_source_db = null,
    resource_id = null,
    s3_import = null,
    security_group_names = null,
    skip_final_snapshot = null,
    snapshot_identifier = null,
    status = null,
    storage_encrypted = null,
    storage_type = null,
    tags = null,
    timezone = null,
    username = null,
    vpc_security_group_ids = null
  }: {
    instance_class: string,
    aws_db_instance_id?: string|null,
    address?: string|null,
    allocated_storage?: number|null,
    allow_major_version_upgrade?: boolean|null,
    apply_immediately?: boolean|null,
    arn?: string|null,
    auto_minor_version_upgrade?: boolean|null,
    availability_zone?: string|null,
    backup_retention_period?: number|null,
    backup_window?: string|null,
    ca_cert_identifier?: string|null,
    character_set_name?: string|null,
    copy_tags_to_snapshot?: boolean|null,
    db_subnet_group_name?: string|null,
    deletion_protection?: boolean|null,
    domain?: string|null,
    domain_iam_role_name?: string|null,
    enabled_cloudwatch_logs_exports?: string[]|null,
    endpoint?: string|null,
    engine?: string|null,
    engine_version?: string|null,
    final_snapshot_identifier?: string|null,
    hosted_zone_id?: string|null,
    iam_database_authentication_enabled?: boolean|null,
    identifier?: string|null,
    identifier_prefix?: string|null,
    iops?: number|null,
    kms_key_id?: string|null,
    license_model?: string|null,
    maintenance_window?: string|null,
    monitoring_interval?: number|null,
    monitoring_role_arn?: string|null,
    multi_az?: boolean|null,
    name?: string|null,
    option_group_name?: string|null,
    parameter_group_name?: string|null,
    password?: string|null,
    port?: number|null,
    publicly_accessible?: boolean|null,
    replicas?: string[]|null,
    replicate_source_db?: string|null,
    resource_id?: string|null,
    s3_import?: Aws_db_instance_s3_import_184[]|null,
    security_group_names?: string[]|null,
    skip_final_snapshot?: boolean|null,
    snapshot_identifier?: string|null,
    status?: string|null,
    storage_encrypted?: boolean|null,
    storage_type?: string|null,
    tags?: {[s: string]: string}|null,
    timezone?: string|null,
    username?: string|null,
    vpc_security_group_ids?: string[]|null
  }) {
    this.instance_class = instance_class;
    this.aws_db_instance_id = aws_db_instance_id;
    this.address = address;
    this.allocated_storage = allocated_storage;
    this.allow_major_version_upgrade = allow_major_version_upgrade;
    this.apply_immediately = apply_immediately;
    this.arn = arn;
    this.auto_minor_version_upgrade = auto_minor_version_upgrade;
    this.availability_zone = availability_zone;
    this.backup_retention_period = backup_retention_period;
    this.backup_window = backup_window;
    this.ca_cert_identifier = ca_cert_identifier;
    this.character_set_name = character_set_name;
    this.copy_tags_to_snapshot = copy_tags_to_snapshot;
    this.db_subnet_group_name = db_subnet_group_name;
    this.deletion_protection = deletion_protection;
    this.domain = domain;
    this.domain_iam_role_name = domain_iam_role_name;
    this.enabled_cloudwatch_logs_exports = enabled_cloudwatch_logs_exports;
    this.endpoint = endpoint;
    this.engine = engine;
    this.engine_version = engine_version;
    this.final_snapshot_identifier = final_snapshot_identifier;
    this.hosted_zone_id = hosted_zone_id;
    this.iam_database_authentication_enabled = iam_database_authentication_enabled;
    this.identifier = identifier;
    this.identifier_prefix = identifier_prefix;
    this.iops = iops;
    this.kms_key_id = kms_key_id;
    this.license_model = license_model;
    this.maintenance_window = maintenance_window;
    this.monitoring_interval = monitoring_interval;
    this.monitoring_role_arn = monitoring_role_arn;
    this.multi_az = multi_az;
    this.name = name;
    this.option_group_name = option_group_name;
    this.parameter_group_name = parameter_group_name;
    this.password = password;
    this.port = port;
    this.publicly_accessible = publicly_accessible;
    this.replicas = replicas;
    this.replicate_source_db = replicate_source_db;
    this.resource_id = resource_id;
    this.s3_import = s3_import;
    this.security_group_names = security_group_names;
    this.skip_final_snapshot = skip_final_snapshot;
    this.snapshot_identifier = snapshot_identifier;
    this.status = status;
    this.storage_encrypted = storage_encrypted;
    this.storage_type = storage_type;
    this.tags = tags;
    this.timezone = timezone;
    this.username = username;
    this.vpc_security_group_ids = vpc_security_group_ids;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_class'] = this.instance_class;
    if (this.aws_db_instance_id !== null) {
      ih['aws_db_instance_id'] = this.aws_db_instance_id;
    }
    if (this.address !== null) {
      ih['address'] = this.address;
    }
    if (this.allocated_storage !== null) {
      ih['allocated_storage'] = this.allocated_storage;
    }
    if (this.allow_major_version_upgrade !== null) {
      ih['allow_major_version_upgrade'] = this.allow_major_version_upgrade;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.auto_minor_version_upgrade !== null) {
      ih['auto_minor_version_upgrade'] = this.auto_minor_version_upgrade;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.backup_retention_period !== null) {
      ih['backup_retention_period'] = this.backup_retention_period;
    }
    if (this.backup_window !== null) {
      ih['backup_window'] = this.backup_window;
    }
    if (this.ca_cert_identifier !== null) {
      ih['ca_cert_identifier'] = this.ca_cert_identifier;
    }
    if (this.character_set_name !== null) {
      ih['character_set_name'] = this.character_set_name;
    }
    if (this.copy_tags_to_snapshot !== null) {
      ih['copy_tags_to_snapshot'] = this.copy_tags_to_snapshot;
    }
    if (this.db_subnet_group_name !== null) {
      ih['db_subnet_group_name'] = this.db_subnet_group_name;
    }
    if (this.deletion_protection !== null) {
      ih['deletion_protection'] = this.deletion_protection;
    }
    if (this.domain !== null) {
      ih['domain'] = this.domain;
    }
    if (this.domain_iam_role_name !== null) {
      ih['domain_iam_role_name'] = this.domain_iam_role_name;
    }
    if (this.enabled_cloudwatch_logs_exports !== null) {
      ih['enabled_cloudwatch_logs_exports'] = this.enabled_cloudwatch_logs_exports;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.final_snapshot_identifier !== null) {
      ih['final_snapshot_identifier'] = this.final_snapshot_identifier;
    }
    if (this.hosted_zone_id !== null) {
      ih['hosted_zone_id'] = this.hosted_zone_id;
    }
    if (this.iam_database_authentication_enabled !== null) {
      ih['iam_database_authentication_enabled'] = this.iam_database_authentication_enabled;
    }
    if (this.identifier !== null) {
      ih['identifier'] = this.identifier;
    }
    if (this.identifier_prefix !== null) {
      ih['identifier_prefix'] = this.identifier_prefix;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.license_model !== null) {
      ih['license_model'] = this.license_model;
    }
    if (this.maintenance_window !== null) {
      ih['maintenance_window'] = this.maintenance_window;
    }
    if (this.monitoring_interval !== null) {
      ih['monitoring_interval'] = this.monitoring_interval;
    }
    if (this.monitoring_role_arn !== null) {
      ih['monitoring_role_arn'] = this.monitoring_role_arn;
    }
    if (this.multi_az !== null) {
      ih['multi_az'] = this.multi_az;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.option_group_name !== null) {
      ih['option_group_name'] = this.option_group_name;
    }
    if (this.parameter_group_name !== null) {
      ih['parameter_group_name'] = this.parameter_group_name;
    }
    if (this.password !== null) {
      ih['password'] = this.password;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.publicly_accessible !== null) {
      ih['publicly_accessible'] = this.publicly_accessible;
    }
    if (this.replicas !== null) {
      ih['replicas'] = this.replicas;
    }
    if (this.replicate_source_db !== null) {
      ih['replicate_source_db'] = this.replicate_source_db;
    }
    if (this.resource_id !== null) {
      ih['resource_id'] = this.resource_id;
    }
    if (this.s3_import !== null) {
      ih['s3_import'] = this.s3_import;
    }
    if (this.security_group_names !== null) {
      ih['security_group_names'] = this.security_group_names;
    }
    if (this.skip_final_snapshot !== null) {
      ih['skip_final_snapshot'] = this.skip_final_snapshot;
    }
    if (this.snapshot_identifier !== null) {
      ih['snapshot_identifier'] = this.snapshot_identifier;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.storage_encrypted !== null) {
      ih['storage_encrypted'] = this.storage_encrypted;
    }
    if (this.storage_type !== null) {
      ih['storage_type'] = this.storage_type;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.timezone !== null) {
      ih['timezone'] = this.timezone;
    }
    if (this.username !== null) {
      ih['username'] = this.username;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_instance';
  }
}

export class Aws_db_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_instanceHandler';
  }
}

export class Aws_db_instance_s3_import_184 implements PcoreValue {
  readonly bucket_name: string;
  readonly ingestion_role: string;
  readonly source_engine: string;
  readonly source_engine_version: string;
  readonly bucket_prefix: string|null;

  constructor({
    bucket_name,
    ingestion_role,
    source_engine,
    source_engine_version,
    bucket_prefix = null
  }: {
    bucket_name: string,
    ingestion_role: string,
    source_engine: string,
    source_engine_version: string,
    bucket_prefix?: string|null
  }) {
    this.bucket_name = bucket_name;
    this.ingestion_role = ingestion_role;
    this.source_engine = source_engine;
    this.source_engine_version = source_engine_version;
    this.bucket_prefix = bucket_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_name'] = this.bucket_name;
    ih['ingestion_role'] = this.ingestion_role;
    ih['source_engine'] = this.source_engine;
    ih['source_engine_version'] = this.source_engine_version;
    if (this.bucket_prefix !== null) {
      ih['bucket_prefix'] = this.bucket_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_instance_s3_import_184';
  }
}

export class Aws_db_option_group implements PcoreValue {
  readonly engine_name: string;
  readonly major_engine_version: string;
  readonly aws_db_option_group_id: string|null;
  readonly arn: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly option: Aws_db_option_group_option_185[]|null;
  readonly option_group_description: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    engine_name,
    major_engine_version,
    aws_db_option_group_id = null,
    arn = null,
    name = null,
    name_prefix = null,
    option = null,
    option_group_description = null,
    tags = null
  }: {
    engine_name: string,
    major_engine_version: string,
    aws_db_option_group_id?: string|null,
    arn?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    option?: Aws_db_option_group_option_185[]|null,
    option_group_description?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.engine_name = engine_name;
    this.major_engine_version = major_engine_version;
    this.aws_db_option_group_id = aws_db_option_group_id;
    this.arn = arn;
    this.name = name;
    this.name_prefix = name_prefix;
    this.option = option;
    this.option_group_description = option_group_description;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['engine_name'] = this.engine_name;
    ih['major_engine_version'] = this.major_engine_version;
    if (this.aws_db_option_group_id !== null) {
      ih['aws_db_option_group_id'] = this.aws_db_option_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.option !== null) {
      ih['option'] = this.option;
    }
    if (this.option_group_description !== null) {
      ih['option_group_description'] = this.option_group_description;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_option_group';
  }
}

export class Aws_db_option_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_option_groupHandler';
  }
}

export class Aws_db_option_group_option_185 implements PcoreValue {
  readonly option_name: string;
  readonly db_security_group_memberships: string[]|null;
  readonly option_settings: Aws_db_option_group_option_185_option_settings_186[]|null;
  readonly port: number|null;
  readonly version: string|null;
  readonly vpc_security_group_memberships: string[]|null;

  constructor({
    option_name,
    db_security_group_memberships = null,
    option_settings = null,
    port = null,
    version = null,
    vpc_security_group_memberships = null
  }: {
    option_name: string,
    db_security_group_memberships?: string[]|null,
    option_settings?: Aws_db_option_group_option_185_option_settings_186[]|null,
    port?: number|null,
    version?: string|null,
    vpc_security_group_memberships?: string[]|null
  }) {
    this.option_name = option_name;
    this.db_security_group_memberships = db_security_group_memberships;
    this.option_settings = option_settings;
    this.port = port;
    this.version = version;
    this.vpc_security_group_memberships = vpc_security_group_memberships;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['option_name'] = this.option_name;
    if (this.db_security_group_memberships !== null) {
      ih['db_security_group_memberships'] = this.db_security_group_memberships;
    }
    if (this.option_settings !== null) {
      ih['option_settings'] = this.option_settings;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    if (this.vpc_security_group_memberships !== null) {
      ih['vpc_security_group_memberships'] = this.vpc_security_group_memberships;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_option_group_option_185';
  }
}

export class Aws_db_option_group_option_185_option_settings_186 implements PcoreValue {
  readonly name: string;
  readonly value: string;

  constructor({
    name,
    value
  }: {
    name: string,
    value: string
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_option_group_option_185_option_settings_186';
  }
}

export class Aws_db_parameter_group implements PcoreValue {
  readonly family: string;
  readonly aws_db_parameter_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly parameter: Aws_db_parameter_group_parameter_187[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    family,
    aws_db_parameter_group_id = null,
    arn = null,
    description = null,
    name = null,
    name_prefix = null,
    parameter = null,
    tags = null
  }: {
    family: string,
    aws_db_parameter_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    parameter?: Aws_db_parameter_group_parameter_187[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.family = family;
    this.aws_db_parameter_group_id = aws_db_parameter_group_id;
    this.arn = arn;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
    this.parameter = parameter;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['family'] = this.family;
    if (this.aws_db_parameter_group_id !== null) {
      ih['aws_db_parameter_group_id'] = this.aws_db_parameter_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.parameter !== null) {
      ih['parameter'] = this.parameter;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_parameter_group';
  }
}

export class Aws_db_parameter_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_parameter_groupHandler';
  }
}

export class Aws_db_parameter_group_parameter_187 implements PcoreValue {
  readonly name: string;
  readonly value: string;
  readonly apply_method: string|null;

  constructor({
    name,
    value,
    apply_method = null
  }: {
    name: string,
    value: string,
    apply_method?: string|null
  }) {
    this.name = name;
    this.value = value;
    this.apply_method = apply_method;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    if (this.apply_method !== null) {
      ih['apply_method'] = this.apply_method;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_parameter_group_parameter_187';
  }
}

export class Aws_db_security_group implements PcoreValue {
  readonly ingress: Aws_db_security_group_ingress_188[];
  readonly name: string;
  readonly aws_db_security_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    ingress,
    name,
    aws_db_security_group_id = null,
    arn = null,
    description = null,
    tags = null
  }: {
    ingress: Aws_db_security_group_ingress_188[],
    name: string,
    aws_db_security_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.ingress = ingress;
    this.name = name;
    this.aws_db_security_group_id = aws_db_security_group_id;
    this.arn = arn;
    this.description = description;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ingress'] = this.ingress;
    ih['name'] = this.name;
    if (this.aws_db_security_group_id !== null) {
      ih['aws_db_security_group_id'] = this.aws_db_security_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_security_group';
  }
}

export class Aws_db_security_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_security_groupHandler';
  }
}

export class Aws_db_security_group_ingress_188 implements PcoreValue {
  readonly cidr: string|null;
  readonly security_group_id: string|null;
  readonly security_group_name: string|null;
  readonly security_group_owner_id: string|null;

  constructor({
    cidr = null,
    security_group_id = null,
    security_group_name = null,
    security_group_owner_id = null
  }: {
    cidr?: string|null,
    security_group_id?: string|null,
    security_group_name?: string|null,
    security_group_owner_id?: string|null
  }) {
    this.cidr = cidr;
    this.security_group_id = security_group_id;
    this.security_group_name = security_group_name;
    this.security_group_owner_id = security_group_owner_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cidr !== null) {
      ih['cidr'] = this.cidr;
    }
    if (this.security_group_id !== null) {
      ih['security_group_id'] = this.security_group_id;
    }
    if (this.security_group_name !== null) {
      ih['security_group_name'] = this.security_group_name;
    }
    if (this.security_group_owner_id !== null) {
      ih['security_group_owner_id'] = this.security_group_owner_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_security_group_ingress_188';
  }
}

export class Aws_db_snapshot implements PcoreValue {
  readonly db_instance_identifier: string;
  readonly db_snapshot_identifier: string;
  readonly aws_db_snapshot_id: string|null;
  readonly allocated_storage: number|null;
  readonly availability_zone: string|null;
  readonly db_snapshot_arn: string|null;
  readonly encrypted: boolean|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly iops: number|null;
  readonly kms_key_id: string|null;
  readonly license_model: string|null;
  readonly option_group_name: string|null;
  readonly port: number|null;
  readonly snapshot_type: string|null;
  readonly source_db_snapshot_identifier: string|null;
  readonly source_region: string|null;
  readonly status: string|null;
  readonly storage_type: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    db_instance_identifier,
    db_snapshot_identifier,
    aws_db_snapshot_id = null,
    allocated_storage = null,
    availability_zone = null,
    db_snapshot_arn = null,
    encrypted = null,
    engine = null,
    engine_version = null,
    iops = null,
    kms_key_id = null,
    license_model = null,
    option_group_name = null,
    port = null,
    snapshot_type = null,
    source_db_snapshot_identifier = null,
    source_region = null,
    status = null,
    storage_type = null,
    tags = null,
    vpc_id = null
  }: {
    db_instance_identifier: string,
    db_snapshot_identifier: string,
    aws_db_snapshot_id?: string|null,
    allocated_storage?: number|null,
    availability_zone?: string|null,
    db_snapshot_arn?: string|null,
    encrypted?: boolean|null,
    engine?: string|null,
    engine_version?: string|null,
    iops?: number|null,
    kms_key_id?: string|null,
    license_model?: string|null,
    option_group_name?: string|null,
    port?: number|null,
    snapshot_type?: string|null,
    source_db_snapshot_identifier?: string|null,
    source_region?: string|null,
    status?: string|null,
    storage_type?: string|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.db_instance_identifier = db_instance_identifier;
    this.db_snapshot_identifier = db_snapshot_identifier;
    this.aws_db_snapshot_id = aws_db_snapshot_id;
    this.allocated_storage = allocated_storage;
    this.availability_zone = availability_zone;
    this.db_snapshot_arn = db_snapshot_arn;
    this.encrypted = encrypted;
    this.engine = engine;
    this.engine_version = engine_version;
    this.iops = iops;
    this.kms_key_id = kms_key_id;
    this.license_model = license_model;
    this.option_group_name = option_group_name;
    this.port = port;
    this.snapshot_type = snapshot_type;
    this.source_db_snapshot_identifier = source_db_snapshot_identifier;
    this.source_region = source_region;
    this.status = status;
    this.storage_type = storage_type;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['db_instance_identifier'] = this.db_instance_identifier;
    ih['db_snapshot_identifier'] = this.db_snapshot_identifier;
    if (this.aws_db_snapshot_id !== null) {
      ih['aws_db_snapshot_id'] = this.aws_db_snapshot_id;
    }
    if (this.allocated_storage !== null) {
      ih['allocated_storage'] = this.allocated_storage;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.db_snapshot_arn !== null) {
      ih['db_snapshot_arn'] = this.db_snapshot_arn;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.license_model !== null) {
      ih['license_model'] = this.license_model;
    }
    if (this.option_group_name !== null) {
      ih['option_group_name'] = this.option_group_name;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.snapshot_type !== null) {
      ih['snapshot_type'] = this.snapshot_type;
    }
    if (this.source_db_snapshot_identifier !== null) {
      ih['source_db_snapshot_identifier'] = this.source_db_snapshot_identifier;
    }
    if (this.source_region !== null) {
      ih['source_region'] = this.source_region;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.storage_type !== null) {
      ih['storage_type'] = this.storage_type;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_snapshot';
  }
}

export class Aws_db_snapshotHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_snapshotHandler';
  }
}

export class Aws_db_subnet_group implements PcoreValue {
  readonly subnet_ids: string[];
  readonly aws_db_subnet_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    subnet_ids,
    aws_db_subnet_group_id = null,
    arn = null,
    description = null,
    name = null,
    name_prefix = null,
    tags = null
  }: {
    subnet_ids: string[],
    aws_db_subnet_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.subnet_ids = subnet_ids;
    this.aws_db_subnet_group_id = aws_db_subnet_group_id;
    this.arn = arn;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_ids'] = this.subnet_ids;
    if (this.aws_db_subnet_group_id !== null) {
      ih['aws_db_subnet_group_id'] = this.aws_db_subnet_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_subnet_group';
  }
}

export class Aws_db_subnet_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_db_subnet_groupHandler';
  }
}

export class Aws_default_network_acl implements PcoreValue {
  readonly default_network_acl_id: string;
  readonly aws_default_network_acl_id: string|null;
  readonly egress: Aws_default_network_acl_egress_189[]|null;
  readonly ingress: Aws_default_network_acl_ingress_190[]|null;
  readonly owner_id: string|null;
  readonly subnet_ids: string[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    default_network_acl_id,
    aws_default_network_acl_id = null,
    egress = null,
    ingress = null,
    owner_id = null,
    subnet_ids = null,
    tags = null,
    vpc_id = null
  }: {
    default_network_acl_id: string,
    aws_default_network_acl_id?: string|null,
    egress?: Aws_default_network_acl_egress_189[]|null,
    ingress?: Aws_default_network_acl_ingress_190[]|null,
    owner_id?: string|null,
    subnet_ids?: string[]|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.default_network_acl_id = default_network_acl_id;
    this.aws_default_network_acl_id = aws_default_network_acl_id;
    this.egress = egress;
    this.ingress = ingress;
    this.owner_id = owner_id;
    this.subnet_ids = subnet_ids;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_network_acl_id'] = this.default_network_acl_id;
    if (this.aws_default_network_acl_id !== null) {
      ih['aws_default_network_acl_id'] = this.aws_default_network_acl_id;
    }
    if (this.egress !== null) {
      ih['egress'] = this.egress;
    }
    if (this.ingress !== null) {
      ih['ingress'] = this.ingress;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.subnet_ids !== null) {
      ih['subnet_ids'] = this.subnet_ids;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_network_acl';
  }
}

export class Aws_default_network_aclHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_network_aclHandler';
  }
}

export class Aws_default_network_acl_egress_189 implements PcoreValue {
  readonly action: string;
  readonly from_port: number;
  readonly protocol: string;
  readonly rule_no: number;
  readonly to_port: number;
  readonly cidr_block: string|null;
  readonly icmp_code: number|null;
  readonly icmp_type: number|null;
  readonly ipv6_cidr_block: string|null;

  constructor({
    action,
    from_port,
    protocol,
    rule_no,
    to_port,
    cidr_block = null,
    icmp_code = null,
    icmp_type = null,
    ipv6_cidr_block = null
  }: {
    action: string,
    from_port: number,
    protocol: string,
    rule_no: number,
    to_port: number,
    cidr_block?: string|null,
    icmp_code?: number|null,
    icmp_type?: number|null,
    ipv6_cidr_block?: string|null
  }) {
    this.action = action;
    this.from_port = from_port;
    this.protocol = protocol;
    this.rule_no = rule_no;
    this.to_port = to_port;
    this.cidr_block = cidr_block;
    this.icmp_code = icmp_code;
    this.icmp_type = icmp_type;
    this.ipv6_cidr_block = ipv6_cidr_block;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['rule_no'] = this.rule_no;
    ih['to_port'] = this.to_port;
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.icmp_code !== null) {
      ih['icmp_code'] = this.icmp_code;
    }
    if (this.icmp_type !== null) {
      ih['icmp_type'] = this.icmp_type;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_network_acl_egress_189';
  }
}

export class Aws_default_network_acl_ingress_190 implements PcoreValue {
  readonly action: string;
  readonly from_port: number;
  readonly protocol: string;
  readonly rule_no: number;
  readonly to_port: number;
  readonly cidr_block: string|null;
  readonly icmp_code: number|null;
  readonly icmp_type: number|null;
  readonly ipv6_cidr_block: string|null;

  constructor({
    action,
    from_port,
    protocol,
    rule_no,
    to_port,
    cidr_block = null,
    icmp_code = null,
    icmp_type = null,
    ipv6_cidr_block = null
  }: {
    action: string,
    from_port: number,
    protocol: string,
    rule_no: number,
    to_port: number,
    cidr_block?: string|null,
    icmp_code?: number|null,
    icmp_type?: number|null,
    ipv6_cidr_block?: string|null
  }) {
    this.action = action;
    this.from_port = from_port;
    this.protocol = protocol;
    this.rule_no = rule_no;
    this.to_port = to_port;
    this.cidr_block = cidr_block;
    this.icmp_code = icmp_code;
    this.icmp_type = icmp_type;
    this.ipv6_cidr_block = ipv6_cidr_block;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['rule_no'] = this.rule_no;
    ih['to_port'] = this.to_port;
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.icmp_code !== null) {
      ih['icmp_code'] = this.icmp_code;
    }
    if (this.icmp_type !== null) {
      ih['icmp_type'] = this.icmp_type;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_network_acl_ingress_190';
  }
}

export class Aws_default_route_table implements PcoreValue {
  readonly default_route_table_id: string;
  readonly aws_default_route_table_id: string|null;
  readonly owner_id: string|null;
  readonly propagating_vgws: string[]|null;
  readonly route: Aws_default_route_table_route_191[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    default_route_table_id,
    aws_default_route_table_id = null,
    owner_id = null,
    propagating_vgws = null,
    route = null,
    tags = null,
    vpc_id = null
  }: {
    default_route_table_id: string,
    aws_default_route_table_id?: string|null,
    owner_id?: string|null,
    propagating_vgws?: string[]|null,
    route?: Aws_default_route_table_route_191[]|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.default_route_table_id = default_route_table_id;
    this.aws_default_route_table_id = aws_default_route_table_id;
    this.owner_id = owner_id;
    this.propagating_vgws = propagating_vgws;
    this.route = route;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_route_table_id'] = this.default_route_table_id;
    if (this.aws_default_route_table_id !== null) {
      ih['aws_default_route_table_id'] = this.aws_default_route_table_id;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.propagating_vgws !== null) {
      ih['propagating_vgws'] = this.propagating_vgws;
    }
    if (this.route !== null) {
      ih['route'] = this.route;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_route_table';
  }
}

export class Aws_default_route_tableHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_route_tableHandler';
  }
}

export class Aws_default_route_table_route_191 implements PcoreValue {
  readonly cidr_block: string|null;
  readonly egress_only_gateway_id: string|null;
  readonly gateway_id: string|null;
  readonly instance_id: string|null;
  readonly ipv6_cidr_block: string|null;
  readonly nat_gateway_id: string|null;
  readonly network_interface_id: string|null;
  readonly transit_gateway_id: string|null;
  readonly vpc_peering_connection_id: string|null;

  constructor({
    cidr_block = null,
    egress_only_gateway_id = null,
    gateway_id = null,
    instance_id = null,
    ipv6_cidr_block = null,
    nat_gateway_id = null,
    network_interface_id = null,
    transit_gateway_id = null,
    vpc_peering_connection_id = null
  }: {
    cidr_block?: string|null,
    egress_only_gateway_id?: string|null,
    gateway_id?: string|null,
    instance_id?: string|null,
    ipv6_cidr_block?: string|null,
    nat_gateway_id?: string|null,
    network_interface_id?: string|null,
    transit_gateway_id?: string|null,
    vpc_peering_connection_id?: string|null
  }) {
    this.cidr_block = cidr_block;
    this.egress_only_gateway_id = egress_only_gateway_id;
    this.gateway_id = gateway_id;
    this.instance_id = instance_id;
    this.ipv6_cidr_block = ipv6_cidr_block;
    this.nat_gateway_id = nat_gateway_id;
    this.network_interface_id = network_interface_id;
    this.transit_gateway_id = transit_gateway_id;
    this.vpc_peering_connection_id = vpc_peering_connection_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.egress_only_gateway_id !== null) {
      ih['egress_only_gateway_id'] = this.egress_only_gateway_id;
    }
    if (this.gateway_id !== null) {
      ih['gateway_id'] = this.gateway_id;
    }
    if (this.instance_id !== null) {
      ih['instance_id'] = this.instance_id;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    if (this.nat_gateway_id !== null) {
      ih['nat_gateway_id'] = this.nat_gateway_id;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.transit_gateway_id !== null) {
      ih['transit_gateway_id'] = this.transit_gateway_id;
    }
    if (this.vpc_peering_connection_id !== null) {
      ih['vpc_peering_connection_id'] = this.vpc_peering_connection_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_route_table_route_191';
  }
}

export class Aws_default_security_group implements PcoreValue {
  readonly aws_default_security_group_id: string|null;
  readonly arn: string|null;
  readonly egress: Aws_default_security_group_egress_192[]|null;
  readonly ingress: Aws_default_security_group_ingress_193[]|null;
  readonly name: string|null;
  readonly owner_id: string|null;
  readonly revoke_rules_on_delete: boolean|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    aws_default_security_group_id = null,
    arn = null,
    egress = null,
    ingress = null,
    name = null,
    owner_id = null,
    revoke_rules_on_delete = null,
    tags = null,
    vpc_id = null
  }: {
    aws_default_security_group_id?: string|null,
    arn?: string|null,
    egress?: Aws_default_security_group_egress_192[]|null,
    ingress?: Aws_default_security_group_ingress_193[]|null,
    name?: string|null,
    owner_id?: string|null,
    revoke_rules_on_delete?: boolean|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.aws_default_security_group_id = aws_default_security_group_id;
    this.arn = arn;
    this.egress = egress;
    this.ingress = ingress;
    this.name = name;
    this.owner_id = owner_id;
    this.revoke_rules_on_delete = revoke_rules_on_delete;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_default_security_group_id !== null) {
      ih['aws_default_security_group_id'] = this.aws_default_security_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.egress !== null) {
      ih['egress'] = this.egress;
    }
    if (this.ingress !== null) {
      ih['ingress'] = this.ingress;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.revoke_rules_on_delete !== null) {
      ih['revoke_rules_on_delete'] = this.revoke_rules_on_delete;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_security_group';
  }
}

export class Aws_default_security_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_security_groupHandler';
  }
}

export class Aws_default_security_group_egress_192 implements PcoreValue {
  readonly from_port: number;
  readonly protocol: string;
  readonly to_port: number;
  readonly cidr_blocks: string[]|null;
  readonly description: string|null;
  readonly ipv6_cidr_blocks: string[]|null;
  readonly prefix_list_ids: string[]|null;
  readonly security_groups: string[]|null;
  readonly self: boolean|null;

  constructor({
    from_port,
    protocol,
    to_port,
    cidr_blocks = null,
    description = null,
    ipv6_cidr_blocks = null,
    prefix_list_ids = null,
    security_groups = null,
    self = null
  }: {
    from_port: number,
    protocol: string,
    to_port: number,
    cidr_blocks?: string[]|null,
    description?: string|null,
    ipv6_cidr_blocks?: string[]|null,
    prefix_list_ids?: string[]|null,
    security_groups?: string[]|null,
    self?: boolean|null
  }) {
    this.from_port = from_port;
    this.protocol = protocol;
    this.to_port = to_port;
    this.cidr_blocks = cidr_blocks;
    this.description = description;
    this.ipv6_cidr_blocks = ipv6_cidr_blocks;
    this.prefix_list_ids = prefix_list_ids;
    this.security_groups = security_groups;
    this.self = self;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['to_port'] = this.to_port;
    if (this.cidr_blocks !== null) {
      ih['cidr_blocks'] = this.cidr_blocks;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ipv6_cidr_blocks !== null) {
      ih['ipv6_cidr_blocks'] = this.ipv6_cidr_blocks;
    }
    if (this.prefix_list_ids !== null) {
      ih['prefix_list_ids'] = this.prefix_list_ids;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.self !== null) {
      ih['self'] = this.self;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_security_group_egress_192';
  }
}

export class Aws_default_security_group_ingress_193 implements PcoreValue {
  readonly from_port: number;
  readonly protocol: string;
  readonly to_port: number;
  readonly cidr_blocks: string[]|null;
  readonly description: string|null;
  readonly ipv6_cidr_blocks: string[]|null;
  readonly prefix_list_ids: string[]|null;
  readonly security_groups: string[]|null;
  readonly self: boolean|null;

  constructor({
    from_port,
    protocol,
    to_port,
    cidr_blocks = null,
    description = null,
    ipv6_cidr_blocks = null,
    prefix_list_ids = null,
    security_groups = null,
    self = null
  }: {
    from_port: number,
    protocol: string,
    to_port: number,
    cidr_blocks?: string[]|null,
    description?: string|null,
    ipv6_cidr_blocks?: string[]|null,
    prefix_list_ids?: string[]|null,
    security_groups?: string[]|null,
    self?: boolean|null
  }) {
    this.from_port = from_port;
    this.protocol = protocol;
    this.to_port = to_port;
    this.cidr_blocks = cidr_blocks;
    this.description = description;
    this.ipv6_cidr_blocks = ipv6_cidr_blocks;
    this.prefix_list_ids = prefix_list_ids;
    this.security_groups = security_groups;
    this.self = self;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['to_port'] = this.to_port;
    if (this.cidr_blocks !== null) {
      ih['cidr_blocks'] = this.cidr_blocks;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ipv6_cidr_blocks !== null) {
      ih['ipv6_cidr_blocks'] = this.ipv6_cidr_blocks;
    }
    if (this.prefix_list_ids !== null) {
      ih['prefix_list_ids'] = this.prefix_list_ids;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.self !== null) {
      ih['self'] = this.self;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_security_group_ingress_193';
  }
}

export class Aws_default_subnet implements PcoreValue {
  readonly availability_zone: string;
  readonly aws_default_subnet_id: string|null;
  readonly arn: string|null;
  readonly assign_ipv6_address_on_creation: boolean|null;
  readonly availability_zone_id: string|null;
  readonly cidr_block: string|null;
  readonly ipv6_cidr_block: string|null;
  readonly ipv6_cidr_block_association_id: string|null;
  readonly map_public_ip_on_launch: boolean|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    availability_zone,
    aws_default_subnet_id = null,
    arn = null,
    assign_ipv6_address_on_creation = null,
    availability_zone_id = null,
    cidr_block = null,
    ipv6_cidr_block = null,
    ipv6_cidr_block_association_id = null,
    map_public_ip_on_launch = null,
    owner_id = null,
    tags = null,
    vpc_id = null
  }: {
    availability_zone: string,
    aws_default_subnet_id?: string|null,
    arn?: string|null,
    assign_ipv6_address_on_creation?: boolean|null,
    availability_zone_id?: string|null,
    cidr_block?: string|null,
    ipv6_cidr_block?: string|null,
    ipv6_cidr_block_association_id?: string|null,
    map_public_ip_on_launch?: boolean|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.availability_zone = availability_zone;
    this.aws_default_subnet_id = aws_default_subnet_id;
    this.arn = arn;
    this.assign_ipv6_address_on_creation = assign_ipv6_address_on_creation;
    this.availability_zone_id = availability_zone_id;
    this.cidr_block = cidr_block;
    this.ipv6_cidr_block = ipv6_cidr_block;
    this.ipv6_cidr_block_association_id = ipv6_cidr_block_association_id;
    this.map_public_ip_on_launch = map_public_ip_on_launch;
    this.owner_id = owner_id;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['availability_zone'] = this.availability_zone;
    if (this.aws_default_subnet_id !== null) {
      ih['aws_default_subnet_id'] = this.aws_default_subnet_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.assign_ipv6_address_on_creation !== null) {
      ih['assign_ipv6_address_on_creation'] = this.assign_ipv6_address_on_creation;
    }
    if (this.availability_zone_id !== null) {
      ih['availability_zone_id'] = this.availability_zone_id;
    }
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    if (this.ipv6_cidr_block_association_id !== null) {
      ih['ipv6_cidr_block_association_id'] = this.ipv6_cidr_block_association_id;
    }
    if (this.map_public_ip_on_launch !== null) {
      ih['map_public_ip_on_launch'] = this.map_public_ip_on_launch;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_subnet';
  }
}

export class Aws_default_subnetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_subnetHandler';
  }
}

export class Aws_default_vpc implements PcoreValue {
  readonly aws_default_vpc_id: string|null;
  readonly arn: string|null;
  readonly assign_generated_ipv6_cidr_block: boolean|null;
  readonly cidr_block: string|null;
  readonly default_network_acl_id: string|null;
  readonly default_route_table_id: string|null;
  readonly default_security_group_id: string|null;
  readonly dhcp_options_id: string|null;
  readonly enable_classiclink: boolean|null;
  readonly enable_classiclink_dns_support: boolean|null;
  readonly enable_dns_hostnames: boolean|null;
  readonly enable_dns_support: boolean|null;
  readonly instance_tenancy: string|null;
  readonly ipv6_association_id: string|null;
  readonly ipv6_cidr_block: string|null;
  readonly main_route_table_id: string|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    aws_default_vpc_id = null,
    arn = null,
    assign_generated_ipv6_cidr_block = null,
    cidr_block = null,
    default_network_acl_id = null,
    default_route_table_id = null,
    default_security_group_id = null,
    dhcp_options_id = null,
    enable_classiclink = null,
    enable_classiclink_dns_support = null,
    enable_dns_hostnames = null,
    enable_dns_support = null,
    instance_tenancy = null,
    ipv6_association_id = null,
    ipv6_cidr_block = null,
    main_route_table_id = null,
    owner_id = null,
    tags = null
  }: {
    aws_default_vpc_id?: string|null,
    arn?: string|null,
    assign_generated_ipv6_cidr_block?: boolean|null,
    cidr_block?: string|null,
    default_network_acl_id?: string|null,
    default_route_table_id?: string|null,
    default_security_group_id?: string|null,
    dhcp_options_id?: string|null,
    enable_classiclink?: boolean|null,
    enable_classiclink_dns_support?: boolean|null,
    enable_dns_hostnames?: boolean|null,
    enable_dns_support?: boolean|null,
    instance_tenancy?: string|null,
    ipv6_association_id?: string|null,
    ipv6_cidr_block?: string|null,
    main_route_table_id?: string|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.aws_default_vpc_id = aws_default_vpc_id;
    this.arn = arn;
    this.assign_generated_ipv6_cidr_block = assign_generated_ipv6_cidr_block;
    this.cidr_block = cidr_block;
    this.default_network_acl_id = default_network_acl_id;
    this.default_route_table_id = default_route_table_id;
    this.default_security_group_id = default_security_group_id;
    this.dhcp_options_id = dhcp_options_id;
    this.enable_classiclink = enable_classiclink;
    this.enable_classiclink_dns_support = enable_classiclink_dns_support;
    this.enable_dns_hostnames = enable_dns_hostnames;
    this.enable_dns_support = enable_dns_support;
    this.instance_tenancy = instance_tenancy;
    this.ipv6_association_id = ipv6_association_id;
    this.ipv6_cidr_block = ipv6_cidr_block;
    this.main_route_table_id = main_route_table_id;
    this.owner_id = owner_id;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_default_vpc_id !== null) {
      ih['aws_default_vpc_id'] = this.aws_default_vpc_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.assign_generated_ipv6_cidr_block !== null) {
      ih['assign_generated_ipv6_cidr_block'] = this.assign_generated_ipv6_cidr_block;
    }
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.default_network_acl_id !== null) {
      ih['default_network_acl_id'] = this.default_network_acl_id;
    }
    if (this.default_route_table_id !== null) {
      ih['default_route_table_id'] = this.default_route_table_id;
    }
    if (this.default_security_group_id !== null) {
      ih['default_security_group_id'] = this.default_security_group_id;
    }
    if (this.dhcp_options_id !== null) {
      ih['dhcp_options_id'] = this.dhcp_options_id;
    }
    if (this.enable_classiclink !== null) {
      ih['enable_classiclink'] = this.enable_classiclink;
    }
    if (this.enable_classiclink_dns_support !== null) {
      ih['enable_classiclink_dns_support'] = this.enable_classiclink_dns_support;
    }
    if (this.enable_dns_hostnames !== null) {
      ih['enable_dns_hostnames'] = this.enable_dns_hostnames;
    }
    if (this.enable_dns_support !== null) {
      ih['enable_dns_support'] = this.enable_dns_support;
    }
    if (this.instance_tenancy !== null) {
      ih['instance_tenancy'] = this.instance_tenancy;
    }
    if (this.ipv6_association_id !== null) {
      ih['ipv6_association_id'] = this.ipv6_association_id;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    if (this.main_route_table_id !== null) {
      ih['main_route_table_id'] = this.main_route_table_id;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_vpc';
  }
}

export class Aws_default_vpcHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_vpcHandler';
  }
}

export class Aws_default_vpc_dhcp_options implements PcoreValue {
  readonly aws_default_vpc_dhcp_options_id: string|null;
  readonly domain_name: string|null;
  readonly domain_name_servers: string|null;
  readonly netbios_name_servers: string[]|null;
  readonly netbios_node_type: string|null;
  readonly ntp_servers: string|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    aws_default_vpc_dhcp_options_id = null,
    domain_name = null,
    domain_name_servers = null,
    netbios_name_servers = null,
    netbios_node_type = null,
    ntp_servers = null,
    owner_id = null,
    tags = null
  }: {
    aws_default_vpc_dhcp_options_id?: string|null,
    domain_name?: string|null,
    domain_name_servers?: string|null,
    netbios_name_servers?: string[]|null,
    netbios_node_type?: string|null,
    ntp_servers?: string|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.aws_default_vpc_dhcp_options_id = aws_default_vpc_dhcp_options_id;
    this.domain_name = domain_name;
    this.domain_name_servers = domain_name_servers;
    this.netbios_name_servers = netbios_name_servers;
    this.netbios_node_type = netbios_node_type;
    this.ntp_servers = ntp_servers;
    this.owner_id = owner_id;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_default_vpc_dhcp_options_id !== null) {
      ih['aws_default_vpc_dhcp_options_id'] = this.aws_default_vpc_dhcp_options_id;
    }
    if (this.domain_name !== null) {
      ih['domain_name'] = this.domain_name;
    }
    if (this.domain_name_servers !== null) {
      ih['domain_name_servers'] = this.domain_name_servers;
    }
    if (this.netbios_name_servers !== null) {
      ih['netbios_name_servers'] = this.netbios_name_servers;
    }
    if (this.netbios_node_type !== null) {
      ih['netbios_node_type'] = this.netbios_node_type;
    }
    if (this.ntp_servers !== null) {
      ih['ntp_servers'] = this.ntp_servers;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_vpc_dhcp_options';
  }
}

export class Aws_default_vpc_dhcp_optionsHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_default_vpc_dhcp_optionsHandler';
  }
}

export class Aws_devicefarm_project implements PcoreValue {
  readonly name: string;
  readonly aws_devicefarm_project_id: string|null;
  readonly arn: string|null;

  constructor({
    name,
    aws_devicefarm_project_id = null,
    arn = null
  }: {
    name: string,
    aws_devicefarm_project_id?: string|null,
    arn?: string|null
  }) {
    this.name = name;
    this.aws_devicefarm_project_id = aws_devicefarm_project_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_devicefarm_project_id !== null) {
      ih['aws_devicefarm_project_id'] = this.aws_devicefarm_project_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_devicefarm_project';
  }
}

export class Aws_devicefarm_projectHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_devicefarm_projectHandler';
  }
}

export class Aws_directory_service_conditional_forwarder implements PcoreValue {
  readonly directory_id: string;
  readonly dns_ips: string[];
  readonly remote_domain_name: string;
  readonly aws_directory_service_conditional_forwarder_id: string|null;

  constructor({
    directory_id,
    dns_ips,
    remote_domain_name,
    aws_directory_service_conditional_forwarder_id = null
  }: {
    directory_id: string,
    dns_ips: string[],
    remote_domain_name: string,
    aws_directory_service_conditional_forwarder_id?: string|null
  }) {
    this.directory_id = directory_id;
    this.dns_ips = dns_ips;
    this.remote_domain_name = remote_domain_name;
    this.aws_directory_service_conditional_forwarder_id = aws_directory_service_conditional_forwarder_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['directory_id'] = this.directory_id;
    ih['dns_ips'] = this.dns_ips;
    ih['remote_domain_name'] = this.remote_domain_name;
    if (this.aws_directory_service_conditional_forwarder_id !== null) {
      ih['aws_directory_service_conditional_forwarder_id'] = this.aws_directory_service_conditional_forwarder_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_directory_service_conditional_forwarder';
  }
}

export class Aws_directory_service_conditional_forwarderHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_directory_service_conditional_forwarderHandler';
  }
}

export class Aws_directory_service_directory implements PcoreValue {
  readonly name: string;
  readonly password: string;
  readonly aws_directory_service_directory_id: string|null;
  readonly access_url: string|null;
  readonly alias: string|null;
  readonly connect_settings: Aws_directory_service_directory_connect_settings_194[]|null;
  readonly description: string|null;
  readonly dns_ip_addresses: string[]|null;
  readonly edition: string|null;
  readonly enable_sso: boolean|null;
  readonly security_group_id: string|null;
  readonly short_name: string|null;
  readonly size: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly type: string|null;
  readonly vpc_settings: Aws_directory_service_directory_vpc_settings_195[]|null;

  constructor({
    name,
    password,
    aws_directory_service_directory_id = null,
    access_url = null,
    alias = null,
    connect_settings = null,
    description = null,
    dns_ip_addresses = null,
    edition = null,
    enable_sso = null,
    security_group_id = null,
    short_name = null,
    size = null,
    tags = null,
    type = null,
    vpc_settings = null
  }: {
    name: string,
    password: string,
    aws_directory_service_directory_id?: string|null,
    access_url?: string|null,
    alias?: string|null,
    connect_settings?: Aws_directory_service_directory_connect_settings_194[]|null,
    description?: string|null,
    dns_ip_addresses?: string[]|null,
    edition?: string|null,
    enable_sso?: boolean|null,
    security_group_id?: string|null,
    short_name?: string|null,
    size?: string|null,
    tags?: {[s: string]: string}|null,
    type?: string|null,
    vpc_settings?: Aws_directory_service_directory_vpc_settings_195[]|null
  }) {
    this.name = name;
    this.password = password;
    this.aws_directory_service_directory_id = aws_directory_service_directory_id;
    this.access_url = access_url;
    this.alias = alias;
    this.connect_settings = connect_settings;
    this.description = description;
    this.dns_ip_addresses = dns_ip_addresses;
    this.edition = edition;
    this.enable_sso = enable_sso;
    this.security_group_id = security_group_id;
    this.short_name = short_name;
    this.size = size;
    this.tags = tags;
    this.type = type;
    this.vpc_settings = vpc_settings;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['password'] = this.password;
    if (this.aws_directory_service_directory_id !== null) {
      ih['aws_directory_service_directory_id'] = this.aws_directory_service_directory_id;
    }
    if (this.access_url !== null) {
      ih['access_url'] = this.access_url;
    }
    if (this.alias !== null) {
      ih['alias'] = this.alias;
    }
    if (this.connect_settings !== null) {
      ih['connect_settings'] = this.connect_settings;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.dns_ip_addresses !== null) {
      ih['dns_ip_addresses'] = this.dns_ip_addresses;
    }
    if (this.edition !== null) {
      ih['edition'] = this.edition;
    }
    if (this.enable_sso !== null) {
      ih['enable_sso'] = this.enable_sso;
    }
    if (this.security_group_id !== null) {
      ih['security_group_id'] = this.security_group_id;
    }
    if (this.short_name !== null) {
      ih['short_name'] = this.short_name;
    }
    if (this.size !== null) {
      ih['size'] = this.size;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    if (this.vpc_settings !== null) {
      ih['vpc_settings'] = this.vpc_settings;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_directory_service_directory';
  }
}

export class Aws_directory_service_directoryHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_directory_service_directoryHandler';
  }
}

export class Aws_directory_service_directory_connect_settings_194 implements PcoreValue {
  readonly customer_dns_ips: string[];
  readonly customer_username: string;
  readonly subnet_ids: string[];
  readonly vpc_id: string;

  constructor({
    customer_dns_ips,
    customer_username,
    subnet_ids,
    vpc_id
  }: {
    customer_dns_ips: string[],
    customer_username: string,
    subnet_ids: string[],
    vpc_id: string
  }) {
    this.customer_dns_ips = customer_dns_ips;
    this.customer_username = customer_username;
    this.subnet_ids = subnet_ids;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['customer_dns_ips'] = this.customer_dns_ips;
    ih['customer_username'] = this.customer_username;
    ih['subnet_ids'] = this.subnet_ids;
    ih['vpc_id'] = this.vpc_id;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_directory_service_directory_connect_settings_194';
  }
}

export class Aws_directory_service_directory_vpc_settings_195 implements PcoreValue {
  readonly subnet_ids: string[];
  readonly vpc_id: string;

  constructor({
    subnet_ids,
    vpc_id
  }: {
    subnet_ids: string[],
    vpc_id: string
  }) {
    this.subnet_ids = subnet_ids;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_ids'] = this.subnet_ids;
    ih['vpc_id'] = this.vpc_id;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_directory_service_directory_vpc_settings_195';
  }
}

export class Aws_dlm_lifecycle_policy implements PcoreValue {
  readonly description: string;
  readonly execution_role_arn: string;
  readonly policy_details: Aws_dlm_lifecycle_policy_policy_details_196[];
  readonly aws_dlm_lifecycle_policy_id: string|null;
  readonly state: string|null;

  constructor({
    description,
    execution_role_arn,
    policy_details,
    aws_dlm_lifecycle_policy_id = null,
    state = null
  }: {
    description: string,
    execution_role_arn: string,
    policy_details: Aws_dlm_lifecycle_policy_policy_details_196[],
    aws_dlm_lifecycle_policy_id?: string|null,
    state?: string|null
  }) {
    this.description = description;
    this.execution_role_arn = execution_role_arn;
    this.policy_details = policy_details;
    this.aws_dlm_lifecycle_policy_id = aws_dlm_lifecycle_policy_id;
    this.state = state;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['description'] = this.description;
    ih['execution_role_arn'] = this.execution_role_arn;
    ih['policy_details'] = this.policy_details;
    if (this.aws_dlm_lifecycle_policy_id !== null) {
      ih['aws_dlm_lifecycle_policy_id'] = this.aws_dlm_lifecycle_policy_id;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dlm_lifecycle_policy';
  }
}

export class Aws_dlm_lifecycle_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dlm_lifecycle_policyHandler';
  }
}

export class Aws_dlm_lifecycle_policy_policy_details_196 implements PcoreValue {
  readonly resource_types: string[];
  readonly schedule: Aws_dlm_lifecycle_policy_policy_details_196_schedule_197[];
  readonly target_tags: {[s: string]: string};

  constructor({
    resource_types,
    schedule,
    target_tags
  }: {
    resource_types: string[],
    schedule: Aws_dlm_lifecycle_policy_policy_details_196_schedule_197[],
    target_tags: {[s: string]: string}
  }) {
    this.resource_types = resource_types;
    this.schedule = schedule;
    this.target_tags = target_tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_types'] = this.resource_types;
    ih['schedule'] = this.schedule;
    ih['target_tags'] = this.target_tags;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dlm_lifecycle_policy_policy_details_196';
  }
}

export class Aws_dlm_lifecycle_policy_policy_details_196_schedule_197 implements PcoreValue {
  readonly create_rule: Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_create_rule_198[];
  readonly name: string;
  readonly retain_rule: Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_retain_rule_199[];
  readonly copy_tags: boolean|null;
  readonly tags_to_add: {[s: string]: string}|null;

  constructor({
    create_rule,
    name,
    retain_rule,
    copy_tags = null,
    tags_to_add = null
  }: {
    create_rule: Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_create_rule_198[],
    name: string,
    retain_rule: Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_retain_rule_199[],
    copy_tags?: boolean|null,
    tags_to_add?: {[s: string]: string}|null
  }) {
    this.create_rule = create_rule;
    this.name = name;
    this.retain_rule = retain_rule;
    this.copy_tags = copy_tags;
    this.tags_to_add = tags_to_add;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['create_rule'] = this.create_rule;
    ih['name'] = this.name;
    ih['retain_rule'] = this.retain_rule;
    if (this.copy_tags !== null) {
      ih['copy_tags'] = this.copy_tags;
    }
    if (this.tags_to_add !== null) {
      ih['tags_to_add'] = this.tags_to_add;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dlm_lifecycle_policy_policy_details_196_schedule_197';
  }
}

export class Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_create_rule_198 implements PcoreValue {
  readonly interval: number;
  readonly interval_unit: string|null;
  readonly times: string[]|null;

  constructor({
    interval,
    interval_unit = null,
    times = null
  }: {
    interval: number,
    interval_unit?: string|null,
    times?: string[]|null
  }) {
    this.interval = interval;
    this.interval_unit = interval_unit;
    this.times = times;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['interval'] = this.interval;
    if (this.interval_unit !== null) {
      ih['interval_unit'] = this.interval_unit;
    }
    if (this.times !== null) {
      ih['times'] = this.times;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_create_rule_198';
  }
}

export class Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_retain_rule_199 implements PcoreValue {
  readonly count: number;

  constructor({
    count
  }: {
    count: number
  }) {
    this.count = count;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['count'] = this.count;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dlm_lifecycle_policy_policy_details_196_schedule_197_retain_rule_199';
  }
}

export class Aws_dms_certificate implements PcoreValue {
  readonly certificate_id: string;
  readonly aws_dms_certificate_id: string|null;
  readonly certificate_arn: string|null;
  readonly certificate_pem: string|null;
  readonly certificate_wallet: string|null;

  constructor({
    certificate_id,
    aws_dms_certificate_id = null,
    certificate_arn = null,
    certificate_pem = null,
    certificate_wallet = null
  }: {
    certificate_id: string,
    aws_dms_certificate_id?: string|null,
    certificate_arn?: string|null,
    certificate_pem?: string|null,
    certificate_wallet?: string|null
  }) {
    this.certificate_id = certificate_id;
    this.aws_dms_certificate_id = aws_dms_certificate_id;
    this.certificate_arn = certificate_arn;
    this.certificate_pem = certificate_pem;
    this.certificate_wallet = certificate_wallet;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['certificate_id'] = this.certificate_id;
    if (this.aws_dms_certificate_id !== null) {
      ih['aws_dms_certificate_id'] = this.aws_dms_certificate_id;
    }
    if (this.certificate_arn !== null) {
      ih['certificate_arn'] = this.certificate_arn;
    }
    if (this.certificate_pem !== null) {
      ih['certificate_pem'] = this.certificate_pem;
    }
    if (this.certificate_wallet !== null) {
      ih['certificate_wallet'] = this.certificate_wallet;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_certificate';
  }
}

export class Aws_dms_certificateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_certificateHandler';
  }
}

export class Aws_dms_endpoint implements PcoreValue {
  readonly endpoint_id: string;
  readonly endpoint_type: string;
  readonly engine_name: string;
  readonly aws_dms_endpoint_id: string|null;
  readonly certificate_arn: string|null;
  readonly database_name: string|null;
  readonly endpoint_arn: string|null;
  readonly extra_connection_attributes: string|null;
  readonly kms_key_arn: string|null;
  readonly mongodb_settings: Aws_dms_endpoint_mongodb_settings_200[]|null;
  readonly password: string|null;
  readonly port: number|null;
  readonly s3_settings: Aws_dms_endpoint_s3_settings_201[]|null;
  readonly server_name: string|null;
  readonly service_access_role: string|null;
  readonly ssl_mode: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly username: string|null;

  constructor({
    endpoint_id,
    endpoint_type,
    engine_name,
    aws_dms_endpoint_id = null,
    certificate_arn = null,
    database_name = null,
    endpoint_arn = null,
    extra_connection_attributes = null,
    kms_key_arn = null,
    mongodb_settings = null,
    password = null,
    port = null,
    s3_settings = null,
    server_name = null,
    service_access_role = null,
    ssl_mode = null,
    tags = null,
    username = null
  }: {
    endpoint_id: string,
    endpoint_type: string,
    engine_name: string,
    aws_dms_endpoint_id?: string|null,
    certificate_arn?: string|null,
    database_name?: string|null,
    endpoint_arn?: string|null,
    extra_connection_attributes?: string|null,
    kms_key_arn?: string|null,
    mongodb_settings?: Aws_dms_endpoint_mongodb_settings_200[]|null,
    password?: string|null,
    port?: number|null,
    s3_settings?: Aws_dms_endpoint_s3_settings_201[]|null,
    server_name?: string|null,
    service_access_role?: string|null,
    ssl_mode?: string|null,
    tags?: {[s: string]: string}|null,
    username?: string|null
  }) {
    this.endpoint_id = endpoint_id;
    this.endpoint_type = endpoint_type;
    this.engine_name = engine_name;
    this.aws_dms_endpoint_id = aws_dms_endpoint_id;
    this.certificate_arn = certificate_arn;
    this.database_name = database_name;
    this.endpoint_arn = endpoint_arn;
    this.extra_connection_attributes = extra_connection_attributes;
    this.kms_key_arn = kms_key_arn;
    this.mongodb_settings = mongodb_settings;
    this.password = password;
    this.port = port;
    this.s3_settings = s3_settings;
    this.server_name = server_name;
    this.service_access_role = service_access_role;
    this.ssl_mode = ssl_mode;
    this.tags = tags;
    this.username = username;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['endpoint_id'] = this.endpoint_id;
    ih['endpoint_type'] = this.endpoint_type;
    ih['engine_name'] = this.engine_name;
    if (this.aws_dms_endpoint_id !== null) {
      ih['aws_dms_endpoint_id'] = this.aws_dms_endpoint_id;
    }
    if (this.certificate_arn !== null) {
      ih['certificate_arn'] = this.certificate_arn;
    }
    if (this.database_name !== null) {
      ih['database_name'] = this.database_name;
    }
    if (this.endpoint_arn !== null) {
      ih['endpoint_arn'] = this.endpoint_arn;
    }
    if (this.extra_connection_attributes !== null) {
      ih['extra_connection_attributes'] = this.extra_connection_attributes;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.mongodb_settings !== null) {
      ih['mongodb_settings'] = this.mongodb_settings;
    }
    if (this.password !== null) {
      ih['password'] = this.password;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.s3_settings !== null) {
      ih['s3_settings'] = this.s3_settings;
    }
    if (this.server_name !== null) {
      ih['server_name'] = this.server_name;
    }
    if (this.service_access_role !== null) {
      ih['service_access_role'] = this.service_access_role;
    }
    if (this.ssl_mode !== null) {
      ih['ssl_mode'] = this.ssl_mode;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.username !== null) {
      ih['username'] = this.username;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_endpoint';
  }
}

export class Aws_dms_endpointHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_endpointHandler';
  }
}

export class Aws_dms_endpoint_mongodb_settings_200 implements PcoreValue {
  readonly auth_mechanism: string|null;
  readonly auth_source: string|null;
  readonly auth_type: string|null;
  readonly docs_to_investigate: string|null;
  readonly extract_doc_id: string|null;
  readonly nesting_level: string|null;

  constructor({
    auth_mechanism = null,
    auth_source = null,
    auth_type = null,
    docs_to_investigate = null,
    extract_doc_id = null,
    nesting_level = null
  }: {
    auth_mechanism?: string|null,
    auth_source?: string|null,
    auth_type?: string|null,
    docs_to_investigate?: string|null,
    extract_doc_id?: string|null,
    nesting_level?: string|null
  }) {
    this.auth_mechanism = auth_mechanism;
    this.auth_source = auth_source;
    this.auth_type = auth_type;
    this.docs_to_investigate = docs_to_investigate;
    this.extract_doc_id = extract_doc_id;
    this.nesting_level = nesting_level;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.auth_mechanism !== null) {
      ih['auth_mechanism'] = this.auth_mechanism;
    }
    if (this.auth_source !== null) {
      ih['auth_source'] = this.auth_source;
    }
    if (this.auth_type !== null) {
      ih['auth_type'] = this.auth_type;
    }
    if (this.docs_to_investigate !== null) {
      ih['docs_to_investigate'] = this.docs_to_investigate;
    }
    if (this.extract_doc_id !== null) {
      ih['extract_doc_id'] = this.extract_doc_id;
    }
    if (this.nesting_level !== null) {
      ih['nesting_level'] = this.nesting_level;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_endpoint_mongodb_settings_200';
  }
}

export class Aws_dms_endpoint_s3_settings_201 implements PcoreValue {
  readonly bucket_folder: string|null;
  readonly bucket_name: string|null;
  readonly compression_type: string|null;
  readonly csv_delimiter: string|null;
  readonly csv_row_delimiter: string|null;
  readonly external_table_definition: string|null;
  readonly service_access_role_arn: string|null;

  constructor({
    bucket_folder = null,
    bucket_name = null,
    compression_type = null,
    csv_delimiter = null,
    csv_row_delimiter = null,
    external_table_definition = null,
    service_access_role_arn = null
  }: {
    bucket_folder?: string|null,
    bucket_name?: string|null,
    compression_type?: string|null,
    csv_delimiter?: string|null,
    csv_row_delimiter?: string|null,
    external_table_definition?: string|null,
    service_access_role_arn?: string|null
  }) {
    this.bucket_folder = bucket_folder;
    this.bucket_name = bucket_name;
    this.compression_type = compression_type;
    this.csv_delimiter = csv_delimiter;
    this.csv_row_delimiter = csv_row_delimiter;
    this.external_table_definition = external_table_definition;
    this.service_access_role_arn = service_access_role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.bucket_folder !== null) {
      ih['bucket_folder'] = this.bucket_folder;
    }
    if (this.bucket_name !== null) {
      ih['bucket_name'] = this.bucket_name;
    }
    if (this.compression_type !== null) {
      ih['compression_type'] = this.compression_type;
    }
    if (this.csv_delimiter !== null) {
      ih['csv_delimiter'] = this.csv_delimiter;
    }
    if (this.csv_row_delimiter !== null) {
      ih['csv_row_delimiter'] = this.csv_row_delimiter;
    }
    if (this.external_table_definition !== null) {
      ih['external_table_definition'] = this.external_table_definition;
    }
    if (this.service_access_role_arn !== null) {
      ih['service_access_role_arn'] = this.service_access_role_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_endpoint_s3_settings_201';
  }
}

export class Aws_dms_replication_instance implements PcoreValue {
  readonly replication_instance_class: string;
  readonly replication_instance_id: string;
  readonly aws_dms_replication_instance_id: string|null;
  readonly allocated_storage: number|null;
  readonly apply_immediately: boolean|null;
  readonly auto_minor_version_upgrade: boolean|null;
  readonly availability_zone: string|null;
  readonly engine_version: string|null;
  readonly kms_key_arn: string|null;
  readonly multi_az: boolean|null;
  readonly preferred_maintenance_window: string|null;
  readonly publicly_accessible: boolean|null;
  readonly replication_instance_arn: string|null;
  readonly replication_instance_private_ips: string[]|null;
  readonly replication_instance_public_ips: string[]|null;
  readonly replication_subnet_group_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_security_group_ids: string[]|null;

  constructor({
    replication_instance_class,
    replication_instance_id,
    aws_dms_replication_instance_id = null,
    allocated_storage = null,
    apply_immediately = null,
    auto_minor_version_upgrade = null,
    availability_zone = null,
    engine_version = null,
    kms_key_arn = null,
    multi_az = null,
    preferred_maintenance_window = null,
    publicly_accessible = null,
    replication_instance_arn = null,
    replication_instance_private_ips = null,
    replication_instance_public_ips = null,
    replication_subnet_group_id = null,
    tags = null,
    vpc_security_group_ids = null
  }: {
    replication_instance_class: string,
    replication_instance_id: string,
    aws_dms_replication_instance_id?: string|null,
    allocated_storage?: number|null,
    apply_immediately?: boolean|null,
    auto_minor_version_upgrade?: boolean|null,
    availability_zone?: string|null,
    engine_version?: string|null,
    kms_key_arn?: string|null,
    multi_az?: boolean|null,
    preferred_maintenance_window?: string|null,
    publicly_accessible?: boolean|null,
    replication_instance_arn?: string|null,
    replication_instance_private_ips?: string[]|null,
    replication_instance_public_ips?: string[]|null,
    replication_subnet_group_id?: string|null,
    tags?: {[s: string]: string}|null,
    vpc_security_group_ids?: string[]|null
  }) {
    this.replication_instance_class = replication_instance_class;
    this.replication_instance_id = replication_instance_id;
    this.aws_dms_replication_instance_id = aws_dms_replication_instance_id;
    this.allocated_storage = allocated_storage;
    this.apply_immediately = apply_immediately;
    this.auto_minor_version_upgrade = auto_minor_version_upgrade;
    this.availability_zone = availability_zone;
    this.engine_version = engine_version;
    this.kms_key_arn = kms_key_arn;
    this.multi_az = multi_az;
    this.preferred_maintenance_window = preferred_maintenance_window;
    this.publicly_accessible = publicly_accessible;
    this.replication_instance_arn = replication_instance_arn;
    this.replication_instance_private_ips = replication_instance_private_ips;
    this.replication_instance_public_ips = replication_instance_public_ips;
    this.replication_subnet_group_id = replication_subnet_group_id;
    this.tags = tags;
    this.vpc_security_group_ids = vpc_security_group_ids;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['replication_instance_class'] = this.replication_instance_class;
    ih['replication_instance_id'] = this.replication_instance_id;
    if (this.aws_dms_replication_instance_id !== null) {
      ih['aws_dms_replication_instance_id'] = this.aws_dms_replication_instance_id;
    }
    if (this.allocated_storage !== null) {
      ih['allocated_storage'] = this.allocated_storage;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.auto_minor_version_upgrade !== null) {
      ih['auto_minor_version_upgrade'] = this.auto_minor_version_upgrade;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.multi_az !== null) {
      ih['multi_az'] = this.multi_az;
    }
    if (this.preferred_maintenance_window !== null) {
      ih['preferred_maintenance_window'] = this.preferred_maintenance_window;
    }
    if (this.publicly_accessible !== null) {
      ih['publicly_accessible'] = this.publicly_accessible;
    }
    if (this.replication_instance_arn !== null) {
      ih['replication_instance_arn'] = this.replication_instance_arn;
    }
    if (this.replication_instance_private_ips !== null) {
      ih['replication_instance_private_ips'] = this.replication_instance_private_ips;
    }
    if (this.replication_instance_public_ips !== null) {
      ih['replication_instance_public_ips'] = this.replication_instance_public_ips;
    }
    if (this.replication_subnet_group_id !== null) {
      ih['replication_subnet_group_id'] = this.replication_subnet_group_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_replication_instance';
  }
}

export class Aws_dms_replication_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_replication_instanceHandler';
  }
}

export class Aws_dms_replication_subnet_group implements PcoreValue {
  readonly replication_subnet_group_description: string;
  readonly replication_subnet_group_id: string;
  readonly subnet_ids: string[];
  readonly aws_dms_replication_subnet_group_id: string|null;
  readonly replication_subnet_group_arn: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    replication_subnet_group_description,
    replication_subnet_group_id,
    subnet_ids,
    aws_dms_replication_subnet_group_id = null,
    replication_subnet_group_arn = null,
    tags = null,
    vpc_id = null
  }: {
    replication_subnet_group_description: string,
    replication_subnet_group_id: string,
    subnet_ids: string[],
    aws_dms_replication_subnet_group_id?: string|null,
    replication_subnet_group_arn?: string|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.replication_subnet_group_description = replication_subnet_group_description;
    this.replication_subnet_group_id = replication_subnet_group_id;
    this.subnet_ids = subnet_ids;
    this.aws_dms_replication_subnet_group_id = aws_dms_replication_subnet_group_id;
    this.replication_subnet_group_arn = replication_subnet_group_arn;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['replication_subnet_group_description'] = this.replication_subnet_group_description;
    ih['replication_subnet_group_id'] = this.replication_subnet_group_id;
    ih['subnet_ids'] = this.subnet_ids;
    if (this.aws_dms_replication_subnet_group_id !== null) {
      ih['aws_dms_replication_subnet_group_id'] = this.aws_dms_replication_subnet_group_id;
    }
    if (this.replication_subnet_group_arn !== null) {
      ih['replication_subnet_group_arn'] = this.replication_subnet_group_arn;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_replication_subnet_group';
  }
}

export class Aws_dms_replication_subnet_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_replication_subnet_groupHandler';
  }
}

export class Aws_dms_replication_task implements PcoreValue {
  readonly migration_type: string;
  readonly replication_instance_arn: string;
  readonly replication_task_id: string;
  readonly source_endpoint_arn: string;
  readonly table_mappings: string;
  readonly target_endpoint_arn: string;
  readonly aws_dms_replication_task_id: string|null;
  readonly cdc_start_time: string|null;
  readonly replication_task_arn: string|null;
  readonly replication_task_settings: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    migration_type,
    replication_instance_arn,
    replication_task_id,
    source_endpoint_arn,
    table_mappings,
    target_endpoint_arn,
    aws_dms_replication_task_id = null,
    cdc_start_time = null,
    replication_task_arn = null,
    replication_task_settings = null,
    tags = null
  }: {
    migration_type: string,
    replication_instance_arn: string,
    replication_task_id: string,
    source_endpoint_arn: string,
    table_mappings: string,
    target_endpoint_arn: string,
    aws_dms_replication_task_id?: string|null,
    cdc_start_time?: string|null,
    replication_task_arn?: string|null,
    replication_task_settings?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.migration_type = migration_type;
    this.replication_instance_arn = replication_instance_arn;
    this.replication_task_id = replication_task_id;
    this.source_endpoint_arn = source_endpoint_arn;
    this.table_mappings = table_mappings;
    this.target_endpoint_arn = target_endpoint_arn;
    this.aws_dms_replication_task_id = aws_dms_replication_task_id;
    this.cdc_start_time = cdc_start_time;
    this.replication_task_arn = replication_task_arn;
    this.replication_task_settings = replication_task_settings;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['migration_type'] = this.migration_type;
    ih['replication_instance_arn'] = this.replication_instance_arn;
    ih['replication_task_id'] = this.replication_task_id;
    ih['source_endpoint_arn'] = this.source_endpoint_arn;
    ih['table_mappings'] = this.table_mappings;
    ih['target_endpoint_arn'] = this.target_endpoint_arn;
    if (this.aws_dms_replication_task_id !== null) {
      ih['aws_dms_replication_task_id'] = this.aws_dms_replication_task_id;
    }
    if (this.cdc_start_time !== null) {
      ih['cdc_start_time'] = this.cdc_start_time;
    }
    if (this.replication_task_arn !== null) {
      ih['replication_task_arn'] = this.replication_task_arn;
    }
    if (this.replication_task_settings !== null) {
      ih['replication_task_settings'] = this.replication_task_settings;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_replication_task';
  }
}

export class Aws_dms_replication_taskHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dms_replication_taskHandler';
  }
}

export class Aws_docdb_cluster_parameter_group implements PcoreValue {
  readonly family: string;
  readonly aws_docdb_cluster_parameter_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly parameter: Aws_docdb_cluster_parameter_group_parameter_202[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    family,
    aws_docdb_cluster_parameter_group_id = null,
    arn = null,
    description = null,
    name = null,
    name_prefix = null,
    parameter = null,
    tags = null
  }: {
    family: string,
    aws_docdb_cluster_parameter_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    parameter?: Aws_docdb_cluster_parameter_group_parameter_202[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.family = family;
    this.aws_docdb_cluster_parameter_group_id = aws_docdb_cluster_parameter_group_id;
    this.arn = arn;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
    this.parameter = parameter;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['family'] = this.family;
    if (this.aws_docdb_cluster_parameter_group_id !== null) {
      ih['aws_docdb_cluster_parameter_group_id'] = this.aws_docdb_cluster_parameter_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.parameter !== null) {
      ih['parameter'] = this.parameter;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_docdb_cluster_parameter_group';
  }
}

export class Aws_docdb_cluster_parameter_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_docdb_cluster_parameter_groupHandler';
  }
}

export class Aws_docdb_cluster_parameter_group_parameter_202 implements PcoreValue {
  readonly name: string;
  readonly value: string;
  readonly apply_method: string|null;

  constructor({
    name,
    value,
    apply_method = null
  }: {
    name: string,
    value: string,
    apply_method?: string|null
  }) {
    this.name = name;
    this.value = value;
    this.apply_method = apply_method;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    if (this.apply_method !== null) {
      ih['apply_method'] = this.apply_method;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_docdb_cluster_parameter_group_parameter_202';
  }
}

export class Aws_docdb_subnet_group implements PcoreValue {
  readonly subnet_ids: string[];
  readonly aws_docdb_subnet_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    subnet_ids,
    aws_docdb_subnet_group_id = null,
    arn = null,
    description = null,
    name = null,
    name_prefix = null,
    tags = null
  }: {
    subnet_ids: string[],
    aws_docdb_subnet_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.subnet_ids = subnet_ids;
    this.aws_docdb_subnet_group_id = aws_docdb_subnet_group_id;
    this.arn = arn;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_ids'] = this.subnet_ids;
    if (this.aws_docdb_subnet_group_id !== null) {
      ih['aws_docdb_subnet_group_id'] = this.aws_docdb_subnet_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_docdb_subnet_group';
  }
}

export class Aws_docdb_subnet_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_docdb_subnet_groupHandler';
  }
}

export class Aws_dx_bgp_peer implements PcoreValue {
  readonly address_family: string;
  readonly bgp_asn: number;
  readonly virtual_interface_id: string;
  readonly aws_dx_bgp_peer_id: string|null;
  readonly amazon_address: string|null;
  readonly bgp_auth_key: string|null;
  readonly bgp_status: string|null;
  readonly customer_address: string|null;

  constructor({
    address_family,
    bgp_asn,
    virtual_interface_id,
    aws_dx_bgp_peer_id = null,
    amazon_address = null,
    bgp_auth_key = null,
    bgp_status = null,
    customer_address = null
  }: {
    address_family: string,
    bgp_asn: number,
    virtual_interface_id: string,
    aws_dx_bgp_peer_id?: string|null,
    amazon_address?: string|null,
    bgp_auth_key?: string|null,
    bgp_status?: string|null,
    customer_address?: string|null
  }) {
    this.address_family = address_family;
    this.bgp_asn = bgp_asn;
    this.virtual_interface_id = virtual_interface_id;
    this.aws_dx_bgp_peer_id = aws_dx_bgp_peer_id;
    this.amazon_address = amazon_address;
    this.bgp_auth_key = bgp_auth_key;
    this.bgp_status = bgp_status;
    this.customer_address = customer_address;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['address_family'] = this.address_family;
    ih['bgp_asn'] = this.bgp_asn;
    ih['virtual_interface_id'] = this.virtual_interface_id;
    if (this.aws_dx_bgp_peer_id !== null) {
      ih['aws_dx_bgp_peer_id'] = this.aws_dx_bgp_peer_id;
    }
    if (this.amazon_address !== null) {
      ih['amazon_address'] = this.amazon_address;
    }
    if (this.bgp_auth_key !== null) {
      ih['bgp_auth_key'] = this.bgp_auth_key;
    }
    if (this.bgp_status !== null) {
      ih['bgp_status'] = this.bgp_status;
    }
    if (this.customer_address !== null) {
      ih['customer_address'] = this.customer_address;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_bgp_peer';
  }
}

export class Aws_dx_bgp_peerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_bgp_peerHandler';
  }
}

export class Aws_dx_connection implements PcoreValue {
  readonly bandwidth: string;
  readonly location: string;
  readonly name: string;
  readonly aws_dx_connection_id: string|null;
  readonly arn: string|null;
  readonly jumbo_frame_capable: boolean|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    bandwidth,
    location,
    name,
    aws_dx_connection_id = null,
    arn = null,
    jumbo_frame_capable = null,
    tags = null
  }: {
    bandwidth: string,
    location: string,
    name: string,
    aws_dx_connection_id?: string|null,
    arn?: string|null,
    jumbo_frame_capable?: boolean|null,
    tags?: {[s: string]: string}|null
  }) {
    this.bandwidth = bandwidth;
    this.location = location;
    this.name = name;
    this.aws_dx_connection_id = aws_dx_connection_id;
    this.arn = arn;
    this.jumbo_frame_capable = jumbo_frame_capable;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bandwidth'] = this.bandwidth;
    ih['location'] = this.location;
    ih['name'] = this.name;
    if (this.aws_dx_connection_id !== null) {
      ih['aws_dx_connection_id'] = this.aws_dx_connection_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.jumbo_frame_capable !== null) {
      ih['jumbo_frame_capable'] = this.jumbo_frame_capable;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_connection';
  }
}

export class Aws_dx_connectionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_connectionHandler';
  }
}

export class Aws_dx_connection_association implements PcoreValue {
  readonly connection_id: string;
  readonly lag_id: string;
  readonly aws_dx_connection_association_id: string|null;

  constructor({
    connection_id,
    lag_id,
    aws_dx_connection_association_id = null
  }: {
    connection_id: string,
    lag_id: string,
    aws_dx_connection_association_id?: string|null
  }) {
    this.connection_id = connection_id;
    this.lag_id = lag_id;
    this.aws_dx_connection_association_id = aws_dx_connection_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['connection_id'] = this.connection_id;
    ih['lag_id'] = this.lag_id;
    if (this.aws_dx_connection_association_id !== null) {
      ih['aws_dx_connection_association_id'] = this.aws_dx_connection_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_connection_association';
  }
}

export class Aws_dx_connection_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_connection_associationHandler';
  }
}

export class Aws_dx_gateway implements PcoreValue {
  readonly amazon_side_asn: string;
  readonly name: string;
  readonly aws_dx_gateway_id: string|null;

  constructor({
    amazon_side_asn,
    name,
    aws_dx_gateway_id = null
  }: {
    amazon_side_asn: string,
    name: string,
    aws_dx_gateway_id?: string|null
  }) {
    this.amazon_side_asn = amazon_side_asn;
    this.name = name;
    this.aws_dx_gateway_id = aws_dx_gateway_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['amazon_side_asn'] = this.amazon_side_asn;
    ih['name'] = this.name;
    if (this.aws_dx_gateway_id !== null) {
      ih['aws_dx_gateway_id'] = this.aws_dx_gateway_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_gateway';
  }
}

export class Aws_dx_gatewayHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_gatewayHandler';
  }
}

export class Aws_dx_gateway_association implements PcoreValue {
  readonly dx_gateway_id: string;
  readonly vpn_gateway_id: string;
  readonly aws_dx_gateway_association_id: string|null;

  constructor({
    dx_gateway_id,
    vpn_gateway_id,
    aws_dx_gateway_association_id = null
  }: {
    dx_gateway_id: string,
    vpn_gateway_id: string,
    aws_dx_gateway_association_id?: string|null
  }) {
    this.dx_gateway_id = dx_gateway_id;
    this.vpn_gateway_id = vpn_gateway_id;
    this.aws_dx_gateway_association_id = aws_dx_gateway_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['dx_gateway_id'] = this.dx_gateway_id;
    ih['vpn_gateway_id'] = this.vpn_gateway_id;
    if (this.aws_dx_gateway_association_id !== null) {
      ih['aws_dx_gateway_association_id'] = this.aws_dx_gateway_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_gateway_association';
  }
}

export class Aws_dx_gateway_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_gateway_associationHandler';
  }
}

export class Aws_dx_hosted_private_virtual_interface implements PcoreValue {
  readonly address_family: string;
  readonly bgp_asn: number;
  readonly connection_id: string;
  readonly name: string;
  readonly owner_account_id: string;
  readonly vlan: number;
  readonly aws_dx_hosted_private_virtual_interface_id: string|null;
  readonly amazon_address: string|null;
  readonly arn: string|null;
  readonly bgp_auth_key: string|null;
  readonly customer_address: string|null;
  readonly jumbo_frame_capable: boolean|null;
  readonly mtu: number|null;

  constructor({
    address_family,
    bgp_asn,
    connection_id,
    name,
    owner_account_id,
    vlan,
    aws_dx_hosted_private_virtual_interface_id = null,
    amazon_address = null,
    arn = null,
    bgp_auth_key = null,
    customer_address = null,
    jumbo_frame_capable = null,
    mtu = null
  }: {
    address_family: string,
    bgp_asn: number,
    connection_id: string,
    name: string,
    owner_account_id: string,
    vlan: number,
    aws_dx_hosted_private_virtual_interface_id?: string|null,
    amazon_address?: string|null,
    arn?: string|null,
    bgp_auth_key?: string|null,
    customer_address?: string|null,
    jumbo_frame_capable?: boolean|null,
    mtu?: number|null
  }) {
    this.address_family = address_family;
    this.bgp_asn = bgp_asn;
    this.connection_id = connection_id;
    this.name = name;
    this.owner_account_id = owner_account_id;
    this.vlan = vlan;
    this.aws_dx_hosted_private_virtual_interface_id = aws_dx_hosted_private_virtual_interface_id;
    this.amazon_address = amazon_address;
    this.arn = arn;
    this.bgp_auth_key = bgp_auth_key;
    this.customer_address = customer_address;
    this.jumbo_frame_capable = jumbo_frame_capable;
    this.mtu = mtu;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['address_family'] = this.address_family;
    ih['bgp_asn'] = this.bgp_asn;
    ih['connection_id'] = this.connection_id;
    ih['name'] = this.name;
    ih['owner_account_id'] = this.owner_account_id;
    ih['vlan'] = this.vlan;
    if (this.aws_dx_hosted_private_virtual_interface_id !== null) {
      ih['aws_dx_hosted_private_virtual_interface_id'] = this.aws_dx_hosted_private_virtual_interface_id;
    }
    if (this.amazon_address !== null) {
      ih['amazon_address'] = this.amazon_address;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.bgp_auth_key !== null) {
      ih['bgp_auth_key'] = this.bgp_auth_key;
    }
    if (this.customer_address !== null) {
      ih['customer_address'] = this.customer_address;
    }
    if (this.jumbo_frame_capable !== null) {
      ih['jumbo_frame_capable'] = this.jumbo_frame_capable;
    }
    if (this.mtu !== null) {
      ih['mtu'] = this.mtu;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_hosted_private_virtual_interface';
  }
}

export class Aws_dx_hosted_private_virtual_interfaceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_hosted_private_virtual_interfaceHandler';
  }
}

export class Aws_dx_hosted_private_virtual_interface_accepter implements PcoreValue {
  readonly virtual_interface_id: string;
  readonly aws_dx_hosted_private_virtual_interface_accepter_id: string|null;
  readonly arn: string|null;
  readonly dx_gateway_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpn_gateway_id: string|null;

  constructor({
    virtual_interface_id,
    aws_dx_hosted_private_virtual_interface_accepter_id = null,
    arn = null,
    dx_gateway_id = null,
    tags = null,
    vpn_gateway_id = null
  }: {
    virtual_interface_id: string,
    aws_dx_hosted_private_virtual_interface_accepter_id?: string|null,
    arn?: string|null,
    dx_gateway_id?: string|null,
    tags?: {[s: string]: string}|null,
    vpn_gateway_id?: string|null
  }) {
    this.virtual_interface_id = virtual_interface_id;
    this.aws_dx_hosted_private_virtual_interface_accepter_id = aws_dx_hosted_private_virtual_interface_accepter_id;
    this.arn = arn;
    this.dx_gateway_id = dx_gateway_id;
    this.tags = tags;
    this.vpn_gateway_id = vpn_gateway_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['virtual_interface_id'] = this.virtual_interface_id;
    if (this.aws_dx_hosted_private_virtual_interface_accepter_id !== null) {
      ih['aws_dx_hosted_private_virtual_interface_accepter_id'] = this.aws_dx_hosted_private_virtual_interface_accepter_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.dx_gateway_id !== null) {
      ih['dx_gateway_id'] = this.dx_gateway_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpn_gateway_id !== null) {
      ih['vpn_gateway_id'] = this.vpn_gateway_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_hosted_private_virtual_interface_accepter';
  }
}

export class Aws_dx_hosted_private_virtual_interface_accepterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_hosted_private_virtual_interface_accepterHandler';
  }
}

export class Aws_dx_hosted_public_virtual_interface implements PcoreValue {
  readonly address_family: string;
  readonly bgp_asn: number;
  readonly connection_id: string;
  readonly name: string;
  readonly owner_account_id: string;
  readonly route_filter_prefixes: string[];
  readonly vlan: number;
  readonly aws_dx_hosted_public_virtual_interface_id: string|null;
  readonly amazon_address: string|null;
  readonly arn: string|null;
  readonly bgp_auth_key: string|null;
  readonly customer_address: string|null;

  constructor({
    address_family,
    bgp_asn,
    connection_id,
    name,
    owner_account_id,
    route_filter_prefixes,
    vlan,
    aws_dx_hosted_public_virtual_interface_id = null,
    amazon_address = null,
    arn = null,
    bgp_auth_key = null,
    customer_address = null
  }: {
    address_family: string,
    bgp_asn: number,
    connection_id: string,
    name: string,
    owner_account_id: string,
    route_filter_prefixes: string[],
    vlan: number,
    aws_dx_hosted_public_virtual_interface_id?: string|null,
    amazon_address?: string|null,
    arn?: string|null,
    bgp_auth_key?: string|null,
    customer_address?: string|null
  }) {
    this.address_family = address_family;
    this.bgp_asn = bgp_asn;
    this.connection_id = connection_id;
    this.name = name;
    this.owner_account_id = owner_account_id;
    this.route_filter_prefixes = route_filter_prefixes;
    this.vlan = vlan;
    this.aws_dx_hosted_public_virtual_interface_id = aws_dx_hosted_public_virtual_interface_id;
    this.amazon_address = amazon_address;
    this.arn = arn;
    this.bgp_auth_key = bgp_auth_key;
    this.customer_address = customer_address;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['address_family'] = this.address_family;
    ih['bgp_asn'] = this.bgp_asn;
    ih['connection_id'] = this.connection_id;
    ih['name'] = this.name;
    ih['owner_account_id'] = this.owner_account_id;
    ih['route_filter_prefixes'] = this.route_filter_prefixes;
    ih['vlan'] = this.vlan;
    if (this.aws_dx_hosted_public_virtual_interface_id !== null) {
      ih['aws_dx_hosted_public_virtual_interface_id'] = this.aws_dx_hosted_public_virtual_interface_id;
    }
    if (this.amazon_address !== null) {
      ih['amazon_address'] = this.amazon_address;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.bgp_auth_key !== null) {
      ih['bgp_auth_key'] = this.bgp_auth_key;
    }
    if (this.customer_address !== null) {
      ih['customer_address'] = this.customer_address;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_hosted_public_virtual_interface';
  }
}

export class Aws_dx_hosted_public_virtual_interfaceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_hosted_public_virtual_interfaceHandler';
  }
}

export class Aws_dx_hosted_public_virtual_interface_accepter implements PcoreValue {
  readonly virtual_interface_id: string;
  readonly aws_dx_hosted_public_virtual_interface_accepter_id: string|null;
  readonly arn: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    virtual_interface_id,
    aws_dx_hosted_public_virtual_interface_accepter_id = null,
    arn = null,
    tags = null
  }: {
    virtual_interface_id: string,
    aws_dx_hosted_public_virtual_interface_accepter_id?: string|null,
    arn?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.virtual_interface_id = virtual_interface_id;
    this.aws_dx_hosted_public_virtual_interface_accepter_id = aws_dx_hosted_public_virtual_interface_accepter_id;
    this.arn = arn;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['virtual_interface_id'] = this.virtual_interface_id;
    if (this.aws_dx_hosted_public_virtual_interface_accepter_id !== null) {
      ih['aws_dx_hosted_public_virtual_interface_accepter_id'] = this.aws_dx_hosted_public_virtual_interface_accepter_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_hosted_public_virtual_interface_accepter';
  }
}

export class Aws_dx_hosted_public_virtual_interface_accepterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_hosted_public_virtual_interface_accepterHandler';
  }
}

export class Aws_dx_lag implements PcoreValue {
  readonly connections_bandwidth: string;
  readonly location: string;
  readonly name: string;
  readonly aws_dx_lag_id: string|null;
  readonly arn: string|null;
  readonly force_destroy: boolean|null;
  readonly number_of_connections: number|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    connections_bandwidth,
    location,
    name,
    aws_dx_lag_id = null,
    arn = null,
    force_destroy = null,
    number_of_connections = null,
    tags = null
  }: {
    connections_bandwidth: string,
    location: string,
    name: string,
    aws_dx_lag_id?: string|null,
    arn?: string|null,
    force_destroy?: boolean|null,
    number_of_connections?: number|null,
    tags?: {[s: string]: string}|null
  }) {
    this.connections_bandwidth = connections_bandwidth;
    this.location = location;
    this.name = name;
    this.aws_dx_lag_id = aws_dx_lag_id;
    this.arn = arn;
    this.force_destroy = force_destroy;
    this.number_of_connections = number_of_connections;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['connections_bandwidth'] = this.connections_bandwidth;
    ih['location'] = this.location;
    ih['name'] = this.name;
    if (this.aws_dx_lag_id !== null) {
      ih['aws_dx_lag_id'] = this.aws_dx_lag_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.force_destroy !== null) {
      ih['force_destroy'] = this.force_destroy;
    }
    if (this.number_of_connections !== null) {
      ih['number_of_connections'] = this.number_of_connections;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_lag';
  }
}

export class Aws_dx_lagHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_lagHandler';
  }
}

export class Aws_dx_private_virtual_interface implements PcoreValue {
  readonly address_family: string;
  readonly bgp_asn: number;
  readonly connection_id: string;
  readonly name: string;
  readonly vlan: number;
  readonly aws_dx_private_virtual_interface_id: string|null;
  readonly amazon_address: string|null;
  readonly arn: string|null;
  readonly bgp_auth_key: string|null;
  readonly customer_address: string|null;
  readonly dx_gateway_id: string|null;
  readonly jumbo_frame_capable: boolean|null;
  readonly mtu: number|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpn_gateway_id: string|null;

  constructor({
    address_family,
    bgp_asn,
    connection_id,
    name,
    vlan,
    aws_dx_private_virtual_interface_id = null,
    amazon_address = null,
    arn = null,
    bgp_auth_key = null,
    customer_address = null,
    dx_gateway_id = null,
    jumbo_frame_capable = null,
    mtu = null,
    tags = null,
    vpn_gateway_id = null
  }: {
    address_family: string,
    bgp_asn: number,
    connection_id: string,
    name: string,
    vlan: number,
    aws_dx_private_virtual_interface_id?: string|null,
    amazon_address?: string|null,
    arn?: string|null,
    bgp_auth_key?: string|null,
    customer_address?: string|null,
    dx_gateway_id?: string|null,
    jumbo_frame_capable?: boolean|null,
    mtu?: number|null,
    tags?: {[s: string]: string}|null,
    vpn_gateway_id?: string|null
  }) {
    this.address_family = address_family;
    this.bgp_asn = bgp_asn;
    this.connection_id = connection_id;
    this.name = name;
    this.vlan = vlan;
    this.aws_dx_private_virtual_interface_id = aws_dx_private_virtual_interface_id;
    this.amazon_address = amazon_address;
    this.arn = arn;
    this.bgp_auth_key = bgp_auth_key;
    this.customer_address = customer_address;
    this.dx_gateway_id = dx_gateway_id;
    this.jumbo_frame_capable = jumbo_frame_capable;
    this.mtu = mtu;
    this.tags = tags;
    this.vpn_gateway_id = vpn_gateway_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['address_family'] = this.address_family;
    ih['bgp_asn'] = this.bgp_asn;
    ih['connection_id'] = this.connection_id;
    ih['name'] = this.name;
    ih['vlan'] = this.vlan;
    if (this.aws_dx_private_virtual_interface_id !== null) {
      ih['aws_dx_private_virtual_interface_id'] = this.aws_dx_private_virtual_interface_id;
    }
    if (this.amazon_address !== null) {
      ih['amazon_address'] = this.amazon_address;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.bgp_auth_key !== null) {
      ih['bgp_auth_key'] = this.bgp_auth_key;
    }
    if (this.customer_address !== null) {
      ih['customer_address'] = this.customer_address;
    }
    if (this.dx_gateway_id !== null) {
      ih['dx_gateway_id'] = this.dx_gateway_id;
    }
    if (this.jumbo_frame_capable !== null) {
      ih['jumbo_frame_capable'] = this.jumbo_frame_capable;
    }
    if (this.mtu !== null) {
      ih['mtu'] = this.mtu;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpn_gateway_id !== null) {
      ih['vpn_gateway_id'] = this.vpn_gateway_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_private_virtual_interface';
  }
}

export class Aws_dx_private_virtual_interfaceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_private_virtual_interfaceHandler';
  }
}

export class Aws_dx_public_virtual_interface implements PcoreValue {
  readonly address_family: string;
  readonly bgp_asn: number;
  readonly connection_id: string;
  readonly name: string;
  readonly route_filter_prefixes: string[];
  readonly vlan: number;
  readonly aws_dx_public_virtual_interface_id: string|null;
  readonly amazon_address: string|null;
  readonly arn: string|null;
  readonly bgp_auth_key: string|null;
  readonly customer_address: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    address_family,
    bgp_asn,
    connection_id,
    name,
    route_filter_prefixes,
    vlan,
    aws_dx_public_virtual_interface_id = null,
    amazon_address = null,
    arn = null,
    bgp_auth_key = null,
    customer_address = null,
    tags = null
  }: {
    address_family: string,
    bgp_asn: number,
    connection_id: string,
    name: string,
    route_filter_prefixes: string[],
    vlan: number,
    aws_dx_public_virtual_interface_id?: string|null,
    amazon_address?: string|null,
    arn?: string|null,
    bgp_auth_key?: string|null,
    customer_address?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.address_family = address_family;
    this.bgp_asn = bgp_asn;
    this.connection_id = connection_id;
    this.name = name;
    this.route_filter_prefixes = route_filter_prefixes;
    this.vlan = vlan;
    this.aws_dx_public_virtual_interface_id = aws_dx_public_virtual_interface_id;
    this.amazon_address = amazon_address;
    this.arn = arn;
    this.bgp_auth_key = bgp_auth_key;
    this.customer_address = customer_address;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['address_family'] = this.address_family;
    ih['bgp_asn'] = this.bgp_asn;
    ih['connection_id'] = this.connection_id;
    ih['name'] = this.name;
    ih['route_filter_prefixes'] = this.route_filter_prefixes;
    ih['vlan'] = this.vlan;
    if (this.aws_dx_public_virtual_interface_id !== null) {
      ih['aws_dx_public_virtual_interface_id'] = this.aws_dx_public_virtual_interface_id;
    }
    if (this.amazon_address !== null) {
      ih['amazon_address'] = this.amazon_address;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.bgp_auth_key !== null) {
      ih['bgp_auth_key'] = this.bgp_auth_key;
    }
    if (this.customer_address !== null) {
      ih['customer_address'] = this.customer_address;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_public_virtual_interface';
  }
}

export class Aws_dx_public_virtual_interfaceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dx_public_virtual_interfaceHandler';
  }
}

export class Aws_dynamodb_global_table implements PcoreValue {
  readonly name: string;
  readonly replica: Aws_dynamodb_global_table_replica_203[];
  readonly aws_dynamodb_global_table_id: string|null;
  readonly arn: string|null;

  constructor({
    name,
    replica,
    aws_dynamodb_global_table_id = null,
    arn = null
  }: {
    name: string,
    replica: Aws_dynamodb_global_table_replica_203[],
    aws_dynamodb_global_table_id?: string|null,
    arn?: string|null
  }) {
    this.name = name;
    this.replica = replica;
    this.aws_dynamodb_global_table_id = aws_dynamodb_global_table_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['replica'] = this.replica;
    if (this.aws_dynamodb_global_table_id !== null) {
      ih['aws_dynamodb_global_table_id'] = this.aws_dynamodb_global_table_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_global_table';
  }
}

export class Aws_dynamodb_global_tableHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_global_tableHandler';
  }
}

export class Aws_dynamodb_global_table_replica_203 implements PcoreValue {
  readonly region_name: string;

  constructor({
    region_name
  }: {
    region_name: string
  }) {
    this.region_name = region_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['region_name'] = this.region_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_global_table_replica_203';
  }
}

export class Aws_dynamodb_table implements PcoreValue {
  readonly attribute: Aws_dynamodb_table_attribute_204[];
  readonly hash_key: string;
  readonly name: string;
  readonly aws_dynamodb_table_id: string|null;
  readonly arn: string|null;
  readonly billing_mode: string|null;
  readonly global_secondary_index: Aws_dynamodb_table_global_secondary_index_205[]|null;
  readonly local_secondary_index: Aws_dynamodb_table_local_secondary_index_206[]|null;
  readonly point_in_time_recovery: Aws_dynamodb_table_point_in_time_recovery_207[]|null;
  readonly range_key: string|null;
  readonly read_capacity: number|null;
  readonly server_side_encryption: Aws_dynamodb_table_server_side_encryption_208[]|null;
  readonly stream_arn: string|null;
  readonly stream_enabled: boolean|null;
  readonly stream_label: string|null;
  readonly stream_view_type: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly ttl: Aws_dynamodb_table_ttl_209[]|null;
  readonly write_capacity: number|null;

  constructor({
    attribute,
    hash_key,
    name,
    aws_dynamodb_table_id = null,
    arn = null,
    billing_mode = null,
    global_secondary_index = null,
    local_secondary_index = null,
    point_in_time_recovery = null,
    range_key = null,
    read_capacity = null,
    server_side_encryption = null,
    stream_arn = null,
    stream_enabled = null,
    stream_label = null,
    stream_view_type = null,
    tags = null,
    ttl = null,
    write_capacity = null
  }: {
    attribute: Aws_dynamodb_table_attribute_204[],
    hash_key: string,
    name: string,
    aws_dynamodb_table_id?: string|null,
    arn?: string|null,
    billing_mode?: string|null,
    global_secondary_index?: Aws_dynamodb_table_global_secondary_index_205[]|null,
    local_secondary_index?: Aws_dynamodb_table_local_secondary_index_206[]|null,
    point_in_time_recovery?: Aws_dynamodb_table_point_in_time_recovery_207[]|null,
    range_key?: string|null,
    read_capacity?: number|null,
    server_side_encryption?: Aws_dynamodb_table_server_side_encryption_208[]|null,
    stream_arn?: string|null,
    stream_enabled?: boolean|null,
    stream_label?: string|null,
    stream_view_type?: string|null,
    tags?: {[s: string]: string}|null,
    ttl?: Aws_dynamodb_table_ttl_209[]|null,
    write_capacity?: number|null
  }) {
    this.attribute = attribute;
    this.hash_key = hash_key;
    this.name = name;
    this.aws_dynamodb_table_id = aws_dynamodb_table_id;
    this.arn = arn;
    this.billing_mode = billing_mode;
    this.global_secondary_index = global_secondary_index;
    this.local_secondary_index = local_secondary_index;
    this.point_in_time_recovery = point_in_time_recovery;
    this.range_key = range_key;
    this.read_capacity = read_capacity;
    this.server_side_encryption = server_side_encryption;
    this.stream_arn = stream_arn;
    this.stream_enabled = stream_enabled;
    this.stream_label = stream_label;
    this.stream_view_type = stream_view_type;
    this.tags = tags;
    this.ttl = ttl;
    this.write_capacity = write_capacity;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['attribute'] = this.attribute;
    ih['hash_key'] = this.hash_key;
    ih['name'] = this.name;
    if (this.aws_dynamodb_table_id !== null) {
      ih['aws_dynamodb_table_id'] = this.aws_dynamodb_table_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.billing_mode !== null) {
      ih['billing_mode'] = this.billing_mode;
    }
    if (this.global_secondary_index !== null) {
      ih['global_secondary_index'] = this.global_secondary_index;
    }
    if (this.local_secondary_index !== null) {
      ih['local_secondary_index'] = this.local_secondary_index;
    }
    if (this.point_in_time_recovery !== null) {
      ih['point_in_time_recovery'] = this.point_in_time_recovery;
    }
    if (this.range_key !== null) {
      ih['range_key'] = this.range_key;
    }
    if (this.read_capacity !== null) {
      ih['read_capacity'] = this.read_capacity;
    }
    if (this.server_side_encryption !== null) {
      ih['server_side_encryption'] = this.server_side_encryption;
    }
    if (this.stream_arn !== null) {
      ih['stream_arn'] = this.stream_arn;
    }
    if (this.stream_enabled !== null) {
      ih['stream_enabled'] = this.stream_enabled;
    }
    if (this.stream_label !== null) {
      ih['stream_label'] = this.stream_label;
    }
    if (this.stream_view_type !== null) {
      ih['stream_view_type'] = this.stream_view_type;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.ttl !== null) {
      ih['ttl'] = this.ttl;
    }
    if (this.write_capacity !== null) {
      ih['write_capacity'] = this.write_capacity;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table';
  }
}

export class Aws_dynamodb_tableHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_tableHandler';
  }
}

export class Aws_dynamodb_table_attribute_204 implements PcoreValue {
  readonly name: string;
  readonly type: string;

  constructor({
    name,
    type
  }: {
    name: string,
    type: string
  }) {
    this.name = name;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table_attribute_204';
  }
}

export class Aws_dynamodb_table_global_secondary_index_205 implements PcoreValue {
  readonly hash_key: string;
  readonly name: string;
  readonly projection_type: string;
  readonly non_key_attributes: string[]|null;
  readonly range_key: string|null;
  readonly read_capacity: number|null;
  readonly write_capacity: number|null;

  constructor({
    hash_key,
    name,
    projection_type,
    non_key_attributes = null,
    range_key = null,
    read_capacity = null,
    write_capacity = null
  }: {
    hash_key: string,
    name: string,
    projection_type: string,
    non_key_attributes?: string[]|null,
    range_key?: string|null,
    read_capacity?: number|null,
    write_capacity?: number|null
  }) {
    this.hash_key = hash_key;
    this.name = name;
    this.projection_type = projection_type;
    this.non_key_attributes = non_key_attributes;
    this.range_key = range_key;
    this.read_capacity = read_capacity;
    this.write_capacity = write_capacity;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['hash_key'] = this.hash_key;
    ih['name'] = this.name;
    ih['projection_type'] = this.projection_type;
    if (this.non_key_attributes !== null) {
      ih['non_key_attributes'] = this.non_key_attributes;
    }
    if (this.range_key !== null) {
      ih['range_key'] = this.range_key;
    }
    if (this.read_capacity !== null) {
      ih['read_capacity'] = this.read_capacity;
    }
    if (this.write_capacity !== null) {
      ih['write_capacity'] = this.write_capacity;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table_global_secondary_index_205';
  }
}

export class Aws_dynamodb_table_item implements PcoreValue {
  readonly hash_key: string;
  readonly item: string;
  readonly table_name: string;
  readonly aws_dynamodb_table_item_id: string|null;
  readonly range_key: string|null;

  constructor({
    hash_key,
    item,
    table_name,
    aws_dynamodb_table_item_id = null,
    range_key = null
  }: {
    hash_key: string,
    item: string,
    table_name: string,
    aws_dynamodb_table_item_id?: string|null,
    range_key?: string|null
  }) {
    this.hash_key = hash_key;
    this.item = item;
    this.table_name = table_name;
    this.aws_dynamodb_table_item_id = aws_dynamodb_table_item_id;
    this.range_key = range_key;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['hash_key'] = this.hash_key;
    ih['item'] = this.item;
    ih['table_name'] = this.table_name;
    if (this.aws_dynamodb_table_item_id !== null) {
      ih['aws_dynamodb_table_item_id'] = this.aws_dynamodb_table_item_id;
    }
    if (this.range_key !== null) {
      ih['range_key'] = this.range_key;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table_item';
  }
}

export class Aws_dynamodb_table_itemHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table_itemHandler';
  }
}

export class Aws_dynamodb_table_local_secondary_index_206 implements PcoreValue {
  readonly name: string;
  readonly projection_type: string;
  readonly range_key: string;
  readonly non_key_attributes: string[]|null;

  constructor({
    name,
    projection_type,
    range_key,
    non_key_attributes = null
  }: {
    name: string,
    projection_type: string,
    range_key: string,
    non_key_attributes?: string[]|null
  }) {
    this.name = name;
    this.projection_type = projection_type;
    this.range_key = range_key;
    this.non_key_attributes = non_key_attributes;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['projection_type'] = this.projection_type;
    ih['range_key'] = this.range_key;
    if (this.non_key_attributes !== null) {
      ih['non_key_attributes'] = this.non_key_attributes;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table_local_secondary_index_206';
  }
}

export class Aws_dynamodb_table_point_in_time_recovery_207 implements PcoreValue {
  readonly enabled: boolean;

  constructor({
    enabled
  }: {
    enabled: boolean
  }) {
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['enabled'] = this.enabled;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table_point_in_time_recovery_207';
  }
}

export class Aws_dynamodb_table_server_side_encryption_208 implements PcoreValue {
  readonly enabled: boolean;

  constructor({
    enabled
  }: {
    enabled: boolean
  }) {
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['enabled'] = this.enabled;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table_server_side_encryption_208';
  }
}

export class Aws_dynamodb_table_ttl_209 implements PcoreValue {
  readonly attribute_name: string;
  readonly enabled: boolean;

  constructor({
    attribute_name,
    enabled
  }: {
    attribute_name: string,
    enabled: boolean
  }) {
    this.attribute_name = attribute_name;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['attribute_name'] = this.attribute_name;
    ih['enabled'] = this.enabled;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_dynamodb_table_ttl_209';
  }
}

export class Aws_ebs_snapshot implements PcoreValue {
  readonly volume_id: string;
  readonly aws_ebs_snapshot_id: string|null;
  readonly data_encryption_key_id: string|null;
  readonly description: string|null;
  readonly encrypted: boolean|null;
  readonly kms_key_id: string|null;
  readonly owner_alias: string|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly volume_size: number|null;

  constructor({
    volume_id,
    aws_ebs_snapshot_id = null,
    data_encryption_key_id = null,
    description = null,
    encrypted = null,
    kms_key_id = null,
    owner_alias = null,
    owner_id = null,
    tags = null,
    volume_size = null
  }: {
    volume_id: string,
    aws_ebs_snapshot_id?: string|null,
    data_encryption_key_id?: string|null,
    description?: string|null,
    encrypted?: boolean|null,
    kms_key_id?: string|null,
    owner_alias?: string|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null,
    volume_size?: number|null
  }) {
    this.volume_id = volume_id;
    this.aws_ebs_snapshot_id = aws_ebs_snapshot_id;
    this.data_encryption_key_id = data_encryption_key_id;
    this.description = description;
    this.encrypted = encrypted;
    this.kms_key_id = kms_key_id;
    this.owner_alias = owner_alias;
    this.owner_id = owner_id;
    this.tags = tags;
    this.volume_size = volume_size;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['volume_id'] = this.volume_id;
    if (this.aws_ebs_snapshot_id !== null) {
      ih['aws_ebs_snapshot_id'] = this.aws_ebs_snapshot_id;
    }
    if (this.data_encryption_key_id !== null) {
      ih['data_encryption_key_id'] = this.data_encryption_key_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.owner_alias !== null) {
      ih['owner_alias'] = this.owner_alias;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ebs_snapshot';
  }
}

export class Aws_ebs_snapshotHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ebs_snapshotHandler';
  }
}

export class Aws_ebs_snapshot_copy implements PcoreValue {
  readonly source_region: string;
  readonly source_snapshot_id: string;
  readonly aws_ebs_snapshot_copy_id: string|null;
  readonly data_encryption_key_id: string|null;
  readonly description: string|null;
  readonly encrypted: boolean|null;
  readonly kms_key_id: string|null;
  readonly owner_alias: string|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly volume_id: string|null;
  readonly volume_size: number|null;

  constructor({
    source_region,
    source_snapshot_id,
    aws_ebs_snapshot_copy_id = null,
    data_encryption_key_id = null,
    description = null,
    encrypted = null,
    kms_key_id = null,
    owner_alias = null,
    owner_id = null,
    tags = null,
    volume_id = null,
    volume_size = null
  }: {
    source_region: string,
    source_snapshot_id: string,
    aws_ebs_snapshot_copy_id?: string|null,
    data_encryption_key_id?: string|null,
    description?: string|null,
    encrypted?: boolean|null,
    kms_key_id?: string|null,
    owner_alias?: string|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null,
    volume_id?: string|null,
    volume_size?: number|null
  }) {
    this.source_region = source_region;
    this.source_snapshot_id = source_snapshot_id;
    this.aws_ebs_snapshot_copy_id = aws_ebs_snapshot_copy_id;
    this.data_encryption_key_id = data_encryption_key_id;
    this.description = description;
    this.encrypted = encrypted;
    this.kms_key_id = kms_key_id;
    this.owner_alias = owner_alias;
    this.owner_id = owner_id;
    this.tags = tags;
    this.volume_id = volume_id;
    this.volume_size = volume_size;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['source_region'] = this.source_region;
    ih['source_snapshot_id'] = this.source_snapshot_id;
    if (this.aws_ebs_snapshot_copy_id !== null) {
      ih['aws_ebs_snapshot_copy_id'] = this.aws_ebs_snapshot_copy_id;
    }
    if (this.data_encryption_key_id !== null) {
      ih['data_encryption_key_id'] = this.data_encryption_key_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.owner_alias !== null) {
      ih['owner_alias'] = this.owner_alias;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.volume_id !== null) {
      ih['volume_id'] = this.volume_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ebs_snapshot_copy';
  }
}

export class Aws_ebs_snapshot_copyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ebs_snapshot_copyHandler';
  }
}

export class Aws_ebs_volume implements PcoreValue {
  readonly availability_zone: string;
  readonly aws_ebs_volume_id: string|null;
  readonly arn: string|null;
  readonly encrypted: boolean|null;
  readonly iops: number|null;
  readonly kms_key_id: string|null;
  readonly size: number|null;
  readonly snapshot_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly type: string|null;

  constructor({
    availability_zone,
    aws_ebs_volume_id = null,
    arn = null,
    encrypted = null,
    iops = null,
    kms_key_id = null,
    size = null,
    snapshot_id = null,
    tags = null,
    type = null
  }: {
    availability_zone: string,
    aws_ebs_volume_id?: string|null,
    arn?: string|null,
    encrypted?: boolean|null,
    iops?: number|null,
    kms_key_id?: string|null,
    size?: number|null,
    snapshot_id?: string|null,
    tags?: {[s: string]: string}|null,
    type?: string|null
  }) {
    this.availability_zone = availability_zone;
    this.aws_ebs_volume_id = aws_ebs_volume_id;
    this.arn = arn;
    this.encrypted = encrypted;
    this.iops = iops;
    this.kms_key_id = kms_key_id;
    this.size = size;
    this.snapshot_id = snapshot_id;
    this.tags = tags;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['availability_zone'] = this.availability_zone;
    if (this.aws_ebs_volume_id !== null) {
      ih['aws_ebs_volume_id'] = this.aws_ebs_volume_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.size !== null) {
      ih['size'] = this.size;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ebs_volume';
  }
}

export class Aws_ebs_volumeHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ebs_volumeHandler';
  }
}

export class Aws_ec2_capacity_reservation implements PcoreValue {
  readonly availability_zone: string;
  readonly instance_count: number;
  readonly instance_platform: string;
  readonly instance_type: string;
  readonly aws_ec2_capacity_reservation_id: string|null;
  readonly ebs_optimized: boolean|null;
  readonly end_date: string|null;
  readonly end_date_type: string|null;
  readonly ephemeral_storage: boolean|null;
  readonly instance_match_criteria: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly tenancy: string|null;

  constructor({
    availability_zone,
    instance_count,
    instance_platform,
    instance_type,
    aws_ec2_capacity_reservation_id = null,
    ebs_optimized = null,
    end_date = null,
    end_date_type = null,
    ephemeral_storage = null,
    instance_match_criteria = null,
    tags = null,
    tenancy = null
  }: {
    availability_zone: string,
    instance_count: number,
    instance_platform: string,
    instance_type: string,
    aws_ec2_capacity_reservation_id?: string|null,
    ebs_optimized?: boolean|null,
    end_date?: string|null,
    end_date_type?: string|null,
    ephemeral_storage?: boolean|null,
    instance_match_criteria?: string|null,
    tags?: {[s: string]: string}|null,
    tenancy?: string|null
  }) {
    this.availability_zone = availability_zone;
    this.instance_count = instance_count;
    this.instance_platform = instance_platform;
    this.instance_type = instance_type;
    this.aws_ec2_capacity_reservation_id = aws_ec2_capacity_reservation_id;
    this.ebs_optimized = ebs_optimized;
    this.end_date = end_date;
    this.end_date_type = end_date_type;
    this.ephemeral_storage = ephemeral_storage;
    this.instance_match_criteria = instance_match_criteria;
    this.tags = tags;
    this.tenancy = tenancy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['availability_zone'] = this.availability_zone;
    ih['instance_count'] = this.instance_count;
    ih['instance_platform'] = this.instance_platform;
    ih['instance_type'] = this.instance_type;
    if (this.aws_ec2_capacity_reservation_id !== null) {
      ih['aws_ec2_capacity_reservation_id'] = this.aws_ec2_capacity_reservation_id;
    }
    if (this.ebs_optimized !== null) {
      ih['ebs_optimized'] = this.ebs_optimized;
    }
    if (this.end_date !== null) {
      ih['end_date'] = this.end_date;
    }
    if (this.end_date_type !== null) {
      ih['end_date_type'] = this.end_date_type;
    }
    if (this.ephemeral_storage !== null) {
      ih['ephemeral_storage'] = this.ephemeral_storage;
    }
    if (this.instance_match_criteria !== null) {
      ih['instance_match_criteria'] = this.instance_match_criteria;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.tenancy !== null) {
      ih['tenancy'] = this.tenancy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_capacity_reservation';
  }
}

export class Aws_ec2_capacity_reservationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_capacity_reservationHandler';
  }
}

export class Aws_ec2_fleet implements PcoreValue {
  readonly launch_template_config: Aws_ec2_fleet_launch_template_config_210[];
  readonly target_capacity_specification: Aws_ec2_fleet_target_capacity_specification_215[];
  readonly aws_ec2_fleet_id: string|null;
  readonly excess_capacity_termination_policy: string|null;
  readonly on_demand_options: Aws_ec2_fleet_on_demand_options_213[]|null;
  readonly replace_unhealthy_instances: boolean|null;
  readonly spot_options: Aws_ec2_fleet_spot_options_214[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly terminate_instances: boolean|null;
  readonly terminate_instances_with_expiration: boolean|null;
  readonly type: string|null;

  constructor({
    launch_template_config,
    target_capacity_specification,
    aws_ec2_fleet_id = null,
    excess_capacity_termination_policy = null,
    on_demand_options = null,
    replace_unhealthy_instances = null,
    spot_options = null,
    tags = null,
    terminate_instances = null,
    terminate_instances_with_expiration = null,
    type = null
  }: {
    launch_template_config: Aws_ec2_fleet_launch_template_config_210[],
    target_capacity_specification: Aws_ec2_fleet_target_capacity_specification_215[],
    aws_ec2_fleet_id?: string|null,
    excess_capacity_termination_policy?: string|null,
    on_demand_options?: Aws_ec2_fleet_on_demand_options_213[]|null,
    replace_unhealthy_instances?: boolean|null,
    spot_options?: Aws_ec2_fleet_spot_options_214[]|null,
    tags?: {[s: string]: string}|null,
    terminate_instances?: boolean|null,
    terminate_instances_with_expiration?: boolean|null,
    type?: string|null
  }) {
    this.launch_template_config = launch_template_config;
    this.target_capacity_specification = target_capacity_specification;
    this.aws_ec2_fleet_id = aws_ec2_fleet_id;
    this.excess_capacity_termination_policy = excess_capacity_termination_policy;
    this.on_demand_options = on_demand_options;
    this.replace_unhealthy_instances = replace_unhealthy_instances;
    this.spot_options = spot_options;
    this.tags = tags;
    this.terminate_instances = terminate_instances;
    this.terminate_instances_with_expiration = terminate_instances_with_expiration;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['launch_template_config'] = this.launch_template_config;
    ih['target_capacity_specification'] = this.target_capacity_specification;
    if (this.aws_ec2_fleet_id !== null) {
      ih['aws_ec2_fleet_id'] = this.aws_ec2_fleet_id;
    }
    if (this.excess_capacity_termination_policy !== null) {
      ih['excess_capacity_termination_policy'] = this.excess_capacity_termination_policy;
    }
    if (this.on_demand_options !== null) {
      ih['on_demand_options'] = this.on_demand_options;
    }
    if (this.replace_unhealthy_instances !== null) {
      ih['replace_unhealthy_instances'] = this.replace_unhealthy_instances;
    }
    if (this.spot_options !== null) {
      ih['spot_options'] = this.spot_options;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.terminate_instances !== null) {
      ih['terminate_instances'] = this.terminate_instances;
    }
    if (this.terminate_instances_with_expiration !== null) {
      ih['terminate_instances_with_expiration'] = this.terminate_instances_with_expiration;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_fleet';
  }
}

export class Aws_ec2_fleetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_fleetHandler';
  }
}

export class Aws_ec2_fleet_launch_template_config_210 implements PcoreValue {
  readonly launch_template_specification: Aws_ec2_fleet_launch_template_config_210_launch_template_specification_211[];
  readonly override: Aws_ec2_fleet_launch_template_config_210_override_212[]|null;

  constructor({
    launch_template_specification,
    override = null
  }: {
    launch_template_specification: Aws_ec2_fleet_launch_template_config_210_launch_template_specification_211[],
    override?: Aws_ec2_fleet_launch_template_config_210_override_212[]|null
  }) {
    this.launch_template_specification = launch_template_specification;
    this.override = override;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['launch_template_specification'] = this.launch_template_specification;
    if (this.override !== null) {
      ih['override'] = this.override;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_fleet_launch_template_config_210';
  }
}

export class Aws_ec2_fleet_launch_template_config_210_launch_template_specification_211 implements PcoreValue {
  readonly version: string;
  readonly launch_template_id: string|null;
  readonly launch_template_name: string|null;

  constructor({
    version,
    launch_template_id = null,
    launch_template_name = null
  }: {
    version: string,
    launch_template_id?: string|null,
    launch_template_name?: string|null
  }) {
    this.version = version;
    this.launch_template_id = launch_template_id;
    this.launch_template_name = launch_template_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['version'] = this.version;
    if (this.launch_template_id !== null) {
      ih['launch_template_id'] = this.launch_template_id;
    }
    if (this.launch_template_name !== null) {
      ih['launch_template_name'] = this.launch_template_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_fleet_launch_template_config_210_launch_template_specification_211';
  }
}

export class Aws_ec2_fleet_launch_template_config_210_override_212 implements PcoreValue {
  readonly availability_zone: string|null;
  readonly instance_type: string|null;
  readonly max_price: string|null;
  readonly priority: number|null;
  readonly subnet_id: string|null;
  readonly weighted_capacity: number|null;

  constructor({
    availability_zone = null,
    instance_type = null,
    max_price = null,
    priority = null,
    subnet_id = null,
    weighted_capacity = null
  }: {
    availability_zone?: string|null,
    instance_type?: string|null,
    max_price?: string|null,
    priority?: number|null,
    subnet_id?: string|null,
    weighted_capacity?: number|null
  }) {
    this.availability_zone = availability_zone;
    this.instance_type = instance_type;
    this.max_price = max_price;
    this.priority = priority;
    this.subnet_id = subnet_id;
    this.weighted_capacity = weighted_capacity;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.instance_type !== null) {
      ih['instance_type'] = this.instance_type;
    }
    if (this.max_price !== null) {
      ih['max_price'] = this.max_price;
    }
    if (this.priority !== null) {
      ih['priority'] = this.priority;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.weighted_capacity !== null) {
      ih['weighted_capacity'] = this.weighted_capacity;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_fleet_launch_template_config_210_override_212';
  }
}

export class Aws_ec2_fleet_on_demand_options_213 implements PcoreValue {
  readonly allocation_strategy: string|null;

  constructor({
    allocation_strategy = null
  }: {
    allocation_strategy?: string|null
  }) {
    this.allocation_strategy = allocation_strategy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allocation_strategy !== null) {
      ih['allocation_strategy'] = this.allocation_strategy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_fleet_on_demand_options_213';
  }
}

export class Aws_ec2_fleet_spot_options_214 implements PcoreValue {
  readonly allocation_strategy: string|null;
  readonly instance_interruption_behavior: string|null;
  readonly instance_pools_to_use_count: number|null;

  constructor({
    allocation_strategy = null,
    instance_interruption_behavior = null,
    instance_pools_to_use_count = null
  }: {
    allocation_strategy?: string|null,
    instance_interruption_behavior?: string|null,
    instance_pools_to_use_count?: number|null
  }) {
    this.allocation_strategy = allocation_strategy;
    this.instance_interruption_behavior = instance_interruption_behavior;
    this.instance_pools_to_use_count = instance_pools_to_use_count;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allocation_strategy !== null) {
      ih['allocation_strategy'] = this.allocation_strategy;
    }
    if (this.instance_interruption_behavior !== null) {
      ih['instance_interruption_behavior'] = this.instance_interruption_behavior;
    }
    if (this.instance_pools_to_use_count !== null) {
      ih['instance_pools_to_use_count'] = this.instance_pools_to_use_count;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_fleet_spot_options_214';
  }
}

export class Aws_ec2_fleet_target_capacity_specification_215 implements PcoreValue {
  readonly default_target_capacity_type: string;
  readonly total_target_capacity: number;
  readonly on_demand_target_capacity: number|null;
  readonly spot_target_capacity: number|null;

  constructor({
    default_target_capacity_type,
    total_target_capacity,
    on_demand_target_capacity = null,
    spot_target_capacity = null
  }: {
    default_target_capacity_type: string,
    total_target_capacity: number,
    on_demand_target_capacity?: number|null,
    spot_target_capacity?: number|null
  }) {
    this.default_target_capacity_type = default_target_capacity_type;
    this.total_target_capacity = total_target_capacity;
    this.on_demand_target_capacity = on_demand_target_capacity;
    this.spot_target_capacity = spot_target_capacity;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_target_capacity_type'] = this.default_target_capacity_type;
    ih['total_target_capacity'] = this.total_target_capacity;
    if (this.on_demand_target_capacity !== null) {
      ih['on_demand_target_capacity'] = this.on_demand_target_capacity;
    }
    if (this.spot_target_capacity !== null) {
      ih['spot_target_capacity'] = this.spot_target_capacity;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_fleet_target_capacity_specification_215';
  }
}

export class Aws_ec2_transit_gateway implements PcoreValue {
  readonly aws_ec2_transit_gateway_id: string|null;
  readonly amazon_side_asn: number|null;
  readonly arn: string|null;
  readonly association_default_route_table_id: string|null;
  readonly auto_accept_shared_attachments: string|null;
  readonly default_route_table_association: string|null;
  readonly default_route_table_propagation: string|null;
  readonly description: string|null;
  readonly dns_support: string|null;
  readonly owner_id: string|null;
  readonly propagation_default_route_table_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpn_ecmp_support: string|null;

  constructor({
    aws_ec2_transit_gateway_id = null,
    amazon_side_asn = null,
    arn = null,
    association_default_route_table_id = null,
    auto_accept_shared_attachments = null,
    default_route_table_association = null,
    default_route_table_propagation = null,
    description = null,
    dns_support = null,
    owner_id = null,
    propagation_default_route_table_id = null,
    tags = null,
    vpn_ecmp_support = null
  }: {
    aws_ec2_transit_gateway_id?: string|null,
    amazon_side_asn?: number|null,
    arn?: string|null,
    association_default_route_table_id?: string|null,
    auto_accept_shared_attachments?: string|null,
    default_route_table_association?: string|null,
    default_route_table_propagation?: string|null,
    description?: string|null,
    dns_support?: string|null,
    owner_id?: string|null,
    propagation_default_route_table_id?: string|null,
    tags?: {[s: string]: string}|null,
    vpn_ecmp_support?: string|null
  }) {
    this.aws_ec2_transit_gateway_id = aws_ec2_transit_gateway_id;
    this.amazon_side_asn = amazon_side_asn;
    this.arn = arn;
    this.association_default_route_table_id = association_default_route_table_id;
    this.auto_accept_shared_attachments = auto_accept_shared_attachments;
    this.default_route_table_association = default_route_table_association;
    this.default_route_table_propagation = default_route_table_propagation;
    this.description = description;
    this.dns_support = dns_support;
    this.owner_id = owner_id;
    this.propagation_default_route_table_id = propagation_default_route_table_id;
    this.tags = tags;
    this.vpn_ecmp_support = vpn_ecmp_support;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_ec2_transit_gateway_id !== null) {
      ih['aws_ec2_transit_gateway_id'] = this.aws_ec2_transit_gateway_id;
    }
    if (this.amazon_side_asn !== null) {
      ih['amazon_side_asn'] = this.amazon_side_asn;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.association_default_route_table_id !== null) {
      ih['association_default_route_table_id'] = this.association_default_route_table_id;
    }
    if (this.auto_accept_shared_attachments !== null) {
      ih['auto_accept_shared_attachments'] = this.auto_accept_shared_attachments;
    }
    if (this.default_route_table_association !== null) {
      ih['default_route_table_association'] = this.default_route_table_association;
    }
    if (this.default_route_table_propagation !== null) {
      ih['default_route_table_propagation'] = this.default_route_table_propagation;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.dns_support !== null) {
      ih['dns_support'] = this.dns_support;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.propagation_default_route_table_id !== null) {
      ih['propagation_default_route_table_id'] = this.propagation_default_route_table_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpn_ecmp_support !== null) {
      ih['vpn_ecmp_support'] = this.vpn_ecmp_support;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway';
  }
}

export class Aws_ec2_transit_gatewayHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gatewayHandler';
  }
}

export class Aws_ec2_transit_gateway_route implements PcoreValue {
  readonly destination_cidr_block: string;
  readonly transit_gateway_attachment_id: string;
  readonly transit_gateway_route_table_id: string;
  readonly aws_ec2_transit_gateway_route_id: string|null;

  constructor({
    destination_cidr_block,
    transit_gateway_attachment_id,
    transit_gateway_route_table_id,
    aws_ec2_transit_gateway_route_id = null
  }: {
    destination_cidr_block: string,
    transit_gateway_attachment_id: string,
    transit_gateway_route_table_id: string,
    aws_ec2_transit_gateway_route_id?: string|null
  }) {
    this.destination_cidr_block = destination_cidr_block;
    this.transit_gateway_attachment_id = transit_gateway_attachment_id;
    this.transit_gateway_route_table_id = transit_gateway_route_table_id;
    this.aws_ec2_transit_gateway_route_id = aws_ec2_transit_gateway_route_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination_cidr_block'] = this.destination_cidr_block;
    ih['transit_gateway_attachment_id'] = this.transit_gateway_attachment_id;
    ih['transit_gateway_route_table_id'] = this.transit_gateway_route_table_id;
    if (this.aws_ec2_transit_gateway_route_id !== null) {
      ih['aws_ec2_transit_gateway_route_id'] = this.aws_ec2_transit_gateway_route_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_route';
  }
}

export class Aws_ec2_transit_gateway_routeHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_routeHandler';
  }
}

export class Aws_ec2_transit_gateway_route_table implements PcoreValue {
  readonly transit_gateway_id: string;
  readonly aws_ec2_transit_gateway_route_table_id: string|null;
  readonly default_association_route_table: boolean|null;
  readonly default_propagation_route_table: boolean|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    transit_gateway_id,
    aws_ec2_transit_gateway_route_table_id = null,
    default_association_route_table = null,
    default_propagation_route_table = null,
    tags = null
  }: {
    transit_gateway_id: string,
    aws_ec2_transit_gateway_route_table_id?: string|null,
    default_association_route_table?: boolean|null,
    default_propagation_route_table?: boolean|null,
    tags?: {[s: string]: string}|null
  }) {
    this.transit_gateway_id = transit_gateway_id;
    this.aws_ec2_transit_gateway_route_table_id = aws_ec2_transit_gateway_route_table_id;
    this.default_association_route_table = default_association_route_table;
    this.default_propagation_route_table = default_propagation_route_table;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['transit_gateway_id'] = this.transit_gateway_id;
    if (this.aws_ec2_transit_gateway_route_table_id !== null) {
      ih['aws_ec2_transit_gateway_route_table_id'] = this.aws_ec2_transit_gateway_route_table_id;
    }
    if (this.default_association_route_table !== null) {
      ih['default_association_route_table'] = this.default_association_route_table;
    }
    if (this.default_propagation_route_table !== null) {
      ih['default_propagation_route_table'] = this.default_propagation_route_table;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_route_table';
  }
}

export class Aws_ec2_transit_gateway_route_tableHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_route_tableHandler';
  }
}

export class Aws_ec2_transit_gateway_route_table_association implements PcoreValue {
  readonly transit_gateway_attachment_id: string;
  readonly transit_gateway_route_table_id: string;
  readonly aws_ec2_transit_gateway_route_table_association_id: string|null;
  readonly resource_id: string|null;
  readonly resource_type: string|null;

  constructor({
    transit_gateway_attachment_id,
    transit_gateway_route_table_id,
    aws_ec2_transit_gateway_route_table_association_id = null,
    resource_id = null,
    resource_type = null
  }: {
    transit_gateway_attachment_id: string,
    transit_gateway_route_table_id: string,
    aws_ec2_transit_gateway_route_table_association_id?: string|null,
    resource_id?: string|null,
    resource_type?: string|null
  }) {
    this.transit_gateway_attachment_id = transit_gateway_attachment_id;
    this.transit_gateway_route_table_id = transit_gateway_route_table_id;
    this.aws_ec2_transit_gateway_route_table_association_id = aws_ec2_transit_gateway_route_table_association_id;
    this.resource_id = resource_id;
    this.resource_type = resource_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['transit_gateway_attachment_id'] = this.transit_gateway_attachment_id;
    ih['transit_gateway_route_table_id'] = this.transit_gateway_route_table_id;
    if (this.aws_ec2_transit_gateway_route_table_association_id !== null) {
      ih['aws_ec2_transit_gateway_route_table_association_id'] = this.aws_ec2_transit_gateway_route_table_association_id;
    }
    if (this.resource_id !== null) {
      ih['resource_id'] = this.resource_id;
    }
    if (this.resource_type !== null) {
      ih['resource_type'] = this.resource_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_route_table_association';
  }
}

export class Aws_ec2_transit_gateway_route_table_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_route_table_associationHandler';
  }
}

export class Aws_ec2_transit_gateway_route_table_propagation implements PcoreValue {
  readonly transit_gateway_attachment_id: string;
  readonly transit_gateway_route_table_id: string;
  readonly aws_ec2_transit_gateway_route_table_propagation_id: string|null;
  readonly resource_id: string|null;
  readonly resource_type: string|null;

  constructor({
    transit_gateway_attachment_id,
    transit_gateway_route_table_id,
    aws_ec2_transit_gateway_route_table_propagation_id = null,
    resource_id = null,
    resource_type = null
  }: {
    transit_gateway_attachment_id: string,
    transit_gateway_route_table_id: string,
    aws_ec2_transit_gateway_route_table_propagation_id?: string|null,
    resource_id?: string|null,
    resource_type?: string|null
  }) {
    this.transit_gateway_attachment_id = transit_gateway_attachment_id;
    this.transit_gateway_route_table_id = transit_gateway_route_table_id;
    this.aws_ec2_transit_gateway_route_table_propagation_id = aws_ec2_transit_gateway_route_table_propagation_id;
    this.resource_id = resource_id;
    this.resource_type = resource_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['transit_gateway_attachment_id'] = this.transit_gateway_attachment_id;
    ih['transit_gateway_route_table_id'] = this.transit_gateway_route_table_id;
    if (this.aws_ec2_transit_gateway_route_table_propagation_id !== null) {
      ih['aws_ec2_transit_gateway_route_table_propagation_id'] = this.aws_ec2_transit_gateway_route_table_propagation_id;
    }
    if (this.resource_id !== null) {
      ih['resource_id'] = this.resource_id;
    }
    if (this.resource_type !== null) {
      ih['resource_type'] = this.resource_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_route_table_propagation';
  }
}

export class Aws_ec2_transit_gateway_route_table_propagationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_route_table_propagationHandler';
  }
}

export class Aws_ec2_transit_gateway_vpc_attachment implements PcoreValue {
  readonly subnet_ids: string[];
  readonly transit_gateway_id: string;
  readonly vpc_id: string;
  readonly aws_ec2_transit_gateway_vpc_attachment_id: string|null;
  readonly dns_support: string|null;
  readonly ipv6_support: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly transit_gateway_default_route_table_association: boolean|null;
  readonly transit_gateway_default_route_table_propagation: boolean|null;
  readonly vpc_owner_id: string|null;

  constructor({
    subnet_ids,
    transit_gateway_id,
    vpc_id,
    aws_ec2_transit_gateway_vpc_attachment_id = null,
    dns_support = null,
    ipv6_support = null,
    tags = null,
    transit_gateway_default_route_table_association = null,
    transit_gateway_default_route_table_propagation = null,
    vpc_owner_id = null
  }: {
    subnet_ids: string[],
    transit_gateway_id: string,
    vpc_id: string,
    aws_ec2_transit_gateway_vpc_attachment_id?: string|null,
    dns_support?: string|null,
    ipv6_support?: string|null,
    tags?: {[s: string]: string}|null,
    transit_gateway_default_route_table_association?: boolean|null,
    transit_gateway_default_route_table_propagation?: boolean|null,
    vpc_owner_id?: string|null
  }) {
    this.subnet_ids = subnet_ids;
    this.transit_gateway_id = transit_gateway_id;
    this.vpc_id = vpc_id;
    this.aws_ec2_transit_gateway_vpc_attachment_id = aws_ec2_transit_gateway_vpc_attachment_id;
    this.dns_support = dns_support;
    this.ipv6_support = ipv6_support;
    this.tags = tags;
    this.transit_gateway_default_route_table_association = transit_gateway_default_route_table_association;
    this.transit_gateway_default_route_table_propagation = transit_gateway_default_route_table_propagation;
    this.vpc_owner_id = vpc_owner_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_ids'] = this.subnet_ids;
    ih['transit_gateway_id'] = this.transit_gateway_id;
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_ec2_transit_gateway_vpc_attachment_id !== null) {
      ih['aws_ec2_transit_gateway_vpc_attachment_id'] = this.aws_ec2_transit_gateway_vpc_attachment_id;
    }
    if (this.dns_support !== null) {
      ih['dns_support'] = this.dns_support;
    }
    if (this.ipv6_support !== null) {
      ih['ipv6_support'] = this.ipv6_support;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.transit_gateway_default_route_table_association !== null) {
      ih['transit_gateway_default_route_table_association'] = this.transit_gateway_default_route_table_association;
    }
    if (this.transit_gateway_default_route_table_propagation !== null) {
      ih['transit_gateway_default_route_table_propagation'] = this.transit_gateway_default_route_table_propagation;
    }
    if (this.vpc_owner_id !== null) {
      ih['vpc_owner_id'] = this.vpc_owner_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_vpc_attachment';
  }
}

export class Aws_ec2_transit_gateway_vpc_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ec2_transit_gateway_vpc_attachmentHandler';
  }
}

export class Aws_ecr_lifecycle_policy implements PcoreValue {
  readonly policy: string;
  readonly repository: string;
  readonly aws_ecr_lifecycle_policy_id: string|null;
  readonly registry_id: string|null;

  constructor({
    policy,
    repository,
    aws_ecr_lifecycle_policy_id = null,
    registry_id = null
  }: {
    policy: string,
    repository: string,
    aws_ecr_lifecycle_policy_id?: string|null,
    registry_id?: string|null
  }) {
    this.policy = policy;
    this.repository = repository;
    this.aws_ecr_lifecycle_policy_id = aws_ecr_lifecycle_policy_id;
    this.registry_id = registry_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy'] = this.policy;
    ih['repository'] = this.repository;
    if (this.aws_ecr_lifecycle_policy_id !== null) {
      ih['aws_ecr_lifecycle_policy_id'] = this.aws_ecr_lifecycle_policy_id;
    }
    if (this.registry_id !== null) {
      ih['registry_id'] = this.registry_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecr_lifecycle_policy';
  }
}

export class Aws_ecr_lifecycle_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecr_lifecycle_policyHandler';
  }
}

export class Aws_ecr_repository implements PcoreValue {
  readonly name: string;
  readonly aws_ecr_repository_id: string|null;
  readonly arn: string|null;
  readonly registry_id: string|null;
  readonly repository_url: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    aws_ecr_repository_id = null,
    arn = null,
    registry_id = null,
    repository_url = null,
    tags = null
  }: {
    name: string,
    aws_ecr_repository_id?: string|null,
    arn?: string|null,
    registry_id?: string|null,
    repository_url?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.aws_ecr_repository_id = aws_ecr_repository_id;
    this.arn = arn;
    this.registry_id = registry_id;
    this.repository_url = repository_url;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_ecr_repository_id !== null) {
      ih['aws_ecr_repository_id'] = this.aws_ecr_repository_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.registry_id !== null) {
      ih['registry_id'] = this.registry_id;
    }
    if (this.repository_url !== null) {
      ih['repository_url'] = this.repository_url;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecr_repository';
  }
}

export class Aws_ecr_repositoryHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecr_repositoryHandler';
  }
}

export class Aws_ecr_repository_policy implements PcoreValue {
  readonly policy: string;
  readonly repository: string;
  readonly aws_ecr_repository_policy_id: string|null;
  readonly registry_id: string|null;

  constructor({
    policy,
    repository,
    aws_ecr_repository_policy_id = null,
    registry_id = null
  }: {
    policy: string,
    repository: string,
    aws_ecr_repository_policy_id?: string|null,
    registry_id?: string|null
  }) {
    this.policy = policy;
    this.repository = repository;
    this.aws_ecr_repository_policy_id = aws_ecr_repository_policy_id;
    this.registry_id = registry_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy'] = this.policy;
    ih['repository'] = this.repository;
    if (this.aws_ecr_repository_policy_id !== null) {
      ih['aws_ecr_repository_policy_id'] = this.aws_ecr_repository_policy_id;
    }
    if (this.registry_id !== null) {
      ih['registry_id'] = this.registry_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecr_repository_policy';
  }
}

export class Aws_ecr_repository_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecr_repository_policyHandler';
  }
}

export class Aws_ecs_cluster implements PcoreValue {
  readonly name: string;
  readonly aws_ecs_cluster_id: string|null;
  readonly arn: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    aws_ecs_cluster_id = null,
    arn = null,
    tags = null
  }: {
    name: string,
    aws_ecs_cluster_id?: string|null,
    arn?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.aws_ecs_cluster_id = aws_ecs_cluster_id;
    this.arn = arn;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_ecs_cluster_id !== null) {
      ih['aws_ecs_cluster_id'] = this.aws_ecs_cluster_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_cluster';
  }
}

export class Aws_ecs_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_clusterHandler';
  }
}

export class Aws_ecs_service implements PcoreValue {
  readonly name: string;
  readonly task_definition: string;
  readonly aws_ecs_service_id: string|null;
  readonly cluster: string|null;
  readonly deployment_controller: Aws_ecs_service_deployment_controller_216[]|null;
  readonly deployment_maximum_percent: number|null;
  readonly deployment_minimum_healthy_percent: number|null;
  readonly desired_count: number|null;
  readonly enable_ecs_managed_tags: boolean|null;
  readonly health_check_grace_period_seconds: number|null;
  readonly iam_role: string|null;
  readonly launch_type: string|null;
  readonly load_balancer: Aws_ecs_service_load_balancer_217[]|null;
  readonly network_configuration: Aws_ecs_service_network_configuration_218[]|null;
  readonly ordered_placement_strategy: Aws_ecs_service_ordered_placement_strategy_219[]|null;
  readonly placement_constraints: Aws_ecs_service_placement_constraints_220[]|null;
  readonly placement_strategy: Aws_ecs_service_placement_strategy_221[]|null;
  readonly platform_version: string|null;
  readonly propagate_tags: string|null;
  readonly scheduling_strategy: string|null;
  readonly service_registries: Aws_ecs_service_service_registries_222[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    task_definition,
    aws_ecs_service_id = null,
    cluster = null,
    deployment_controller = null,
    deployment_maximum_percent = null,
    deployment_minimum_healthy_percent = null,
    desired_count = null,
    enable_ecs_managed_tags = null,
    health_check_grace_period_seconds = null,
    iam_role = null,
    launch_type = null,
    load_balancer = null,
    network_configuration = null,
    ordered_placement_strategy = null,
    placement_constraints = null,
    placement_strategy = null,
    platform_version = null,
    propagate_tags = null,
    scheduling_strategy = null,
    service_registries = null,
    tags = null
  }: {
    name: string,
    task_definition: string,
    aws_ecs_service_id?: string|null,
    cluster?: string|null,
    deployment_controller?: Aws_ecs_service_deployment_controller_216[]|null,
    deployment_maximum_percent?: number|null,
    deployment_minimum_healthy_percent?: number|null,
    desired_count?: number|null,
    enable_ecs_managed_tags?: boolean|null,
    health_check_grace_period_seconds?: number|null,
    iam_role?: string|null,
    launch_type?: string|null,
    load_balancer?: Aws_ecs_service_load_balancer_217[]|null,
    network_configuration?: Aws_ecs_service_network_configuration_218[]|null,
    ordered_placement_strategy?: Aws_ecs_service_ordered_placement_strategy_219[]|null,
    placement_constraints?: Aws_ecs_service_placement_constraints_220[]|null,
    placement_strategy?: Aws_ecs_service_placement_strategy_221[]|null,
    platform_version?: string|null,
    propagate_tags?: string|null,
    scheduling_strategy?: string|null,
    service_registries?: Aws_ecs_service_service_registries_222[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.task_definition = task_definition;
    this.aws_ecs_service_id = aws_ecs_service_id;
    this.cluster = cluster;
    this.deployment_controller = deployment_controller;
    this.deployment_maximum_percent = deployment_maximum_percent;
    this.deployment_minimum_healthy_percent = deployment_minimum_healthy_percent;
    this.desired_count = desired_count;
    this.enable_ecs_managed_tags = enable_ecs_managed_tags;
    this.health_check_grace_period_seconds = health_check_grace_period_seconds;
    this.iam_role = iam_role;
    this.launch_type = launch_type;
    this.load_balancer = load_balancer;
    this.network_configuration = network_configuration;
    this.ordered_placement_strategy = ordered_placement_strategy;
    this.placement_constraints = placement_constraints;
    this.placement_strategy = placement_strategy;
    this.platform_version = platform_version;
    this.propagate_tags = propagate_tags;
    this.scheduling_strategy = scheduling_strategy;
    this.service_registries = service_registries;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['task_definition'] = this.task_definition;
    if (this.aws_ecs_service_id !== null) {
      ih['aws_ecs_service_id'] = this.aws_ecs_service_id;
    }
    if (this.cluster !== null) {
      ih['cluster'] = this.cluster;
    }
    if (this.deployment_controller !== null) {
      ih['deployment_controller'] = this.deployment_controller;
    }
    if (this.deployment_maximum_percent !== null) {
      ih['deployment_maximum_percent'] = this.deployment_maximum_percent;
    }
    if (this.deployment_minimum_healthy_percent !== null) {
      ih['deployment_minimum_healthy_percent'] = this.deployment_minimum_healthy_percent;
    }
    if (this.desired_count !== null) {
      ih['desired_count'] = this.desired_count;
    }
    if (this.enable_ecs_managed_tags !== null) {
      ih['enable_ecs_managed_tags'] = this.enable_ecs_managed_tags;
    }
    if (this.health_check_grace_period_seconds !== null) {
      ih['health_check_grace_period_seconds'] = this.health_check_grace_period_seconds;
    }
    if (this.iam_role !== null) {
      ih['iam_role'] = this.iam_role;
    }
    if (this.launch_type !== null) {
      ih['launch_type'] = this.launch_type;
    }
    if (this.load_balancer !== null) {
      ih['load_balancer'] = this.load_balancer;
    }
    if (this.network_configuration !== null) {
      ih['network_configuration'] = this.network_configuration;
    }
    if (this.ordered_placement_strategy !== null) {
      ih['ordered_placement_strategy'] = this.ordered_placement_strategy;
    }
    if (this.placement_constraints !== null) {
      ih['placement_constraints'] = this.placement_constraints;
    }
    if (this.placement_strategy !== null) {
      ih['placement_strategy'] = this.placement_strategy;
    }
    if (this.platform_version !== null) {
      ih['platform_version'] = this.platform_version;
    }
    if (this.propagate_tags !== null) {
      ih['propagate_tags'] = this.propagate_tags;
    }
    if (this.scheduling_strategy !== null) {
      ih['scheduling_strategy'] = this.scheduling_strategy;
    }
    if (this.service_registries !== null) {
      ih['service_registries'] = this.service_registries;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_service';
  }
}

export class Aws_ecs_serviceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_serviceHandler';
  }
}

export class Aws_ecs_service_deployment_controller_216 implements PcoreValue {
  readonly type: string|null;

  constructor({
    type = null
  }: {
    type?: string|null
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_service_deployment_controller_216';
  }
}

export class Aws_ecs_service_load_balancer_217 implements PcoreValue {
  readonly container_name: string;
  readonly container_port: number;
  readonly elb_name: string|null;
  readonly target_group_arn: string|null;

  constructor({
    container_name,
    container_port,
    elb_name = null,
    target_group_arn = null
  }: {
    container_name: string,
    container_port: number,
    elb_name?: string|null,
    target_group_arn?: string|null
  }) {
    this.container_name = container_name;
    this.container_port = container_port;
    this.elb_name = elb_name;
    this.target_group_arn = target_group_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['container_name'] = this.container_name;
    ih['container_port'] = this.container_port;
    if (this.elb_name !== null) {
      ih['elb_name'] = this.elb_name;
    }
    if (this.target_group_arn !== null) {
      ih['target_group_arn'] = this.target_group_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_service_load_balancer_217';
  }
}

export class Aws_ecs_service_network_configuration_218 implements PcoreValue {
  readonly subnets: string[];
  readonly assign_public_ip: boolean|null;
  readonly security_groups: string[]|null;

  constructor({
    subnets,
    assign_public_ip = null,
    security_groups = null
  }: {
    subnets: string[],
    assign_public_ip?: boolean|null,
    security_groups?: string[]|null
  }) {
    this.subnets = subnets;
    this.assign_public_ip = assign_public_ip;
    this.security_groups = security_groups;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnets'] = this.subnets;
    if (this.assign_public_ip !== null) {
      ih['assign_public_ip'] = this.assign_public_ip;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_service_network_configuration_218';
  }
}

export class Aws_ecs_service_ordered_placement_strategy_219 implements PcoreValue {
  readonly type: string;
  readonly field: string|null;

  constructor({
    type,
    field = null
  }: {
    type: string,
    field?: string|null
  }) {
    this.type = type;
    this.field = field;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.field !== null) {
      ih['field'] = this.field;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_service_ordered_placement_strategy_219';
  }
}

export class Aws_ecs_service_placement_constraints_220 implements PcoreValue {
  readonly type: string;
  readonly expression: string|null;

  constructor({
    type,
    expression = null
  }: {
    type: string,
    expression?: string|null
  }) {
    this.type = type;
    this.expression = expression;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.expression !== null) {
      ih['expression'] = this.expression;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_service_placement_constraints_220';
  }
}

export class Aws_ecs_service_placement_strategy_221 implements PcoreValue {
  readonly type: string;
  readonly field: string|null;

  constructor({
    type,
    field = null
  }: {
    type: string,
    field?: string|null
  }) {
    this.type = type;
    this.field = field;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.field !== null) {
      ih['field'] = this.field;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_service_placement_strategy_221';
  }
}

export class Aws_ecs_service_service_registries_222 implements PcoreValue {
  readonly registry_arn: string;
  readonly container_name: string|null;
  readonly container_port: number|null;
  readonly port: number|null;

  constructor({
    registry_arn,
    container_name = null,
    container_port = null,
    port = null
  }: {
    registry_arn: string,
    container_name?: string|null,
    container_port?: number|null,
    port?: number|null
  }) {
    this.registry_arn = registry_arn;
    this.container_name = container_name;
    this.container_port = container_port;
    this.port = port;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['registry_arn'] = this.registry_arn;
    if (this.container_name !== null) {
      ih['container_name'] = this.container_name;
    }
    if (this.container_port !== null) {
      ih['container_port'] = this.container_port;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_service_service_registries_222';
  }
}

export class Aws_ecs_task_definition implements PcoreValue {
  readonly container_definitions: string;
  readonly family: string;
  readonly aws_ecs_task_definition_id: string|null;
  readonly arn: string|null;
  readonly cpu: string|null;
  readonly execution_role_arn: string|null;
  readonly ipc_mode: string|null;
  readonly memory: string|null;
  readonly network_mode: string|null;
  readonly pid_mode: string|null;
  readonly placement_constraints: Aws_ecs_task_definition_placement_constraints_223[]|null;
  readonly requires_compatibilities: string[]|null;
  readonly revision: number|null;
  readonly tags: {[s: string]: string}|null;
  readonly task_role_arn: string|null;
  readonly volume: Aws_ecs_task_definition_volume_224[]|null;

  constructor({
    container_definitions,
    family,
    aws_ecs_task_definition_id = null,
    arn = null,
    cpu = null,
    execution_role_arn = null,
    ipc_mode = null,
    memory = null,
    network_mode = null,
    pid_mode = null,
    placement_constraints = null,
    requires_compatibilities = null,
    revision = null,
    tags = null,
    task_role_arn = null,
    volume = null
  }: {
    container_definitions: string,
    family: string,
    aws_ecs_task_definition_id?: string|null,
    arn?: string|null,
    cpu?: string|null,
    execution_role_arn?: string|null,
    ipc_mode?: string|null,
    memory?: string|null,
    network_mode?: string|null,
    pid_mode?: string|null,
    placement_constraints?: Aws_ecs_task_definition_placement_constraints_223[]|null,
    requires_compatibilities?: string[]|null,
    revision?: number|null,
    tags?: {[s: string]: string}|null,
    task_role_arn?: string|null,
    volume?: Aws_ecs_task_definition_volume_224[]|null
  }) {
    this.container_definitions = container_definitions;
    this.family = family;
    this.aws_ecs_task_definition_id = aws_ecs_task_definition_id;
    this.arn = arn;
    this.cpu = cpu;
    this.execution_role_arn = execution_role_arn;
    this.ipc_mode = ipc_mode;
    this.memory = memory;
    this.network_mode = network_mode;
    this.pid_mode = pid_mode;
    this.placement_constraints = placement_constraints;
    this.requires_compatibilities = requires_compatibilities;
    this.revision = revision;
    this.tags = tags;
    this.task_role_arn = task_role_arn;
    this.volume = volume;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['container_definitions'] = this.container_definitions;
    ih['family'] = this.family;
    if (this.aws_ecs_task_definition_id !== null) {
      ih['aws_ecs_task_definition_id'] = this.aws_ecs_task_definition_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cpu !== null) {
      ih['cpu'] = this.cpu;
    }
    if (this.execution_role_arn !== null) {
      ih['execution_role_arn'] = this.execution_role_arn;
    }
    if (this.ipc_mode !== null) {
      ih['ipc_mode'] = this.ipc_mode;
    }
    if (this.memory !== null) {
      ih['memory'] = this.memory;
    }
    if (this.network_mode !== null) {
      ih['network_mode'] = this.network_mode;
    }
    if (this.pid_mode !== null) {
      ih['pid_mode'] = this.pid_mode;
    }
    if (this.placement_constraints !== null) {
      ih['placement_constraints'] = this.placement_constraints;
    }
    if (this.requires_compatibilities !== null) {
      ih['requires_compatibilities'] = this.requires_compatibilities;
    }
    if (this.revision !== null) {
      ih['revision'] = this.revision;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.task_role_arn !== null) {
      ih['task_role_arn'] = this.task_role_arn;
    }
    if (this.volume !== null) {
      ih['volume'] = this.volume;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_task_definition';
  }
}

export class Aws_ecs_task_definitionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_task_definitionHandler';
  }
}

export class Aws_ecs_task_definition_placement_constraints_223 implements PcoreValue {
  readonly type: string;
  readonly expression: string|null;

  constructor({
    type,
    expression = null
  }: {
    type: string,
    expression?: string|null
  }) {
    this.type = type;
    this.expression = expression;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.expression !== null) {
      ih['expression'] = this.expression;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_task_definition_placement_constraints_223';
  }
}

export class Aws_ecs_task_definition_volume_224 implements PcoreValue {
  readonly name: string;
  readonly docker_volume_configuration: Aws_ecs_task_definition_volume_224_docker_volume_configuration_225[]|null;
  readonly host_path: string|null;

  constructor({
    name,
    docker_volume_configuration = null,
    host_path = null
  }: {
    name: string,
    docker_volume_configuration?: Aws_ecs_task_definition_volume_224_docker_volume_configuration_225[]|null,
    host_path?: string|null
  }) {
    this.name = name;
    this.docker_volume_configuration = docker_volume_configuration;
    this.host_path = host_path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.docker_volume_configuration !== null) {
      ih['docker_volume_configuration'] = this.docker_volume_configuration;
    }
    if (this.host_path !== null) {
      ih['host_path'] = this.host_path;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_task_definition_volume_224';
  }
}

export class Aws_ecs_task_definition_volume_224_docker_volume_configuration_225 implements PcoreValue {
  readonly autoprovision: boolean|null;
  readonly driver: string|null;
  readonly driver_opts: {[s: string]: string}|null;
  readonly labels: {[s: string]: string}|null;
  readonly scope: string|null;

  constructor({
    autoprovision = null,
    driver = null,
    driver_opts = null,
    labels = null,
    scope = null
  }: {
    autoprovision?: boolean|null,
    driver?: string|null,
    driver_opts?: {[s: string]: string}|null,
    labels?: {[s: string]: string}|null,
    scope?: string|null
  }) {
    this.autoprovision = autoprovision;
    this.driver = driver;
    this.driver_opts = driver_opts;
    this.labels = labels;
    this.scope = scope;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.autoprovision !== null) {
      ih['autoprovision'] = this.autoprovision;
    }
    if (this.driver !== null) {
      ih['driver'] = this.driver;
    }
    if (this.driver_opts !== null) {
      ih['driver_opts'] = this.driver_opts;
    }
    if (this.labels !== null) {
      ih['labels'] = this.labels;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ecs_task_definition_volume_224_docker_volume_configuration_225';
  }
}

export class Aws_efs_file_system implements PcoreValue {
  readonly aws_efs_file_system_id: string|null;
  readonly arn: string|null;
  readonly creation_token: string|null;
  readonly dns_name: string|null;
  readonly encrypted: boolean|null;
  readonly kms_key_id: string|null;
  readonly performance_mode: string|null;
  readonly provisioned_throughput_in_mibps: number|null;
  readonly reference_name: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly throughput_mode: string|null;

  constructor({
    aws_efs_file_system_id = null,
    arn = null,
    creation_token = null,
    dns_name = null,
    encrypted = null,
    kms_key_id = null,
    performance_mode = null,
    provisioned_throughput_in_mibps = null,
    reference_name = null,
    tags = null,
    throughput_mode = null
  }: {
    aws_efs_file_system_id?: string|null,
    arn?: string|null,
    creation_token?: string|null,
    dns_name?: string|null,
    encrypted?: boolean|null,
    kms_key_id?: string|null,
    performance_mode?: string|null,
    provisioned_throughput_in_mibps?: number|null,
    reference_name?: string|null,
    tags?: {[s: string]: string}|null,
    throughput_mode?: string|null
  }) {
    this.aws_efs_file_system_id = aws_efs_file_system_id;
    this.arn = arn;
    this.creation_token = creation_token;
    this.dns_name = dns_name;
    this.encrypted = encrypted;
    this.kms_key_id = kms_key_id;
    this.performance_mode = performance_mode;
    this.provisioned_throughput_in_mibps = provisioned_throughput_in_mibps;
    this.reference_name = reference_name;
    this.tags = tags;
    this.throughput_mode = throughput_mode;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_efs_file_system_id !== null) {
      ih['aws_efs_file_system_id'] = this.aws_efs_file_system_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.creation_token !== null) {
      ih['creation_token'] = this.creation_token;
    }
    if (this.dns_name !== null) {
      ih['dns_name'] = this.dns_name;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.performance_mode !== null) {
      ih['performance_mode'] = this.performance_mode;
    }
    if (this.provisioned_throughput_in_mibps !== null) {
      ih['provisioned_throughput_in_mibps'] = this.provisioned_throughput_in_mibps;
    }
    if (this.reference_name !== null) {
      ih['reference_name'] = this.reference_name;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.throughput_mode !== null) {
      ih['throughput_mode'] = this.throughput_mode;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_efs_file_system';
  }
}

export class Aws_efs_file_systemHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_efs_file_systemHandler';
  }
}

export class Aws_efs_mount_target implements PcoreValue {
  readonly file_system_id: string;
  readonly subnet_id: string;
  readonly aws_efs_mount_target_id: string|null;
  readonly dns_name: string|null;
  readonly file_system_arn: string|null;
  readonly ip_address: string|null;
  readonly network_interface_id: string|null;
  readonly security_groups: string[]|null;

  constructor({
    file_system_id,
    subnet_id,
    aws_efs_mount_target_id = null,
    dns_name = null,
    file_system_arn = null,
    ip_address = null,
    network_interface_id = null,
    security_groups = null
  }: {
    file_system_id: string,
    subnet_id: string,
    aws_efs_mount_target_id?: string|null,
    dns_name?: string|null,
    file_system_arn?: string|null,
    ip_address?: string|null,
    network_interface_id?: string|null,
    security_groups?: string[]|null
  }) {
    this.file_system_id = file_system_id;
    this.subnet_id = subnet_id;
    this.aws_efs_mount_target_id = aws_efs_mount_target_id;
    this.dns_name = dns_name;
    this.file_system_arn = file_system_arn;
    this.ip_address = ip_address;
    this.network_interface_id = network_interface_id;
    this.security_groups = security_groups;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['file_system_id'] = this.file_system_id;
    ih['subnet_id'] = this.subnet_id;
    if (this.aws_efs_mount_target_id !== null) {
      ih['aws_efs_mount_target_id'] = this.aws_efs_mount_target_id;
    }
    if (this.dns_name !== null) {
      ih['dns_name'] = this.dns_name;
    }
    if (this.file_system_arn !== null) {
      ih['file_system_arn'] = this.file_system_arn;
    }
    if (this.ip_address !== null) {
      ih['ip_address'] = this.ip_address;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_efs_mount_target';
  }
}

export class Aws_efs_mount_targetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_efs_mount_targetHandler';
  }
}

export class Aws_egress_only_internet_gateway implements PcoreValue {
  readonly vpc_id: string;
  readonly aws_egress_only_internet_gateway_id: string|null;

  constructor({
    vpc_id,
    aws_egress_only_internet_gateway_id = null
  }: {
    vpc_id: string,
    aws_egress_only_internet_gateway_id?: string|null
  }) {
    this.vpc_id = vpc_id;
    this.aws_egress_only_internet_gateway_id = aws_egress_only_internet_gateway_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_egress_only_internet_gateway_id !== null) {
      ih['aws_egress_only_internet_gateway_id'] = this.aws_egress_only_internet_gateway_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_egress_only_internet_gateway';
  }
}

export class Aws_egress_only_internet_gatewayHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_egress_only_internet_gatewayHandler';
  }
}

export class Aws_eip implements PcoreValue {
  readonly aws_eip_id: string|null;
  readonly allocation_id: string|null;
  readonly associate_with_private_ip: string|null;
  readonly association_id: string|null;
  readonly domain: string|null;
  readonly instance: string|null;
  readonly network_interface: string|null;
  readonly private_ip: string|null;
  readonly public_ip: string|null;
  readonly public_ipv4_pool: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc: boolean|null;

  constructor({
    aws_eip_id = null,
    allocation_id = null,
    associate_with_private_ip = null,
    association_id = null,
    domain = null,
    instance = null,
    network_interface = null,
    private_ip = null,
    public_ip = null,
    public_ipv4_pool = null,
    tags = null,
    vpc = null
  }: {
    aws_eip_id?: string|null,
    allocation_id?: string|null,
    associate_with_private_ip?: string|null,
    association_id?: string|null,
    domain?: string|null,
    instance?: string|null,
    network_interface?: string|null,
    private_ip?: string|null,
    public_ip?: string|null,
    public_ipv4_pool?: string|null,
    tags?: {[s: string]: string}|null,
    vpc?: boolean|null
  }) {
    this.aws_eip_id = aws_eip_id;
    this.allocation_id = allocation_id;
    this.associate_with_private_ip = associate_with_private_ip;
    this.association_id = association_id;
    this.domain = domain;
    this.instance = instance;
    this.network_interface = network_interface;
    this.private_ip = private_ip;
    this.public_ip = public_ip;
    this.public_ipv4_pool = public_ipv4_pool;
    this.tags = tags;
    this.vpc = vpc;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_eip_id !== null) {
      ih['aws_eip_id'] = this.aws_eip_id;
    }
    if (this.allocation_id !== null) {
      ih['allocation_id'] = this.allocation_id;
    }
    if (this.associate_with_private_ip !== null) {
      ih['associate_with_private_ip'] = this.associate_with_private_ip;
    }
    if (this.association_id !== null) {
      ih['association_id'] = this.association_id;
    }
    if (this.domain !== null) {
      ih['domain'] = this.domain;
    }
    if (this.instance !== null) {
      ih['instance'] = this.instance;
    }
    if (this.network_interface !== null) {
      ih['network_interface'] = this.network_interface;
    }
    if (this.private_ip !== null) {
      ih['private_ip'] = this.private_ip;
    }
    if (this.public_ip !== null) {
      ih['public_ip'] = this.public_ip;
    }
    if (this.public_ipv4_pool !== null) {
      ih['public_ipv4_pool'] = this.public_ipv4_pool;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc !== null) {
      ih['vpc'] = this.vpc;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_eip';
  }
}

export class Aws_eipHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_eipHandler';
  }
}

export class Aws_eip_association implements PcoreValue {
  readonly aws_eip_association_id: string|null;
  readonly allocation_id: string|null;
  readonly allow_reassociation: boolean|null;
  readonly instance_id: string|null;
  readonly network_interface_id: string|null;
  readonly private_ip_address: string|null;
  readonly public_ip: string|null;

  constructor({
    aws_eip_association_id = null,
    allocation_id = null,
    allow_reassociation = null,
    instance_id = null,
    network_interface_id = null,
    private_ip_address = null,
    public_ip = null
  }: {
    aws_eip_association_id?: string|null,
    allocation_id?: string|null,
    allow_reassociation?: boolean|null,
    instance_id?: string|null,
    network_interface_id?: string|null,
    private_ip_address?: string|null,
    public_ip?: string|null
  }) {
    this.aws_eip_association_id = aws_eip_association_id;
    this.allocation_id = allocation_id;
    this.allow_reassociation = allow_reassociation;
    this.instance_id = instance_id;
    this.network_interface_id = network_interface_id;
    this.private_ip_address = private_ip_address;
    this.public_ip = public_ip;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_eip_association_id !== null) {
      ih['aws_eip_association_id'] = this.aws_eip_association_id;
    }
    if (this.allocation_id !== null) {
      ih['allocation_id'] = this.allocation_id;
    }
    if (this.allow_reassociation !== null) {
      ih['allow_reassociation'] = this.allow_reassociation;
    }
    if (this.instance_id !== null) {
      ih['instance_id'] = this.instance_id;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.private_ip_address !== null) {
      ih['private_ip_address'] = this.private_ip_address;
    }
    if (this.public_ip !== null) {
      ih['public_ip'] = this.public_ip;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_eip_association';
  }
}

export class Aws_eip_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_eip_associationHandler';
  }
}

export class Aws_eks_cluster implements PcoreValue {
  readonly name: string;
  readonly role_arn: string;
  readonly vpc_config: Aws_eks_cluster_vpc_config_227[];
  readonly aws_eks_cluster_id: string|null;
  readonly arn: string|null;
  readonly certificate_authority: Aws_eks_cluster_certificate_authority_226[]|null;
  readonly created_at: string|null;
  readonly endpoint: string|null;
  readonly platform_version: string|null;
  readonly version: string|null;

  constructor({
    name,
    role_arn,
    vpc_config,
    aws_eks_cluster_id = null,
    arn = null,
    certificate_authority = null,
    created_at = null,
    endpoint = null,
    platform_version = null,
    version = null
  }: {
    name: string,
    role_arn: string,
    vpc_config: Aws_eks_cluster_vpc_config_227[],
    aws_eks_cluster_id?: string|null,
    arn?: string|null,
    certificate_authority?: Aws_eks_cluster_certificate_authority_226[]|null,
    created_at?: string|null,
    endpoint?: string|null,
    platform_version?: string|null,
    version?: string|null
  }) {
    this.name = name;
    this.role_arn = role_arn;
    this.vpc_config = vpc_config;
    this.aws_eks_cluster_id = aws_eks_cluster_id;
    this.arn = arn;
    this.certificate_authority = certificate_authority;
    this.created_at = created_at;
    this.endpoint = endpoint;
    this.platform_version = platform_version;
    this.version = version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['role_arn'] = this.role_arn;
    ih['vpc_config'] = this.vpc_config;
    if (this.aws_eks_cluster_id !== null) {
      ih['aws_eks_cluster_id'] = this.aws_eks_cluster_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.certificate_authority !== null) {
      ih['certificate_authority'] = this.certificate_authority;
    }
    if (this.created_at !== null) {
      ih['created_at'] = this.created_at;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.platform_version !== null) {
      ih['platform_version'] = this.platform_version;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_eks_cluster';
  }
}

export class Aws_eks_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_eks_clusterHandler';
  }
}

export class Aws_eks_cluster_certificate_authority_226 implements PcoreValue {
  readonly data: string|null;

  constructor({
    data = null
  }: {
    data?: string|null
  }) {
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_eks_cluster_certificate_authority_226';
  }
}

export class Aws_eks_cluster_vpc_config_227 implements PcoreValue {
  readonly subnet_ids: string[];
  readonly security_group_ids: string[]|null;
  readonly vpc_id: string|null;

  constructor({
    subnet_ids,
    security_group_ids = null,
    vpc_id = null
  }: {
    subnet_ids: string[],
    security_group_ids?: string[]|null,
    vpc_id?: string|null
  }) {
    this.subnet_ids = subnet_ids;
    this.security_group_ids = security_group_ids;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_ids'] = this.subnet_ids;
    if (this.security_group_ids !== null) {
      ih['security_group_ids'] = this.security_group_ids;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_eks_cluster_vpc_config_227';
  }
}

export class Aws_elastic_beanstalk_application implements PcoreValue {
  readonly name: string;
  readonly aws_elastic_beanstalk_application_id: string|null;
  readonly appversion_lifecycle: Aws_elastic_beanstalk_application_appversion_lifecycle_228[]|null;
  readonly description: string|null;

  constructor({
    name,
    aws_elastic_beanstalk_application_id = null,
    appversion_lifecycle = null,
    description = null
  }: {
    name: string,
    aws_elastic_beanstalk_application_id?: string|null,
    appversion_lifecycle?: Aws_elastic_beanstalk_application_appversion_lifecycle_228[]|null,
    description?: string|null
  }) {
    this.name = name;
    this.aws_elastic_beanstalk_application_id = aws_elastic_beanstalk_application_id;
    this.appversion_lifecycle = appversion_lifecycle;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_elastic_beanstalk_application_id !== null) {
      ih['aws_elastic_beanstalk_application_id'] = this.aws_elastic_beanstalk_application_id;
    }
    if (this.appversion_lifecycle !== null) {
      ih['appversion_lifecycle'] = this.appversion_lifecycle;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_application';
  }
}

export class Aws_elastic_beanstalk_applicationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_applicationHandler';
  }
}

export class Aws_elastic_beanstalk_application_appversion_lifecycle_228 implements PcoreValue {
  readonly service_role: string;
  readonly delete_source_from_s3: boolean|null;
  readonly max_age_in_days: number|null;
  readonly max_count: number|null;

  constructor({
    service_role,
    delete_source_from_s3 = null,
    max_age_in_days = null,
    max_count = null
  }: {
    service_role: string,
    delete_source_from_s3?: boolean|null,
    max_age_in_days?: number|null,
    max_count?: number|null
  }) {
    this.service_role = service_role;
    this.delete_source_from_s3 = delete_source_from_s3;
    this.max_age_in_days = max_age_in_days;
    this.max_count = max_count;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['service_role'] = this.service_role;
    if (this.delete_source_from_s3 !== null) {
      ih['delete_source_from_s3'] = this.delete_source_from_s3;
    }
    if (this.max_age_in_days !== null) {
      ih['max_age_in_days'] = this.max_age_in_days;
    }
    if (this.max_count !== null) {
      ih['max_count'] = this.max_count;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_application_appversion_lifecycle_228';
  }
}

export class Aws_elastic_beanstalk_application_version implements PcoreValue {
  readonly application: string;
  readonly bucket: string;
  readonly key: string;
  readonly name: string;
  readonly aws_elastic_beanstalk_application_version_id: string|null;
  readonly description: string|null;
  readonly force_delete: boolean|null;

  constructor({
    application,
    bucket,
    key,
    name,
    aws_elastic_beanstalk_application_version_id = null,
    description = null,
    force_delete = null
  }: {
    application: string,
    bucket: string,
    key: string,
    name: string,
    aws_elastic_beanstalk_application_version_id?: string|null,
    description?: string|null,
    force_delete?: boolean|null
  }) {
    this.application = application;
    this.bucket = bucket;
    this.key = key;
    this.name = name;
    this.aws_elastic_beanstalk_application_version_id = aws_elastic_beanstalk_application_version_id;
    this.description = description;
    this.force_delete = force_delete;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application'] = this.application;
    ih['bucket'] = this.bucket;
    ih['key'] = this.key;
    ih['name'] = this.name;
    if (this.aws_elastic_beanstalk_application_version_id !== null) {
      ih['aws_elastic_beanstalk_application_version_id'] = this.aws_elastic_beanstalk_application_version_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.force_delete !== null) {
      ih['force_delete'] = this.force_delete;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_application_version';
  }
}

export class Aws_elastic_beanstalk_application_versionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_application_versionHandler';
  }
}

export class Aws_elastic_beanstalk_configuration_template implements PcoreValue {
  readonly application: string;
  readonly name: string;
  readonly aws_elastic_beanstalk_configuration_template_id: string|null;
  readonly description: string|null;
  readonly environment_id: string|null;
  readonly setting: Aws_elastic_beanstalk_configuration_template_setting_229[]|null;
  readonly solution_stack_name: string|null;

  constructor({
    application,
    name,
    aws_elastic_beanstalk_configuration_template_id = null,
    description = null,
    environment_id = null,
    setting = null,
    solution_stack_name = null
  }: {
    application: string,
    name: string,
    aws_elastic_beanstalk_configuration_template_id?: string|null,
    description?: string|null,
    environment_id?: string|null,
    setting?: Aws_elastic_beanstalk_configuration_template_setting_229[]|null,
    solution_stack_name?: string|null
  }) {
    this.application = application;
    this.name = name;
    this.aws_elastic_beanstalk_configuration_template_id = aws_elastic_beanstalk_configuration_template_id;
    this.description = description;
    this.environment_id = environment_id;
    this.setting = setting;
    this.solution_stack_name = solution_stack_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application'] = this.application;
    ih['name'] = this.name;
    if (this.aws_elastic_beanstalk_configuration_template_id !== null) {
      ih['aws_elastic_beanstalk_configuration_template_id'] = this.aws_elastic_beanstalk_configuration_template_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.environment_id !== null) {
      ih['environment_id'] = this.environment_id;
    }
    if (this.setting !== null) {
      ih['setting'] = this.setting;
    }
    if (this.solution_stack_name !== null) {
      ih['solution_stack_name'] = this.solution_stack_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_configuration_template';
  }
}

export class Aws_elastic_beanstalk_configuration_templateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_configuration_templateHandler';
  }
}

export class Aws_elastic_beanstalk_configuration_template_setting_229 implements PcoreValue {
  readonly name: string;
  readonly namespace: string;
  readonly value: string;
  readonly resource: string|null;

  constructor({
    name,
    namespace,
    value,
    resource = null
  }: {
    name: string,
    namespace: string,
    value: string,
    resource?: string|null
  }) {
    this.name = name;
    this.namespace = namespace;
    this.value = value;
    this.resource = resource;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['namespace'] = this.namespace;
    ih['value'] = this.value;
    if (this.resource !== null) {
      ih['resource'] = this.resource;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_configuration_template_setting_229';
  }
}

export class Aws_elastic_beanstalk_environment implements PcoreValue {
  readonly application: string;
  readonly name: string;
  readonly aws_elastic_beanstalk_environment_id: string|null;
  readonly all_settings: Aws_elastic_beanstalk_environment_all_settings_230[]|null;
  readonly arn: string|null;
  readonly autoscaling_groups: string[]|null;
  readonly cname: string|null;
  readonly cname_prefix: string|null;
  readonly description: string|null;
  readonly instances: string[]|null;
  readonly launch_configurations: string[]|null;
  readonly load_balancers: string[]|null;
  readonly platform_arn: string|null;
  readonly poll_interval: string|null;
  readonly queues: string[]|null;
  readonly setting: Aws_elastic_beanstalk_environment_setting_231[]|null;
  readonly solution_stack_name: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly template_name: string|null;
  readonly tier: string|null;
  readonly triggers: string[]|null;
  readonly version_label: string|null;
  readonly wait_for_ready_timeout: string|null;

  constructor({
    application,
    name,
    aws_elastic_beanstalk_environment_id = null,
    all_settings = null,
    arn = null,
    autoscaling_groups = null,
    cname = null,
    cname_prefix = null,
    description = null,
    instances = null,
    launch_configurations = null,
    load_balancers = null,
    platform_arn = null,
    poll_interval = null,
    queues = null,
    setting = null,
    solution_stack_name = null,
    tags = null,
    template_name = null,
    tier = null,
    triggers = null,
    version_label = null,
    wait_for_ready_timeout = null
  }: {
    application: string,
    name: string,
    aws_elastic_beanstalk_environment_id?: string|null,
    all_settings?: Aws_elastic_beanstalk_environment_all_settings_230[]|null,
    arn?: string|null,
    autoscaling_groups?: string[]|null,
    cname?: string|null,
    cname_prefix?: string|null,
    description?: string|null,
    instances?: string[]|null,
    launch_configurations?: string[]|null,
    load_balancers?: string[]|null,
    platform_arn?: string|null,
    poll_interval?: string|null,
    queues?: string[]|null,
    setting?: Aws_elastic_beanstalk_environment_setting_231[]|null,
    solution_stack_name?: string|null,
    tags?: {[s: string]: string}|null,
    template_name?: string|null,
    tier?: string|null,
    triggers?: string[]|null,
    version_label?: string|null,
    wait_for_ready_timeout?: string|null
  }) {
    this.application = application;
    this.name = name;
    this.aws_elastic_beanstalk_environment_id = aws_elastic_beanstalk_environment_id;
    this.all_settings = all_settings;
    this.arn = arn;
    this.autoscaling_groups = autoscaling_groups;
    this.cname = cname;
    this.cname_prefix = cname_prefix;
    this.description = description;
    this.instances = instances;
    this.launch_configurations = launch_configurations;
    this.load_balancers = load_balancers;
    this.platform_arn = platform_arn;
    this.poll_interval = poll_interval;
    this.queues = queues;
    this.setting = setting;
    this.solution_stack_name = solution_stack_name;
    this.tags = tags;
    this.template_name = template_name;
    this.tier = tier;
    this.triggers = triggers;
    this.version_label = version_label;
    this.wait_for_ready_timeout = wait_for_ready_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application'] = this.application;
    ih['name'] = this.name;
    if (this.aws_elastic_beanstalk_environment_id !== null) {
      ih['aws_elastic_beanstalk_environment_id'] = this.aws_elastic_beanstalk_environment_id;
    }
    if (this.all_settings !== null) {
      ih['all_settings'] = this.all_settings;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.autoscaling_groups !== null) {
      ih['autoscaling_groups'] = this.autoscaling_groups;
    }
    if (this.cname !== null) {
      ih['cname'] = this.cname;
    }
    if (this.cname_prefix !== null) {
      ih['cname_prefix'] = this.cname_prefix;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.instances !== null) {
      ih['instances'] = this.instances;
    }
    if (this.launch_configurations !== null) {
      ih['launch_configurations'] = this.launch_configurations;
    }
    if (this.load_balancers !== null) {
      ih['load_balancers'] = this.load_balancers;
    }
    if (this.platform_arn !== null) {
      ih['platform_arn'] = this.platform_arn;
    }
    if (this.poll_interval !== null) {
      ih['poll_interval'] = this.poll_interval;
    }
    if (this.queues !== null) {
      ih['queues'] = this.queues;
    }
    if (this.setting !== null) {
      ih['setting'] = this.setting;
    }
    if (this.solution_stack_name !== null) {
      ih['solution_stack_name'] = this.solution_stack_name;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.template_name !== null) {
      ih['template_name'] = this.template_name;
    }
    if (this.tier !== null) {
      ih['tier'] = this.tier;
    }
    if (this.triggers !== null) {
      ih['triggers'] = this.triggers;
    }
    if (this.version_label !== null) {
      ih['version_label'] = this.version_label;
    }
    if (this.wait_for_ready_timeout !== null) {
      ih['wait_for_ready_timeout'] = this.wait_for_ready_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_environment';
  }
}

export class Aws_elastic_beanstalk_environmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_environmentHandler';
  }
}

export class Aws_elastic_beanstalk_environment_all_settings_230 implements PcoreValue {
  readonly name: string;
  readonly namespace: string;
  readonly value: string;
  readonly resource: string|null;

  constructor({
    name,
    namespace,
    value,
    resource = null
  }: {
    name: string,
    namespace: string,
    value: string,
    resource?: string|null
  }) {
    this.name = name;
    this.namespace = namespace;
    this.value = value;
    this.resource = resource;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['namespace'] = this.namespace;
    ih['value'] = this.value;
    if (this.resource !== null) {
      ih['resource'] = this.resource;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_environment_all_settings_230';
  }
}

export class Aws_elastic_beanstalk_environment_setting_231 implements PcoreValue {
  readonly name: string;
  readonly namespace: string;
  readonly value: string;
  readonly resource: string|null;

  constructor({
    name,
    namespace,
    value,
    resource = null
  }: {
    name: string,
    namespace: string,
    value: string,
    resource?: string|null
  }) {
    this.name = name;
    this.namespace = namespace;
    this.value = value;
    this.resource = resource;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['namespace'] = this.namespace;
    ih['value'] = this.value;
    if (this.resource !== null) {
      ih['resource'] = this.resource;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastic_beanstalk_environment_setting_231';
  }
}

export class Aws_elasticache_cluster implements PcoreValue {
  readonly cluster_id: string;
  readonly aws_elasticache_cluster_id: string|null;
  readonly apply_immediately: boolean|null;
  readonly availability_zone: string|null;
  readonly availability_zones: string[]|null;
  readonly az_mode: string|null;
  readonly cache_nodes: Aws_elasticache_cluster_cache_nodes_232[]|null;
  readonly cluster_address: string|null;
  readonly configuration_endpoint: string|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly maintenance_window: string|null;
  readonly node_type: string|null;
  readonly notification_topic_arn: string|null;
  readonly num_cache_nodes: number|null;
  readonly parameter_group_name: string|null;
  readonly port: number|null;
  readonly preferred_availability_zones: string[]|null;
  readonly replication_group_id: string|null;
  readonly security_group_ids: string[]|null;
  readonly security_group_names: string[]|null;
  readonly snapshot_arns: string[]|null;
  readonly snapshot_name: string|null;
  readonly snapshot_retention_limit: number|null;
  readonly snapshot_window: string|null;
  readonly subnet_group_name: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    cluster_id,
    aws_elasticache_cluster_id = null,
    apply_immediately = null,
    availability_zone = null,
    availability_zones = null,
    az_mode = null,
    cache_nodes = null,
    cluster_address = null,
    configuration_endpoint = null,
    engine = null,
    engine_version = null,
    maintenance_window = null,
    node_type = null,
    notification_topic_arn = null,
    num_cache_nodes = null,
    parameter_group_name = null,
    port = null,
    preferred_availability_zones = null,
    replication_group_id = null,
    security_group_ids = null,
    security_group_names = null,
    snapshot_arns = null,
    snapshot_name = null,
    snapshot_retention_limit = null,
    snapshot_window = null,
    subnet_group_name = null,
    tags = null
  }: {
    cluster_id: string,
    aws_elasticache_cluster_id?: string|null,
    apply_immediately?: boolean|null,
    availability_zone?: string|null,
    availability_zones?: string[]|null,
    az_mode?: string|null,
    cache_nodes?: Aws_elasticache_cluster_cache_nodes_232[]|null,
    cluster_address?: string|null,
    configuration_endpoint?: string|null,
    engine?: string|null,
    engine_version?: string|null,
    maintenance_window?: string|null,
    node_type?: string|null,
    notification_topic_arn?: string|null,
    num_cache_nodes?: number|null,
    parameter_group_name?: string|null,
    port?: number|null,
    preferred_availability_zones?: string[]|null,
    replication_group_id?: string|null,
    security_group_ids?: string[]|null,
    security_group_names?: string[]|null,
    snapshot_arns?: string[]|null,
    snapshot_name?: string|null,
    snapshot_retention_limit?: number|null,
    snapshot_window?: string|null,
    subnet_group_name?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.cluster_id = cluster_id;
    this.aws_elasticache_cluster_id = aws_elasticache_cluster_id;
    this.apply_immediately = apply_immediately;
    this.availability_zone = availability_zone;
    this.availability_zones = availability_zones;
    this.az_mode = az_mode;
    this.cache_nodes = cache_nodes;
    this.cluster_address = cluster_address;
    this.configuration_endpoint = configuration_endpoint;
    this.engine = engine;
    this.engine_version = engine_version;
    this.maintenance_window = maintenance_window;
    this.node_type = node_type;
    this.notification_topic_arn = notification_topic_arn;
    this.num_cache_nodes = num_cache_nodes;
    this.parameter_group_name = parameter_group_name;
    this.port = port;
    this.preferred_availability_zones = preferred_availability_zones;
    this.replication_group_id = replication_group_id;
    this.security_group_ids = security_group_ids;
    this.security_group_names = security_group_names;
    this.snapshot_arns = snapshot_arns;
    this.snapshot_name = snapshot_name;
    this.snapshot_retention_limit = snapshot_retention_limit;
    this.snapshot_window = snapshot_window;
    this.subnet_group_name = subnet_group_name;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_id'] = this.cluster_id;
    if (this.aws_elasticache_cluster_id !== null) {
      ih['aws_elasticache_cluster_id'] = this.aws_elasticache_cluster_id;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.az_mode !== null) {
      ih['az_mode'] = this.az_mode;
    }
    if (this.cache_nodes !== null) {
      ih['cache_nodes'] = this.cache_nodes;
    }
    if (this.cluster_address !== null) {
      ih['cluster_address'] = this.cluster_address;
    }
    if (this.configuration_endpoint !== null) {
      ih['configuration_endpoint'] = this.configuration_endpoint;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.maintenance_window !== null) {
      ih['maintenance_window'] = this.maintenance_window;
    }
    if (this.node_type !== null) {
      ih['node_type'] = this.node_type;
    }
    if (this.notification_topic_arn !== null) {
      ih['notification_topic_arn'] = this.notification_topic_arn;
    }
    if (this.num_cache_nodes !== null) {
      ih['num_cache_nodes'] = this.num_cache_nodes;
    }
    if (this.parameter_group_name !== null) {
      ih['parameter_group_name'] = this.parameter_group_name;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.preferred_availability_zones !== null) {
      ih['preferred_availability_zones'] = this.preferred_availability_zones;
    }
    if (this.replication_group_id !== null) {
      ih['replication_group_id'] = this.replication_group_id;
    }
    if (this.security_group_ids !== null) {
      ih['security_group_ids'] = this.security_group_ids;
    }
    if (this.security_group_names !== null) {
      ih['security_group_names'] = this.security_group_names;
    }
    if (this.snapshot_arns !== null) {
      ih['snapshot_arns'] = this.snapshot_arns;
    }
    if (this.snapshot_name !== null) {
      ih['snapshot_name'] = this.snapshot_name;
    }
    if (this.snapshot_retention_limit !== null) {
      ih['snapshot_retention_limit'] = this.snapshot_retention_limit;
    }
    if (this.snapshot_window !== null) {
      ih['snapshot_window'] = this.snapshot_window;
    }
    if (this.subnet_group_name !== null) {
      ih['subnet_group_name'] = this.subnet_group_name;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_cluster';
  }
}

export class Aws_elasticache_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_clusterHandler';
  }
}

export class Aws_elasticache_cluster_cache_nodes_232 implements PcoreValue {
  readonly address: string|null;
  readonly availability_zone: string|null;
  readonly id: string|null;
  readonly port: number|null;

  constructor({
    address = null,
    availability_zone = null,
    id = null,
    port = null
  }: {
    address?: string|null,
    availability_zone?: string|null,
    id?: string|null,
    port?: number|null
  }) {
    this.address = address;
    this.availability_zone = availability_zone;
    this.id = id;
    this.port = port;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.address !== null) {
      ih['address'] = this.address;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_cluster_cache_nodes_232';
  }
}

export class Aws_elasticache_parameter_group implements PcoreValue {
  readonly family: string;
  readonly name: string;
  readonly aws_elasticache_parameter_group_id: string|null;
  readonly description: string|null;
  readonly parameter: Aws_elasticache_parameter_group_parameter_233[]|null;

  constructor({
    family,
    name,
    aws_elasticache_parameter_group_id = null,
    description = null,
    parameter = null
  }: {
    family: string,
    name: string,
    aws_elasticache_parameter_group_id?: string|null,
    description?: string|null,
    parameter?: Aws_elasticache_parameter_group_parameter_233[]|null
  }) {
    this.family = family;
    this.name = name;
    this.aws_elasticache_parameter_group_id = aws_elasticache_parameter_group_id;
    this.description = description;
    this.parameter = parameter;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['family'] = this.family;
    ih['name'] = this.name;
    if (this.aws_elasticache_parameter_group_id !== null) {
      ih['aws_elasticache_parameter_group_id'] = this.aws_elasticache_parameter_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.parameter !== null) {
      ih['parameter'] = this.parameter;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_parameter_group';
  }
}

export class Aws_elasticache_parameter_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_parameter_groupHandler';
  }
}

export class Aws_elasticache_parameter_group_parameter_233 implements PcoreValue {
  readonly name: string;
  readonly value: string;

  constructor({
    name,
    value
  }: {
    name: string,
    value: string
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_parameter_group_parameter_233';
  }
}

export class Aws_elasticache_replication_group implements PcoreValue {
  readonly replication_group_description: string;
  readonly replication_group_id: string;
  readonly aws_elasticache_replication_group_id: string|null;
  readonly apply_immediately: boolean|null;
  readonly at_rest_encryption_enabled: boolean|null;
  readonly auth_token: string|null;
  readonly auto_minor_version_upgrade: boolean|null;
  readonly automatic_failover_enabled: boolean|null;
  readonly availability_zones: string[]|null;
  readonly cluster_mode: Aws_elasticache_replication_group_cluster_mode_234[]|null;
  readonly configuration_endpoint_address: string|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly maintenance_window: string|null;
  readonly member_clusters: string[]|null;
  readonly node_type: string|null;
  readonly notification_topic_arn: string|null;
  readonly number_cache_clusters: number|null;
  readonly parameter_group_name: string|null;
  readonly port: number|null;
  readonly primary_endpoint_address: string|null;
  readonly security_group_ids: string[]|null;
  readonly security_group_names: string[]|null;
  readonly snapshot_arns: string[]|null;
  readonly snapshot_name: string|null;
  readonly snapshot_retention_limit: number|null;
  readonly snapshot_window: string|null;
  readonly subnet_group_name: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly transit_encryption_enabled: boolean|null;

  constructor({
    replication_group_description,
    replication_group_id,
    aws_elasticache_replication_group_id = null,
    apply_immediately = null,
    at_rest_encryption_enabled = null,
    auth_token = null,
    auto_minor_version_upgrade = null,
    automatic_failover_enabled = null,
    availability_zones = null,
    cluster_mode = null,
    configuration_endpoint_address = null,
    engine = null,
    engine_version = null,
    maintenance_window = null,
    member_clusters = null,
    node_type = null,
    notification_topic_arn = null,
    number_cache_clusters = null,
    parameter_group_name = null,
    port = null,
    primary_endpoint_address = null,
    security_group_ids = null,
    security_group_names = null,
    snapshot_arns = null,
    snapshot_name = null,
    snapshot_retention_limit = null,
    snapshot_window = null,
    subnet_group_name = null,
    tags = null,
    transit_encryption_enabled = null
  }: {
    replication_group_description: string,
    replication_group_id: string,
    aws_elasticache_replication_group_id?: string|null,
    apply_immediately?: boolean|null,
    at_rest_encryption_enabled?: boolean|null,
    auth_token?: string|null,
    auto_minor_version_upgrade?: boolean|null,
    automatic_failover_enabled?: boolean|null,
    availability_zones?: string[]|null,
    cluster_mode?: Aws_elasticache_replication_group_cluster_mode_234[]|null,
    configuration_endpoint_address?: string|null,
    engine?: string|null,
    engine_version?: string|null,
    maintenance_window?: string|null,
    member_clusters?: string[]|null,
    node_type?: string|null,
    notification_topic_arn?: string|null,
    number_cache_clusters?: number|null,
    parameter_group_name?: string|null,
    port?: number|null,
    primary_endpoint_address?: string|null,
    security_group_ids?: string[]|null,
    security_group_names?: string[]|null,
    snapshot_arns?: string[]|null,
    snapshot_name?: string|null,
    snapshot_retention_limit?: number|null,
    snapshot_window?: string|null,
    subnet_group_name?: string|null,
    tags?: {[s: string]: string}|null,
    transit_encryption_enabled?: boolean|null
  }) {
    this.replication_group_description = replication_group_description;
    this.replication_group_id = replication_group_id;
    this.aws_elasticache_replication_group_id = aws_elasticache_replication_group_id;
    this.apply_immediately = apply_immediately;
    this.at_rest_encryption_enabled = at_rest_encryption_enabled;
    this.auth_token = auth_token;
    this.auto_minor_version_upgrade = auto_minor_version_upgrade;
    this.automatic_failover_enabled = automatic_failover_enabled;
    this.availability_zones = availability_zones;
    this.cluster_mode = cluster_mode;
    this.configuration_endpoint_address = configuration_endpoint_address;
    this.engine = engine;
    this.engine_version = engine_version;
    this.maintenance_window = maintenance_window;
    this.member_clusters = member_clusters;
    this.node_type = node_type;
    this.notification_topic_arn = notification_topic_arn;
    this.number_cache_clusters = number_cache_clusters;
    this.parameter_group_name = parameter_group_name;
    this.port = port;
    this.primary_endpoint_address = primary_endpoint_address;
    this.security_group_ids = security_group_ids;
    this.security_group_names = security_group_names;
    this.snapshot_arns = snapshot_arns;
    this.snapshot_name = snapshot_name;
    this.snapshot_retention_limit = snapshot_retention_limit;
    this.snapshot_window = snapshot_window;
    this.subnet_group_name = subnet_group_name;
    this.tags = tags;
    this.transit_encryption_enabled = transit_encryption_enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['replication_group_description'] = this.replication_group_description;
    ih['replication_group_id'] = this.replication_group_id;
    if (this.aws_elasticache_replication_group_id !== null) {
      ih['aws_elasticache_replication_group_id'] = this.aws_elasticache_replication_group_id;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.at_rest_encryption_enabled !== null) {
      ih['at_rest_encryption_enabled'] = this.at_rest_encryption_enabled;
    }
    if (this.auth_token !== null) {
      ih['auth_token'] = this.auth_token;
    }
    if (this.auto_minor_version_upgrade !== null) {
      ih['auto_minor_version_upgrade'] = this.auto_minor_version_upgrade;
    }
    if (this.automatic_failover_enabled !== null) {
      ih['automatic_failover_enabled'] = this.automatic_failover_enabled;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.cluster_mode !== null) {
      ih['cluster_mode'] = this.cluster_mode;
    }
    if (this.configuration_endpoint_address !== null) {
      ih['configuration_endpoint_address'] = this.configuration_endpoint_address;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.maintenance_window !== null) {
      ih['maintenance_window'] = this.maintenance_window;
    }
    if (this.member_clusters !== null) {
      ih['member_clusters'] = this.member_clusters;
    }
    if (this.node_type !== null) {
      ih['node_type'] = this.node_type;
    }
    if (this.notification_topic_arn !== null) {
      ih['notification_topic_arn'] = this.notification_topic_arn;
    }
    if (this.number_cache_clusters !== null) {
      ih['number_cache_clusters'] = this.number_cache_clusters;
    }
    if (this.parameter_group_name !== null) {
      ih['parameter_group_name'] = this.parameter_group_name;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.primary_endpoint_address !== null) {
      ih['primary_endpoint_address'] = this.primary_endpoint_address;
    }
    if (this.security_group_ids !== null) {
      ih['security_group_ids'] = this.security_group_ids;
    }
    if (this.security_group_names !== null) {
      ih['security_group_names'] = this.security_group_names;
    }
    if (this.snapshot_arns !== null) {
      ih['snapshot_arns'] = this.snapshot_arns;
    }
    if (this.snapshot_name !== null) {
      ih['snapshot_name'] = this.snapshot_name;
    }
    if (this.snapshot_retention_limit !== null) {
      ih['snapshot_retention_limit'] = this.snapshot_retention_limit;
    }
    if (this.snapshot_window !== null) {
      ih['snapshot_window'] = this.snapshot_window;
    }
    if (this.subnet_group_name !== null) {
      ih['subnet_group_name'] = this.subnet_group_name;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.transit_encryption_enabled !== null) {
      ih['transit_encryption_enabled'] = this.transit_encryption_enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_replication_group';
  }
}

export class Aws_elasticache_replication_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_replication_groupHandler';
  }
}

export class Aws_elasticache_replication_group_cluster_mode_234 implements PcoreValue {
  readonly num_node_groups: number;
  readonly replicas_per_node_group: number;

  constructor({
    num_node_groups,
    replicas_per_node_group
  }: {
    num_node_groups: number,
    replicas_per_node_group: number
  }) {
    this.num_node_groups = num_node_groups;
    this.replicas_per_node_group = replicas_per_node_group;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['num_node_groups'] = this.num_node_groups;
    ih['replicas_per_node_group'] = this.replicas_per_node_group;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_replication_group_cluster_mode_234';
  }
}

export class Aws_elasticache_security_group implements PcoreValue {
  readonly name: string;
  readonly security_group_names: string[];
  readonly aws_elasticache_security_group_id: string|null;
  readonly description: string|null;

  constructor({
    name,
    security_group_names,
    aws_elasticache_security_group_id = null,
    description = null
  }: {
    name: string,
    security_group_names: string[],
    aws_elasticache_security_group_id?: string|null,
    description?: string|null
  }) {
    this.name = name;
    this.security_group_names = security_group_names;
    this.aws_elasticache_security_group_id = aws_elasticache_security_group_id;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['security_group_names'] = this.security_group_names;
    if (this.aws_elasticache_security_group_id !== null) {
      ih['aws_elasticache_security_group_id'] = this.aws_elasticache_security_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_security_group';
  }
}

export class Aws_elasticache_security_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_security_groupHandler';
  }
}

export class Aws_elasticache_subnet_group implements PcoreValue {
  readonly name: string;
  readonly subnet_ids: string[];
  readonly aws_elasticache_subnet_group_id: string|null;
  readonly description: string|null;

  constructor({
    name,
    subnet_ids,
    aws_elasticache_subnet_group_id = null,
    description = null
  }: {
    name: string,
    subnet_ids: string[],
    aws_elasticache_subnet_group_id?: string|null,
    description?: string|null
  }) {
    this.name = name;
    this.subnet_ids = subnet_ids;
    this.aws_elasticache_subnet_group_id = aws_elasticache_subnet_group_id;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['subnet_ids'] = this.subnet_ids;
    if (this.aws_elasticache_subnet_group_id !== null) {
      ih['aws_elasticache_subnet_group_id'] = this.aws_elasticache_subnet_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_subnet_group';
  }
}

export class Aws_elasticache_subnet_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticache_subnet_groupHandler';
  }
}

export class Aws_elasticsearch_domain implements PcoreValue {
  readonly domain_name: string;
  readonly aws_elasticsearch_domain_id: string|null;
  readonly access_policies: string|null;
  readonly advanced_options: {[s: string]: string}|null;
  readonly arn: string|null;
  readonly cluster_config: Aws_elasticsearch_domain_cluster_config_235[]|null;
  readonly cognito_options: Aws_elasticsearch_domain_cognito_options_236[]|null;
  readonly domain_id: string|null;
  readonly ebs_options: Aws_elasticsearch_domain_ebs_options_237[]|null;
  readonly elasticsearch_version: string|null;
  readonly encrypt_at_rest: Aws_elasticsearch_domain_encrypt_at_rest_238[]|null;
  readonly endpoint: string|null;
  readonly kibana_endpoint: string|null;
  readonly log_publishing_options: Aws_elasticsearch_domain_log_publishing_options_239[]|null;
  readonly node_to_node_encryption: Aws_elasticsearch_domain_node_to_node_encryption_240[]|null;
  readonly snapshot_options: Aws_elasticsearch_domain_snapshot_options_241[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_options: Aws_elasticsearch_domain_vpc_options_242[]|null;

  constructor({
    domain_name,
    aws_elasticsearch_domain_id = null,
    access_policies = null,
    advanced_options = null,
    arn = null,
    cluster_config = null,
    cognito_options = null,
    domain_id = null,
    ebs_options = null,
    elasticsearch_version = null,
    encrypt_at_rest = null,
    endpoint = null,
    kibana_endpoint = null,
    log_publishing_options = null,
    node_to_node_encryption = null,
    snapshot_options = null,
    tags = null,
    vpc_options = null
  }: {
    domain_name: string,
    aws_elasticsearch_domain_id?: string|null,
    access_policies?: string|null,
    advanced_options?: {[s: string]: string}|null,
    arn?: string|null,
    cluster_config?: Aws_elasticsearch_domain_cluster_config_235[]|null,
    cognito_options?: Aws_elasticsearch_domain_cognito_options_236[]|null,
    domain_id?: string|null,
    ebs_options?: Aws_elasticsearch_domain_ebs_options_237[]|null,
    elasticsearch_version?: string|null,
    encrypt_at_rest?: Aws_elasticsearch_domain_encrypt_at_rest_238[]|null,
    endpoint?: string|null,
    kibana_endpoint?: string|null,
    log_publishing_options?: Aws_elasticsearch_domain_log_publishing_options_239[]|null,
    node_to_node_encryption?: Aws_elasticsearch_domain_node_to_node_encryption_240[]|null,
    snapshot_options?: Aws_elasticsearch_domain_snapshot_options_241[]|null,
    tags?: {[s: string]: string}|null,
    vpc_options?: Aws_elasticsearch_domain_vpc_options_242[]|null
  }) {
    this.domain_name = domain_name;
    this.aws_elasticsearch_domain_id = aws_elasticsearch_domain_id;
    this.access_policies = access_policies;
    this.advanced_options = advanced_options;
    this.arn = arn;
    this.cluster_config = cluster_config;
    this.cognito_options = cognito_options;
    this.domain_id = domain_id;
    this.ebs_options = ebs_options;
    this.elasticsearch_version = elasticsearch_version;
    this.encrypt_at_rest = encrypt_at_rest;
    this.endpoint = endpoint;
    this.kibana_endpoint = kibana_endpoint;
    this.log_publishing_options = log_publishing_options;
    this.node_to_node_encryption = node_to_node_encryption;
    this.snapshot_options = snapshot_options;
    this.tags = tags;
    this.vpc_options = vpc_options;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain_name'] = this.domain_name;
    if (this.aws_elasticsearch_domain_id !== null) {
      ih['aws_elasticsearch_domain_id'] = this.aws_elasticsearch_domain_id;
    }
    if (this.access_policies !== null) {
      ih['access_policies'] = this.access_policies;
    }
    if (this.advanced_options !== null) {
      ih['advanced_options'] = this.advanced_options;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cluster_config !== null) {
      ih['cluster_config'] = this.cluster_config;
    }
    if (this.cognito_options !== null) {
      ih['cognito_options'] = this.cognito_options;
    }
    if (this.domain_id !== null) {
      ih['domain_id'] = this.domain_id;
    }
    if (this.ebs_options !== null) {
      ih['ebs_options'] = this.ebs_options;
    }
    if (this.elasticsearch_version !== null) {
      ih['elasticsearch_version'] = this.elasticsearch_version;
    }
    if (this.encrypt_at_rest !== null) {
      ih['encrypt_at_rest'] = this.encrypt_at_rest;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.kibana_endpoint !== null) {
      ih['kibana_endpoint'] = this.kibana_endpoint;
    }
    if (this.log_publishing_options !== null) {
      ih['log_publishing_options'] = this.log_publishing_options;
    }
    if (this.node_to_node_encryption !== null) {
      ih['node_to_node_encryption'] = this.node_to_node_encryption;
    }
    if (this.snapshot_options !== null) {
      ih['snapshot_options'] = this.snapshot_options;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_options !== null) {
      ih['vpc_options'] = this.vpc_options;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain';
  }
}

export class Aws_elasticsearch_domainHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domainHandler';
  }
}

export class Aws_elasticsearch_domain_cluster_config_235 implements PcoreValue {
  readonly dedicated_master_count: number|null;
  readonly dedicated_master_enabled: boolean|null;
  readonly dedicated_master_type: string|null;
  readonly instance_count: number|null;
  readonly instance_type: string|null;
  readonly zone_awareness_enabled: boolean|null;

  constructor({
    dedicated_master_count = null,
    dedicated_master_enabled = null,
    dedicated_master_type = null,
    instance_count = null,
    instance_type = null,
    zone_awareness_enabled = null
  }: {
    dedicated_master_count?: number|null,
    dedicated_master_enabled?: boolean|null,
    dedicated_master_type?: string|null,
    instance_count?: number|null,
    instance_type?: string|null,
    zone_awareness_enabled?: boolean|null
  }) {
    this.dedicated_master_count = dedicated_master_count;
    this.dedicated_master_enabled = dedicated_master_enabled;
    this.dedicated_master_type = dedicated_master_type;
    this.instance_count = instance_count;
    this.instance_type = instance_type;
    this.zone_awareness_enabled = zone_awareness_enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.dedicated_master_count !== null) {
      ih['dedicated_master_count'] = this.dedicated_master_count;
    }
    if (this.dedicated_master_enabled !== null) {
      ih['dedicated_master_enabled'] = this.dedicated_master_enabled;
    }
    if (this.dedicated_master_type !== null) {
      ih['dedicated_master_type'] = this.dedicated_master_type;
    }
    if (this.instance_count !== null) {
      ih['instance_count'] = this.instance_count;
    }
    if (this.instance_type !== null) {
      ih['instance_type'] = this.instance_type;
    }
    if (this.zone_awareness_enabled !== null) {
      ih['zone_awareness_enabled'] = this.zone_awareness_enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_cluster_config_235';
  }
}

export class Aws_elasticsearch_domain_cognito_options_236 implements PcoreValue {
  readonly identity_pool_id: string;
  readonly role_arn: string;
  readonly user_pool_id: string;
  readonly enabled: boolean|null;

  constructor({
    identity_pool_id,
    role_arn,
    user_pool_id,
    enabled = null
  }: {
    identity_pool_id: string,
    role_arn: string,
    user_pool_id: string,
    enabled?: boolean|null
  }) {
    this.identity_pool_id = identity_pool_id;
    this.role_arn = role_arn;
    this.user_pool_id = user_pool_id;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['identity_pool_id'] = this.identity_pool_id;
    ih['role_arn'] = this.role_arn;
    ih['user_pool_id'] = this.user_pool_id;
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_cognito_options_236';
  }
}

export class Aws_elasticsearch_domain_ebs_options_237 implements PcoreValue {
  readonly ebs_enabled: boolean;
  readonly iops: number|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    ebs_enabled,
    iops = null,
    volume_size = null,
    volume_type = null
  }: {
    ebs_enabled: boolean,
    iops?: number|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.ebs_enabled = ebs_enabled;
    this.iops = iops;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ebs_enabled'] = this.ebs_enabled;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_ebs_options_237';
  }
}

export class Aws_elasticsearch_domain_encrypt_at_rest_238 implements PcoreValue {
  readonly enabled: boolean;
  readonly kms_key_id: string|null;

  constructor({
    enabled,
    kms_key_id = null
  }: {
    enabled: boolean,
    kms_key_id?: string|null
  }) {
    this.enabled = enabled;
    this.kms_key_id = kms_key_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['enabled'] = this.enabled;
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_encrypt_at_rest_238';
  }
}

export class Aws_elasticsearch_domain_log_publishing_options_239 implements PcoreValue {
  readonly cloudwatch_log_group_arn: string;
  readonly log_type: string;
  readonly enabled: boolean|null;

  constructor({
    cloudwatch_log_group_arn,
    log_type,
    enabled = null
  }: {
    cloudwatch_log_group_arn: string,
    log_type: string,
    enabled?: boolean|null
  }) {
    this.cloudwatch_log_group_arn = cloudwatch_log_group_arn;
    this.log_type = log_type;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cloudwatch_log_group_arn'] = this.cloudwatch_log_group_arn;
    ih['log_type'] = this.log_type;
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_log_publishing_options_239';
  }
}

export class Aws_elasticsearch_domain_node_to_node_encryption_240 implements PcoreValue {
  readonly enabled: boolean;

  constructor({
    enabled
  }: {
    enabled: boolean
  }) {
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['enabled'] = this.enabled;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_node_to_node_encryption_240';
  }
}

export class Aws_elasticsearch_domain_policy implements PcoreValue {
  readonly access_policies: string;
  readonly domain_name: string;
  readonly aws_elasticsearch_domain_policy_id: string|null;

  constructor({
    access_policies,
    domain_name,
    aws_elasticsearch_domain_policy_id = null
  }: {
    access_policies: string,
    domain_name: string,
    aws_elasticsearch_domain_policy_id?: string|null
  }) {
    this.access_policies = access_policies;
    this.domain_name = domain_name;
    this.aws_elasticsearch_domain_policy_id = aws_elasticsearch_domain_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['access_policies'] = this.access_policies;
    ih['domain_name'] = this.domain_name;
    if (this.aws_elasticsearch_domain_policy_id !== null) {
      ih['aws_elasticsearch_domain_policy_id'] = this.aws_elasticsearch_domain_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_policy';
  }
}

export class Aws_elasticsearch_domain_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_policyHandler';
  }
}

export class Aws_elasticsearch_domain_snapshot_options_241 implements PcoreValue {
  readonly automated_snapshot_start_hour: number;

  constructor({
    automated_snapshot_start_hour
  }: {
    automated_snapshot_start_hour: number
  }) {
    this.automated_snapshot_start_hour = automated_snapshot_start_hour;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['automated_snapshot_start_hour'] = this.automated_snapshot_start_hour;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_snapshot_options_241';
  }
}

export class Aws_elasticsearch_domain_vpc_options_242 implements PcoreValue {
  readonly availability_zones: string[]|null;
  readonly security_group_ids: string[]|null;
  readonly subnet_ids: string[]|null;
  readonly vpc_id: string|null;

  constructor({
    availability_zones = null,
    security_group_ids = null,
    subnet_ids = null,
    vpc_id = null
  }: {
    availability_zones?: string[]|null,
    security_group_ids?: string[]|null,
    subnet_ids?: string[]|null,
    vpc_id?: string|null
  }) {
    this.availability_zones = availability_zones;
    this.security_group_ids = security_group_ids;
    this.subnet_ids = subnet_ids;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.security_group_ids !== null) {
      ih['security_group_ids'] = this.security_group_ids;
    }
    if (this.subnet_ids !== null) {
      ih['subnet_ids'] = this.subnet_ids;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elasticsearch_domain_vpc_options_242';
  }
}

export class Aws_elastictranscoder_pipeline implements PcoreValue {
  readonly input_bucket: string;
  readonly role: string;
  readonly aws_elastictranscoder_pipeline_id: string|null;
  readonly arn: string|null;
  readonly aws_kms_key_arn: string|null;
  readonly content_config: Aws_elastictranscoder_pipeline_content_config_243[]|null;
  readonly content_config_permissions: Aws_elastictranscoder_pipeline_content_config_permissions_244[]|null;
  readonly name: string|null;
  readonly notifications: Aws_elastictranscoder_pipeline_notifications_245[]|null;
  readonly output_bucket: string|null;
  readonly thumbnail_config: Aws_elastictranscoder_pipeline_thumbnail_config_246[]|null;
  readonly thumbnail_config_permissions: Aws_elastictranscoder_pipeline_thumbnail_config_permissions_247[]|null;

  constructor({
    input_bucket,
    role,
    aws_elastictranscoder_pipeline_id = null,
    arn = null,
    aws_kms_key_arn = null,
    content_config = null,
    content_config_permissions = null,
    name = null,
    notifications = null,
    output_bucket = null,
    thumbnail_config = null,
    thumbnail_config_permissions = null
  }: {
    input_bucket: string,
    role: string,
    aws_elastictranscoder_pipeline_id?: string|null,
    arn?: string|null,
    aws_kms_key_arn?: string|null,
    content_config?: Aws_elastictranscoder_pipeline_content_config_243[]|null,
    content_config_permissions?: Aws_elastictranscoder_pipeline_content_config_permissions_244[]|null,
    name?: string|null,
    notifications?: Aws_elastictranscoder_pipeline_notifications_245[]|null,
    output_bucket?: string|null,
    thumbnail_config?: Aws_elastictranscoder_pipeline_thumbnail_config_246[]|null,
    thumbnail_config_permissions?: Aws_elastictranscoder_pipeline_thumbnail_config_permissions_247[]|null
  }) {
    this.input_bucket = input_bucket;
    this.role = role;
    this.aws_elastictranscoder_pipeline_id = aws_elastictranscoder_pipeline_id;
    this.arn = arn;
    this.aws_kms_key_arn = aws_kms_key_arn;
    this.content_config = content_config;
    this.content_config_permissions = content_config_permissions;
    this.name = name;
    this.notifications = notifications;
    this.output_bucket = output_bucket;
    this.thumbnail_config = thumbnail_config;
    this.thumbnail_config_permissions = thumbnail_config_permissions;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['input_bucket'] = this.input_bucket;
    ih['role'] = this.role;
    if (this.aws_elastictranscoder_pipeline_id !== null) {
      ih['aws_elastictranscoder_pipeline_id'] = this.aws_elastictranscoder_pipeline_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.aws_kms_key_arn !== null) {
      ih['aws_kms_key_arn'] = this.aws_kms_key_arn;
    }
    if (this.content_config !== null) {
      ih['content_config'] = this.content_config;
    }
    if (this.content_config_permissions !== null) {
      ih['content_config_permissions'] = this.content_config_permissions;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.notifications !== null) {
      ih['notifications'] = this.notifications;
    }
    if (this.output_bucket !== null) {
      ih['output_bucket'] = this.output_bucket;
    }
    if (this.thumbnail_config !== null) {
      ih['thumbnail_config'] = this.thumbnail_config;
    }
    if (this.thumbnail_config_permissions !== null) {
      ih['thumbnail_config_permissions'] = this.thumbnail_config_permissions;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_pipeline';
  }
}

export class Aws_elastictranscoder_pipelineHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_pipelineHandler';
  }
}

export class Aws_elastictranscoder_pipeline_content_config_243 implements PcoreValue {
  readonly bucket: string|null;
  readonly storage_class: string|null;

  constructor({
    bucket = null,
    storage_class = null
  }: {
    bucket?: string|null,
    storage_class?: string|null
  }) {
    this.bucket = bucket;
    this.storage_class = storage_class;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.bucket !== null) {
      ih['bucket'] = this.bucket;
    }
    if (this.storage_class !== null) {
      ih['storage_class'] = this.storage_class;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_pipeline_content_config_243';
  }
}

export class Aws_elastictranscoder_pipeline_content_config_permissions_244 implements PcoreValue {
  readonly access: string[]|null;
  readonly grantee: string|null;
  readonly grantee_type: string|null;

  constructor({
    access = null,
    grantee = null,
    grantee_type = null
  }: {
    access?: string[]|null,
    grantee?: string|null,
    grantee_type?: string|null
  }) {
    this.access = access;
    this.grantee = grantee;
    this.grantee_type = grantee_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.access !== null) {
      ih['access'] = this.access;
    }
    if (this.grantee !== null) {
      ih['grantee'] = this.grantee;
    }
    if (this.grantee_type !== null) {
      ih['grantee_type'] = this.grantee_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_pipeline_content_config_permissions_244';
  }
}

export class Aws_elastictranscoder_pipeline_notifications_245 implements PcoreValue {
  readonly completed: string|null;
  readonly error: string|null;
  readonly progressing: string|null;
  readonly warning: string|null;

  constructor({
    completed = null,
    error = null,
    progressing = null,
    warning = null
  }: {
    completed?: string|null,
    error?: string|null,
    progressing?: string|null,
    warning?: string|null
  }) {
    this.completed = completed;
    this.error = error;
    this.progressing = progressing;
    this.warning = warning;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.completed !== null) {
      ih['completed'] = this.completed;
    }
    if (this.error !== null) {
      ih['error'] = this.error;
    }
    if (this.progressing !== null) {
      ih['progressing'] = this.progressing;
    }
    if (this.warning !== null) {
      ih['warning'] = this.warning;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_pipeline_notifications_245';
  }
}

export class Aws_elastictranscoder_pipeline_thumbnail_config_246 implements PcoreValue {
  readonly bucket: string|null;
  readonly storage_class: string|null;

  constructor({
    bucket = null,
    storage_class = null
  }: {
    bucket?: string|null,
    storage_class?: string|null
  }) {
    this.bucket = bucket;
    this.storage_class = storage_class;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.bucket !== null) {
      ih['bucket'] = this.bucket;
    }
    if (this.storage_class !== null) {
      ih['storage_class'] = this.storage_class;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_pipeline_thumbnail_config_246';
  }
}

export class Aws_elastictranscoder_pipeline_thumbnail_config_permissions_247 implements PcoreValue {
  readonly access: string[]|null;
  readonly grantee: string|null;
  readonly grantee_type: string|null;

  constructor({
    access = null,
    grantee = null,
    grantee_type = null
  }: {
    access?: string[]|null,
    grantee?: string|null,
    grantee_type?: string|null
  }) {
    this.access = access;
    this.grantee = grantee;
    this.grantee_type = grantee_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.access !== null) {
      ih['access'] = this.access;
    }
    if (this.grantee !== null) {
      ih['grantee'] = this.grantee;
    }
    if (this.grantee_type !== null) {
      ih['grantee_type'] = this.grantee_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_pipeline_thumbnail_config_permissions_247';
  }
}

export class Aws_elastictranscoder_preset implements PcoreValue {
  readonly container: string;
  readonly aws_elastictranscoder_preset_id: string|null;
  readonly arn: string|null;
  readonly audio: Aws_elastictranscoder_preset_audio_248[]|null;
  readonly audio_codec_options: Aws_elastictranscoder_preset_audio_codec_options_249[]|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly thumbnails: Aws_elastictranscoder_preset_thumbnails_250[]|null;
  readonly type: string|null;
  readonly video: Aws_elastictranscoder_preset_video_251[]|null;
  readonly video_codec_options: {[s: string]: string}|null;
  readonly video_watermarks: Aws_elastictranscoder_preset_video_watermarks_252[]|null;

  constructor({
    container,
    aws_elastictranscoder_preset_id = null,
    arn = null,
    audio = null,
    audio_codec_options = null,
    description = null,
    name = null,
    thumbnails = null,
    type = null,
    video = null,
    video_codec_options = null,
    video_watermarks = null
  }: {
    container: string,
    aws_elastictranscoder_preset_id?: string|null,
    arn?: string|null,
    audio?: Aws_elastictranscoder_preset_audio_248[]|null,
    audio_codec_options?: Aws_elastictranscoder_preset_audio_codec_options_249[]|null,
    description?: string|null,
    name?: string|null,
    thumbnails?: Aws_elastictranscoder_preset_thumbnails_250[]|null,
    type?: string|null,
    video?: Aws_elastictranscoder_preset_video_251[]|null,
    video_codec_options?: {[s: string]: string}|null,
    video_watermarks?: Aws_elastictranscoder_preset_video_watermarks_252[]|null
  }) {
    this.container = container;
    this.aws_elastictranscoder_preset_id = aws_elastictranscoder_preset_id;
    this.arn = arn;
    this.audio = audio;
    this.audio_codec_options = audio_codec_options;
    this.description = description;
    this.name = name;
    this.thumbnails = thumbnails;
    this.type = type;
    this.video = video;
    this.video_codec_options = video_codec_options;
    this.video_watermarks = video_watermarks;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['container'] = this.container;
    if (this.aws_elastictranscoder_preset_id !== null) {
      ih['aws_elastictranscoder_preset_id'] = this.aws_elastictranscoder_preset_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.audio !== null) {
      ih['audio'] = this.audio;
    }
    if (this.audio_codec_options !== null) {
      ih['audio_codec_options'] = this.audio_codec_options;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.thumbnails !== null) {
      ih['thumbnails'] = this.thumbnails;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    if (this.video !== null) {
      ih['video'] = this.video;
    }
    if (this.video_codec_options !== null) {
      ih['video_codec_options'] = this.video_codec_options;
    }
    if (this.video_watermarks !== null) {
      ih['video_watermarks'] = this.video_watermarks;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_preset';
  }
}

export class Aws_elastictranscoder_presetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_presetHandler';
  }
}

export class Aws_elastictranscoder_preset_audio_248 implements PcoreValue {
  readonly audio_packing_mode: string|null;
  readonly bit_rate: string|null;
  readonly channels: string|null;
  readonly codec: string|null;
  readonly sample_rate: string|null;

  constructor({
    audio_packing_mode = null,
    bit_rate = null,
    channels = null,
    codec = null,
    sample_rate = null
  }: {
    audio_packing_mode?: string|null,
    bit_rate?: string|null,
    channels?: string|null,
    codec?: string|null,
    sample_rate?: string|null
  }) {
    this.audio_packing_mode = audio_packing_mode;
    this.bit_rate = bit_rate;
    this.channels = channels;
    this.codec = codec;
    this.sample_rate = sample_rate;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.audio_packing_mode !== null) {
      ih['audio_packing_mode'] = this.audio_packing_mode;
    }
    if (this.bit_rate !== null) {
      ih['bit_rate'] = this.bit_rate;
    }
    if (this.channels !== null) {
      ih['channels'] = this.channels;
    }
    if (this.codec !== null) {
      ih['codec'] = this.codec;
    }
    if (this.sample_rate !== null) {
      ih['sample_rate'] = this.sample_rate;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_preset_audio_248';
  }
}

export class Aws_elastictranscoder_preset_audio_codec_options_249 implements PcoreValue {
  readonly bit_depth: string|null;
  readonly bit_order: string|null;
  readonly profile: string|null;
  readonly signed: string|null;

  constructor({
    bit_depth = null,
    bit_order = null,
    profile = null,
    signed = null
  }: {
    bit_depth?: string|null,
    bit_order?: string|null,
    profile?: string|null,
    signed?: string|null
  }) {
    this.bit_depth = bit_depth;
    this.bit_order = bit_order;
    this.profile = profile;
    this.signed = signed;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.bit_depth !== null) {
      ih['bit_depth'] = this.bit_depth;
    }
    if (this.bit_order !== null) {
      ih['bit_order'] = this.bit_order;
    }
    if (this.profile !== null) {
      ih['profile'] = this.profile;
    }
    if (this.signed !== null) {
      ih['signed'] = this.signed;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_preset_audio_codec_options_249';
  }
}

export class Aws_elastictranscoder_preset_thumbnails_250 implements PcoreValue {
  readonly aspect_ratio: string|null;
  readonly format: string|null;
  readonly interval: string|null;
  readonly max_height: string|null;
  readonly max_width: string|null;
  readonly padding_policy: string|null;
  readonly resolution: string|null;
  readonly sizing_policy: string|null;

  constructor({
    aspect_ratio = null,
    format = null,
    interval = null,
    max_height = null,
    max_width = null,
    padding_policy = null,
    resolution = null,
    sizing_policy = null
  }: {
    aspect_ratio?: string|null,
    format?: string|null,
    interval?: string|null,
    max_height?: string|null,
    max_width?: string|null,
    padding_policy?: string|null,
    resolution?: string|null,
    sizing_policy?: string|null
  }) {
    this.aspect_ratio = aspect_ratio;
    this.format = format;
    this.interval = interval;
    this.max_height = max_height;
    this.max_width = max_width;
    this.padding_policy = padding_policy;
    this.resolution = resolution;
    this.sizing_policy = sizing_policy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aspect_ratio !== null) {
      ih['aspect_ratio'] = this.aspect_ratio;
    }
    if (this.format !== null) {
      ih['format'] = this.format;
    }
    if (this.interval !== null) {
      ih['interval'] = this.interval;
    }
    if (this.max_height !== null) {
      ih['max_height'] = this.max_height;
    }
    if (this.max_width !== null) {
      ih['max_width'] = this.max_width;
    }
    if (this.padding_policy !== null) {
      ih['padding_policy'] = this.padding_policy;
    }
    if (this.resolution !== null) {
      ih['resolution'] = this.resolution;
    }
    if (this.sizing_policy !== null) {
      ih['sizing_policy'] = this.sizing_policy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_preset_thumbnails_250';
  }
}

export class Aws_elastictranscoder_preset_video_251 implements PcoreValue {
  readonly aspect_ratio: string|null;
  readonly bit_rate: string|null;
  readonly codec: string|null;
  readonly display_aspect_ratio: string|null;
  readonly fixed_gop: string|null;
  readonly frame_rate: string|null;
  readonly keyframes_max_dist: string|null;
  readonly max_frame_rate: string|null;
  readonly max_height: string|null;
  readonly max_width: string|null;
  readonly padding_policy: string|null;
  readonly resolution: string|null;
  readonly sizing_policy: string|null;

  constructor({
    aspect_ratio = null,
    bit_rate = null,
    codec = null,
    display_aspect_ratio = null,
    fixed_gop = null,
    frame_rate = null,
    keyframes_max_dist = null,
    max_frame_rate = null,
    max_height = null,
    max_width = null,
    padding_policy = null,
    resolution = null,
    sizing_policy = null
  }: {
    aspect_ratio?: string|null,
    bit_rate?: string|null,
    codec?: string|null,
    display_aspect_ratio?: string|null,
    fixed_gop?: string|null,
    frame_rate?: string|null,
    keyframes_max_dist?: string|null,
    max_frame_rate?: string|null,
    max_height?: string|null,
    max_width?: string|null,
    padding_policy?: string|null,
    resolution?: string|null,
    sizing_policy?: string|null
  }) {
    this.aspect_ratio = aspect_ratio;
    this.bit_rate = bit_rate;
    this.codec = codec;
    this.display_aspect_ratio = display_aspect_ratio;
    this.fixed_gop = fixed_gop;
    this.frame_rate = frame_rate;
    this.keyframes_max_dist = keyframes_max_dist;
    this.max_frame_rate = max_frame_rate;
    this.max_height = max_height;
    this.max_width = max_width;
    this.padding_policy = padding_policy;
    this.resolution = resolution;
    this.sizing_policy = sizing_policy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aspect_ratio !== null) {
      ih['aspect_ratio'] = this.aspect_ratio;
    }
    if (this.bit_rate !== null) {
      ih['bit_rate'] = this.bit_rate;
    }
    if (this.codec !== null) {
      ih['codec'] = this.codec;
    }
    if (this.display_aspect_ratio !== null) {
      ih['display_aspect_ratio'] = this.display_aspect_ratio;
    }
    if (this.fixed_gop !== null) {
      ih['fixed_gop'] = this.fixed_gop;
    }
    if (this.frame_rate !== null) {
      ih['frame_rate'] = this.frame_rate;
    }
    if (this.keyframes_max_dist !== null) {
      ih['keyframes_max_dist'] = this.keyframes_max_dist;
    }
    if (this.max_frame_rate !== null) {
      ih['max_frame_rate'] = this.max_frame_rate;
    }
    if (this.max_height !== null) {
      ih['max_height'] = this.max_height;
    }
    if (this.max_width !== null) {
      ih['max_width'] = this.max_width;
    }
    if (this.padding_policy !== null) {
      ih['padding_policy'] = this.padding_policy;
    }
    if (this.resolution !== null) {
      ih['resolution'] = this.resolution;
    }
    if (this.sizing_policy !== null) {
      ih['sizing_policy'] = this.sizing_policy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_preset_video_251';
  }
}

export class Aws_elastictranscoder_preset_video_watermarks_252 implements PcoreValue {
  readonly horizontal_align: string|null;
  readonly horizontal_offset: string|null;
  readonly id: string|null;
  readonly max_height: string|null;
  readonly max_width: string|null;
  readonly opacity: string|null;
  readonly sizing_policy: string|null;
  readonly target: string|null;
  readonly vertical_align: string|null;
  readonly vertical_offset: string|null;

  constructor({
    horizontal_align = null,
    horizontal_offset = null,
    id = null,
    max_height = null,
    max_width = null,
    opacity = null,
    sizing_policy = null,
    target = null,
    vertical_align = null,
    vertical_offset = null
  }: {
    horizontal_align?: string|null,
    horizontal_offset?: string|null,
    id?: string|null,
    max_height?: string|null,
    max_width?: string|null,
    opacity?: string|null,
    sizing_policy?: string|null,
    target?: string|null,
    vertical_align?: string|null,
    vertical_offset?: string|null
  }) {
    this.horizontal_align = horizontal_align;
    this.horizontal_offset = horizontal_offset;
    this.id = id;
    this.max_height = max_height;
    this.max_width = max_width;
    this.opacity = opacity;
    this.sizing_policy = sizing_policy;
    this.target = target;
    this.vertical_align = vertical_align;
    this.vertical_offset = vertical_offset;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.horizontal_align !== null) {
      ih['horizontal_align'] = this.horizontal_align;
    }
    if (this.horizontal_offset !== null) {
      ih['horizontal_offset'] = this.horizontal_offset;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.max_height !== null) {
      ih['max_height'] = this.max_height;
    }
    if (this.max_width !== null) {
      ih['max_width'] = this.max_width;
    }
    if (this.opacity !== null) {
      ih['opacity'] = this.opacity;
    }
    if (this.sizing_policy !== null) {
      ih['sizing_policy'] = this.sizing_policy;
    }
    if (this.target !== null) {
      ih['target'] = this.target;
    }
    if (this.vertical_align !== null) {
      ih['vertical_align'] = this.vertical_align;
    }
    if (this.vertical_offset !== null) {
      ih['vertical_offset'] = this.vertical_offset;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elastictranscoder_preset_video_watermarks_252';
  }
}

export class Aws_elb implements PcoreValue {
  readonly listener: Aws_elb_listener_255[];
  readonly aws_elb_id: string|null;
  readonly access_logs: Aws_elb_access_logs_253[]|null;
  readonly arn: string|null;
  readonly availability_zones: string[]|null;
  readonly connection_draining: boolean|null;
  readonly connection_draining_timeout: number|null;
  readonly cross_zone_load_balancing: boolean|null;
  readonly dns_name: string|null;
  readonly health_check: Aws_elb_health_check_254[]|null;
  readonly idle_timeout: number|null;
  readonly instances: string[]|null;
  readonly internal: boolean|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly security_groups: string[]|null;
  readonly source_security_group: string|null;
  readonly source_security_group_id: string|null;
  readonly subnets: string[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly zone_id: string|null;

  constructor({
    listener,
    aws_elb_id = null,
    access_logs = null,
    arn = null,
    availability_zones = null,
    connection_draining = null,
    connection_draining_timeout = null,
    cross_zone_load_balancing = null,
    dns_name = null,
    health_check = null,
    idle_timeout = null,
    instances = null,
    internal = null,
    name = null,
    name_prefix = null,
    security_groups = null,
    source_security_group = null,
    source_security_group_id = null,
    subnets = null,
    tags = null,
    zone_id = null
  }: {
    listener: Aws_elb_listener_255[],
    aws_elb_id?: string|null,
    access_logs?: Aws_elb_access_logs_253[]|null,
    arn?: string|null,
    availability_zones?: string[]|null,
    connection_draining?: boolean|null,
    connection_draining_timeout?: number|null,
    cross_zone_load_balancing?: boolean|null,
    dns_name?: string|null,
    health_check?: Aws_elb_health_check_254[]|null,
    idle_timeout?: number|null,
    instances?: string[]|null,
    internal?: boolean|null,
    name?: string|null,
    name_prefix?: string|null,
    security_groups?: string[]|null,
    source_security_group?: string|null,
    source_security_group_id?: string|null,
    subnets?: string[]|null,
    tags?: {[s: string]: string}|null,
    zone_id?: string|null
  }) {
    this.listener = listener;
    this.aws_elb_id = aws_elb_id;
    this.access_logs = access_logs;
    this.arn = arn;
    this.availability_zones = availability_zones;
    this.connection_draining = connection_draining;
    this.connection_draining_timeout = connection_draining_timeout;
    this.cross_zone_load_balancing = cross_zone_load_balancing;
    this.dns_name = dns_name;
    this.health_check = health_check;
    this.idle_timeout = idle_timeout;
    this.instances = instances;
    this.internal = internal;
    this.name = name;
    this.name_prefix = name_prefix;
    this.security_groups = security_groups;
    this.source_security_group = source_security_group;
    this.source_security_group_id = source_security_group_id;
    this.subnets = subnets;
    this.tags = tags;
    this.zone_id = zone_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['listener'] = this.listener;
    if (this.aws_elb_id !== null) {
      ih['aws_elb_id'] = this.aws_elb_id;
    }
    if (this.access_logs !== null) {
      ih['access_logs'] = this.access_logs;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.connection_draining !== null) {
      ih['connection_draining'] = this.connection_draining;
    }
    if (this.connection_draining_timeout !== null) {
      ih['connection_draining_timeout'] = this.connection_draining_timeout;
    }
    if (this.cross_zone_load_balancing !== null) {
      ih['cross_zone_load_balancing'] = this.cross_zone_load_balancing;
    }
    if (this.dns_name !== null) {
      ih['dns_name'] = this.dns_name;
    }
    if (this.health_check !== null) {
      ih['health_check'] = this.health_check;
    }
    if (this.idle_timeout !== null) {
      ih['idle_timeout'] = this.idle_timeout;
    }
    if (this.instances !== null) {
      ih['instances'] = this.instances;
    }
    if (this.internal !== null) {
      ih['internal'] = this.internal;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.source_security_group !== null) {
      ih['source_security_group'] = this.source_security_group;
    }
    if (this.source_security_group_id !== null) {
      ih['source_security_group_id'] = this.source_security_group_id;
    }
    if (this.subnets !== null) {
      ih['subnets'] = this.subnets;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.zone_id !== null) {
      ih['zone_id'] = this.zone_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elb';
  }
}

export class Aws_elbHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elbHandler';
  }
}

export class Aws_elb_access_logs_253 implements PcoreValue {
  readonly bucket: string;
  readonly bucket_prefix: string|null;
  readonly enabled: boolean|null;
  readonly interval: number|null;

  constructor({
    bucket,
    bucket_prefix = null,
    enabled = null,
    interval = null
  }: {
    bucket: string,
    bucket_prefix?: string|null,
    enabled?: boolean|null,
    interval?: number|null
  }) {
    this.bucket = bucket;
    this.bucket_prefix = bucket_prefix;
    this.enabled = enabled;
    this.interval = interval;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    if (this.bucket_prefix !== null) {
      ih['bucket_prefix'] = this.bucket_prefix;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.interval !== null) {
      ih['interval'] = this.interval;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elb_access_logs_253';
  }
}

export class Aws_elb_attachment implements PcoreValue {
  readonly elb: string;
  readonly instance: string;
  readonly aws_elb_attachment_id: string|null;

  constructor({
    elb,
    instance,
    aws_elb_attachment_id = null
  }: {
    elb: string,
    instance: string,
    aws_elb_attachment_id?: string|null
  }) {
    this.elb = elb;
    this.instance = instance;
    this.aws_elb_attachment_id = aws_elb_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['elb'] = this.elb;
    ih['instance'] = this.instance;
    if (this.aws_elb_attachment_id !== null) {
      ih['aws_elb_attachment_id'] = this.aws_elb_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elb_attachment';
  }
}

export class Aws_elb_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elb_attachmentHandler';
  }
}

export class Aws_elb_health_check_254 implements PcoreValue {
  readonly healthy_threshold: number;
  readonly interval: number;
  readonly target: string;
  readonly timeout: number;
  readonly unhealthy_threshold: number;

  constructor({
    healthy_threshold,
    interval,
    target,
    timeout,
    unhealthy_threshold
  }: {
    healthy_threshold: number,
    interval: number,
    target: string,
    timeout: number,
    unhealthy_threshold: number
  }) {
    this.healthy_threshold = healthy_threshold;
    this.interval = interval;
    this.target = target;
    this.timeout = timeout;
    this.unhealthy_threshold = unhealthy_threshold;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['healthy_threshold'] = this.healthy_threshold;
    ih['interval'] = this.interval;
    ih['target'] = this.target;
    ih['timeout'] = this.timeout;
    ih['unhealthy_threshold'] = this.unhealthy_threshold;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elb_health_check_254';
  }
}

export class Aws_elb_listener_255 implements PcoreValue {
  readonly instance_port: number;
  readonly instance_protocol: string;
  readonly lb_port: number;
  readonly lb_protocol: string;
  readonly ssl_certificate_id: string|null;

  constructor({
    instance_port,
    instance_protocol,
    lb_port,
    lb_protocol,
    ssl_certificate_id = null
  }: {
    instance_port: number,
    instance_protocol: string,
    lb_port: number,
    lb_protocol: string,
    ssl_certificate_id?: string|null
  }) {
    this.instance_port = instance_port;
    this.instance_protocol = instance_protocol;
    this.lb_port = lb_port;
    this.lb_protocol = lb_protocol;
    this.ssl_certificate_id = ssl_certificate_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_port'] = this.instance_port;
    ih['instance_protocol'] = this.instance_protocol;
    ih['lb_port'] = this.lb_port;
    ih['lb_protocol'] = this.lb_protocol;
    if (this.ssl_certificate_id !== null) {
      ih['ssl_certificate_id'] = this.ssl_certificate_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_elb_listener_255';
  }
}

export class Aws_emr_cluster implements PcoreValue {
  readonly name: string;
  readonly release_label: string;
  readonly service_role: string;
  readonly aws_emr_cluster_id: string|null;
  readonly additional_info: string|null;
  readonly applications: string[]|null;
  readonly autoscaling_role: string|null;
  readonly bootstrap_action: Aws_emr_cluster_bootstrap_action_256[]|null;
  readonly cluster_state: string|null;
  readonly configurations: string|null;
  readonly configurations_json: string|null;
  readonly core_instance_count: number|null;
  readonly core_instance_type: string|null;
  readonly custom_ami_id: string|null;
  readonly ebs_root_volume_size: number|null;
  readonly ec2_attributes: Aws_emr_cluster_ec2_attributes_257[]|null;
  readonly instance_group: Aws_emr_cluster_instance_group_258[]|null;
  readonly keep_job_flow_alive_when_no_steps: boolean|null;
  readonly kerberos_attributes: Aws_emr_cluster_kerberos_attributes_260[]|null;
  readonly log_uri: string|null;
  readonly master_instance_type: string|null;
  readonly master_public_dns: string|null;
  readonly scale_down_behavior: string|null;
  readonly security_configuration: string|null;
  readonly step: Aws_emr_cluster_step_261[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly termination_protection: boolean|null;
  readonly visible_to_all_users: boolean|null;

  constructor({
    name,
    release_label,
    service_role,
    aws_emr_cluster_id = null,
    additional_info = null,
    applications = null,
    autoscaling_role = null,
    bootstrap_action = null,
    cluster_state = null,
    configurations = null,
    configurations_json = null,
    core_instance_count = null,
    core_instance_type = null,
    custom_ami_id = null,
    ebs_root_volume_size = null,
    ec2_attributes = null,
    instance_group = null,
    keep_job_flow_alive_when_no_steps = null,
    kerberos_attributes = null,
    log_uri = null,
    master_instance_type = null,
    master_public_dns = null,
    scale_down_behavior = null,
    security_configuration = null,
    step = null,
    tags = null,
    termination_protection = null,
    visible_to_all_users = null
  }: {
    name: string,
    release_label: string,
    service_role: string,
    aws_emr_cluster_id?: string|null,
    additional_info?: string|null,
    applications?: string[]|null,
    autoscaling_role?: string|null,
    bootstrap_action?: Aws_emr_cluster_bootstrap_action_256[]|null,
    cluster_state?: string|null,
    configurations?: string|null,
    configurations_json?: string|null,
    core_instance_count?: number|null,
    core_instance_type?: string|null,
    custom_ami_id?: string|null,
    ebs_root_volume_size?: number|null,
    ec2_attributes?: Aws_emr_cluster_ec2_attributes_257[]|null,
    instance_group?: Aws_emr_cluster_instance_group_258[]|null,
    keep_job_flow_alive_when_no_steps?: boolean|null,
    kerberos_attributes?: Aws_emr_cluster_kerberos_attributes_260[]|null,
    log_uri?: string|null,
    master_instance_type?: string|null,
    master_public_dns?: string|null,
    scale_down_behavior?: string|null,
    security_configuration?: string|null,
    step?: Aws_emr_cluster_step_261[]|null,
    tags?: {[s: string]: string}|null,
    termination_protection?: boolean|null,
    visible_to_all_users?: boolean|null
  }) {
    this.name = name;
    this.release_label = release_label;
    this.service_role = service_role;
    this.aws_emr_cluster_id = aws_emr_cluster_id;
    this.additional_info = additional_info;
    this.applications = applications;
    this.autoscaling_role = autoscaling_role;
    this.bootstrap_action = bootstrap_action;
    this.cluster_state = cluster_state;
    this.configurations = configurations;
    this.configurations_json = configurations_json;
    this.core_instance_count = core_instance_count;
    this.core_instance_type = core_instance_type;
    this.custom_ami_id = custom_ami_id;
    this.ebs_root_volume_size = ebs_root_volume_size;
    this.ec2_attributes = ec2_attributes;
    this.instance_group = instance_group;
    this.keep_job_flow_alive_when_no_steps = keep_job_flow_alive_when_no_steps;
    this.kerberos_attributes = kerberos_attributes;
    this.log_uri = log_uri;
    this.master_instance_type = master_instance_type;
    this.master_public_dns = master_public_dns;
    this.scale_down_behavior = scale_down_behavior;
    this.security_configuration = security_configuration;
    this.step = step;
    this.tags = tags;
    this.termination_protection = termination_protection;
    this.visible_to_all_users = visible_to_all_users;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['release_label'] = this.release_label;
    ih['service_role'] = this.service_role;
    if (this.aws_emr_cluster_id !== null) {
      ih['aws_emr_cluster_id'] = this.aws_emr_cluster_id;
    }
    if (this.additional_info !== null) {
      ih['additional_info'] = this.additional_info;
    }
    if (this.applications !== null) {
      ih['applications'] = this.applications;
    }
    if (this.autoscaling_role !== null) {
      ih['autoscaling_role'] = this.autoscaling_role;
    }
    if (this.bootstrap_action !== null) {
      ih['bootstrap_action'] = this.bootstrap_action;
    }
    if (this.cluster_state !== null) {
      ih['cluster_state'] = this.cluster_state;
    }
    if (this.configurations !== null) {
      ih['configurations'] = this.configurations;
    }
    if (this.configurations_json !== null) {
      ih['configurations_json'] = this.configurations_json;
    }
    if (this.core_instance_count !== null) {
      ih['core_instance_count'] = this.core_instance_count;
    }
    if (this.core_instance_type !== null) {
      ih['core_instance_type'] = this.core_instance_type;
    }
    if (this.custom_ami_id !== null) {
      ih['custom_ami_id'] = this.custom_ami_id;
    }
    if (this.ebs_root_volume_size !== null) {
      ih['ebs_root_volume_size'] = this.ebs_root_volume_size;
    }
    if (this.ec2_attributes !== null) {
      ih['ec2_attributes'] = this.ec2_attributes;
    }
    if (this.instance_group !== null) {
      ih['instance_group'] = this.instance_group;
    }
    if (this.keep_job_flow_alive_when_no_steps !== null) {
      ih['keep_job_flow_alive_when_no_steps'] = this.keep_job_flow_alive_when_no_steps;
    }
    if (this.kerberos_attributes !== null) {
      ih['kerberos_attributes'] = this.kerberos_attributes;
    }
    if (this.log_uri !== null) {
      ih['log_uri'] = this.log_uri;
    }
    if (this.master_instance_type !== null) {
      ih['master_instance_type'] = this.master_instance_type;
    }
    if (this.master_public_dns !== null) {
      ih['master_public_dns'] = this.master_public_dns;
    }
    if (this.scale_down_behavior !== null) {
      ih['scale_down_behavior'] = this.scale_down_behavior;
    }
    if (this.security_configuration !== null) {
      ih['security_configuration'] = this.security_configuration;
    }
    if (this.step !== null) {
      ih['step'] = this.step;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.termination_protection !== null) {
      ih['termination_protection'] = this.termination_protection;
    }
    if (this.visible_to_all_users !== null) {
      ih['visible_to_all_users'] = this.visible_to_all_users;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_cluster';
  }
}

export class Aws_emr_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_clusterHandler';
  }
}

export class Aws_emr_cluster_bootstrap_action_256 implements PcoreValue {
  readonly name: string;
  readonly path: string;
  readonly args: string[]|null;

  constructor({
    name,
    path,
    args = null
  }: {
    name: string,
    path: string,
    args?: string[]|null
  }) {
    this.name = name;
    this.path = path;
    this.args = args;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['path'] = this.path;
    if (this.args !== null) {
      ih['args'] = this.args;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_cluster_bootstrap_action_256';
  }
}

export class Aws_emr_cluster_ec2_attributes_257 implements PcoreValue {
  readonly instance_profile: string;
  readonly additional_master_security_groups: string|null;
  readonly additional_slave_security_groups: string|null;
  readonly emr_managed_master_security_group: string|null;
  readonly emr_managed_slave_security_group: string|null;
  readonly key_name: string|null;
  readonly service_access_security_group: string|null;
  readonly subnet_id: string|null;

  constructor({
    instance_profile,
    additional_master_security_groups = null,
    additional_slave_security_groups = null,
    emr_managed_master_security_group = null,
    emr_managed_slave_security_group = null,
    key_name = null,
    service_access_security_group = null,
    subnet_id = null
  }: {
    instance_profile: string,
    additional_master_security_groups?: string|null,
    additional_slave_security_groups?: string|null,
    emr_managed_master_security_group?: string|null,
    emr_managed_slave_security_group?: string|null,
    key_name?: string|null,
    service_access_security_group?: string|null,
    subnet_id?: string|null
  }) {
    this.instance_profile = instance_profile;
    this.additional_master_security_groups = additional_master_security_groups;
    this.additional_slave_security_groups = additional_slave_security_groups;
    this.emr_managed_master_security_group = emr_managed_master_security_group;
    this.emr_managed_slave_security_group = emr_managed_slave_security_group;
    this.key_name = key_name;
    this.service_access_security_group = service_access_security_group;
    this.subnet_id = subnet_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_profile'] = this.instance_profile;
    if (this.additional_master_security_groups !== null) {
      ih['additional_master_security_groups'] = this.additional_master_security_groups;
    }
    if (this.additional_slave_security_groups !== null) {
      ih['additional_slave_security_groups'] = this.additional_slave_security_groups;
    }
    if (this.emr_managed_master_security_group !== null) {
      ih['emr_managed_master_security_group'] = this.emr_managed_master_security_group;
    }
    if (this.emr_managed_slave_security_group !== null) {
      ih['emr_managed_slave_security_group'] = this.emr_managed_slave_security_group;
    }
    if (this.key_name !== null) {
      ih['key_name'] = this.key_name;
    }
    if (this.service_access_security_group !== null) {
      ih['service_access_security_group'] = this.service_access_security_group;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_cluster_ec2_attributes_257';
  }
}

export class Aws_emr_cluster_instance_group_258 implements PcoreValue {
  readonly instance_role: string;
  readonly instance_type: string;
  readonly autoscaling_policy: string|null;
  readonly bid_price: string|null;
  readonly ebs_config: Aws_emr_cluster_instance_group_258_ebs_config_259[]|null;
  readonly id: string|null;
  readonly instance_count: number|null;
  readonly name: string|null;

  constructor({
    instance_role,
    instance_type,
    autoscaling_policy = null,
    bid_price = null,
    ebs_config = null,
    id = null,
    instance_count = null,
    name = null
  }: {
    instance_role: string,
    instance_type: string,
    autoscaling_policy?: string|null,
    bid_price?: string|null,
    ebs_config?: Aws_emr_cluster_instance_group_258_ebs_config_259[]|null,
    id?: string|null,
    instance_count?: number|null,
    name?: string|null
  }) {
    this.instance_role = instance_role;
    this.instance_type = instance_type;
    this.autoscaling_policy = autoscaling_policy;
    this.bid_price = bid_price;
    this.ebs_config = ebs_config;
    this.id = id;
    this.instance_count = instance_count;
    this.name = name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_role'] = this.instance_role;
    ih['instance_type'] = this.instance_type;
    if (this.autoscaling_policy !== null) {
      ih['autoscaling_policy'] = this.autoscaling_policy;
    }
    if (this.bid_price !== null) {
      ih['bid_price'] = this.bid_price;
    }
    if (this.ebs_config !== null) {
      ih['ebs_config'] = this.ebs_config;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.instance_count !== null) {
      ih['instance_count'] = this.instance_count;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_cluster_instance_group_258';
  }
}

export class Aws_emr_cluster_instance_group_258_ebs_config_259 implements PcoreValue {
  readonly size: number;
  readonly type: string;
  readonly iops: number|null;
  readonly volumes_per_instance: number|null;

  constructor({
    size,
    type,
    iops = null,
    volumes_per_instance = null
  }: {
    size: number,
    type: string,
    iops?: number|null,
    volumes_per_instance?: number|null
  }) {
    this.size = size;
    this.type = type;
    this.iops = iops;
    this.volumes_per_instance = volumes_per_instance;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['size'] = this.size;
    ih['type'] = this.type;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.volumes_per_instance !== null) {
      ih['volumes_per_instance'] = this.volumes_per_instance;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_cluster_instance_group_258_ebs_config_259';
  }
}

export class Aws_emr_cluster_kerberos_attributes_260 implements PcoreValue {
  readonly kdc_admin_password: string;
  readonly realm: string;
  readonly ad_domain_join_password: string|null;
  readonly ad_domain_join_user: string|null;
  readonly cross_realm_trust_principal_password: string|null;

  constructor({
    kdc_admin_password,
    realm,
    ad_domain_join_password = null,
    ad_domain_join_user = null,
    cross_realm_trust_principal_password = null
  }: {
    kdc_admin_password: string,
    realm: string,
    ad_domain_join_password?: string|null,
    ad_domain_join_user?: string|null,
    cross_realm_trust_principal_password?: string|null
  }) {
    this.kdc_admin_password = kdc_admin_password;
    this.realm = realm;
    this.ad_domain_join_password = ad_domain_join_password;
    this.ad_domain_join_user = ad_domain_join_user;
    this.cross_realm_trust_principal_password = cross_realm_trust_principal_password;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['kdc_admin_password'] = this.kdc_admin_password;
    ih['realm'] = this.realm;
    if (this.ad_domain_join_password !== null) {
      ih['ad_domain_join_password'] = this.ad_domain_join_password;
    }
    if (this.ad_domain_join_user !== null) {
      ih['ad_domain_join_user'] = this.ad_domain_join_user;
    }
    if (this.cross_realm_trust_principal_password !== null) {
      ih['cross_realm_trust_principal_password'] = this.cross_realm_trust_principal_password;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_cluster_kerberos_attributes_260';
  }
}

export class Aws_emr_cluster_step_261 implements PcoreValue {
  readonly action_on_failure: string;
  readonly hadoop_jar_step: Aws_emr_cluster_step_261_hadoop_jar_step_262[];
  readonly name: string;

  constructor({
    action_on_failure,
    hadoop_jar_step,
    name
  }: {
    action_on_failure: string,
    hadoop_jar_step: Aws_emr_cluster_step_261_hadoop_jar_step_262[],
    name: string
  }) {
    this.action_on_failure = action_on_failure;
    this.hadoop_jar_step = hadoop_jar_step;
    this.name = name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action_on_failure'] = this.action_on_failure;
    ih['hadoop_jar_step'] = this.hadoop_jar_step;
    ih['name'] = this.name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_cluster_step_261';
  }
}

export class Aws_emr_cluster_step_261_hadoop_jar_step_262 implements PcoreValue {
  readonly jar: string;
  readonly args: string[]|null;
  readonly main_class: string|null;
  readonly properties: {[s: string]: string}|null;

  constructor({
    jar,
    args = null,
    main_class = null,
    properties = null
  }: {
    jar: string,
    args?: string[]|null,
    main_class?: string|null,
    properties?: {[s: string]: string}|null
  }) {
    this.jar = jar;
    this.args = args;
    this.main_class = main_class;
    this.properties = properties;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['jar'] = this.jar;
    if (this.args !== null) {
      ih['args'] = this.args;
    }
    if (this.main_class !== null) {
      ih['main_class'] = this.main_class;
    }
    if (this.properties !== null) {
      ih['properties'] = this.properties;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_cluster_step_261_hadoop_jar_step_262';
  }
}

export class Aws_emr_instance_group implements PcoreValue {
  readonly cluster_id: string;
  readonly instance_type: string;
  readonly aws_emr_instance_group_id: string|null;
  readonly ebs_config: Aws_emr_instance_group_ebs_config_263[]|null;
  readonly ebs_optimized: boolean|null;
  readonly instance_count: number|null;
  readonly name: string|null;
  readonly running_instance_count: number|null;
  readonly status: string|null;

  constructor({
    cluster_id,
    instance_type,
    aws_emr_instance_group_id = null,
    ebs_config = null,
    ebs_optimized = null,
    instance_count = null,
    name = null,
    running_instance_count = null,
    status = null
  }: {
    cluster_id: string,
    instance_type: string,
    aws_emr_instance_group_id?: string|null,
    ebs_config?: Aws_emr_instance_group_ebs_config_263[]|null,
    ebs_optimized?: boolean|null,
    instance_count?: number|null,
    name?: string|null,
    running_instance_count?: number|null,
    status?: string|null
  }) {
    this.cluster_id = cluster_id;
    this.instance_type = instance_type;
    this.aws_emr_instance_group_id = aws_emr_instance_group_id;
    this.ebs_config = ebs_config;
    this.ebs_optimized = ebs_optimized;
    this.instance_count = instance_count;
    this.name = name;
    this.running_instance_count = running_instance_count;
    this.status = status;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_id'] = this.cluster_id;
    ih['instance_type'] = this.instance_type;
    if (this.aws_emr_instance_group_id !== null) {
      ih['aws_emr_instance_group_id'] = this.aws_emr_instance_group_id;
    }
    if (this.ebs_config !== null) {
      ih['ebs_config'] = this.ebs_config;
    }
    if (this.ebs_optimized !== null) {
      ih['ebs_optimized'] = this.ebs_optimized;
    }
    if (this.instance_count !== null) {
      ih['instance_count'] = this.instance_count;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.running_instance_count !== null) {
      ih['running_instance_count'] = this.running_instance_count;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_instance_group';
  }
}

export class Aws_emr_instance_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_instance_groupHandler';
  }
}

export class Aws_emr_instance_group_ebs_config_263 implements PcoreValue {
  readonly size: number;
  readonly type: string;
  readonly iops: number|null;
  readonly volumes_per_instance: number|null;

  constructor({
    size,
    type,
    iops = null,
    volumes_per_instance = null
  }: {
    size: number,
    type: string,
    iops?: number|null,
    volumes_per_instance?: number|null
  }) {
    this.size = size;
    this.type = type;
    this.iops = iops;
    this.volumes_per_instance = volumes_per_instance;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['size'] = this.size;
    ih['type'] = this.type;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.volumes_per_instance !== null) {
      ih['volumes_per_instance'] = this.volumes_per_instance;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_instance_group_ebs_config_263';
  }
}

export class Aws_emr_security_configuration implements PcoreValue {
  readonly configuration: string;
  readonly aws_emr_security_configuration_id: string|null;
  readonly creation_date: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;

  constructor({
    configuration,
    aws_emr_security_configuration_id = null,
    creation_date = null,
    name = null,
    name_prefix = null
  }: {
    configuration: string,
    aws_emr_security_configuration_id?: string|null,
    creation_date?: string|null,
    name?: string|null,
    name_prefix?: string|null
  }) {
    this.configuration = configuration;
    this.aws_emr_security_configuration_id = aws_emr_security_configuration_id;
    this.creation_date = creation_date;
    this.name = name;
    this.name_prefix = name_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['configuration'] = this.configuration;
    if (this.aws_emr_security_configuration_id !== null) {
      ih['aws_emr_security_configuration_id'] = this.aws_emr_security_configuration_id;
    }
    if (this.creation_date !== null) {
      ih['creation_date'] = this.creation_date;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_security_configuration';
  }
}

export class Aws_emr_security_configurationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_emr_security_configurationHandler';
  }
}

export class Aws_flow_log implements PcoreValue {
  readonly traffic_type: string;
  readonly aws_flow_log_id: string|null;
  readonly eni_id: string|null;
  readonly iam_role_arn: string|null;
  readonly log_destination: string|null;
  readonly log_destination_type: string|null;
  readonly log_group_name: string|null;
  readonly subnet_id: string|null;
  readonly vpc_id: string|null;

  constructor({
    traffic_type,
    aws_flow_log_id = null,
    eni_id = null,
    iam_role_arn = null,
    log_destination = null,
    log_destination_type = null,
    log_group_name = null,
    subnet_id = null,
    vpc_id = null
  }: {
    traffic_type: string,
    aws_flow_log_id?: string|null,
    eni_id?: string|null,
    iam_role_arn?: string|null,
    log_destination?: string|null,
    log_destination_type?: string|null,
    log_group_name?: string|null,
    subnet_id?: string|null,
    vpc_id?: string|null
  }) {
    this.traffic_type = traffic_type;
    this.aws_flow_log_id = aws_flow_log_id;
    this.eni_id = eni_id;
    this.iam_role_arn = iam_role_arn;
    this.log_destination = log_destination;
    this.log_destination_type = log_destination_type;
    this.log_group_name = log_group_name;
    this.subnet_id = subnet_id;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['traffic_type'] = this.traffic_type;
    if (this.aws_flow_log_id !== null) {
      ih['aws_flow_log_id'] = this.aws_flow_log_id;
    }
    if (this.eni_id !== null) {
      ih['eni_id'] = this.eni_id;
    }
    if (this.iam_role_arn !== null) {
      ih['iam_role_arn'] = this.iam_role_arn;
    }
    if (this.log_destination !== null) {
      ih['log_destination'] = this.log_destination;
    }
    if (this.log_destination_type !== null) {
      ih['log_destination_type'] = this.log_destination_type;
    }
    if (this.log_group_name !== null) {
      ih['log_group_name'] = this.log_group_name;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_flow_log';
  }
}

export class Aws_flow_logHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_flow_logHandler';
  }
}

export class Aws_gamelift_alias implements PcoreValue {
  readonly name: string;
  readonly routing_strategy: Aws_gamelift_alias_routing_strategy_264[];
  readonly aws_gamelift_alias_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;

  constructor({
    name,
    routing_strategy,
    aws_gamelift_alias_id = null,
    arn = null,
    description = null
  }: {
    name: string,
    routing_strategy: Aws_gamelift_alias_routing_strategy_264[],
    aws_gamelift_alias_id?: string|null,
    arn?: string|null,
    description?: string|null
  }) {
    this.name = name;
    this.routing_strategy = routing_strategy;
    this.aws_gamelift_alias_id = aws_gamelift_alias_id;
    this.arn = arn;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['routing_strategy'] = this.routing_strategy;
    if (this.aws_gamelift_alias_id !== null) {
      ih['aws_gamelift_alias_id'] = this.aws_gamelift_alias_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_alias';
  }
}

export class Aws_gamelift_aliasHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_aliasHandler';
  }
}

export class Aws_gamelift_alias_routing_strategy_264 implements PcoreValue {
  readonly type: string;
  readonly fleet_id: string|null;
  readonly message: string|null;

  constructor({
    type,
    fleet_id = null,
    message = null
  }: {
    type: string,
    fleet_id?: string|null,
    message?: string|null
  }) {
    this.type = type;
    this.fleet_id = fleet_id;
    this.message = message;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.fleet_id !== null) {
      ih['fleet_id'] = this.fleet_id;
    }
    if (this.message !== null) {
      ih['message'] = this.message;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_alias_routing_strategy_264';
  }
}

export class Aws_gamelift_build implements PcoreValue {
  readonly name: string;
  readonly operating_system: string;
  readonly storage_location: Aws_gamelift_build_storage_location_265[];
  readonly aws_gamelift_build_id: string|null;
  readonly version: string|null;

  constructor({
    name,
    operating_system,
    storage_location,
    aws_gamelift_build_id = null,
    version = null
  }: {
    name: string,
    operating_system: string,
    storage_location: Aws_gamelift_build_storage_location_265[],
    aws_gamelift_build_id?: string|null,
    version?: string|null
  }) {
    this.name = name;
    this.operating_system = operating_system;
    this.storage_location = storage_location;
    this.aws_gamelift_build_id = aws_gamelift_build_id;
    this.version = version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['operating_system'] = this.operating_system;
    ih['storage_location'] = this.storage_location;
    if (this.aws_gamelift_build_id !== null) {
      ih['aws_gamelift_build_id'] = this.aws_gamelift_build_id;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_build';
  }
}

export class Aws_gamelift_buildHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_buildHandler';
  }
}

export class Aws_gamelift_build_storage_location_265 implements PcoreValue {
  readonly bucket: string;
  readonly key: string;
  readonly role_arn: string;

  constructor({
    bucket,
    key,
    role_arn
  }: {
    bucket: string,
    key: string,
    role_arn: string
  }) {
    this.bucket = bucket;
    this.key = key;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    ih['key'] = this.key;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_build_storage_location_265';
  }
}

export class Aws_gamelift_fleet implements PcoreValue {
  readonly build_id: string;
  readonly ec2_instance_type: string;
  readonly name: string;
  readonly aws_gamelift_fleet_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly ec2_inbound_permission: Aws_gamelift_fleet_ec2_inbound_permission_266[]|null;
  readonly log_paths: string[]|null;
  readonly metric_groups: string[]|null;
  readonly new_game_session_protection_policy: string|null;
  readonly operating_system: string|null;
  readonly resource_creation_limit_policy: Aws_gamelift_fleet_resource_creation_limit_policy_267[]|null;
  readonly runtime_configuration: Aws_gamelift_fleet_runtime_configuration_268[]|null;

  constructor({
    build_id,
    ec2_instance_type,
    name,
    aws_gamelift_fleet_id = null,
    arn = null,
    description = null,
    ec2_inbound_permission = null,
    log_paths = null,
    metric_groups = null,
    new_game_session_protection_policy = null,
    operating_system = null,
    resource_creation_limit_policy = null,
    runtime_configuration = null
  }: {
    build_id: string,
    ec2_instance_type: string,
    name: string,
    aws_gamelift_fleet_id?: string|null,
    arn?: string|null,
    description?: string|null,
    ec2_inbound_permission?: Aws_gamelift_fleet_ec2_inbound_permission_266[]|null,
    log_paths?: string[]|null,
    metric_groups?: string[]|null,
    new_game_session_protection_policy?: string|null,
    operating_system?: string|null,
    resource_creation_limit_policy?: Aws_gamelift_fleet_resource_creation_limit_policy_267[]|null,
    runtime_configuration?: Aws_gamelift_fleet_runtime_configuration_268[]|null
  }) {
    this.build_id = build_id;
    this.ec2_instance_type = ec2_instance_type;
    this.name = name;
    this.aws_gamelift_fleet_id = aws_gamelift_fleet_id;
    this.arn = arn;
    this.description = description;
    this.ec2_inbound_permission = ec2_inbound_permission;
    this.log_paths = log_paths;
    this.metric_groups = metric_groups;
    this.new_game_session_protection_policy = new_game_session_protection_policy;
    this.operating_system = operating_system;
    this.resource_creation_limit_policy = resource_creation_limit_policy;
    this.runtime_configuration = runtime_configuration;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['build_id'] = this.build_id;
    ih['ec2_instance_type'] = this.ec2_instance_type;
    ih['name'] = this.name;
    if (this.aws_gamelift_fleet_id !== null) {
      ih['aws_gamelift_fleet_id'] = this.aws_gamelift_fleet_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ec2_inbound_permission !== null) {
      ih['ec2_inbound_permission'] = this.ec2_inbound_permission;
    }
    if (this.log_paths !== null) {
      ih['log_paths'] = this.log_paths;
    }
    if (this.metric_groups !== null) {
      ih['metric_groups'] = this.metric_groups;
    }
    if (this.new_game_session_protection_policy !== null) {
      ih['new_game_session_protection_policy'] = this.new_game_session_protection_policy;
    }
    if (this.operating_system !== null) {
      ih['operating_system'] = this.operating_system;
    }
    if (this.resource_creation_limit_policy !== null) {
      ih['resource_creation_limit_policy'] = this.resource_creation_limit_policy;
    }
    if (this.runtime_configuration !== null) {
      ih['runtime_configuration'] = this.runtime_configuration;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_fleet';
  }
}

export class Aws_gamelift_fleetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_fleetHandler';
  }
}

export class Aws_gamelift_fleet_ec2_inbound_permission_266 implements PcoreValue {
  readonly from_port: number;
  readonly ip_range: string;
  readonly protocol: string;
  readonly to_port: number;

  constructor({
    from_port,
    ip_range,
    protocol,
    to_port
  }: {
    from_port: number,
    ip_range: string,
    protocol: string,
    to_port: number
  }) {
    this.from_port = from_port;
    this.ip_range = ip_range;
    this.protocol = protocol;
    this.to_port = to_port;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['from_port'] = this.from_port;
    ih['ip_range'] = this.ip_range;
    ih['protocol'] = this.protocol;
    ih['to_port'] = this.to_port;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_fleet_ec2_inbound_permission_266';
  }
}

export class Aws_gamelift_fleet_resource_creation_limit_policy_267 implements PcoreValue {
  readonly new_game_sessions_per_creator: number|null;
  readonly policy_period_in_minutes: number|null;

  constructor({
    new_game_sessions_per_creator = null,
    policy_period_in_minutes = null
  }: {
    new_game_sessions_per_creator?: number|null,
    policy_period_in_minutes?: number|null
  }) {
    this.new_game_sessions_per_creator = new_game_sessions_per_creator;
    this.policy_period_in_minutes = policy_period_in_minutes;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.new_game_sessions_per_creator !== null) {
      ih['new_game_sessions_per_creator'] = this.new_game_sessions_per_creator;
    }
    if (this.policy_period_in_minutes !== null) {
      ih['policy_period_in_minutes'] = this.policy_period_in_minutes;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_fleet_resource_creation_limit_policy_267';
  }
}

export class Aws_gamelift_fleet_runtime_configuration_268 implements PcoreValue {
  readonly game_session_activation_timeout_seconds: number|null;
  readonly max_concurrent_game_session_activations: number|null;
  readonly server_process: Aws_gamelift_fleet_runtime_configuration_268_server_process_269[]|null;

  constructor({
    game_session_activation_timeout_seconds = null,
    max_concurrent_game_session_activations = null,
    server_process = null
  }: {
    game_session_activation_timeout_seconds?: number|null,
    max_concurrent_game_session_activations?: number|null,
    server_process?: Aws_gamelift_fleet_runtime_configuration_268_server_process_269[]|null
  }) {
    this.game_session_activation_timeout_seconds = game_session_activation_timeout_seconds;
    this.max_concurrent_game_session_activations = max_concurrent_game_session_activations;
    this.server_process = server_process;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.game_session_activation_timeout_seconds !== null) {
      ih['game_session_activation_timeout_seconds'] = this.game_session_activation_timeout_seconds;
    }
    if (this.max_concurrent_game_session_activations !== null) {
      ih['max_concurrent_game_session_activations'] = this.max_concurrent_game_session_activations;
    }
    if (this.server_process !== null) {
      ih['server_process'] = this.server_process;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_fleet_runtime_configuration_268';
  }
}

export class Aws_gamelift_fleet_runtime_configuration_268_server_process_269 implements PcoreValue {
  readonly concurrent_executions: number;
  readonly launch_path: string;
  readonly parameters: string|null;

  constructor({
    concurrent_executions,
    launch_path,
    parameters = null
  }: {
    concurrent_executions: number,
    launch_path: string,
    parameters?: string|null
  }) {
    this.concurrent_executions = concurrent_executions;
    this.launch_path = launch_path;
    this.parameters = parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['concurrent_executions'] = this.concurrent_executions;
    ih['launch_path'] = this.launch_path;
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_fleet_runtime_configuration_268_server_process_269';
  }
}

export class Aws_gamelift_game_session_queue implements PcoreValue {
  readonly name: string;
  readonly aws_gamelift_game_session_queue_id: string|null;
  readonly arn: string|null;
  readonly destinations: string[]|null;
  readonly player_latency_policy: Aws_gamelift_game_session_queue_player_latency_policy_270[]|null;
  readonly timeout_in_seconds: number|null;

  constructor({
    name,
    aws_gamelift_game_session_queue_id = null,
    arn = null,
    destinations = null,
    player_latency_policy = null,
    timeout_in_seconds = null
  }: {
    name: string,
    aws_gamelift_game_session_queue_id?: string|null,
    arn?: string|null,
    destinations?: string[]|null,
    player_latency_policy?: Aws_gamelift_game_session_queue_player_latency_policy_270[]|null,
    timeout_in_seconds?: number|null
  }) {
    this.name = name;
    this.aws_gamelift_game_session_queue_id = aws_gamelift_game_session_queue_id;
    this.arn = arn;
    this.destinations = destinations;
    this.player_latency_policy = player_latency_policy;
    this.timeout_in_seconds = timeout_in_seconds;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_gamelift_game_session_queue_id !== null) {
      ih['aws_gamelift_game_session_queue_id'] = this.aws_gamelift_game_session_queue_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.destinations !== null) {
      ih['destinations'] = this.destinations;
    }
    if (this.player_latency_policy !== null) {
      ih['player_latency_policy'] = this.player_latency_policy;
    }
    if (this.timeout_in_seconds !== null) {
      ih['timeout_in_seconds'] = this.timeout_in_seconds;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_game_session_queue';
  }
}

export class Aws_gamelift_game_session_queueHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_game_session_queueHandler';
  }
}

export class Aws_gamelift_game_session_queue_player_latency_policy_270 implements PcoreValue {
  readonly maximum_individual_player_latency_milliseconds: number;
  readonly policy_duration_seconds: number|null;

  constructor({
    maximum_individual_player_latency_milliseconds,
    policy_duration_seconds = null
  }: {
    maximum_individual_player_latency_milliseconds: number,
    policy_duration_seconds?: number|null
  }) {
    this.maximum_individual_player_latency_milliseconds = maximum_individual_player_latency_milliseconds;
    this.policy_duration_seconds = policy_duration_seconds;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['maximum_individual_player_latency_milliseconds'] = this.maximum_individual_player_latency_milliseconds;
    if (this.policy_duration_seconds !== null) {
      ih['policy_duration_seconds'] = this.policy_duration_seconds;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_gamelift_game_session_queue_player_latency_policy_270';
  }
}

export class Aws_glacier_vault implements PcoreValue {
  readonly name: string;
  readonly aws_glacier_vault_id: string|null;
  readonly access_policy: string|null;
  readonly arn: string|null;
  readonly location: string|null;
  readonly notification: Aws_glacier_vault_notification_271[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    aws_glacier_vault_id = null,
    access_policy = null,
    arn = null,
    location = null,
    notification = null,
    tags = null
  }: {
    name: string,
    aws_glacier_vault_id?: string|null,
    access_policy?: string|null,
    arn?: string|null,
    location?: string|null,
    notification?: Aws_glacier_vault_notification_271[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.aws_glacier_vault_id = aws_glacier_vault_id;
    this.access_policy = access_policy;
    this.arn = arn;
    this.location = location;
    this.notification = notification;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_glacier_vault_id !== null) {
      ih['aws_glacier_vault_id'] = this.aws_glacier_vault_id;
    }
    if (this.access_policy !== null) {
      ih['access_policy'] = this.access_policy;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.location !== null) {
      ih['location'] = this.location;
    }
    if (this.notification !== null) {
      ih['notification'] = this.notification;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glacier_vault';
  }
}

export class Aws_glacier_vaultHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glacier_vaultHandler';
  }
}

export class Aws_glacier_vault_lock implements PcoreValue {
  readonly complete_lock: boolean;
  readonly policy: string;
  readonly vault_name: string;
  readonly aws_glacier_vault_lock_id: string|null;
  readonly ignore_deletion_error: boolean|null;

  constructor({
    complete_lock,
    policy,
    vault_name,
    aws_glacier_vault_lock_id = null,
    ignore_deletion_error = null
  }: {
    complete_lock: boolean,
    policy: string,
    vault_name: string,
    aws_glacier_vault_lock_id?: string|null,
    ignore_deletion_error?: boolean|null
  }) {
    this.complete_lock = complete_lock;
    this.policy = policy;
    this.vault_name = vault_name;
    this.aws_glacier_vault_lock_id = aws_glacier_vault_lock_id;
    this.ignore_deletion_error = ignore_deletion_error;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['complete_lock'] = this.complete_lock;
    ih['policy'] = this.policy;
    ih['vault_name'] = this.vault_name;
    if (this.aws_glacier_vault_lock_id !== null) {
      ih['aws_glacier_vault_lock_id'] = this.aws_glacier_vault_lock_id;
    }
    if (this.ignore_deletion_error !== null) {
      ih['ignore_deletion_error'] = this.ignore_deletion_error;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glacier_vault_lock';
  }
}

export class Aws_glacier_vault_lockHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glacier_vault_lockHandler';
  }
}

export class Aws_glacier_vault_notification_271 implements PcoreValue {
  readonly events: string[];
  readonly sns_topic: string;

  constructor({
    events,
    sns_topic
  }: {
    events: string[],
    sns_topic: string
  }) {
    this.events = events;
    this.sns_topic = sns_topic;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['events'] = this.events;
    ih['sns_topic'] = this.sns_topic;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glacier_vault_notification_271';
  }
}

export class Aws_globalaccelerator_accelerator implements PcoreValue {
  readonly name: string;
  readonly aws_globalaccelerator_accelerator_id: string|null;
  readonly attributes: Aws_globalaccelerator_accelerator_attributes_272[]|null;
  readonly enabled: boolean|null;
  readonly ip_address_type: string|null;
  readonly ip_sets: Aws_globalaccelerator_accelerator_ip_sets_273[]|null;

  constructor({
    name,
    aws_globalaccelerator_accelerator_id = null,
    attributes = null,
    enabled = null,
    ip_address_type = null,
    ip_sets = null
  }: {
    name: string,
    aws_globalaccelerator_accelerator_id?: string|null,
    attributes?: Aws_globalaccelerator_accelerator_attributes_272[]|null,
    enabled?: boolean|null,
    ip_address_type?: string|null,
    ip_sets?: Aws_globalaccelerator_accelerator_ip_sets_273[]|null
  }) {
    this.name = name;
    this.aws_globalaccelerator_accelerator_id = aws_globalaccelerator_accelerator_id;
    this.attributes = attributes;
    this.enabled = enabled;
    this.ip_address_type = ip_address_type;
    this.ip_sets = ip_sets;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_globalaccelerator_accelerator_id !== null) {
      ih['aws_globalaccelerator_accelerator_id'] = this.aws_globalaccelerator_accelerator_id;
    }
    if (this.attributes !== null) {
      ih['attributes'] = this.attributes;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.ip_address_type !== null) {
      ih['ip_address_type'] = this.ip_address_type;
    }
    if (this.ip_sets !== null) {
      ih['ip_sets'] = this.ip_sets;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_globalaccelerator_accelerator';
  }
}

export class Aws_globalaccelerator_acceleratorHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_globalaccelerator_acceleratorHandler';
  }
}

export class Aws_globalaccelerator_accelerator_attributes_272 implements PcoreValue {
  readonly flow_logs_enabled: boolean|null;
  readonly flow_logs_s3_bucket: string|null;
  readonly flow_logs_s3_prefix: string|null;

  constructor({
    flow_logs_enabled = null,
    flow_logs_s3_bucket = null,
    flow_logs_s3_prefix = null
  }: {
    flow_logs_enabled?: boolean|null,
    flow_logs_s3_bucket?: string|null,
    flow_logs_s3_prefix?: string|null
  }) {
    this.flow_logs_enabled = flow_logs_enabled;
    this.flow_logs_s3_bucket = flow_logs_s3_bucket;
    this.flow_logs_s3_prefix = flow_logs_s3_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.flow_logs_enabled !== null) {
      ih['flow_logs_enabled'] = this.flow_logs_enabled;
    }
    if (this.flow_logs_s3_bucket !== null) {
      ih['flow_logs_s3_bucket'] = this.flow_logs_s3_bucket;
    }
    if (this.flow_logs_s3_prefix !== null) {
      ih['flow_logs_s3_prefix'] = this.flow_logs_s3_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_globalaccelerator_accelerator_attributes_272';
  }
}

export class Aws_globalaccelerator_accelerator_ip_sets_273 implements PcoreValue {
  readonly ip_addresses: string[]|null;
  readonly ip_family: string|null;

  constructor({
    ip_addresses = null,
    ip_family = null
  }: {
    ip_addresses?: string[]|null,
    ip_family?: string|null
  }) {
    this.ip_addresses = ip_addresses;
    this.ip_family = ip_family;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.ip_addresses !== null) {
      ih['ip_addresses'] = this.ip_addresses;
    }
    if (this.ip_family !== null) {
      ih['ip_family'] = this.ip_family;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_globalaccelerator_accelerator_ip_sets_273';
  }
}

export class Aws_glue_catalog_database implements PcoreValue {
  readonly name: string;
  readonly aws_glue_catalog_database_id: string|null;
  readonly catalog_id: string|null;
  readonly description: string|null;
  readonly location_uri: string|null;
  readonly parameters: {[s: string]: string}|null;

  constructor({
    name,
    aws_glue_catalog_database_id = null,
    catalog_id = null,
    description = null,
    location_uri = null,
    parameters = null
  }: {
    name: string,
    aws_glue_catalog_database_id?: string|null,
    catalog_id?: string|null,
    description?: string|null,
    location_uri?: string|null,
    parameters?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.aws_glue_catalog_database_id = aws_glue_catalog_database_id;
    this.catalog_id = catalog_id;
    this.description = description;
    this.location_uri = location_uri;
    this.parameters = parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_glue_catalog_database_id !== null) {
      ih['aws_glue_catalog_database_id'] = this.aws_glue_catalog_database_id;
    }
    if (this.catalog_id !== null) {
      ih['catalog_id'] = this.catalog_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.location_uri !== null) {
      ih['location_uri'] = this.location_uri;
    }
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_database';
  }
}

export class Aws_glue_catalog_databaseHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_databaseHandler';
  }
}

export class Aws_glue_catalog_table implements PcoreValue {
  readonly database_name: string;
  readonly name: string;
  readonly aws_glue_catalog_table_id: string|null;
  readonly catalog_id: string|null;
  readonly description: string|null;
  readonly owner: string|null;
  readonly parameters: {[s: string]: string}|null;
  readonly partition_keys: Aws_glue_catalog_table_partition_keys_274[]|null;
  readonly retention: number|null;
  readonly storage_descriptor: Aws_glue_catalog_table_storage_descriptor_275[]|null;
  readonly table_type: string|null;
  readonly view_expanded_text: string|null;
  readonly view_original_text: string|null;

  constructor({
    database_name,
    name,
    aws_glue_catalog_table_id = null,
    catalog_id = null,
    description = null,
    owner = null,
    parameters = null,
    partition_keys = null,
    retention = null,
    storage_descriptor = null,
    table_type = null,
    view_expanded_text = null,
    view_original_text = null
  }: {
    database_name: string,
    name: string,
    aws_glue_catalog_table_id?: string|null,
    catalog_id?: string|null,
    description?: string|null,
    owner?: string|null,
    parameters?: {[s: string]: string}|null,
    partition_keys?: Aws_glue_catalog_table_partition_keys_274[]|null,
    retention?: number|null,
    storage_descriptor?: Aws_glue_catalog_table_storage_descriptor_275[]|null,
    table_type?: string|null,
    view_expanded_text?: string|null,
    view_original_text?: string|null
  }) {
    this.database_name = database_name;
    this.name = name;
    this.aws_glue_catalog_table_id = aws_glue_catalog_table_id;
    this.catalog_id = catalog_id;
    this.description = description;
    this.owner = owner;
    this.parameters = parameters;
    this.partition_keys = partition_keys;
    this.retention = retention;
    this.storage_descriptor = storage_descriptor;
    this.table_type = table_type;
    this.view_expanded_text = view_expanded_text;
    this.view_original_text = view_original_text;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['database_name'] = this.database_name;
    ih['name'] = this.name;
    if (this.aws_glue_catalog_table_id !== null) {
      ih['aws_glue_catalog_table_id'] = this.aws_glue_catalog_table_id;
    }
    if (this.catalog_id !== null) {
      ih['catalog_id'] = this.catalog_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.owner !== null) {
      ih['owner'] = this.owner;
    }
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    if (this.partition_keys !== null) {
      ih['partition_keys'] = this.partition_keys;
    }
    if (this.retention !== null) {
      ih['retention'] = this.retention;
    }
    if (this.storage_descriptor !== null) {
      ih['storage_descriptor'] = this.storage_descriptor;
    }
    if (this.table_type !== null) {
      ih['table_type'] = this.table_type;
    }
    if (this.view_expanded_text !== null) {
      ih['view_expanded_text'] = this.view_expanded_text;
    }
    if (this.view_original_text !== null) {
      ih['view_original_text'] = this.view_original_text;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_table';
  }
}

export class Aws_glue_catalog_tableHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_tableHandler';
  }
}

export class Aws_glue_catalog_table_partition_keys_274 implements PcoreValue {
  readonly name: string;
  readonly comment: string|null;
  readonly type: string|null;

  constructor({
    name,
    comment = null,
    type = null
  }: {
    name: string,
    comment?: string|null,
    type?: string|null
  }) {
    this.name = name;
    this.comment = comment;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.comment !== null) {
      ih['comment'] = this.comment;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_table_partition_keys_274';
  }
}

export class Aws_glue_catalog_table_storage_descriptor_275 implements PcoreValue {
  readonly bucket_columns: string[]|null;
  readonly columns: Aws_glue_catalog_table_storage_descriptor_275_columns_276[]|null;
  readonly compressed: boolean|null;
  readonly input_format: string|null;
  readonly location: string|null;
  readonly number_of_buckets: number|null;
  readonly output_format: string|null;
  readonly parameters: {[s: string]: string}|null;
  readonly ser_de_info: Aws_glue_catalog_table_storage_descriptor_275_ser_de_info_277[]|null;
  readonly skewed_info: Aws_glue_catalog_table_storage_descriptor_275_skewed_info_278[]|null;
  readonly sort_columns: Aws_glue_catalog_table_storage_descriptor_275_sort_columns_279[]|null;
  readonly stored_as_sub_directories: boolean|null;

  constructor({
    bucket_columns = null,
    columns = null,
    compressed = null,
    input_format = null,
    location = null,
    number_of_buckets = null,
    output_format = null,
    parameters = null,
    ser_de_info = null,
    skewed_info = null,
    sort_columns = null,
    stored_as_sub_directories = null
  }: {
    bucket_columns?: string[]|null,
    columns?: Aws_glue_catalog_table_storage_descriptor_275_columns_276[]|null,
    compressed?: boolean|null,
    input_format?: string|null,
    location?: string|null,
    number_of_buckets?: number|null,
    output_format?: string|null,
    parameters?: {[s: string]: string}|null,
    ser_de_info?: Aws_glue_catalog_table_storage_descriptor_275_ser_de_info_277[]|null,
    skewed_info?: Aws_glue_catalog_table_storage_descriptor_275_skewed_info_278[]|null,
    sort_columns?: Aws_glue_catalog_table_storage_descriptor_275_sort_columns_279[]|null,
    stored_as_sub_directories?: boolean|null
  }) {
    this.bucket_columns = bucket_columns;
    this.columns = columns;
    this.compressed = compressed;
    this.input_format = input_format;
    this.location = location;
    this.number_of_buckets = number_of_buckets;
    this.output_format = output_format;
    this.parameters = parameters;
    this.ser_de_info = ser_de_info;
    this.skewed_info = skewed_info;
    this.sort_columns = sort_columns;
    this.stored_as_sub_directories = stored_as_sub_directories;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.bucket_columns !== null) {
      ih['bucket_columns'] = this.bucket_columns;
    }
    if (this.columns !== null) {
      ih['columns'] = this.columns;
    }
    if (this.compressed !== null) {
      ih['compressed'] = this.compressed;
    }
    if (this.input_format !== null) {
      ih['input_format'] = this.input_format;
    }
    if (this.location !== null) {
      ih['location'] = this.location;
    }
    if (this.number_of_buckets !== null) {
      ih['number_of_buckets'] = this.number_of_buckets;
    }
    if (this.output_format !== null) {
      ih['output_format'] = this.output_format;
    }
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    if (this.ser_de_info !== null) {
      ih['ser_de_info'] = this.ser_de_info;
    }
    if (this.skewed_info !== null) {
      ih['skewed_info'] = this.skewed_info;
    }
    if (this.sort_columns !== null) {
      ih['sort_columns'] = this.sort_columns;
    }
    if (this.stored_as_sub_directories !== null) {
      ih['stored_as_sub_directories'] = this.stored_as_sub_directories;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_table_storage_descriptor_275';
  }
}

export class Aws_glue_catalog_table_storage_descriptor_275_columns_276 implements PcoreValue {
  readonly name: string;
  readonly comment: string|null;
  readonly type: string|null;

  constructor({
    name,
    comment = null,
    type = null
  }: {
    name: string,
    comment?: string|null,
    type?: string|null
  }) {
    this.name = name;
    this.comment = comment;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.comment !== null) {
      ih['comment'] = this.comment;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_table_storage_descriptor_275_columns_276';
  }
}

export class Aws_glue_catalog_table_storage_descriptor_275_ser_de_info_277 implements PcoreValue {
  readonly name: string|null;
  readonly parameters: {[s: string]: string}|null;
  readonly serialization_library: string|null;

  constructor({
    name = null,
    parameters = null,
    serialization_library = null
  }: {
    name?: string|null,
    parameters?: {[s: string]: string}|null,
    serialization_library?: string|null
  }) {
    this.name = name;
    this.parameters = parameters;
    this.serialization_library = serialization_library;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    if (this.serialization_library !== null) {
      ih['serialization_library'] = this.serialization_library;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_table_storage_descriptor_275_ser_de_info_277';
  }
}

export class Aws_glue_catalog_table_storage_descriptor_275_skewed_info_278 implements PcoreValue {
  readonly skewed_column_names: string[]|null;
  readonly skewed_column_value_location_maps: {[s: string]: string}|null;
  readonly skewed_column_values: string[]|null;

  constructor({
    skewed_column_names = null,
    skewed_column_value_location_maps = null,
    skewed_column_values = null
  }: {
    skewed_column_names?: string[]|null,
    skewed_column_value_location_maps?: {[s: string]: string}|null,
    skewed_column_values?: string[]|null
  }) {
    this.skewed_column_names = skewed_column_names;
    this.skewed_column_value_location_maps = skewed_column_value_location_maps;
    this.skewed_column_values = skewed_column_values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.skewed_column_names !== null) {
      ih['skewed_column_names'] = this.skewed_column_names;
    }
    if (this.skewed_column_value_location_maps !== null) {
      ih['skewed_column_value_location_maps'] = this.skewed_column_value_location_maps;
    }
    if (this.skewed_column_values !== null) {
      ih['skewed_column_values'] = this.skewed_column_values;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_table_storage_descriptor_275_skewed_info_278';
  }
}

export class Aws_glue_catalog_table_storage_descriptor_275_sort_columns_279 implements PcoreValue {
  readonly column: string;
  readonly sort_order: number;

  constructor({
    column,
    sort_order
  }: {
    column: string,
    sort_order: number
  }) {
    this.column = column;
    this.sort_order = sort_order;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['column'] = this.column;
    ih['sort_order'] = this.sort_order;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_catalog_table_storage_descriptor_275_sort_columns_279';
  }
}

export class Aws_glue_classifier implements PcoreValue {
  readonly name: string;
  readonly aws_glue_classifier_id: string|null;
  readonly grok_classifier: Aws_glue_classifier_grok_classifier_280[]|null;
  readonly json_classifier: Aws_glue_classifier_json_classifier_281[]|null;
  readonly xml_classifier: Aws_glue_classifier_xml_classifier_282[]|null;

  constructor({
    name,
    aws_glue_classifier_id = null,
    grok_classifier = null,
    json_classifier = null,
    xml_classifier = null
  }: {
    name: string,
    aws_glue_classifier_id?: string|null,
    grok_classifier?: Aws_glue_classifier_grok_classifier_280[]|null,
    json_classifier?: Aws_glue_classifier_json_classifier_281[]|null,
    xml_classifier?: Aws_glue_classifier_xml_classifier_282[]|null
  }) {
    this.name = name;
    this.aws_glue_classifier_id = aws_glue_classifier_id;
    this.grok_classifier = grok_classifier;
    this.json_classifier = json_classifier;
    this.xml_classifier = xml_classifier;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_glue_classifier_id !== null) {
      ih['aws_glue_classifier_id'] = this.aws_glue_classifier_id;
    }
    if (this.grok_classifier !== null) {
      ih['grok_classifier'] = this.grok_classifier;
    }
    if (this.json_classifier !== null) {
      ih['json_classifier'] = this.json_classifier;
    }
    if (this.xml_classifier !== null) {
      ih['xml_classifier'] = this.xml_classifier;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_classifier';
  }
}

export class Aws_glue_classifierHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_classifierHandler';
  }
}

export class Aws_glue_classifier_grok_classifier_280 implements PcoreValue {
  readonly classification: string;
  readonly grok_pattern: string;
  readonly custom_patterns: string|null;

  constructor({
    classification,
    grok_pattern,
    custom_patterns = null
  }: {
    classification: string,
    grok_pattern: string,
    custom_patterns?: string|null
  }) {
    this.classification = classification;
    this.grok_pattern = grok_pattern;
    this.custom_patterns = custom_patterns;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['classification'] = this.classification;
    ih['grok_pattern'] = this.grok_pattern;
    if (this.custom_patterns !== null) {
      ih['custom_patterns'] = this.custom_patterns;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_classifier_grok_classifier_280';
  }
}

export class Aws_glue_classifier_json_classifier_281 implements PcoreValue {
  readonly json_path: string;

  constructor({
    json_path
  }: {
    json_path: string
  }) {
    this.json_path = json_path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['json_path'] = this.json_path;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_classifier_json_classifier_281';
  }
}

export class Aws_glue_classifier_xml_classifier_282 implements PcoreValue {
  readonly classification: string;
  readonly row_tag: string;

  constructor({
    classification,
    row_tag
  }: {
    classification: string,
    row_tag: string
  }) {
    this.classification = classification;
    this.row_tag = row_tag;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['classification'] = this.classification;
    ih['row_tag'] = this.row_tag;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_classifier_xml_classifier_282';
  }
}

export class Aws_glue_connection implements PcoreValue {
  readonly connection_properties: {[s: string]: string};
  readonly name: string;
  readonly aws_glue_connection_id: string|null;
  readonly catalog_id: string|null;
  readonly connection_type: string|null;
  readonly description: string|null;
  readonly match_criteria: string[]|null;
  readonly physical_connection_requirements: Aws_glue_connection_physical_connection_requirements_283[]|null;

  constructor({
    connection_properties,
    name,
    aws_glue_connection_id = null,
    catalog_id = null,
    connection_type = null,
    description = null,
    match_criteria = null,
    physical_connection_requirements = null
  }: {
    connection_properties: {[s: string]: string},
    name: string,
    aws_glue_connection_id?: string|null,
    catalog_id?: string|null,
    connection_type?: string|null,
    description?: string|null,
    match_criteria?: string[]|null,
    physical_connection_requirements?: Aws_glue_connection_physical_connection_requirements_283[]|null
  }) {
    this.connection_properties = connection_properties;
    this.name = name;
    this.aws_glue_connection_id = aws_glue_connection_id;
    this.catalog_id = catalog_id;
    this.connection_type = connection_type;
    this.description = description;
    this.match_criteria = match_criteria;
    this.physical_connection_requirements = physical_connection_requirements;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['connection_properties'] = this.connection_properties;
    ih['name'] = this.name;
    if (this.aws_glue_connection_id !== null) {
      ih['aws_glue_connection_id'] = this.aws_glue_connection_id;
    }
    if (this.catalog_id !== null) {
      ih['catalog_id'] = this.catalog_id;
    }
    if (this.connection_type !== null) {
      ih['connection_type'] = this.connection_type;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.match_criteria !== null) {
      ih['match_criteria'] = this.match_criteria;
    }
    if (this.physical_connection_requirements !== null) {
      ih['physical_connection_requirements'] = this.physical_connection_requirements;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_connection';
  }
}

export class Aws_glue_connectionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_connectionHandler';
  }
}

export class Aws_glue_connection_physical_connection_requirements_283 implements PcoreValue {
  readonly availability_zone: string|null;
  readonly security_group_id_list: string[]|null;
  readonly subnet_id: string|null;

  constructor({
    availability_zone = null,
    security_group_id_list = null,
    subnet_id = null
  }: {
    availability_zone?: string|null,
    security_group_id_list?: string[]|null,
    subnet_id?: string|null
  }) {
    this.availability_zone = availability_zone;
    this.security_group_id_list = security_group_id_list;
    this.subnet_id = subnet_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.security_group_id_list !== null) {
      ih['security_group_id_list'] = this.security_group_id_list;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_connection_physical_connection_requirements_283';
  }
}

export class Aws_glue_crawler implements PcoreValue {
  readonly database_name: string;
  readonly name: string;
  readonly role: string;
  readonly aws_glue_crawler_id: string|null;
  readonly classifiers: string[]|null;
  readonly configuration: string|null;
  readonly description: string|null;
  readonly dynamodb_target: Aws_glue_crawler_dynamodb_target_284[]|null;
  readonly jdbc_target: Aws_glue_crawler_jdbc_target_285[]|null;
  readonly s3_target: Aws_glue_crawler_s3_target_286[]|null;
  readonly schedule: string|null;
  readonly schema_change_policy: Aws_glue_crawler_schema_change_policy_287[]|null;
  readonly security_configuration: string|null;
  readonly table_prefix: string|null;

  constructor({
    database_name,
    name,
    role,
    aws_glue_crawler_id = null,
    classifiers = null,
    configuration = null,
    description = null,
    dynamodb_target = null,
    jdbc_target = null,
    s3_target = null,
    schedule = null,
    schema_change_policy = null,
    security_configuration = null,
    table_prefix = null
  }: {
    database_name: string,
    name: string,
    role: string,
    aws_glue_crawler_id?: string|null,
    classifiers?: string[]|null,
    configuration?: string|null,
    description?: string|null,
    dynamodb_target?: Aws_glue_crawler_dynamodb_target_284[]|null,
    jdbc_target?: Aws_glue_crawler_jdbc_target_285[]|null,
    s3_target?: Aws_glue_crawler_s3_target_286[]|null,
    schedule?: string|null,
    schema_change_policy?: Aws_glue_crawler_schema_change_policy_287[]|null,
    security_configuration?: string|null,
    table_prefix?: string|null
  }) {
    this.database_name = database_name;
    this.name = name;
    this.role = role;
    this.aws_glue_crawler_id = aws_glue_crawler_id;
    this.classifiers = classifiers;
    this.configuration = configuration;
    this.description = description;
    this.dynamodb_target = dynamodb_target;
    this.jdbc_target = jdbc_target;
    this.s3_target = s3_target;
    this.schedule = schedule;
    this.schema_change_policy = schema_change_policy;
    this.security_configuration = security_configuration;
    this.table_prefix = table_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['database_name'] = this.database_name;
    ih['name'] = this.name;
    ih['role'] = this.role;
    if (this.aws_glue_crawler_id !== null) {
      ih['aws_glue_crawler_id'] = this.aws_glue_crawler_id;
    }
    if (this.classifiers !== null) {
      ih['classifiers'] = this.classifiers;
    }
    if (this.configuration !== null) {
      ih['configuration'] = this.configuration;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.dynamodb_target !== null) {
      ih['dynamodb_target'] = this.dynamodb_target;
    }
    if (this.jdbc_target !== null) {
      ih['jdbc_target'] = this.jdbc_target;
    }
    if (this.s3_target !== null) {
      ih['s3_target'] = this.s3_target;
    }
    if (this.schedule !== null) {
      ih['schedule'] = this.schedule;
    }
    if (this.schema_change_policy !== null) {
      ih['schema_change_policy'] = this.schema_change_policy;
    }
    if (this.security_configuration !== null) {
      ih['security_configuration'] = this.security_configuration;
    }
    if (this.table_prefix !== null) {
      ih['table_prefix'] = this.table_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_crawler';
  }
}

export class Aws_glue_crawlerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_crawlerHandler';
  }
}

export class Aws_glue_crawler_dynamodb_target_284 implements PcoreValue {
  readonly path: string;

  constructor({
    path
  }: {
    path: string
  }) {
    this.path = path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['path'] = this.path;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_crawler_dynamodb_target_284';
  }
}

export class Aws_glue_crawler_jdbc_target_285 implements PcoreValue {
  readonly connection_name: string;
  readonly path: string;
  readonly exclusions: string[]|null;

  constructor({
    connection_name,
    path,
    exclusions = null
  }: {
    connection_name: string,
    path: string,
    exclusions?: string[]|null
  }) {
    this.connection_name = connection_name;
    this.path = path;
    this.exclusions = exclusions;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['connection_name'] = this.connection_name;
    ih['path'] = this.path;
    if (this.exclusions !== null) {
      ih['exclusions'] = this.exclusions;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_crawler_jdbc_target_285';
  }
}

export class Aws_glue_crawler_s3_target_286 implements PcoreValue {
  readonly path: string;
  readonly exclusions: string[]|null;

  constructor({
    path,
    exclusions = null
  }: {
    path: string,
    exclusions?: string[]|null
  }) {
    this.path = path;
    this.exclusions = exclusions;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['path'] = this.path;
    if (this.exclusions !== null) {
      ih['exclusions'] = this.exclusions;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_crawler_s3_target_286';
  }
}

export class Aws_glue_crawler_schema_change_policy_287 implements PcoreValue {
  readonly delete_behavior: string|null;
  readonly update_behavior: string|null;

  constructor({
    delete_behavior = null,
    update_behavior = null
  }: {
    delete_behavior?: string|null,
    update_behavior?: string|null
  }) {
    this.delete_behavior = delete_behavior;
    this.update_behavior = update_behavior;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_behavior !== null) {
      ih['delete_behavior'] = this.delete_behavior;
    }
    if (this.update_behavior !== null) {
      ih['update_behavior'] = this.update_behavior;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_crawler_schema_change_policy_287';
  }
}

export class Aws_glue_job implements PcoreValue {
  readonly command: Aws_glue_job_command_288[];
  readonly name: string;
  readonly role_arn: string;
  readonly aws_glue_job_id: string|null;
  readonly allocated_capacity: number|null;
  readonly connections: string[]|null;
  readonly default_arguments: {[s: string]: string}|null;
  readonly description: string|null;
  readonly execution_property: Aws_glue_job_execution_property_289[]|null;
  readonly max_retries: number|null;
  readonly security_configuration: string|null;
  readonly timeout: number|null;

  constructor({
    command,
    name,
    role_arn,
    aws_glue_job_id = null,
    allocated_capacity = null,
    connections = null,
    default_arguments = null,
    description = null,
    execution_property = null,
    max_retries = null,
    security_configuration = null,
    timeout = null
  }: {
    command: Aws_glue_job_command_288[],
    name: string,
    role_arn: string,
    aws_glue_job_id?: string|null,
    allocated_capacity?: number|null,
    connections?: string[]|null,
    default_arguments?: {[s: string]: string}|null,
    description?: string|null,
    execution_property?: Aws_glue_job_execution_property_289[]|null,
    max_retries?: number|null,
    security_configuration?: string|null,
    timeout?: number|null
  }) {
    this.command = command;
    this.name = name;
    this.role_arn = role_arn;
    this.aws_glue_job_id = aws_glue_job_id;
    this.allocated_capacity = allocated_capacity;
    this.connections = connections;
    this.default_arguments = default_arguments;
    this.description = description;
    this.execution_property = execution_property;
    this.max_retries = max_retries;
    this.security_configuration = security_configuration;
    this.timeout = timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['command'] = this.command;
    ih['name'] = this.name;
    ih['role_arn'] = this.role_arn;
    if (this.aws_glue_job_id !== null) {
      ih['aws_glue_job_id'] = this.aws_glue_job_id;
    }
    if (this.allocated_capacity !== null) {
      ih['allocated_capacity'] = this.allocated_capacity;
    }
    if (this.connections !== null) {
      ih['connections'] = this.connections;
    }
    if (this.default_arguments !== null) {
      ih['default_arguments'] = this.default_arguments;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.execution_property !== null) {
      ih['execution_property'] = this.execution_property;
    }
    if (this.max_retries !== null) {
      ih['max_retries'] = this.max_retries;
    }
    if (this.security_configuration !== null) {
      ih['security_configuration'] = this.security_configuration;
    }
    if (this.timeout !== null) {
      ih['timeout'] = this.timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_job';
  }
}

export class Aws_glue_jobHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_jobHandler';
  }
}

export class Aws_glue_job_command_288 implements PcoreValue {
  readonly script_location: string;
  readonly name: string|null;

  constructor({
    script_location,
    name = null
  }: {
    script_location: string,
    name?: string|null
  }) {
    this.script_location = script_location;
    this.name = name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['script_location'] = this.script_location;
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_job_command_288';
  }
}

export class Aws_glue_job_execution_property_289 implements PcoreValue {
  readonly max_concurrent_runs: number|null;

  constructor({
    max_concurrent_runs = null
  }: {
    max_concurrent_runs?: number|null
  }) {
    this.max_concurrent_runs = max_concurrent_runs;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.max_concurrent_runs !== null) {
      ih['max_concurrent_runs'] = this.max_concurrent_runs;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_job_execution_property_289';
  }
}

export class Aws_glue_security_configuration implements PcoreValue {
  readonly encryption_configuration: Aws_glue_security_configuration_encryption_configuration_290[];
  readonly name: string;
  readonly aws_glue_security_configuration_id: string|null;

  constructor({
    encryption_configuration,
    name,
    aws_glue_security_configuration_id = null
  }: {
    encryption_configuration: Aws_glue_security_configuration_encryption_configuration_290[],
    name: string,
    aws_glue_security_configuration_id?: string|null
  }) {
    this.encryption_configuration = encryption_configuration;
    this.name = name;
    this.aws_glue_security_configuration_id = aws_glue_security_configuration_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['encryption_configuration'] = this.encryption_configuration;
    ih['name'] = this.name;
    if (this.aws_glue_security_configuration_id !== null) {
      ih['aws_glue_security_configuration_id'] = this.aws_glue_security_configuration_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_security_configuration';
  }
}

export class Aws_glue_security_configurationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_security_configurationHandler';
  }
}

export class Aws_glue_security_configuration_encryption_configuration_290 implements PcoreValue {
  readonly cloudwatch_encryption: Aws_glue_security_configuration_encryption_configuration_290_cloudwatch_encryption_291[];
  readonly job_bookmarks_encryption: Aws_glue_security_configuration_encryption_configuration_290_job_bookmarks_encryption_292[];
  readonly s3_encryption: Aws_glue_security_configuration_encryption_configuration_290_s3_encryption_293[];

  constructor({
    cloudwatch_encryption,
    job_bookmarks_encryption,
    s3_encryption
  }: {
    cloudwatch_encryption: Aws_glue_security_configuration_encryption_configuration_290_cloudwatch_encryption_291[],
    job_bookmarks_encryption: Aws_glue_security_configuration_encryption_configuration_290_job_bookmarks_encryption_292[],
    s3_encryption: Aws_glue_security_configuration_encryption_configuration_290_s3_encryption_293[]
  }) {
    this.cloudwatch_encryption = cloudwatch_encryption;
    this.job_bookmarks_encryption = job_bookmarks_encryption;
    this.s3_encryption = s3_encryption;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cloudwatch_encryption'] = this.cloudwatch_encryption;
    ih['job_bookmarks_encryption'] = this.job_bookmarks_encryption;
    ih['s3_encryption'] = this.s3_encryption;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_security_configuration_encryption_configuration_290';
  }
}

export class Aws_glue_security_configuration_encryption_configuration_290_cloudwatch_encryption_291 implements PcoreValue {
  readonly cloudwatch_encryption_mode: string|null;
  readonly kms_key_arn: string|null;

  constructor({
    cloudwatch_encryption_mode = null,
    kms_key_arn = null
  }: {
    cloudwatch_encryption_mode?: string|null,
    kms_key_arn?: string|null
  }) {
    this.cloudwatch_encryption_mode = cloudwatch_encryption_mode;
    this.kms_key_arn = kms_key_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cloudwatch_encryption_mode !== null) {
      ih['cloudwatch_encryption_mode'] = this.cloudwatch_encryption_mode;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_security_configuration_encryption_configuration_290_cloudwatch_encryption_291';
  }
}

export class Aws_glue_security_configuration_encryption_configuration_290_job_bookmarks_encryption_292 implements PcoreValue {
  readonly job_bookmarks_encryption_mode: string|null;
  readonly kms_key_arn: string|null;

  constructor({
    job_bookmarks_encryption_mode = null,
    kms_key_arn = null
  }: {
    job_bookmarks_encryption_mode?: string|null,
    kms_key_arn?: string|null
  }) {
    this.job_bookmarks_encryption_mode = job_bookmarks_encryption_mode;
    this.kms_key_arn = kms_key_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.job_bookmarks_encryption_mode !== null) {
      ih['job_bookmarks_encryption_mode'] = this.job_bookmarks_encryption_mode;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_security_configuration_encryption_configuration_290_job_bookmarks_encryption_292';
  }
}

export class Aws_glue_security_configuration_encryption_configuration_290_s3_encryption_293 implements PcoreValue {
  readonly kms_key_arn: string|null;
  readonly s3_encryption_mode: string|null;

  constructor({
    kms_key_arn = null,
    s3_encryption_mode = null
  }: {
    kms_key_arn?: string|null,
    s3_encryption_mode?: string|null
  }) {
    this.kms_key_arn = kms_key_arn;
    this.s3_encryption_mode = s3_encryption_mode;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.s3_encryption_mode !== null) {
      ih['s3_encryption_mode'] = this.s3_encryption_mode;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_security_configuration_encryption_configuration_290_s3_encryption_293';
  }
}

export class Aws_glue_trigger implements PcoreValue {
  readonly actions: Aws_glue_trigger_actions_294[];
  readonly name: string;
  readonly type: string;
  readonly aws_glue_trigger_id: string|null;
  readonly description: string|null;
  readonly enabled: boolean|null;
  readonly predicate: Aws_glue_trigger_predicate_295[]|null;
  readonly schedule: string|null;

  constructor({
    actions,
    name,
    type,
    aws_glue_trigger_id = null,
    description = null,
    enabled = null,
    predicate = null,
    schedule = null
  }: {
    actions: Aws_glue_trigger_actions_294[],
    name: string,
    type: string,
    aws_glue_trigger_id?: string|null,
    description?: string|null,
    enabled?: boolean|null,
    predicate?: Aws_glue_trigger_predicate_295[]|null,
    schedule?: string|null
  }) {
    this.actions = actions;
    this.name = name;
    this.type = type;
    this.aws_glue_trigger_id = aws_glue_trigger_id;
    this.description = description;
    this.enabled = enabled;
    this.predicate = predicate;
    this.schedule = schedule;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['actions'] = this.actions;
    ih['name'] = this.name;
    ih['type'] = this.type;
    if (this.aws_glue_trigger_id !== null) {
      ih['aws_glue_trigger_id'] = this.aws_glue_trigger_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.predicate !== null) {
      ih['predicate'] = this.predicate;
    }
    if (this.schedule !== null) {
      ih['schedule'] = this.schedule;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_trigger';
  }
}

export class Aws_glue_triggerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_triggerHandler';
  }
}

export class Aws_glue_trigger_actions_294 implements PcoreValue {
  readonly job_name: string;
  readonly arguments_: {[s: string]: string}|null;
  readonly timeout: number|null;

  constructor({
    job_name,
    arguments_ = null,
    timeout = null
  }: {
    job_name: string,
    arguments_?: {[s: string]: string}|null,
    timeout?: number|null
  }) {
    this.job_name = job_name;
    this.arguments_ = arguments_;
    this.timeout = timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['job_name'] = this.job_name;
    if (this.arguments_ !== null) {
      ih['arguments'] = this.arguments_;
    }
    if (this.timeout !== null) {
      ih['timeout'] = this.timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_trigger_actions_294';
  }
}

export class Aws_glue_trigger_predicate_295 implements PcoreValue {
  readonly conditions: Aws_glue_trigger_predicate_295_conditions_296[];
  readonly logical: string|null;

  constructor({
    conditions,
    logical = null
  }: {
    conditions: Aws_glue_trigger_predicate_295_conditions_296[],
    logical?: string|null
  }) {
    this.conditions = conditions;
    this.logical = logical;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['conditions'] = this.conditions;
    if (this.logical !== null) {
      ih['logical'] = this.logical;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_trigger_predicate_295';
  }
}

export class Aws_glue_trigger_predicate_295_conditions_296 implements PcoreValue {
  readonly job_name: string;
  readonly state: string;
  readonly logical_operator: string|null;

  constructor({
    job_name,
    state,
    logical_operator = null
  }: {
    job_name: string,
    state: string,
    logical_operator?: string|null
  }) {
    this.job_name = job_name;
    this.state = state;
    this.logical_operator = logical_operator;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['job_name'] = this.job_name;
    ih['state'] = this.state;
    if (this.logical_operator !== null) {
      ih['logical_operator'] = this.logical_operator;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_glue_trigger_predicate_295_conditions_296';
  }
}

export class Aws_guardduty_detector implements PcoreValue {
  readonly aws_guardduty_detector_id: string|null;
  readonly account_id: string|null;
  readonly enable: boolean|null;
  readonly finding_publishing_frequency: string|null;

  constructor({
    aws_guardduty_detector_id = null,
    account_id = null,
    enable = null,
    finding_publishing_frequency = null
  }: {
    aws_guardduty_detector_id?: string|null,
    account_id?: string|null,
    enable?: boolean|null,
    finding_publishing_frequency?: string|null
  }) {
    this.aws_guardduty_detector_id = aws_guardduty_detector_id;
    this.account_id = account_id;
    this.enable = enable;
    this.finding_publishing_frequency = finding_publishing_frequency;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_guardduty_detector_id !== null) {
      ih['aws_guardduty_detector_id'] = this.aws_guardduty_detector_id;
    }
    if (this.account_id !== null) {
      ih['account_id'] = this.account_id;
    }
    if (this.enable !== null) {
      ih['enable'] = this.enable;
    }
    if (this.finding_publishing_frequency !== null) {
      ih['finding_publishing_frequency'] = this.finding_publishing_frequency;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_guardduty_detector';
  }
}

export class Aws_guardduty_detectorHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_guardduty_detectorHandler';
  }
}

export class Aws_guardduty_ipset implements PcoreValue {
  readonly activate: boolean;
  readonly detector_id: string;
  readonly format: string;
  readonly location: string;
  readonly name: string;
  readonly aws_guardduty_ipset_id: string|null;

  constructor({
    activate,
    detector_id,
    format,
    location,
    name,
    aws_guardduty_ipset_id = null
  }: {
    activate: boolean,
    detector_id: string,
    format: string,
    location: string,
    name: string,
    aws_guardduty_ipset_id?: string|null
  }) {
    this.activate = activate;
    this.detector_id = detector_id;
    this.format = format;
    this.location = location;
    this.name = name;
    this.aws_guardduty_ipset_id = aws_guardduty_ipset_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['activate'] = this.activate;
    ih['detector_id'] = this.detector_id;
    ih['format'] = this.format;
    ih['location'] = this.location;
    ih['name'] = this.name;
    if (this.aws_guardduty_ipset_id !== null) {
      ih['aws_guardduty_ipset_id'] = this.aws_guardduty_ipset_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_guardduty_ipset';
  }
}

export class Aws_guardduty_ipsetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_guardduty_ipsetHandler';
  }
}

export class Aws_guardduty_member implements PcoreValue {
  readonly account_id: string;
  readonly detector_id: string;
  readonly email: string;
  readonly aws_guardduty_member_id: string|null;
  readonly disable_email_notification: boolean|null;
  readonly invitation_message: string|null;
  readonly invite: boolean|null;
  readonly relationship_status: string|null;

  constructor({
    account_id,
    detector_id,
    email,
    aws_guardduty_member_id = null,
    disable_email_notification = null,
    invitation_message = null,
    invite = null,
    relationship_status = null
  }: {
    account_id: string,
    detector_id: string,
    email: string,
    aws_guardduty_member_id?: string|null,
    disable_email_notification?: boolean|null,
    invitation_message?: string|null,
    invite?: boolean|null,
    relationship_status?: string|null
  }) {
    this.account_id = account_id;
    this.detector_id = detector_id;
    this.email = email;
    this.aws_guardduty_member_id = aws_guardduty_member_id;
    this.disable_email_notification = disable_email_notification;
    this.invitation_message = invitation_message;
    this.invite = invite;
    this.relationship_status = relationship_status;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['account_id'] = this.account_id;
    ih['detector_id'] = this.detector_id;
    ih['email'] = this.email;
    if (this.aws_guardduty_member_id !== null) {
      ih['aws_guardduty_member_id'] = this.aws_guardduty_member_id;
    }
    if (this.disable_email_notification !== null) {
      ih['disable_email_notification'] = this.disable_email_notification;
    }
    if (this.invitation_message !== null) {
      ih['invitation_message'] = this.invitation_message;
    }
    if (this.invite !== null) {
      ih['invite'] = this.invite;
    }
    if (this.relationship_status !== null) {
      ih['relationship_status'] = this.relationship_status;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_guardduty_member';
  }
}

export class Aws_guardduty_memberHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_guardduty_memberHandler';
  }
}

export class Aws_guardduty_threatintelset implements PcoreValue {
  readonly activate: boolean;
  readonly detector_id: string;
  readonly format: string;
  readonly location: string;
  readonly name: string;
  readonly aws_guardduty_threatintelset_id: string|null;

  constructor({
    activate,
    detector_id,
    format,
    location,
    name,
    aws_guardduty_threatintelset_id = null
  }: {
    activate: boolean,
    detector_id: string,
    format: string,
    location: string,
    name: string,
    aws_guardduty_threatintelset_id?: string|null
  }) {
    this.activate = activate;
    this.detector_id = detector_id;
    this.format = format;
    this.location = location;
    this.name = name;
    this.aws_guardduty_threatintelset_id = aws_guardduty_threatintelset_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['activate'] = this.activate;
    ih['detector_id'] = this.detector_id;
    ih['format'] = this.format;
    ih['location'] = this.location;
    ih['name'] = this.name;
    if (this.aws_guardduty_threatintelset_id !== null) {
      ih['aws_guardduty_threatintelset_id'] = this.aws_guardduty_threatintelset_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_guardduty_threatintelset';
  }
}

export class Aws_guardduty_threatintelsetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_guardduty_threatintelsetHandler';
  }
}

export class Aws_iam_access_key implements PcoreValue {
  readonly user: string;
  readonly aws_iam_access_key_id: string|null;
  readonly encrypted_secret: string|null;
  readonly key_fingerprint: string|null;
  readonly pgp_key: string|null;
  readonly secret: string|null;
  readonly ses_smtp_password: string|null;
  readonly status: string|null;

  constructor({
    user,
    aws_iam_access_key_id = null,
    encrypted_secret = null,
    key_fingerprint = null,
    pgp_key = null,
    secret = null,
    ses_smtp_password = null,
    status = null
  }: {
    user: string,
    aws_iam_access_key_id?: string|null,
    encrypted_secret?: string|null,
    key_fingerprint?: string|null,
    pgp_key?: string|null,
    secret?: string|null,
    ses_smtp_password?: string|null,
    status?: string|null
  }) {
    this.user = user;
    this.aws_iam_access_key_id = aws_iam_access_key_id;
    this.encrypted_secret = encrypted_secret;
    this.key_fingerprint = key_fingerprint;
    this.pgp_key = pgp_key;
    this.secret = secret;
    this.ses_smtp_password = ses_smtp_password;
    this.status = status;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['user'] = this.user;
    if (this.aws_iam_access_key_id !== null) {
      ih['aws_iam_access_key_id'] = this.aws_iam_access_key_id;
    }
    if (this.encrypted_secret !== null) {
      ih['encrypted_secret'] = this.encrypted_secret;
    }
    if (this.key_fingerprint !== null) {
      ih['key_fingerprint'] = this.key_fingerprint;
    }
    if (this.pgp_key !== null) {
      ih['pgp_key'] = this.pgp_key;
    }
    if (this.secret !== null) {
      ih['secret'] = this.secret;
    }
    if (this.ses_smtp_password !== null) {
      ih['ses_smtp_password'] = this.ses_smtp_password;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_access_key';
  }
}

export class Aws_iam_access_keyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_access_keyHandler';
  }
}

export class Aws_iam_account_alias implements PcoreValue {
  readonly account_alias: string;
  readonly aws_iam_account_alias_id: string|null;

  constructor({
    account_alias,
    aws_iam_account_alias_id = null
  }: {
    account_alias: string,
    aws_iam_account_alias_id?: string|null
  }) {
    this.account_alias = account_alias;
    this.aws_iam_account_alias_id = aws_iam_account_alias_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['account_alias'] = this.account_alias;
    if (this.aws_iam_account_alias_id !== null) {
      ih['aws_iam_account_alias_id'] = this.aws_iam_account_alias_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_account_alias';
  }
}

export class Aws_iam_account_aliasHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_account_aliasHandler';
  }
}

export class Aws_iam_account_password_policy implements PcoreValue {
  readonly aws_iam_account_password_policy_id: string|null;
  readonly allow_users_to_change_password: boolean|null;
  readonly expire_passwords: boolean|null;
  readonly hard_expiry: boolean|null;
  readonly max_password_age: number|null;
  readonly minimum_password_length: number|null;
  readonly password_reuse_prevention: number|null;
  readonly require_lowercase_characters: boolean|null;
  readonly require_numbers: boolean|null;
  readonly require_symbols: boolean|null;
  readonly require_uppercase_characters: boolean|null;

  constructor({
    aws_iam_account_password_policy_id = null,
    allow_users_to_change_password = null,
    expire_passwords = null,
    hard_expiry = null,
    max_password_age = null,
    minimum_password_length = null,
    password_reuse_prevention = null,
    require_lowercase_characters = null,
    require_numbers = null,
    require_symbols = null,
    require_uppercase_characters = null
  }: {
    aws_iam_account_password_policy_id?: string|null,
    allow_users_to_change_password?: boolean|null,
    expire_passwords?: boolean|null,
    hard_expiry?: boolean|null,
    max_password_age?: number|null,
    minimum_password_length?: number|null,
    password_reuse_prevention?: number|null,
    require_lowercase_characters?: boolean|null,
    require_numbers?: boolean|null,
    require_symbols?: boolean|null,
    require_uppercase_characters?: boolean|null
  }) {
    this.aws_iam_account_password_policy_id = aws_iam_account_password_policy_id;
    this.allow_users_to_change_password = allow_users_to_change_password;
    this.expire_passwords = expire_passwords;
    this.hard_expiry = hard_expiry;
    this.max_password_age = max_password_age;
    this.minimum_password_length = minimum_password_length;
    this.password_reuse_prevention = password_reuse_prevention;
    this.require_lowercase_characters = require_lowercase_characters;
    this.require_numbers = require_numbers;
    this.require_symbols = require_symbols;
    this.require_uppercase_characters = require_uppercase_characters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_iam_account_password_policy_id !== null) {
      ih['aws_iam_account_password_policy_id'] = this.aws_iam_account_password_policy_id;
    }
    if (this.allow_users_to_change_password !== null) {
      ih['allow_users_to_change_password'] = this.allow_users_to_change_password;
    }
    if (this.expire_passwords !== null) {
      ih['expire_passwords'] = this.expire_passwords;
    }
    if (this.hard_expiry !== null) {
      ih['hard_expiry'] = this.hard_expiry;
    }
    if (this.max_password_age !== null) {
      ih['max_password_age'] = this.max_password_age;
    }
    if (this.minimum_password_length !== null) {
      ih['minimum_password_length'] = this.minimum_password_length;
    }
    if (this.password_reuse_prevention !== null) {
      ih['password_reuse_prevention'] = this.password_reuse_prevention;
    }
    if (this.require_lowercase_characters !== null) {
      ih['require_lowercase_characters'] = this.require_lowercase_characters;
    }
    if (this.require_numbers !== null) {
      ih['require_numbers'] = this.require_numbers;
    }
    if (this.require_symbols !== null) {
      ih['require_symbols'] = this.require_symbols;
    }
    if (this.require_uppercase_characters !== null) {
      ih['require_uppercase_characters'] = this.require_uppercase_characters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_account_password_policy';
  }
}

export class Aws_iam_account_password_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_account_password_policyHandler';
  }
}

export class Aws_iam_group implements PcoreValue {
  readonly name: string;
  readonly aws_iam_group_id: string|null;
  readonly arn: string|null;
  readonly path: string|null;
  readonly unique_id: string|null;

  constructor({
    name,
    aws_iam_group_id = null,
    arn = null,
    path = null,
    unique_id = null
  }: {
    name: string,
    aws_iam_group_id?: string|null,
    arn?: string|null,
    path?: string|null,
    unique_id?: string|null
  }) {
    this.name = name;
    this.aws_iam_group_id = aws_iam_group_id;
    this.arn = arn;
    this.path = path;
    this.unique_id = unique_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_iam_group_id !== null) {
      ih['aws_iam_group_id'] = this.aws_iam_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.unique_id !== null) {
      ih['unique_id'] = this.unique_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_group';
  }
}

export class Aws_iam_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_groupHandler';
  }
}

export class Aws_iam_group_membership implements PcoreValue {
  readonly group: string;
  readonly name: string;
  readonly users: string[];
  readonly aws_iam_group_membership_id: string|null;

  constructor({
    group,
    name,
    users,
    aws_iam_group_membership_id = null
  }: {
    group: string,
    name: string,
    users: string[],
    aws_iam_group_membership_id?: string|null
  }) {
    this.group = group;
    this.name = name;
    this.users = users;
    this.aws_iam_group_membership_id = aws_iam_group_membership_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['group'] = this.group;
    ih['name'] = this.name;
    ih['users'] = this.users;
    if (this.aws_iam_group_membership_id !== null) {
      ih['aws_iam_group_membership_id'] = this.aws_iam_group_membership_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_group_membership';
  }
}

export class Aws_iam_group_membershipHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_group_membershipHandler';
  }
}

export class Aws_iam_group_policy implements PcoreValue {
  readonly group: string;
  readonly policy: string;
  readonly aws_iam_group_policy_id: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;

  constructor({
    group,
    policy,
    aws_iam_group_policy_id = null,
    name = null,
    name_prefix = null
  }: {
    group: string,
    policy: string,
    aws_iam_group_policy_id?: string|null,
    name?: string|null,
    name_prefix?: string|null
  }) {
    this.group = group;
    this.policy = policy;
    this.aws_iam_group_policy_id = aws_iam_group_policy_id;
    this.name = name;
    this.name_prefix = name_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['group'] = this.group;
    ih['policy'] = this.policy;
    if (this.aws_iam_group_policy_id !== null) {
      ih['aws_iam_group_policy_id'] = this.aws_iam_group_policy_id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_group_policy';
  }
}

export class Aws_iam_group_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_group_policyHandler';
  }
}

export class Aws_iam_group_policy_attachment implements PcoreValue {
  readonly group: string;
  readonly policy_arn: string;
  readonly aws_iam_group_policy_attachment_id: string|null;

  constructor({
    group,
    policy_arn,
    aws_iam_group_policy_attachment_id = null
  }: {
    group: string,
    policy_arn: string,
    aws_iam_group_policy_attachment_id?: string|null
  }) {
    this.group = group;
    this.policy_arn = policy_arn;
    this.aws_iam_group_policy_attachment_id = aws_iam_group_policy_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['group'] = this.group;
    ih['policy_arn'] = this.policy_arn;
    if (this.aws_iam_group_policy_attachment_id !== null) {
      ih['aws_iam_group_policy_attachment_id'] = this.aws_iam_group_policy_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_group_policy_attachment';
  }
}

export class Aws_iam_group_policy_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_group_policy_attachmentHandler';
  }
}

export class Aws_iam_instance_profile implements PcoreValue {
  readonly aws_iam_instance_profile_id: string|null;
  readonly arn: string|null;
  readonly create_date: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly path: string|null;
  readonly role: string|null;
  readonly roles: string[]|null;
  readonly unique_id: string|null;

  constructor({
    aws_iam_instance_profile_id = null,
    arn = null,
    create_date = null,
    name = null,
    name_prefix = null,
    path = null,
    role = null,
    roles = null,
    unique_id = null
  }: {
    aws_iam_instance_profile_id?: string|null,
    arn?: string|null,
    create_date?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    path?: string|null,
    role?: string|null,
    roles?: string[]|null,
    unique_id?: string|null
  }) {
    this.aws_iam_instance_profile_id = aws_iam_instance_profile_id;
    this.arn = arn;
    this.create_date = create_date;
    this.name = name;
    this.name_prefix = name_prefix;
    this.path = path;
    this.role = role;
    this.roles = roles;
    this.unique_id = unique_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_iam_instance_profile_id !== null) {
      ih['aws_iam_instance_profile_id'] = this.aws_iam_instance_profile_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.create_date !== null) {
      ih['create_date'] = this.create_date;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.role !== null) {
      ih['role'] = this.role;
    }
    if (this.roles !== null) {
      ih['roles'] = this.roles;
    }
    if (this.unique_id !== null) {
      ih['unique_id'] = this.unique_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_instance_profile';
  }
}

export class Aws_iam_instance_profileHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_instance_profileHandler';
  }
}

export class Aws_iam_openid_connect_provider implements PcoreValue {
  readonly client_id_list: string[];
  readonly thumbprint_list: string[];
  readonly url: string;
  readonly aws_iam_openid_connect_provider_id: string|null;
  readonly arn: string|null;

  constructor({
    client_id_list,
    thumbprint_list,
    url,
    aws_iam_openid_connect_provider_id = null,
    arn = null
  }: {
    client_id_list: string[],
    thumbprint_list: string[],
    url: string,
    aws_iam_openid_connect_provider_id?: string|null,
    arn?: string|null
  }) {
    this.client_id_list = client_id_list;
    this.thumbprint_list = thumbprint_list;
    this.url = url;
    this.aws_iam_openid_connect_provider_id = aws_iam_openid_connect_provider_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['client_id_list'] = this.client_id_list;
    ih['thumbprint_list'] = this.thumbprint_list;
    ih['url'] = this.url;
    if (this.aws_iam_openid_connect_provider_id !== null) {
      ih['aws_iam_openid_connect_provider_id'] = this.aws_iam_openid_connect_provider_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_openid_connect_provider';
  }
}

export class Aws_iam_openid_connect_providerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_openid_connect_providerHandler';
  }
}

export class Aws_iam_policy implements PcoreValue {
  readonly policy: string;
  readonly aws_iam_policy_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly path: string|null;

  constructor({
    policy,
    aws_iam_policy_id = null,
    arn = null,
    description = null,
    name = null,
    name_prefix = null,
    path = null
  }: {
    policy: string,
    aws_iam_policy_id?: string|null,
    arn?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    path?: string|null
  }) {
    this.policy = policy;
    this.aws_iam_policy_id = aws_iam_policy_id;
    this.arn = arn;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
    this.path = path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy'] = this.policy;
    if (this.aws_iam_policy_id !== null) {
      ih['aws_iam_policy_id'] = this.aws_iam_policy_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_policy';
  }
}

export class Aws_iam_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_policyHandler';
  }
}

export class Aws_iam_policy_attachment implements PcoreValue {
  readonly name: string;
  readonly policy_arn: string;
  readonly aws_iam_policy_attachment_id: string|null;
  readonly groups: string[]|null;
  readonly roles: string[]|null;
  readonly users: string[]|null;

  constructor({
    name,
    policy_arn,
    aws_iam_policy_attachment_id = null,
    groups = null,
    roles = null,
    users = null
  }: {
    name: string,
    policy_arn: string,
    aws_iam_policy_attachment_id?: string|null,
    groups?: string[]|null,
    roles?: string[]|null,
    users?: string[]|null
  }) {
    this.name = name;
    this.policy_arn = policy_arn;
    this.aws_iam_policy_attachment_id = aws_iam_policy_attachment_id;
    this.groups = groups;
    this.roles = roles;
    this.users = users;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['policy_arn'] = this.policy_arn;
    if (this.aws_iam_policy_attachment_id !== null) {
      ih['aws_iam_policy_attachment_id'] = this.aws_iam_policy_attachment_id;
    }
    if (this.groups !== null) {
      ih['groups'] = this.groups;
    }
    if (this.roles !== null) {
      ih['roles'] = this.roles;
    }
    if (this.users !== null) {
      ih['users'] = this.users;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_policy_attachment';
  }
}

export class Aws_iam_policy_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_policy_attachmentHandler';
  }
}

export class Aws_iam_role implements PcoreValue {
  readonly assume_role_policy: string;
  readonly aws_iam_role_id: string|null;
  readonly arn: string|null;
  readonly create_date: string|null;
  readonly description: string|null;
  readonly force_detach_policies: boolean|null;
  readonly max_session_duration: number|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly path: string|null;
  readonly permissions_boundary: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly unique_id: string|null;

  constructor({
    assume_role_policy,
    aws_iam_role_id = null,
    arn = null,
    create_date = null,
    description = null,
    force_detach_policies = null,
    max_session_duration = null,
    name = null,
    name_prefix = null,
    path = null,
    permissions_boundary = null,
    tags = null,
    unique_id = null
  }: {
    assume_role_policy: string,
    aws_iam_role_id?: string|null,
    arn?: string|null,
    create_date?: string|null,
    description?: string|null,
    force_detach_policies?: boolean|null,
    max_session_duration?: number|null,
    name?: string|null,
    name_prefix?: string|null,
    path?: string|null,
    permissions_boundary?: string|null,
    tags?: {[s: string]: string}|null,
    unique_id?: string|null
  }) {
    this.assume_role_policy = assume_role_policy;
    this.aws_iam_role_id = aws_iam_role_id;
    this.arn = arn;
    this.create_date = create_date;
    this.description = description;
    this.force_detach_policies = force_detach_policies;
    this.max_session_duration = max_session_duration;
    this.name = name;
    this.name_prefix = name_prefix;
    this.path = path;
    this.permissions_boundary = permissions_boundary;
    this.tags = tags;
    this.unique_id = unique_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['assume_role_policy'] = this.assume_role_policy;
    if (this.aws_iam_role_id !== null) {
      ih['aws_iam_role_id'] = this.aws_iam_role_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.create_date !== null) {
      ih['create_date'] = this.create_date;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.force_detach_policies !== null) {
      ih['force_detach_policies'] = this.force_detach_policies;
    }
    if (this.max_session_duration !== null) {
      ih['max_session_duration'] = this.max_session_duration;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.permissions_boundary !== null) {
      ih['permissions_boundary'] = this.permissions_boundary;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.unique_id !== null) {
      ih['unique_id'] = this.unique_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_role';
  }
}

export class Aws_iam_roleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_roleHandler';
  }
}

export class Aws_iam_role_policy implements PcoreValue {
  readonly policy: string;
  readonly role: string;
  readonly aws_iam_role_policy_id: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;

  constructor({
    policy,
    role,
    aws_iam_role_policy_id = null,
    name = null,
    name_prefix = null
  }: {
    policy: string,
    role: string,
    aws_iam_role_policy_id?: string|null,
    name?: string|null,
    name_prefix?: string|null
  }) {
    this.policy = policy;
    this.role = role;
    this.aws_iam_role_policy_id = aws_iam_role_policy_id;
    this.name = name;
    this.name_prefix = name_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy'] = this.policy;
    ih['role'] = this.role;
    if (this.aws_iam_role_policy_id !== null) {
      ih['aws_iam_role_policy_id'] = this.aws_iam_role_policy_id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_role_policy';
  }
}

export class Aws_iam_role_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_role_policyHandler';
  }
}

export class Aws_iam_role_policy_attachment implements PcoreValue {
  readonly policy_arn: string;
  readonly role: string;
  readonly aws_iam_role_policy_attachment_id: string|null;

  constructor({
    policy_arn,
    role,
    aws_iam_role_policy_attachment_id = null
  }: {
    policy_arn: string,
    role: string,
    aws_iam_role_policy_attachment_id?: string|null
  }) {
    this.policy_arn = policy_arn;
    this.role = role;
    this.aws_iam_role_policy_attachment_id = aws_iam_role_policy_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy_arn'] = this.policy_arn;
    ih['role'] = this.role;
    if (this.aws_iam_role_policy_attachment_id !== null) {
      ih['aws_iam_role_policy_attachment_id'] = this.aws_iam_role_policy_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_role_policy_attachment';
  }
}

export class Aws_iam_role_policy_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_role_policy_attachmentHandler';
  }
}

export class Aws_iam_saml_provider implements PcoreValue {
  readonly name: string;
  readonly saml_metadata_document: string;
  readonly aws_iam_saml_provider_id: string|null;
  readonly arn: string|null;
  readonly valid_until: string|null;

  constructor({
    name,
    saml_metadata_document,
    aws_iam_saml_provider_id = null,
    arn = null,
    valid_until = null
  }: {
    name: string,
    saml_metadata_document: string,
    aws_iam_saml_provider_id?: string|null,
    arn?: string|null,
    valid_until?: string|null
  }) {
    this.name = name;
    this.saml_metadata_document = saml_metadata_document;
    this.aws_iam_saml_provider_id = aws_iam_saml_provider_id;
    this.arn = arn;
    this.valid_until = valid_until;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['saml_metadata_document'] = this.saml_metadata_document;
    if (this.aws_iam_saml_provider_id !== null) {
      ih['aws_iam_saml_provider_id'] = this.aws_iam_saml_provider_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.valid_until !== null) {
      ih['valid_until'] = this.valid_until;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_saml_provider';
  }
}

export class Aws_iam_saml_providerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_saml_providerHandler';
  }
}

export class Aws_iam_server_certificate implements PcoreValue {
  readonly certificate_body: string;
  readonly private_key: string;
  readonly aws_iam_server_certificate_id: string|null;
  readonly arn: string|null;
  readonly certificate_chain: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly path: string|null;

  constructor({
    certificate_body,
    private_key,
    aws_iam_server_certificate_id = null,
    arn = null,
    certificate_chain = null,
    name = null,
    name_prefix = null,
    path = null
  }: {
    certificate_body: string,
    private_key: string,
    aws_iam_server_certificate_id?: string|null,
    arn?: string|null,
    certificate_chain?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    path?: string|null
  }) {
    this.certificate_body = certificate_body;
    this.private_key = private_key;
    this.aws_iam_server_certificate_id = aws_iam_server_certificate_id;
    this.arn = arn;
    this.certificate_chain = certificate_chain;
    this.name = name;
    this.name_prefix = name_prefix;
    this.path = path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['certificate_body'] = this.certificate_body;
    ih['private_key'] = this.private_key;
    if (this.aws_iam_server_certificate_id !== null) {
      ih['aws_iam_server_certificate_id'] = this.aws_iam_server_certificate_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.certificate_chain !== null) {
      ih['certificate_chain'] = this.certificate_chain;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_server_certificate';
  }
}

export class Aws_iam_server_certificateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_server_certificateHandler';
  }
}

export class Aws_iam_service_linked_role implements PcoreValue {
  readonly aws_service_name: string;
  readonly aws_iam_service_linked_role_id: string|null;
  readonly arn: string|null;
  readonly create_date: string|null;
  readonly custom_suffix: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly path: string|null;
  readonly unique_id: string|null;

  constructor({
    aws_service_name,
    aws_iam_service_linked_role_id = null,
    arn = null,
    create_date = null,
    custom_suffix = null,
    description = null,
    name = null,
    path = null,
    unique_id = null
  }: {
    aws_service_name: string,
    aws_iam_service_linked_role_id?: string|null,
    arn?: string|null,
    create_date?: string|null,
    custom_suffix?: string|null,
    description?: string|null,
    name?: string|null,
    path?: string|null,
    unique_id?: string|null
  }) {
    this.aws_service_name = aws_service_name;
    this.aws_iam_service_linked_role_id = aws_iam_service_linked_role_id;
    this.arn = arn;
    this.create_date = create_date;
    this.custom_suffix = custom_suffix;
    this.description = description;
    this.name = name;
    this.path = path;
    this.unique_id = unique_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['aws_service_name'] = this.aws_service_name;
    if (this.aws_iam_service_linked_role_id !== null) {
      ih['aws_iam_service_linked_role_id'] = this.aws_iam_service_linked_role_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.create_date !== null) {
      ih['create_date'] = this.create_date;
    }
    if (this.custom_suffix !== null) {
      ih['custom_suffix'] = this.custom_suffix;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.unique_id !== null) {
      ih['unique_id'] = this.unique_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_service_linked_role';
  }
}

export class Aws_iam_service_linked_roleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_service_linked_roleHandler';
  }
}

export class Aws_iam_user implements PcoreValue {
  readonly name: string;
  readonly aws_iam_user_id: string|null;
  readonly arn: string|null;
  readonly force_destroy: boolean|null;
  readonly path: string|null;
  readonly permissions_boundary: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly unique_id: string|null;

  constructor({
    name,
    aws_iam_user_id = null,
    arn = null,
    force_destroy = null,
    path = null,
    permissions_boundary = null,
    tags = null,
    unique_id = null
  }: {
    name: string,
    aws_iam_user_id?: string|null,
    arn?: string|null,
    force_destroy?: boolean|null,
    path?: string|null,
    permissions_boundary?: string|null,
    tags?: {[s: string]: string}|null,
    unique_id?: string|null
  }) {
    this.name = name;
    this.aws_iam_user_id = aws_iam_user_id;
    this.arn = arn;
    this.force_destroy = force_destroy;
    this.path = path;
    this.permissions_boundary = permissions_boundary;
    this.tags = tags;
    this.unique_id = unique_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_iam_user_id !== null) {
      ih['aws_iam_user_id'] = this.aws_iam_user_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.force_destroy !== null) {
      ih['force_destroy'] = this.force_destroy;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.permissions_boundary !== null) {
      ih['permissions_boundary'] = this.permissions_boundary;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.unique_id !== null) {
      ih['unique_id'] = this.unique_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user';
  }
}

export class Aws_iam_userHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_userHandler';
  }
}

export class Aws_iam_user_group_membership implements PcoreValue {
  readonly groups: string[];
  readonly user: string;
  readonly aws_iam_user_group_membership_id: string|null;

  constructor({
    groups,
    user,
    aws_iam_user_group_membership_id = null
  }: {
    groups: string[],
    user: string,
    aws_iam_user_group_membership_id?: string|null
  }) {
    this.groups = groups;
    this.user = user;
    this.aws_iam_user_group_membership_id = aws_iam_user_group_membership_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['groups'] = this.groups;
    ih['user'] = this.user;
    if (this.aws_iam_user_group_membership_id !== null) {
      ih['aws_iam_user_group_membership_id'] = this.aws_iam_user_group_membership_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_group_membership';
  }
}

export class Aws_iam_user_group_membershipHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_group_membershipHandler';
  }
}

export class Aws_iam_user_login_profile implements PcoreValue {
  readonly pgp_key: string;
  readonly user: string;
  readonly aws_iam_user_login_profile_id: string|null;
  readonly encrypted_password: string|null;
  readonly key_fingerprint: string|null;
  readonly password_length: number|null;
  readonly password_reset_required: boolean|null;

  constructor({
    pgp_key,
    user,
    aws_iam_user_login_profile_id = null,
    encrypted_password = null,
    key_fingerprint = null,
    password_length = null,
    password_reset_required = null
  }: {
    pgp_key: string,
    user: string,
    aws_iam_user_login_profile_id?: string|null,
    encrypted_password?: string|null,
    key_fingerprint?: string|null,
    password_length?: number|null,
    password_reset_required?: boolean|null
  }) {
    this.pgp_key = pgp_key;
    this.user = user;
    this.aws_iam_user_login_profile_id = aws_iam_user_login_profile_id;
    this.encrypted_password = encrypted_password;
    this.key_fingerprint = key_fingerprint;
    this.password_length = password_length;
    this.password_reset_required = password_reset_required;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['pgp_key'] = this.pgp_key;
    ih['user'] = this.user;
    if (this.aws_iam_user_login_profile_id !== null) {
      ih['aws_iam_user_login_profile_id'] = this.aws_iam_user_login_profile_id;
    }
    if (this.encrypted_password !== null) {
      ih['encrypted_password'] = this.encrypted_password;
    }
    if (this.key_fingerprint !== null) {
      ih['key_fingerprint'] = this.key_fingerprint;
    }
    if (this.password_length !== null) {
      ih['password_length'] = this.password_length;
    }
    if (this.password_reset_required !== null) {
      ih['password_reset_required'] = this.password_reset_required;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_login_profile';
  }
}

export class Aws_iam_user_login_profileHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_login_profileHandler';
  }
}

export class Aws_iam_user_policy implements PcoreValue {
  readonly policy: string;
  readonly user: string;
  readonly aws_iam_user_policy_id: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;

  constructor({
    policy,
    user,
    aws_iam_user_policy_id = null,
    name = null,
    name_prefix = null
  }: {
    policy: string,
    user: string,
    aws_iam_user_policy_id?: string|null,
    name?: string|null,
    name_prefix?: string|null
  }) {
    this.policy = policy;
    this.user = user;
    this.aws_iam_user_policy_id = aws_iam_user_policy_id;
    this.name = name;
    this.name_prefix = name_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy'] = this.policy;
    ih['user'] = this.user;
    if (this.aws_iam_user_policy_id !== null) {
      ih['aws_iam_user_policy_id'] = this.aws_iam_user_policy_id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_policy';
  }
}

export class Aws_iam_user_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_policyHandler';
  }
}

export class Aws_iam_user_policy_attachment implements PcoreValue {
  readonly policy_arn: string;
  readonly user: string;
  readonly aws_iam_user_policy_attachment_id: string|null;

  constructor({
    policy_arn,
    user,
    aws_iam_user_policy_attachment_id = null
  }: {
    policy_arn: string,
    user: string,
    aws_iam_user_policy_attachment_id?: string|null
  }) {
    this.policy_arn = policy_arn;
    this.user = user;
    this.aws_iam_user_policy_attachment_id = aws_iam_user_policy_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy_arn'] = this.policy_arn;
    ih['user'] = this.user;
    if (this.aws_iam_user_policy_attachment_id !== null) {
      ih['aws_iam_user_policy_attachment_id'] = this.aws_iam_user_policy_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_policy_attachment';
  }
}

export class Aws_iam_user_policy_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_policy_attachmentHandler';
  }
}

export class Aws_iam_user_ssh_key implements PcoreValue {
  readonly encoding: string;
  readonly public_key: string;
  readonly username: string;
  readonly aws_iam_user_ssh_key_id: string|null;
  readonly fingerprint: string|null;
  readonly ssh_public_key_id: string|null;
  readonly status: string|null;

  constructor({
    encoding,
    public_key,
    username,
    aws_iam_user_ssh_key_id = null,
    fingerprint = null,
    ssh_public_key_id = null,
    status = null
  }: {
    encoding: string,
    public_key: string,
    username: string,
    aws_iam_user_ssh_key_id?: string|null,
    fingerprint?: string|null,
    ssh_public_key_id?: string|null,
    status?: string|null
  }) {
    this.encoding = encoding;
    this.public_key = public_key;
    this.username = username;
    this.aws_iam_user_ssh_key_id = aws_iam_user_ssh_key_id;
    this.fingerprint = fingerprint;
    this.ssh_public_key_id = ssh_public_key_id;
    this.status = status;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['encoding'] = this.encoding;
    ih['public_key'] = this.public_key;
    ih['username'] = this.username;
    if (this.aws_iam_user_ssh_key_id !== null) {
      ih['aws_iam_user_ssh_key_id'] = this.aws_iam_user_ssh_key_id;
    }
    if (this.fingerprint !== null) {
      ih['fingerprint'] = this.fingerprint;
    }
    if (this.ssh_public_key_id !== null) {
      ih['ssh_public_key_id'] = this.ssh_public_key_id;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_ssh_key';
  }
}

export class Aws_iam_user_ssh_keyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iam_user_ssh_keyHandler';
  }
}

export class Aws_inspector_assessment_target implements PcoreValue {
  readonly name: string;
  readonly aws_inspector_assessment_target_id: string|null;
  readonly arn: string|null;
  readonly resource_group_arn: string|null;

  constructor({
    name,
    aws_inspector_assessment_target_id = null,
    arn = null,
    resource_group_arn = null
  }: {
    name: string,
    aws_inspector_assessment_target_id?: string|null,
    arn?: string|null,
    resource_group_arn?: string|null
  }) {
    this.name = name;
    this.aws_inspector_assessment_target_id = aws_inspector_assessment_target_id;
    this.arn = arn;
    this.resource_group_arn = resource_group_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_inspector_assessment_target_id !== null) {
      ih['aws_inspector_assessment_target_id'] = this.aws_inspector_assessment_target_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.resource_group_arn !== null) {
      ih['resource_group_arn'] = this.resource_group_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_inspector_assessment_target';
  }
}

export class Aws_inspector_assessment_targetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_inspector_assessment_targetHandler';
  }
}

export class Aws_inspector_assessment_template implements PcoreValue {
  readonly duration: number;
  readonly name: string;
  readonly rules_package_arns: string[];
  readonly target_arn: string;
  readonly aws_inspector_assessment_template_id: string|null;
  readonly arn: string|null;

  constructor({
    duration,
    name,
    rules_package_arns,
    target_arn,
    aws_inspector_assessment_template_id = null,
    arn = null
  }: {
    duration: number,
    name: string,
    rules_package_arns: string[],
    target_arn: string,
    aws_inspector_assessment_template_id?: string|null,
    arn?: string|null
  }) {
    this.duration = duration;
    this.name = name;
    this.rules_package_arns = rules_package_arns;
    this.target_arn = target_arn;
    this.aws_inspector_assessment_template_id = aws_inspector_assessment_template_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['duration'] = this.duration;
    ih['name'] = this.name;
    ih['rules_package_arns'] = this.rules_package_arns;
    ih['target_arn'] = this.target_arn;
    if (this.aws_inspector_assessment_template_id !== null) {
      ih['aws_inspector_assessment_template_id'] = this.aws_inspector_assessment_template_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_inspector_assessment_template';
  }
}

export class Aws_inspector_assessment_templateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_inspector_assessment_templateHandler';
  }
}

export class Aws_inspector_resource_group implements PcoreValue {
  readonly tags: {[s: string]: string};
  readonly aws_inspector_resource_group_id: string|null;
  readonly arn: string|null;

  constructor({
    tags,
    aws_inspector_resource_group_id = null,
    arn = null
  }: {
    tags: {[s: string]: string},
    aws_inspector_resource_group_id?: string|null,
    arn?: string|null
  }) {
    this.tags = tags;
    this.aws_inspector_resource_group_id = aws_inspector_resource_group_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['tags'] = this.tags;
    if (this.aws_inspector_resource_group_id !== null) {
      ih['aws_inspector_resource_group_id'] = this.aws_inspector_resource_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_inspector_resource_group';
  }
}

export class Aws_inspector_resource_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_inspector_resource_groupHandler';
  }
}

export class Aws_instance implements PcoreValue {
  readonly ami: string;
  readonly instance_type: string;
  readonly aws_instance_id: string|null;
  readonly arn: string|null;
  readonly associate_public_ip_address: boolean|null;
  readonly availability_zone: string|null;
  readonly block_device: {[s: string]: string}|null;
  readonly cpu_core_count: number|null;
  readonly cpu_threads_per_core: number|null;
  readonly credit_specification: Aws_instance_credit_specification_297[]|null;
  readonly disable_api_termination: boolean|null;
  readonly ebs_block_device: Aws_instance_ebs_block_device_298[]|null;
  readonly ebs_optimized: boolean|null;
  readonly ephemeral_block_device: Aws_instance_ephemeral_block_device_299[]|null;
  readonly get_password_data: boolean|null;
  readonly host_id: string|null;
  readonly iam_instance_profile: string|null;
  readonly instance_initiated_shutdown_behavior: string|null;
  readonly instance_state: string|null;
  readonly ipv6_address_count: number|null;
  readonly ipv6_addresses: string[]|null;
  readonly key_name: string|null;
  readonly monitoring: boolean|null;
  readonly network_interface: Aws_instance_network_interface_300[]|null;
  readonly network_interface_id: string|null;
  readonly password_data: string|null;
  readonly placement_group: string|null;
  readonly primary_network_interface_id: string|null;
  readonly private_dns: string|null;
  readonly private_ip: string|null;
  readonly public_dns: string|null;
  readonly public_ip: string|null;
  readonly root_block_device: Aws_instance_root_block_device_301[]|null;
  readonly security_groups: string[]|null;
  readonly source_dest_check: boolean|null;
  readonly subnet_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly tenancy: string|null;
  readonly user_data: string|null;
  readonly user_data_base64: string|null;
  readonly volume_tags: {[s: string]: string}|null;
  readonly vpc_security_group_ids: string[]|null;

  constructor({
    ami,
    instance_type,
    aws_instance_id = null,
    arn = null,
    associate_public_ip_address = null,
    availability_zone = null,
    block_device = null,
    cpu_core_count = null,
    cpu_threads_per_core = null,
    credit_specification = null,
    disable_api_termination = null,
    ebs_block_device = null,
    ebs_optimized = null,
    ephemeral_block_device = null,
    get_password_data = null,
    host_id = null,
    iam_instance_profile = null,
    instance_initiated_shutdown_behavior = null,
    instance_state = null,
    ipv6_address_count = null,
    ipv6_addresses = null,
    key_name = null,
    monitoring = null,
    network_interface = null,
    network_interface_id = null,
    password_data = null,
    placement_group = null,
    primary_network_interface_id = null,
    private_dns = null,
    private_ip = null,
    public_dns = null,
    public_ip = null,
    root_block_device = null,
    security_groups = null,
    source_dest_check = null,
    subnet_id = null,
    tags = null,
    tenancy = null,
    user_data = null,
    user_data_base64 = null,
    volume_tags = null,
    vpc_security_group_ids = null
  }: {
    ami: string,
    instance_type: string,
    aws_instance_id?: string|null,
    arn?: string|null,
    associate_public_ip_address?: boolean|null,
    availability_zone?: string|null,
    block_device?: {[s: string]: string}|null,
    cpu_core_count?: number|null,
    cpu_threads_per_core?: number|null,
    credit_specification?: Aws_instance_credit_specification_297[]|null,
    disable_api_termination?: boolean|null,
    ebs_block_device?: Aws_instance_ebs_block_device_298[]|null,
    ebs_optimized?: boolean|null,
    ephemeral_block_device?: Aws_instance_ephemeral_block_device_299[]|null,
    get_password_data?: boolean|null,
    host_id?: string|null,
    iam_instance_profile?: string|null,
    instance_initiated_shutdown_behavior?: string|null,
    instance_state?: string|null,
    ipv6_address_count?: number|null,
    ipv6_addresses?: string[]|null,
    key_name?: string|null,
    monitoring?: boolean|null,
    network_interface?: Aws_instance_network_interface_300[]|null,
    network_interface_id?: string|null,
    password_data?: string|null,
    placement_group?: string|null,
    primary_network_interface_id?: string|null,
    private_dns?: string|null,
    private_ip?: string|null,
    public_dns?: string|null,
    public_ip?: string|null,
    root_block_device?: Aws_instance_root_block_device_301[]|null,
    security_groups?: string[]|null,
    source_dest_check?: boolean|null,
    subnet_id?: string|null,
    tags?: {[s: string]: string}|null,
    tenancy?: string|null,
    user_data?: string|null,
    user_data_base64?: string|null,
    volume_tags?: {[s: string]: string}|null,
    vpc_security_group_ids?: string[]|null
  }) {
    this.ami = ami;
    this.instance_type = instance_type;
    this.aws_instance_id = aws_instance_id;
    this.arn = arn;
    this.associate_public_ip_address = associate_public_ip_address;
    this.availability_zone = availability_zone;
    this.block_device = block_device;
    this.cpu_core_count = cpu_core_count;
    this.cpu_threads_per_core = cpu_threads_per_core;
    this.credit_specification = credit_specification;
    this.disable_api_termination = disable_api_termination;
    this.ebs_block_device = ebs_block_device;
    this.ebs_optimized = ebs_optimized;
    this.ephemeral_block_device = ephemeral_block_device;
    this.get_password_data = get_password_data;
    this.host_id = host_id;
    this.iam_instance_profile = iam_instance_profile;
    this.instance_initiated_shutdown_behavior = instance_initiated_shutdown_behavior;
    this.instance_state = instance_state;
    this.ipv6_address_count = ipv6_address_count;
    this.ipv6_addresses = ipv6_addresses;
    this.key_name = key_name;
    this.monitoring = monitoring;
    this.network_interface = network_interface;
    this.network_interface_id = network_interface_id;
    this.password_data = password_data;
    this.placement_group = placement_group;
    this.primary_network_interface_id = primary_network_interface_id;
    this.private_dns = private_dns;
    this.private_ip = private_ip;
    this.public_dns = public_dns;
    this.public_ip = public_ip;
    this.root_block_device = root_block_device;
    this.security_groups = security_groups;
    this.source_dest_check = source_dest_check;
    this.subnet_id = subnet_id;
    this.tags = tags;
    this.tenancy = tenancy;
    this.user_data = user_data;
    this.user_data_base64 = user_data_base64;
    this.volume_tags = volume_tags;
    this.vpc_security_group_ids = vpc_security_group_ids;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ami'] = this.ami;
    ih['instance_type'] = this.instance_type;
    if (this.aws_instance_id !== null) {
      ih['aws_instance_id'] = this.aws_instance_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.associate_public_ip_address !== null) {
      ih['associate_public_ip_address'] = this.associate_public_ip_address;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.block_device !== null) {
      ih['block_device'] = this.block_device;
    }
    if (this.cpu_core_count !== null) {
      ih['cpu_core_count'] = this.cpu_core_count;
    }
    if (this.cpu_threads_per_core !== null) {
      ih['cpu_threads_per_core'] = this.cpu_threads_per_core;
    }
    if (this.credit_specification !== null) {
      ih['credit_specification'] = this.credit_specification;
    }
    if (this.disable_api_termination !== null) {
      ih['disable_api_termination'] = this.disable_api_termination;
    }
    if (this.ebs_block_device !== null) {
      ih['ebs_block_device'] = this.ebs_block_device;
    }
    if (this.ebs_optimized !== null) {
      ih['ebs_optimized'] = this.ebs_optimized;
    }
    if (this.ephemeral_block_device !== null) {
      ih['ephemeral_block_device'] = this.ephemeral_block_device;
    }
    if (this.get_password_data !== null) {
      ih['get_password_data'] = this.get_password_data;
    }
    if (this.host_id !== null) {
      ih['host_id'] = this.host_id;
    }
    if (this.iam_instance_profile !== null) {
      ih['iam_instance_profile'] = this.iam_instance_profile;
    }
    if (this.instance_initiated_shutdown_behavior !== null) {
      ih['instance_initiated_shutdown_behavior'] = this.instance_initiated_shutdown_behavior;
    }
    if (this.instance_state !== null) {
      ih['instance_state'] = this.instance_state;
    }
    if (this.ipv6_address_count !== null) {
      ih['ipv6_address_count'] = this.ipv6_address_count;
    }
    if (this.ipv6_addresses !== null) {
      ih['ipv6_addresses'] = this.ipv6_addresses;
    }
    if (this.key_name !== null) {
      ih['key_name'] = this.key_name;
    }
    if (this.monitoring !== null) {
      ih['monitoring'] = this.monitoring;
    }
    if (this.network_interface !== null) {
      ih['network_interface'] = this.network_interface;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.password_data !== null) {
      ih['password_data'] = this.password_data;
    }
    if (this.placement_group !== null) {
      ih['placement_group'] = this.placement_group;
    }
    if (this.primary_network_interface_id !== null) {
      ih['primary_network_interface_id'] = this.primary_network_interface_id;
    }
    if (this.private_dns !== null) {
      ih['private_dns'] = this.private_dns;
    }
    if (this.private_ip !== null) {
      ih['private_ip'] = this.private_ip;
    }
    if (this.public_dns !== null) {
      ih['public_dns'] = this.public_dns;
    }
    if (this.public_ip !== null) {
      ih['public_ip'] = this.public_ip;
    }
    if (this.root_block_device !== null) {
      ih['root_block_device'] = this.root_block_device;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.source_dest_check !== null) {
      ih['source_dest_check'] = this.source_dest_check;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.tenancy !== null) {
      ih['tenancy'] = this.tenancy;
    }
    if (this.user_data !== null) {
      ih['user_data'] = this.user_data;
    }
    if (this.user_data_base64 !== null) {
      ih['user_data_base64'] = this.user_data_base64;
    }
    if (this.volume_tags !== null) {
      ih['volume_tags'] = this.volume_tags;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_instance';
  }
}

export class Aws_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_instanceHandler';
  }
}

export class Aws_instance_credit_specification_297 implements PcoreValue {
  readonly cpu_credits: string|null;

  constructor({
    cpu_credits = null
  }: {
    cpu_credits?: string|null
  }) {
    this.cpu_credits = cpu_credits;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cpu_credits !== null) {
      ih['cpu_credits'] = this.cpu_credits;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_instance_credit_specification_297';
  }
}

export class Aws_instance_ebs_block_device_298 implements PcoreValue {
  readonly device_name: string;
  readonly delete_on_termination: boolean|null;
  readonly encrypted: boolean|null;
  readonly iops: number|null;
  readonly snapshot_id: string|null;
  readonly volume_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    device_name,
    delete_on_termination = null,
    encrypted = null,
    iops = null,
    snapshot_id = null,
    volume_id = null,
    volume_size = null,
    volume_type = null
  }: {
    device_name: string,
    delete_on_termination?: boolean|null,
    encrypted?: boolean|null,
    iops?: number|null,
    snapshot_id?: string|null,
    volume_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.device_name = device_name;
    this.delete_on_termination = delete_on_termination;
    this.encrypted = encrypted;
    this.iops = iops;
    this.snapshot_id = snapshot_id;
    this.volume_id = volume_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_id !== null) {
      ih['volume_id'] = this.volume_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_instance_ebs_block_device_298';
  }
}

export class Aws_instance_ephemeral_block_device_299 implements PcoreValue {
  readonly device_name: string;
  readonly no_device: boolean|null;
  readonly virtual_name: string|null;

  constructor({
    device_name,
    no_device = null,
    virtual_name = null
  }: {
    device_name: string,
    no_device?: boolean|null,
    virtual_name?: string|null
  }) {
    this.device_name = device_name;
    this.no_device = no_device;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    if (this.no_device !== null) {
      ih['no_device'] = this.no_device;
    }
    if (this.virtual_name !== null) {
      ih['virtual_name'] = this.virtual_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_instance_ephemeral_block_device_299';
  }
}

export class Aws_instance_network_interface_300 implements PcoreValue {
  readonly device_index: number;
  readonly network_interface_id: string;
  readonly delete_on_termination: boolean|null;

  constructor({
    device_index,
    network_interface_id,
    delete_on_termination = null
  }: {
    device_index: number,
    network_interface_id: string,
    delete_on_termination?: boolean|null
  }) {
    this.device_index = device_index;
    this.network_interface_id = network_interface_id;
    this.delete_on_termination = delete_on_termination;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_index'] = this.device_index;
    ih['network_interface_id'] = this.network_interface_id;
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_instance_network_interface_300';
  }
}

export class Aws_instance_root_block_device_301 implements PcoreValue {
  readonly delete_on_termination: boolean|null;
  readonly iops: number|null;
  readonly volume_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    delete_on_termination = null,
    iops = null,
    volume_id = null,
    volume_size = null,
    volume_type = null
  }: {
    delete_on_termination?: boolean|null,
    iops?: number|null,
    volume_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.delete_on_termination = delete_on_termination;
    this.iops = iops;
    this.volume_id = volume_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.volume_id !== null) {
      ih['volume_id'] = this.volume_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_instance_root_block_device_301';
  }
}

export class Aws_internet_gateway implements PcoreValue {
  readonly aws_internet_gateway_id: string|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    aws_internet_gateway_id = null,
    owner_id = null,
    tags = null,
    vpc_id = null
  }: {
    aws_internet_gateway_id?: string|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.aws_internet_gateway_id = aws_internet_gateway_id;
    this.owner_id = owner_id;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_internet_gateway_id !== null) {
      ih['aws_internet_gateway_id'] = this.aws_internet_gateway_id;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_internet_gateway';
  }
}

export class Aws_internet_gatewayHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_internet_gatewayHandler';
  }
}

export class Aws_iot_certificate implements PcoreValue {
  readonly active: boolean;
  readonly csr: string;
  readonly aws_iot_certificate_id: string|null;
  readonly arn: string|null;

  constructor({
    active,
    csr,
    aws_iot_certificate_id = null,
    arn = null
  }: {
    active: boolean,
    csr: string,
    aws_iot_certificate_id?: string|null,
    arn?: string|null
  }) {
    this.active = active;
    this.csr = csr;
    this.aws_iot_certificate_id = aws_iot_certificate_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['active'] = this.active;
    ih['csr'] = this.csr;
    if (this.aws_iot_certificate_id !== null) {
      ih['aws_iot_certificate_id'] = this.aws_iot_certificate_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_certificate';
  }
}

export class Aws_iot_certificateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_certificateHandler';
  }
}

export class Aws_iot_policy implements PcoreValue {
  readonly name: string;
  readonly policy: string;
  readonly aws_iot_policy_id: string|null;
  readonly arn: string|null;
  readonly default_version_id: string|null;

  constructor({
    name,
    policy,
    aws_iot_policy_id = null,
    arn = null,
    default_version_id = null
  }: {
    name: string,
    policy: string,
    aws_iot_policy_id?: string|null,
    arn?: string|null,
    default_version_id?: string|null
  }) {
    this.name = name;
    this.policy = policy;
    this.aws_iot_policy_id = aws_iot_policy_id;
    this.arn = arn;
    this.default_version_id = default_version_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['policy'] = this.policy;
    if (this.aws_iot_policy_id !== null) {
      ih['aws_iot_policy_id'] = this.aws_iot_policy_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.default_version_id !== null) {
      ih['default_version_id'] = this.default_version_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_policy';
  }
}

export class Aws_iot_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_policyHandler';
  }
}

export class Aws_iot_policy_attachment implements PcoreValue {
  readonly policy: string;
  readonly target: string;
  readonly aws_iot_policy_attachment_id: string|null;

  constructor({
    policy,
    target,
    aws_iot_policy_attachment_id = null
  }: {
    policy: string,
    target: string,
    aws_iot_policy_attachment_id?: string|null
  }) {
    this.policy = policy;
    this.target = target;
    this.aws_iot_policy_attachment_id = aws_iot_policy_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy'] = this.policy;
    ih['target'] = this.target;
    if (this.aws_iot_policy_attachment_id !== null) {
      ih['aws_iot_policy_attachment_id'] = this.aws_iot_policy_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_policy_attachment';
  }
}

export class Aws_iot_policy_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_policy_attachmentHandler';
  }
}

export class Aws_iot_thing implements PcoreValue {
  readonly name: string;
  readonly aws_iot_thing_id: string|null;
  readonly arn: string|null;
  readonly attributes: {[s: string]: string}|null;
  readonly default_client_id: string|null;
  readonly thing_type_name: string|null;
  readonly version: number|null;

  constructor({
    name,
    aws_iot_thing_id = null,
    arn = null,
    attributes = null,
    default_client_id = null,
    thing_type_name = null,
    version = null
  }: {
    name: string,
    aws_iot_thing_id?: string|null,
    arn?: string|null,
    attributes?: {[s: string]: string}|null,
    default_client_id?: string|null,
    thing_type_name?: string|null,
    version?: number|null
  }) {
    this.name = name;
    this.aws_iot_thing_id = aws_iot_thing_id;
    this.arn = arn;
    this.attributes = attributes;
    this.default_client_id = default_client_id;
    this.thing_type_name = thing_type_name;
    this.version = version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_iot_thing_id !== null) {
      ih['aws_iot_thing_id'] = this.aws_iot_thing_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.attributes !== null) {
      ih['attributes'] = this.attributes;
    }
    if (this.default_client_id !== null) {
      ih['default_client_id'] = this.default_client_id;
    }
    if (this.thing_type_name !== null) {
      ih['thing_type_name'] = this.thing_type_name;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_thing';
  }
}

export class Aws_iot_thingHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_thingHandler';
  }
}

export class Aws_iot_thing_principal_attachment implements PcoreValue {
  readonly principal: string;
  readonly thing: string;
  readonly aws_iot_thing_principal_attachment_id: string|null;

  constructor({
    principal,
    thing,
    aws_iot_thing_principal_attachment_id = null
  }: {
    principal: string,
    thing: string,
    aws_iot_thing_principal_attachment_id?: string|null
  }) {
    this.principal = principal;
    this.thing = thing;
    this.aws_iot_thing_principal_attachment_id = aws_iot_thing_principal_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['principal'] = this.principal;
    ih['thing'] = this.thing;
    if (this.aws_iot_thing_principal_attachment_id !== null) {
      ih['aws_iot_thing_principal_attachment_id'] = this.aws_iot_thing_principal_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_thing_principal_attachment';
  }
}

export class Aws_iot_thing_principal_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_thing_principal_attachmentHandler';
  }
}

export class Aws_iot_thing_type implements PcoreValue {
  readonly name: string;
  readonly aws_iot_thing_type_id: string|null;
  readonly arn: string|null;
  readonly deprecated: boolean|null;
  readonly properties: Aws_iot_thing_type_properties_302[]|null;

  constructor({
    name,
    aws_iot_thing_type_id = null,
    arn = null,
    deprecated = null,
    properties = null
  }: {
    name: string,
    aws_iot_thing_type_id?: string|null,
    arn?: string|null,
    deprecated?: boolean|null,
    properties?: Aws_iot_thing_type_properties_302[]|null
  }) {
    this.name = name;
    this.aws_iot_thing_type_id = aws_iot_thing_type_id;
    this.arn = arn;
    this.deprecated = deprecated;
    this.properties = properties;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_iot_thing_type_id !== null) {
      ih['aws_iot_thing_type_id'] = this.aws_iot_thing_type_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.deprecated !== null) {
      ih['deprecated'] = this.deprecated;
    }
    if (this.properties !== null) {
      ih['properties'] = this.properties;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_thing_type';
  }
}

export class Aws_iot_thing_typeHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_thing_typeHandler';
  }
}

export class Aws_iot_thing_type_properties_302 implements PcoreValue {
  readonly description: string|null;
  readonly searchable_attributes: string[]|null;

  constructor({
    description = null,
    searchable_attributes = null
  }: {
    description?: string|null,
    searchable_attributes?: string[]|null
  }) {
    this.description = description;
    this.searchable_attributes = searchable_attributes;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.searchable_attributes !== null) {
      ih['searchable_attributes'] = this.searchable_attributes;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_thing_type_properties_302';
  }
}

export class Aws_iot_topic_rule implements PcoreValue {
  readonly enabled: boolean;
  readonly name: string;
  readonly sql: string;
  readonly sql_version: string;
  readonly aws_iot_topic_rule_id: string|null;
  readonly arn: string|null;
  readonly cloudwatch_alarm: Aws_iot_topic_rule_cloudwatch_alarm_303[]|null;
  readonly cloudwatch_metric: Aws_iot_topic_rule_cloudwatch_metric_304[]|null;
  readonly description: string|null;
  readonly dynamodb: Aws_iot_topic_rule_dynamodb_305[]|null;
  readonly elasticsearch: Aws_iot_topic_rule_elasticsearch_306[]|null;
  readonly firehose: Aws_iot_topic_rule_firehose_307[]|null;
  readonly kinesis: Aws_iot_topic_rule_kinesis_308[]|null;
  readonly lambda: Aws_iot_topic_rule_lambda_309[]|null;
  readonly republish: Aws_iot_topic_rule_republish_310[]|null;
  readonly s3: Aws_iot_topic_rule_s3_311[]|null;
  readonly sns: Aws_iot_topic_rule_sns_312[]|null;
  readonly sqs: Aws_iot_topic_rule_sqs_313[]|null;

  constructor({
    enabled,
    name,
    sql,
    sql_version,
    aws_iot_topic_rule_id = null,
    arn = null,
    cloudwatch_alarm = null,
    cloudwatch_metric = null,
    description = null,
    dynamodb = null,
    elasticsearch = null,
    firehose = null,
    kinesis = null,
    lambda = null,
    republish = null,
    s3 = null,
    sns = null,
    sqs = null
  }: {
    enabled: boolean,
    name: string,
    sql: string,
    sql_version: string,
    aws_iot_topic_rule_id?: string|null,
    arn?: string|null,
    cloudwatch_alarm?: Aws_iot_topic_rule_cloudwatch_alarm_303[]|null,
    cloudwatch_metric?: Aws_iot_topic_rule_cloudwatch_metric_304[]|null,
    description?: string|null,
    dynamodb?: Aws_iot_topic_rule_dynamodb_305[]|null,
    elasticsearch?: Aws_iot_topic_rule_elasticsearch_306[]|null,
    firehose?: Aws_iot_topic_rule_firehose_307[]|null,
    kinesis?: Aws_iot_topic_rule_kinesis_308[]|null,
    lambda?: Aws_iot_topic_rule_lambda_309[]|null,
    republish?: Aws_iot_topic_rule_republish_310[]|null,
    s3?: Aws_iot_topic_rule_s3_311[]|null,
    sns?: Aws_iot_topic_rule_sns_312[]|null,
    sqs?: Aws_iot_topic_rule_sqs_313[]|null
  }) {
    this.enabled = enabled;
    this.name = name;
    this.sql = sql;
    this.sql_version = sql_version;
    this.aws_iot_topic_rule_id = aws_iot_topic_rule_id;
    this.arn = arn;
    this.cloudwatch_alarm = cloudwatch_alarm;
    this.cloudwatch_metric = cloudwatch_metric;
    this.description = description;
    this.dynamodb = dynamodb;
    this.elasticsearch = elasticsearch;
    this.firehose = firehose;
    this.kinesis = kinesis;
    this.lambda = lambda;
    this.republish = republish;
    this.s3 = s3;
    this.sns = sns;
    this.sqs = sqs;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['enabled'] = this.enabled;
    ih['name'] = this.name;
    ih['sql'] = this.sql;
    ih['sql_version'] = this.sql_version;
    if (this.aws_iot_topic_rule_id !== null) {
      ih['aws_iot_topic_rule_id'] = this.aws_iot_topic_rule_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cloudwatch_alarm !== null) {
      ih['cloudwatch_alarm'] = this.cloudwatch_alarm;
    }
    if (this.cloudwatch_metric !== null) {
      ih['cloudwatch_metric'] = this.cloudwatch_metric;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.dynamodb !== null) {
      ih['dynamodb'] = this.dynamodb;
    }
    if (this.elasticsearch !== null) {
      ih['elasticsearch'] = this.elasticsearch;
    }
    if (this.firehose !== null) {
      ih['firehose'] = this.firehose;
    }
    if (this.kinesis !== null) {
      ih['kinesis'] = this.kinesis;
    }
    if (this.lambda !== null) {
      ih['lambda'] = this.lambda;
    }
    if (this.republish !== null) {
      ih['republish'] = this.republish;
    }
    if (this.s3 !== null) {
      ih['s3'] = this.s3;
    }
    if (this.sns !== null) {
      ih['sns'] = this.sns;
    }
    if (this.sqs !== null) {
      ih['sqs'] = this.sqs;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule';
  }
}

export class Aws_iot_topic_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_ruleHandler';
  }
}

export class Aws_iot_topic_rule_cloudwatch_alarm_303 implements PcoreValue {
  readonly alarm_name: string;
  readonly role_arn: string;
  readonly state_reason: string;
  readonly state_value: string;

  constructor({
    alarm_name,
    role_arn,
    state_reason,
    state_value
  }: {
    alarm_name: string,
    role_arn: string,
    state_reason: string,
    state_value: string
  }) {
    this.alarm_name = alarm_name;
    this.role_arn = role_arn;
    this.state_reason = state_reason;
    this.state_value = state_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['alarm_name'] = this.alarm_name;
    ih['role_arn'] = this.role_arn;
    ih['state_reason'] = this.state_reason;
    ih['state_value'] = this.state_value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_cloudwatch_alarm_303';
  }
}

export class Aws_iot_topic_rule_cloudwatch_metric_304 implements PcoreValue {
  readonly metric_name: string;
  readonly metric_namespace: string;
  readonly metric_unit: string;
  readonly metric_value: string;
  readonly role_arn: string;
  readonly metric_timestamp: string|null;

  constructor({
    metric_name,
    metric_namespace,
    metric_unit,
    metric_value,
    role_arn,
    metric_timestamp = null
  }: {
    metric_name: string,
    metric_namespace: string,
    metric_unit: string,
    metric_value: string,
    role_arn: string,
    metric_timestamp?: string|null
  }) {
    this.metric_name = metric_name;
    this.metric_namespace = metric_namespace;
    this.metric_unit = metric_unit;
    this.metric_value = metric_value;
    this.role_arn = role_arn;
    this.metric_timestamp = metric_timestamp;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['metric_namespace'] = this.metric_namespace;
    ih['metric_unit'] = this.metric_unit;
    ih['metric_value'] = this.metric_value;
    ih['role_arn'] = this.role_arn;
    if (this.metric_timestamp !== null) {
      ih['metric_timestamp'] = this.metric_timestamp;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_cloudwatch_metric_304';
  }
}

export class Aws_iot_topic_rule_dynamodb_305 implements PcoreValue {
  readonly hash_key_field: string;
  readonly hash_key_value: string;
  readonly range_key_field: string;
  readonly range_key_value: string;
  readonly role_arn: string;
  readonly table_name: string;
  readonly hash_key_type: string|null;
  readonly payload_field: string|null;
  readonly range_key_type: string|null;

  constructor({
    hash_key_field,
    hash_key_value,
    range_key_field,
    range_key_value,
    role_arn,
    table_name,
    hash_key_type = null,
    payload_field = null,
    range_key_type = null
  }: {
    hash_key_field: string,
    hash_key_value: string,
    range_key_field: string,
    range_key_value: string,
    role_arn: string,
    table_name: string,
    hash_key_type?: string|null,
    payload_field?: string|null,
    range_key_type?: string|null
  }) {
    this.hash_key_field = hash_key_field;
    this.hash_key_value = hash_key_value;
    this.range_key_field = range_key_field;
    this.range_key_value = range_key_value;
    this.role_arn = role_arn;
    this.table_name = table_name;
    this.hash_key_type = hash_key_type;
    this.payload_field = payload_field;
    this.range_key_type = range_key_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['hash_key_field'] = this.hash_key_field;
    ih['hash_key_value'] = this.hash_key_value;
    ih['range_key_field'] = this.range_key_field;
    ih['range_key_value'] = this.range_key_value;
    ih['role_arn'] = this.role_arn;
    ih['table_name'] = this.table_name;
    if (this.hash_key_type !== null) {
      ih['hash_key_type'] = this.hash_key_type;
    }
    if (this.payload_field !== null) {
      ih['payload_field'] = this.payload_field;
    }
    if (this.range_key_type !== null) {
      ih['range_key_type'] = this.range_key_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_dynamodb_305';
  }
}

export class Aws_iot_topic_rule_elasticsearch_306 implements PcoreValue {
  readonly endpoint: string;
  readonly id: string;
  readonly index: string;
  readonly role_arn: string;
  readonly type: string;

  constructor({
    endpoint,
    id,
    index,
    role_arn,
    type
  }: {
    endpoint: string,
    id: string,
    index: string,
    role_arn: string,
    type: string
  }) {
    this.endpoint = endpoint;
    this.id = id;
    this.index = index;
    this.role_arn = role_arn;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['endpoint'] = this.endpoint;
    ih['id'] = this.id;
    ih['index'] = this.index;
    ih['role_arn'] = this.role_arn;
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_elasticsearch_306';
  }
}

export class Aws_iot_topic_rule_firehose_307 implements PcoreValue {
  readonly delivery_stream_name: string;
  readonly role_arn: string;
  readonly separator: string|null;

  constructor({
    delivery_stream_name,
    role_arn,
    separator = null
  }: {
    delivery_stream_name: string,
    role_arn: string,
    separator?: string|null
  }) {
    this.delivery_stream_name = delivery_stream_name;
    this.role_arn = role_arn;
    this.separator = separator;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['delivery_stream_name'] = this.delivery_stream_name;
    ih['role_arn'] = this.role_arn;
    if (this.separator !== null) {
      ih['separator'] = this.separator;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_firehose_307';
  }
}

export class Aws_iot_topic_rule_kinesis_308 implements PcoreValue {
  readonly role_arn: string;
  readonly stream_name: string;
  readonly partition_key: string|null;

  constructor({
    role_arn,
    stream_name,
    partition_key = null
  }: {
    role_arn: string,
    stream_name: string,
    partition_key?: string|null
  }) {
    this.role_arn = role_arn;
    this.stream_name = stream_name;
    this.partition_key = partition_key;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['role_arn'] = this.role_arn;
    ih['stream_name'] = this.stream_name;
    if (this.partition_key !== null) {
      ih['partition_key'] = this.partition_key;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_kinesis_308';
  }
}

export class Aws_iot_topic_rule_lambda_309 implements PcoreValue {
  readonly function_arn: string;

  constructor({
    function_arn
  }: {
    function_arn: string
  }) {
    this.function_arn = function_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['function_arn'] = this.function_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_lambda_309';
  }
}

export class Aws_iot_topic_rule_republish_310 implements PcoreValue {
  readonly role_arn: string;
  readonly topic: string;

  constructor({
    role_arn,
    topic
  }: {
    role_arn: string,
    topic: string
  }) {
    this.role_arn = role_arn;
    this.topic = topic;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['role_arn'] = this.role_arn;
    ih['topic'] = this.topic;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_republish_310';
  }
}

export class Aws_iot_topic_rule_s3_311 implements PcoreValue {
  readonly bucket_name: string;
  readonly key: string;
  readonly role_arn: string;

  constructor({
    bucket_name,
    key,
    role_arn
  }: {
    bucket_name: string,
    key: string,
    role_arn: string
  }) {
    this.bucket_name = bucket_name;
    this.key = key;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_name'] = this.bucket_name;
    ih['key'] = this.key;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_s3_311';
  }
}

export class Aws_iot_topic_rule_sns_312 implements PcoreValue {
  readonly role_arn: string;
  readonly target_arn: string;
  readonly message_format: string|null;

  constructor({
    role_arn,
    target_arn,
    message_format = null
  }: {
    role_arn: string,
    target_arn: string,
    message_format?: string|null
  }) {
    this.role_arn = role_arn;
    this.target_arn = target_arn;
    this.message_format = message_format;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['role_arn'] = this.role_arn;
    ih['target_arn'] = this.target_arn;
    if (this.message_format !== null) {
      ih['message_format'] = this.message_format;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_sns_312';
  }
}

export class Aws_iot_topic_rule_sqs_313 implements PcoreValue {
  readonly queue_url: string;
  readonly role_arn: string;
  readonly use_base64: boolean;

  constructor({
    queue_url,
    role_arn,
    use_base64
  }: {
    queue_url: string,
    role_arn: string,
    use_base64: boolean
  }) {
    this.queue_url = queue_url;
    this.role_arn = role_arn;
    this.use_base64 = use_base64;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['queue_url'] = this.queue_url;
    ih['role_arn'] = this.role_arn;
    ih['use_base64'] = this.use_base64;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_iot_topic_rule_sqs_313';
  }
}

export class Aws_key_pair implements PcoreValue {
  readonly public_key: string;
  readonly aws_key_pair_id: string|null;
  readonly fingerprint: string|null;
  readonly key_name: string|null;
  readonly key_name_prefix: string|null;

  constructor({
    public_key,
    aws_key_pair_id = null,
    fingerprint = null,
    key_name = null,
    key_name_prefix = null
  }: {
    public_key: string,
    aws_key_pair_id?: string|null,
    fingerprint?: string|null,
    key_name?: string|null,
    key_name_prefix?: string|null
  }) {
    this.public_key = public_key;
    this.aws_key_pair_id = aws_key_pair_id;
    this.fingerprint = fingerprint;
    this.key_name = key_name;
    this.key_name_prefix = key_name_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['public_key'] = this.public_key;
    if (this.aws_key_pair_id !== null) {
      ih['aws_key_pair_id'] = this.aws_key_pair_id;
    }
    if (this.fingerprint !== null) {
      ih['fingerprint'] = this.fingerprint;
    }
    if (this.key_name !== null) {
      ih['key_name'] = this.key_name;
    }
    if (this.key_name_prefix !== null) {
      ih['key_name_prefix'] = this.key_name_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_key_pair';
  }
}

export class Aws_key_pairHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_key_pairHandler';
  }
}

export class Aws_kinesis_analytics_application implements PcoreValue {
  readonly name: string;
  readonly aws_kinesis_analytics_application_id: string|null;
  readonly arn: string|null;
  readonly cloudwatch_logging_options: Aws_kinesis_analytics_application_cloudwatch_logging_options_314[]|null;
  readonly code: string|null;
  readonly create_timestamp: string|null;
  readonly description: string|null;
  readonly inputs: Aws_kinesis_analytics_application_inputs_315[]|null;
  readonly last_update_timestamp: string|null;
  readonly outputs: Aws_kinesis_analytics_application_outputs_328[]|null;
  readonly reference_data_sources: Aws_kinesis_analytics_application_reference_data_sources_333[]|null;
  readonly status: string|null;
  readonly version: number|null;

  constructor({
    name,
    aws_kinesis_analytics_application_id = null,
    arn = null,
    cloudwatch_logging_options = null,
    code = null,
    create_timestamp = null,
    description = null,
    inputs = null,
    last_update_timestamp = null,
    outputs = null,
    reference_data_sources = null,
    status = null,
    version = null
  }: {
    name: string,
    aws_kinesis_analytics_application_id?: string|null,
    arn?: string|null,
    cloudwatch_logging_options?: Aws_kinesis_analytics_application_cloudwatch_logging_options_314[]|null,
    code?: string|null,
    create_timestamp?: string|null,
    description?: string|null,
    inputs?: Aws_kinesis_analytics_application_inputs_315[]|null,
    last_update_timestamp?: string|null,
    outputs?: Aws_kinesis_analytics_application_outputs_328[]|null,
    reference_data_sources?: Aws_kinesis_analytics_application_reference_data_sources_333[]|null,
    status?: string|null,
    version?: number|null
  }) {
    this.name = name;
    this.aws_kinesis_analytics_application_id = aws_kinesis_analytics_application_id;
    this.arn = arn;
    this.cloudwatch_logging_options = cloudwatch_logging_options;
    this.code = code;
    this.create_timestamp = create_timestamp;
    this.description = description;
    this.inputs = inputs;
    this.last_update_timestamp = last_update_timestamp;
    this.outputs = outputs;
    this.reference_data_sources = reference_data_sources;
    this.status = status;
    this.version = version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_kinesis_analytics_application_id !== null) {
      ih['aws_kinesis_analytics_application_id'] = this.aws_kinesis_analytics_application_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cloudwatch_logging_options !== null) {
      ih['cloudwatch_logging_options'] = this.cloudwatch_logging_options;
    }
    if (this.code !== null) {
      ih['code'] = this.code;
    }
    if (this.create_timestamp !== null) {
      ih['create_timestamp'] = this.create_timestamp;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.inputs !== null) {
      ih['inputs'] = this.inputs;
    }
    if (this.last_update_timestamp !== null) {
      ih['last_update_timestamp'] = this.last_update_timestamp;
    }
    if (this.outputs !== null) {
      ih['outputs'] = this.outputs;
    }
    if (this.reference_data_sources !== null) {
      ih['reference_data_sources'] = this.reference_data_sources;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application';
  }
}

export class Aws_kinesis_analytics_applicationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_applicationHandler';
  }
}

export class Aws_kinesis_analytics_application_cloudwatch_logging_options_314 implements PcoreValue {
  readonly log_stream_arn: string;
  readonly role_arn: string;
  readonly id: string|null;

  constructor({
    log_stream_arn,
    role_arn,
    id = null
  }: {
    log_stream_arn: string,
    role_arn: string,
    id?: string|null
  }) {
    this.log_stream_arn = log_stream_arn;
    this.role_arn = role_arn;
    this.id = id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['log_stream_arn'] = this.log_stream_arn;
    ih['role_arn'] = this.role_arn;
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_cloudwatch_logging_options_314';
  }
}

export class Aws_kinesis_analytics_application_inputs_315 implements PcoreValue {
  readonly name_prefix: string;
  readonly schema: Aws_kinesis_analytics_application_inputs_315_schema_321[];
  readonly id: string|null;
  readonly kinesis_firehose: Aws_kinesis_analytics_application_inputs_315_kinesis_firehose_316[]|null;
  readonly kinesis_stream: Aws_kinesis_analytics_application_inputs_315_kinesis_stream_317[]|null;
  readonly parallelism: Aws_kinesis_analytics_application_inputs_315_parallelism_318[]|null;
  readonly processing_configuration: Aws_kinesis_analytics_application_inputs_315_processing_configuration_319[]|null;
  readonly starting_position_configuration: Aws_kinesis_analytics_application_inputs_315_starting_position_configuration_327[]|null;
  readonly stream_names: string[]|null;

  constructor({
    name_prefix,
    schema,
    id = null,
    kinesis_firehose = null,
    kinesis_stream = null,
    parallelism = null,
    processing_configuration = null,
    starting_position_configuration = null,
    stream_names = null
  }: {
    name_prefix: string,
    schema: Aws_kinesis_analytics_application_inputs_315_schema_321[],
    id?: string|null,
    kinesis_firehose?: Aws_kinesis_analytics_application_inputs_315_kinesis_firehose_316[]|null,
    kinesis_stream?: Aws_kinesis_analytics_application_inputs_315_kinesis_stream_317[]|null,
    parallelism?: Aws_kinesis_analytics_application_inputs_315_parallelism_318[]|null,
    processing_configuration?: Aws_kinesis_analytics_application_inputs_315_processing_configuration_319[]|null,
    starting_position_configuration?: Aws_kinesis_analytics_application_inputs_315_starting_position_configuration_327[]|null,
    stream_names?: string[]|null
  }) {
    this.name_prefix = name_prefix;
    this.schema = schema;
    this.id = id;
    this.kinesis_firehose = kinesis_firehose;
    this.kinesis_stream = kinesis_stream;
    this.parallelism = parallelism;
    this.processing_configuration = processing_configuration;
    this.starting_position_configuration = starting_position_configuration;
    this.stream_names = stream_names;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name_prefix'] = this.name_prefix;
    ih['schema'] = this.schema;
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.kinesis_firehose !== null) {
      ih['kinesis_firehose'] = this.kinesis_firehose;
    }
    if (this.kinesis_stream !== null) {
      ih['kinesis_stream'] = this.kinesis_stream;
    }
    if (this.parallelism !== null) {
      ih['parallelism'] = this.parallelism;
    }
    if (this.processing_configuration !== null) {
      ih['processing_configuration'] = this.processing_configuration;
    }
    if (this.starting_position_configuration !== null) {
      ih['starting_position_configuration'] = this.starting_position_configuration;
    }
    if (this.stream_names !== null) {
      ih['stream_names'] = this.stream_names;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_kinesis_firehose_316 implements PcoreValue {
  readonly resource_arn: string;
  readonly role_arn: string;

  constructor({
    resource_arn,
    role_arn
  }: {
    resource_arn: string,
    role_arn: string
  }) {
    this.resource_arn = resource_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_arn'] = this.resource_arn;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_kinesis_firehose_316';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_kinesis_stream_317 implements PcoreValue {
  readonly resource_arn: string;
  readonly role_arn: string;

  constructor({
    resource_arn,
    role_arn
  }: {
    resource_arn: string,
    role_arn: string
  }) {
    this.resource_arn = resource_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_arn'] = this.resource_arn;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_kinesis_stream_317';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_parallelism_318 implements PcoreValue {
  readonly count: number;

  constructor({
    count
  }: {
    count: number
  }) {
    this.count = count;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['count'] = this.count;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_parallelism_318';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_processing_configuration_319 implements PcoreValue {
  readonly lambda: Aws_kinesis_analytics_application_inputs_315_processing_configuration_319_lambda_320[];

  constructor({
    lambda
  }: {
    lambda: Aws_kinesis_analytics_application_inputs_315_processing_configuration_319_lambda_320[]
  }) {
    this.lambda = lambda;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['lambda'] = this.lambda;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_processing_configuration_319';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_processing_configuration_319_lambda_320 implements PcoreValue {
  readonly resource_arn: string;
  readonly role_arn: string;

  constructor({
    resource_arn,
    role_arn
  }: {
    resource_arn: string,
    role_arn: string
  }) {
    this.resource_arn = resource_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_arn'] = this.resource_arn;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_processing_configuration_319_lambda_320';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_schema_321 implements PcoreValue {
  readonly record_columns: Aws_kinesis_analytics_application_inputs_315_schema_321_record_columns_322[];
  readonly record_format: Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323[];
  readonly record_encoding: string|null;

  constructor({
    record_columns,
    record_format,
    record_encoding = null
  }: {
    record_columns: Aws_kinesis_analytics_application_inputs_315_schema_321_record_columns_322[],
    record_format: Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323[],
    record_encoding?: string|null
  }) {
    this.record_columns = record_columns;
    this.record_format = record_format;
    this.record_encoding = record_encoding;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['record_columns'] = this.record_columns;
    ih['record_format'] = this.record_format;
    if (this.record_encoding !== null) {
      ih['record_encoding'] = this.record_encoding;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_schema_321';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_schema_321_record_columns_322 implements PcoreValue {
  readonly name: string;
  readonly sql_type: string;
  readonly mapping: string|null;

  constructor({
    name,
    sql_type,
    mapping = null
  }: {
    name: string,
    sql_type: string,
    mapping?: string|null
  }) {
    this.name = name;
    this.sql_type = sql_type;
    this.mapping = mapping;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['sql_type'] = this.sql_type;
    if (this.mapping !== null) {
      ih['mapping'] = this.mapping;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_schema_321_record_columns_322';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323 implements PcoreValue {
  readonly mapping_parameters: Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324[]|null;
  readonly record_format_type: string|null;

  constructor({
    mapping_parameters = null,
    record_format_type = null
  }: {
    mapping_parameters?: Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324[]|null,
    record_format_type?: string|null
  }) {
    this.mapping_parameters = mapping_parameters;
    this.record_format_type = record_format_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.mapping_parameters !== null) {
      ih['mapping_parameters'] = this.mapping_parameters;
    }
    if (this.record_format_type !== null) {
      ih['record_format_type'] = this.record_format_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324 implements PcoreValue {
  readonly csv: Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_csv_325[]|null;
  readonly json: Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_json_326[]|null;

  constructor({
    csv = null,
    json = null
  }: {
    csv?: Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_csv_325[]|null,
    json?: Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_json_326[]|null
  }) {
    this.csv = csv;
    this.json = json;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.csv !== null) {
      ih['csv'] = this.csv;
    }
    if (this.json !== null) {
      ih['json'] = this.json;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_csv_325 implements PcoreValue {
  readonly record_column_delimiter: string;
  readonly record_row_delimiter: string;

  constructor({
    record_column_delimiter,
    record_row_delimiter
  }: {
    record_column_delimiter: string,
    record_row_delimiter: string
  }) {
    this.record_column_delimiter = record_column_delimiter;
    this.record_row_delimiter = record_row_delimiter;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['record_column_delimiter'] = this.record_column_delimiter;
    ih['record_row_delimiter'] = this.record_row_delimiter;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_csv_325';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_json_326 implements PcoreValue {
  readonly record_row_path: string;

  constructor({
    record_row_path
  }: {
    record_row_path: string
  }) {
    this.record_row_path = record_row_path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['record_row_path'] = this.record_row_path;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_schema_321_record_format_323_mapping_parameters_324_json_326';
  }
}

export class Aws_kinesis_analytics_application_inputs_315_starting_position_configuration_327 implements PcoreValue {
  readonly starting_position: string|null;

  constructor({
    starting_position = null
  }: {
    starting_position?: string|null
  }) {
    this.starting_position = starting_position;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.starting_position !== null) {
      ih['starting_position'] = this.starting_position;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_inputs_315_starting_position_configuration_327';
  }
}

export class Aws_kinesis_analytics_application_outputs_328 implements PcoreValue {
  readonly name: string;
  readonly schema: Aws_kinesis_analytics_application_outputs_328_schema_332[];
  readonly id: string|null;
  readonly kinesis_firehose: Aws_kinesis_analytics_application_outputs_328_kinesis_firehose_329[]|null;
  readonly kinesis_stream: Aws_kinesis_analytics_application_outputs_328_kinesis_stream_330[]|null;
  readonly lambda: Aws_kinesis_analytics_application_outputs_328_lambda_331[]|null;

  constructor({
    name,
    schema,
    id = null,
    kinesis_firehose = null,
    kinesis_stream = null,
    lambda = null
  }: {
    name: string,
    schema: Aws_kinesis_analytics_application_outputs_328_schema_332[],
    id?: string|null,
    kinesis_firehose?: Aws_kinesis_analytics_application_outputs_328_kinesis_firehose_329[]|null,
    kinesis_stream?: Aws_kinesis_analytics_application_outputs_328_kinesis_stream_330[]|null,
    lambda?: Aws_kinesis_analytics_application_outputs_328_lambda_331[]|null
  }) {
    this.name = name;
    this.schema = schema;
    this.id = id;
    this.kinesis_firehose = kinesis_firehose;
    this.kinesis_stream = kinesis_stream;
    this.lambda = lambda;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['schema'] = this.schema;
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.kinesis_firehose !== null) {
      ih['kinesis_firehose'] = this.kinesis_firehose;
    }
    if (this.kinesis_stream !== null) {
      ih['kinesis_stream'] = this.kinesis_stream;
    }
    if (this.lambda !== null) {
      ih['lambda'] = this.lambda;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_outputs_328';
  }
}

export class Aws_kinesis_analytics_application_outputs_328_kinesis_firehose_329 implements PcoreValue {
  readonly resource_arn: string;
  readonly role_arn: string;

  constructor({
    resource_arn,
    role_arn
  }: {
    resource_arn: string,
    role_arn: string
  }) {
    this.resource_arn = resource_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_arn'] = this.resource_arn;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_outputs_328_kinesis_firehose_329';
  }
}

export class Aws_kinesis_analytics_application_outputs_328_kinesis_stream_330 implements PcoreValue {
  readonly resource_arn: string;
  readonly role_arn: string;

  constructor({
    resource_arn,
    role_arn
  }: {
    resource_arn: string,
    role_arn: string
  }) {
    this.resource_arn = resource_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_arn'] = this.resource_arn;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_outputs_328_kinesis_stream_330';
  }
}

export class Aws_kinesis_analytics_application_outputs_328_lambda_331 implements PcoreValue {
  readonly resource_arn: string;
  readonly role_arn: string;

  constructor({
    resource_arn,
    role_arn
  }: {
    resource_arn: string,
    role_arn: string
  }) {
    this.resource_arn = resource_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_arn'] = this.resource_arn;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_outputs_328_lambda_331';
  }
}

export class Aws_kinesis_analytics_application_outputs_328_schema_332 implements PcoreValue {
  readonly record_format_type: string|null;

  constructor({
    record_format_type = null
  }: {
    record_format_type?: string|null
  }) {
    this.record_format_type = record_format_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.record_format_type !== null) {
      ih['record_format_type'] = this.record_format_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_outputs_328_schema_332';
  }
}

export class Aws_kinesis_analytics_application_reference_data_sources_333 implements PcoreValue {
  readonly s3: Aws_kinesis_analytics_application_reference_data_sources_333_s3_334[];
  readonly schema: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335[];
  readonly table_name: string;
  readonly id: string|null;

  constructor({
    s3,
    schema,
    table_name,
    id = null
  }: {
    s3: Aws_kinesis_analytics_application_reference_data_sources_333_s3_334[],
    schema: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335[],
    table_name: string,
    id?: string|null
  }) {
    this.s3 = s3;
    this.schema = schema;
    this.table_name = table_name;
    this.id = id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['s3'] = this.s3;
    ih['schema'] = this.schema;
    ih['table_name'] = this.table_name;
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_reference_data_sources_333';
  }
}

export class Aws_kinesis_analytics_application_reference_data_sources_333_s3_334 implements PcoreValue {
  readonly bucket_arn: string;
  readonly file_key: string;
  readonly role_arn: string;

  constructor({
    bucket_arn,
    file_key,
    role_arn
  }: {
    bucket_arn: string,
    file_key: string,
    role_arn: string
  }) {
    this.bucket_arn = bucket_arn;
    this.file_key = file_key;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_arn'] = this.bucket_arn;
    ih['file_key'] = this.file_key;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_reference_data_sources_333_s3_334';
  }
}

export class Aws_kinesis_analytics_application_reference_data_sources_333_schema_335 implements PcoreValue {
  readonly record_columns: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_columns_336[];
  readonly record_format: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337[];
  readonly record_encoding: string|null;

  constructor({
    record_columns,
    record_format,
    record_encoding = null
  }: {
    record_columns: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_columns_336[],
    record_format: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337[],
    record_encoding?: string|null
  }) {
    this.record_columns = record_columns;
    this.record_format = record_format;
    this.record_encoding = record_encoding;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['record_columns'] = this.record_columns;
    ih['record_format'] = this.record_format;
    if (this.record_encoding !== null) {
      ih['record_encoding'] = this.record_encoding;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_reference_data_sources_333_schema_335';
  }
}

export class Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_columns_336 implements PcoreValue {
  readonly name: string;
  readonly sql_type: string;
  readonly mapping: string|null;

  constructor({
    name,
    sql_type,
    mapping = null
  }: {
    name: string,
    sql_type: string,
    mapping?: string|null
  }) {
    this.name = name;
    this.sql_type = sql_type;
    this.mapping = mapping;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['sql_type'] = this.sql_type;
    if (this.mapping !== null) {
      ih['mapping'] = this.mapping;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_columns_336';
  }
}

export class Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337 implements PcoreValue {
  readonly mapping_parameters: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338[]|null;
  readonly record_format_type: string|null;

  constructor({
    mapping_parameters = null,
    record_format_type = null
  }: {
    mapping_parameters?: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338[]|null,
    record_format_type?: string|null
  }) {
    this.mapping_parameters = mapping_parameters;
    this.record_format_type = record_format_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.mapping_parameters !== null) {
      ih['mapping_parameters'] = this.mapping_parameters;
    }
    if (this.record_format_type !== null) {
      ih['record_format_type'] = this.record_format_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337';
  }
}

export class Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338 implements PcoreValue {
  readonly csv: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_csv_339[]|null;
  readonly json: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_json_340[]|null;

  constructor({
    csv = null,
    json = null
  }: {
    csv?: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_csv_339[]|null,
    json?: Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_json_340[]|null
  }) {
    this.csv = csv;
    this.json = json;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.csv !== null) {
      ih['csv'] = this.csv;
    }
    if (this.json !== null) {
      ih['json'] = this.json;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338';
  }
}

export class Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_csv_339 implements PcoreValue {
  readonly record_column_delimiter: string;
  readonly record_row_delimiter: string;

  constructor({
    record_column_delimiter,
    record_row_delimiter
  }: {
    record_column_delimiter: string,
    record_row_delimiter: string
  }) {
    this.record_column_delimiter = record_column_delimiter;
    this.record_row_delimiter = record_row_delimiter;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['record_column_delimiter'] = this.record_column_delimiter;
    ih['record_row_delimiter'] = this.record_row_delimiter;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_csv_339';
  }
}

export class Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_json_340 implements PcoreValue {
  readonly record_row_path: string;

  constructor({
    record_row_path
  }: {
    record_row_path: string
  }) {
    this.record_row_path = record_row_path;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['record_row_path'] = this.record_row_path;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_analytics_application_reference_data_sources_333_schema_335_record_format_337_mapping_parameters_338_json_340';
  }
}

export class Aws_kinesis_firehose_delivery_stream implements PcoreValue {
  readonly destination: string;
  readonly name: string;
  readonly aws_kinesis_firehose_delivery_stream_id: string|null;
  readonly arn: string|null;
  readonly destination_id: string|null;
  readonly elasticsearch_configuration: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341[]|null;
  readonly extended_s3_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346[]|null;
  readonly kinesis_source_configuration: Aws_kinesis_firehose_delivery_stream_kinesis_source_configuration_363[]|null;
  readonly redshift_configuration: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364[]|null;
  readonly s3_configuration: Aws_kinesis_firehose_delivery_stream_s3_configuration_371[]|null;
  readonly splunk_configuration: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly version_id: string|null;

  constructor({
    destination,
    name,
    aws_kinesis_firehose_delivery_stream_id = null,
    arn = null,
    destination_id = null,
    elasticsearch_configuration = null,
    extended_s3_configuration = null,
    kinesis_source_configuration = null,
    redshift_configuration = null,
    s3_configuration = null,
    splunk_configuration = null,
    tags = null,
    version_id = null
  }: {
    destination: string,
    name: string,
    aws_kinesis_firehose_delivery_stream_id?: string|null,
    arn?: string|null,
    destination_id?: string|null,
    elasticsearch_configuration?: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341[]|null,
    extended_s3_configuration?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346[]|null,
    kinesis_source_configuration?: Aws_kinesis_firehose_delivery_stream_kinesis_source_configuration_363[]|null,
    redshift_configuration?: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364[]|null,
    s3_configuration?: Aws_kinesis_firehose_delivery_stream_s3_configuration_371[]|null,
    splunk_configuration?: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373[]|null,
    tags?: {[s: string]: string}|null,
    version_id?: string|null
  }) {
    this.destination = destination;
    this.name = name;
    this.aws_kinesis_firehose_delivery_stream_id = aws_kinesis_firehose_delivery_stream_id;
    this.arn = arn;
    this.destination_id = destination_id;
    this.elasticsearch_configuration = elasticsearch_configuration;
    this.extended_s3_configuration = extended_s3_configuration;
    this.kinesis_source_configuration = kinesis_source_configuration;
    this.redshift_configuration = redshift_configuration;
    this.s3_configuration = s3_configuration;
    this.splunk_configuration = splunk_configuration;
    this.tags = tags;
    this.version_id = version_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination'] = this.destination;
    ih['name'] = this.name;
    if (this.aws_kinesis_firehose_delivery_stream_id !== null) {
      ih['aws_kinesis_firehose_delivery_stream_id'] = this.aws_kinesis_firehose_delivery_stream_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.destination_id !== null) {
      ih['destination_id'] = this.destination_id;
    }
    if (this.elasticsearch_configuration !== null) {
      ih['elasticsearch_configuration'] = this.elasticsearch_configuration;
    }
    if (this.extended_s3_configuration !== null) {
      ih['extended_s3_configuration'] = this.extended_s3_configuration;
    }
    if (this.kinesis_source_configuration !== null) {
      ih['kinesis_source_configuration'] = this.kinesis_source_configuration;
    }
    if (this.redshift_configuration !== null) {
      ih['redshift_configuration'] = this.redshift_configuration;
    }
    if (this.s3_configuration !== null) {
      ih['s3_configuration'] = this.s3_configuration;
    }
    if (this.splunk_configuration !== null) {
      ih['splunk_configuration'] = this.splunk_configuration;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.version_id !== null) {
      ih['version_id'] = this.version_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream';
  }
}

export class Aws_kinesis_firehose_delivery_streamHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_streamHandler';
  }
}

export class Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341 implements PcoreValue {
  readonly domain_arn: string;
  readonly index_name: string;
  readonly role_arn: string;
  readonly buffering_interval: number|null;
  readonly buffering_size: number|null;
  readonly cloudwatch_logging_options: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_cloudwatch_logging_options_342[]|null;
  readonly index_rotation_period: string|null;
  readonly processing_configuration: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343[]|null;
  readonly retry_duration: number|null;
  readonly s3_backup_mode: string|null;
  readonly type_name: string|null;

  constructor({
    domain_arn,
    index_name,
    role_arn,
    buffering_interval = null,
    buffering_size = null,
    cloudwatch_logging_options = null,
    index_rotation_period = null,
    processing_configuration = null,
    retry_duration = null,
    s3_backup_mode = null,
    type_name = null
  }: {
    domain_arn: string,
    index_name: string,
    role_arn: string,
    buffering_interval?: number|null,
    buffering_size?: number|null,
    cloudwatch_logging_options?: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_cloudwatch_logging_options_342[]|null,
    index_rotation_period?: string|null,
    processing_configuration?: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343[]|null,
    retry_duration?: number|null,
    s3_backup_mode?: string|null,
    type_name?: string|null
  }) {
    this.domain_arn = domain_arn;
    this.index_name = index_name;
    this.role_arn = role_arn;
    this.buffering_interval = buffering_interval;
    this.buffering_size = buffering_size;
    this.cloudwatch_logging_options = cloudwatch_logging_options;
    this.index_rotation_period = index_rotation_period;
    this.processing_configuration = processing_configuration;
    this.retry_duration = retry_duration;
    this.s3_backup_mode = s3_backup_mode;
    this.type_name = type_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain_arn'] = this.domain_arn;
    ih['index_name'] = this.index_name;
    ih['role_arn'] = this.role_arn;
    if (this.buffering_interval !== null) {
      ih['buffering_interval'] = this.buffering_interval;
    }
    if (this.buffering_size !== null) {
      ih['buffering_size'] = this.buffering_size;
    }
    if (this.cloudwatch_logging_options !== null) {
      ih['cloudwatch_logging_options'] = this.cloudwatch_logging_options;
    }
    if (this.index_rotation_period !== null) {
      ih['index_rotation_period'] = this.index_rotation_period;
    }
    if (this.processing_configuration !== null) {
      ih['processing_configuration'] = this.processing_configuration;
    }
    if (this.retry_duration !== null) {
      ih['retry_duration'] = this.retry_duration;
    }
    if (this.s3_backup_mode !== null) {
      ih['s3_backup_mode'] = this.s3_backup_mode;
    }
    if (this.type_name !== null) {
      ih['type_name'] = this.type_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341';
  }
}

export class Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_cloudwatch_logging_options_342 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly log_group_name: string|null;
  readonly log_stream_name: string|null;

  constructor({
    enabled = null,
    log_group_name = null,
    log_stream_name = null
  }: {
    enabled?: boolean|null,
    log_group_name?: string|null,
    log_stream_name?: string|null
  }) {
    this.enabled = enabled;
    this.log_group_name = log_group_name;
    this.log_stream_name = log_stream_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.log_group_name !== null) {
      ih['log_group_name'] = this.log_group_name;
    }
    if (this.log_stream_name !== null) {
      ih['log_stream_name'] = this.log_stream_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_cloudwatch_logging_options_342';
  }
}

export class Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly processors: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344[]|null;

  constructor({
    enabled = null,
    processors = null
  }: {
    enabled?: boolean|null,
    processors?: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344[]|null
  }) {
    this.enabled = enabled;
    this.processors = processors;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.processors !== null) {
      ih['processors'] = this.processors;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343';
  }
}

export class Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344 implements PcoreValue {
  readonly type: string;
  readonly parameters: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344_parameters_345[]|null;

  constructor({
    type,
    parameters = null
  }: {
    type: string,
    parameters?: Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344_parameters_345[]|null
  }) {
    this.type = type;
    this.parameters = parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344';
  }
}

export class Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344_parameters_345 implements PcoreValue {
  readonly parameter_name: string;
  readonly parameter_value: string;

  constructor({
    parameter_name,
    parameter_value
  }: {
    parameter_name: string,
    parameter_value: string
  }) {
    this.parameter_name = parameter_name;
    this.parameter_value = parameter_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['parameter_name'] = this.parameter_name;
    ih['parameter_value'] = this.parameter_value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_elasticsearch_configuration_341_processing_configuration_343_processors_344_parameters_345';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346 implements PcoreValue {
  readonly bucket_arn: string;
  readonly role_arn: string;
  readonly buffer_interval: number|null;
  readonly buffer_size: number|null;
  readonly cloudwatch_logging_options: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_cloudwatch_logging_options_347[]|null;
  readonly compression_format: string|null;
  readonly data_format_conversion_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348[]|null;
  readonly error_output_prefix: string|null;
  readonly kms_key_arn: string|null;
  readonly prefix: string|null;
  readonly processing_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358[]|null;
  readonly s3_backup_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361[]|null;
  readonly s3_backup_mode: string|null;

  constructor({
    bucket_arn,
    role_arn,
    buffer_interval = null,
    buffer_size = null,
    cloudwatch_logging_options = null,
    compression_format = null,
    data_format_conversion_configuration = null,
    error_output_prefix = null,
    kms_key_arn = null,
    prefix = null,
    processing_configuration = null,
    s3_backup_configuration = null,
    s3_backup_mode = null
  }: {
    bucket_arn: string,
    role_arn: string,
    buffer_interval?: number|null,
    buffer_size?: number|null,
    cloudwatch_logging_options?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_cloudwatch_logging_options_347[]|null,
    compression_format?: string|null,
    data_format_conversion_configuration?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348[]|null,
    error_output_prefix?: string|null,
    kms_key_arn?: string|null,
    prefix?: string|null,
    processing_configuration?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358[]|null,
    s3_backup_configuration?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361[]|null,
    s3_backup_mode?: string|null
  }) {
    this.bucket_arn = bucket_arn;
    this.role_arn = role_arn;
    this.buffer_interval = buffer_interval;
    this.buffer_size = buffer_size;
    this.cloudwatch_logging_options = cloudwatch_logging_options;
    this.compression_format = compression_format;
    this.data_format_conversion_configuration = data_format_conversion_configuration;
    this.error_output_prefix = error_output_prefix;
    this.kms_key_arn = kms_key_arn;
    this.prefix = prefix;
    this.processing_configuration = processing_configuration;
    this.s3_backup_configuration = s3_backup_configuration;
    this.s3_backup_mode = s3_backup_mode;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_arn'] = this.bucket_arn;
    ih['role_arn'] = this.role_arn;
    if (this.buffer_interval !== null) {
      ih['buffer_interval'] = this.buffer_interval;
    }
    if (this.buffer_size !== null) {
      ih['buffer_size'] = this.buffer_size;
    }
    if (this.cloudwatch_logging_options !== null) {
      ih['cloudwatch_logging_options'] = this.cloudwatch_logging_options;
    }
    if (this.compression_format !== null) {
      ih['compression_format'] = this.compression_format;
    }
    if (this.data_format_conversion_configuration !== null) {
      ih['data_format_conversion_configuration'] = this.data_format_conversion_configuration;
    }
    if (this.error_output_prefix !== null) {
      ih['error_output_prefix'] = this.error_output_prefix;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    if (this.processing_configuration !== null) {
      ih['processing_configuration'] = this.processing_configuration;
    }
    if (this.s3_backup_configuration !== null) {
      ih['s3_backup_configuration'] = this.s3_backup_configuration;
    }
    if (this.s3_backup_mode !== null) {
      ih['s3_backup_mode'] = this.s3_backup_mode;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_cloudwatch_logging_options_347 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly log_group_name: string|null;
  readonly log_stream_name: string|null;

  constructor({
    enabled = null,
    log_group_name = null,
    log_stream_name = null
  }: {
    enabled?: boolean|null,
    log_group_name?: string|null,
    log_stream_name?: string|null
  }) {
    this.enabled = enabled;
    this.log_group_name = log_group_name;
    this.log_stream_name = log_stream_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.log_group_name !== null) {
      ih['log_group_name'] = this.log_group_name;
    }
    if (this.log_stream_name !== null) {
      ih['log_stream_name'] = this.log_stream_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_cloudwatch_logging_options_347';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348 implements PcoreValue {
  readonly input_format_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349[];
  readonly output_format_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353[];
  readonly schema_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_schema_configuration_357[];
  readonly enabled: boolean|null;

  constructor({
    input_format_configuration,
    output_format_configuration,
    schema_configuration,
    enabled = null
  }: {
    input_format_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349[],
    output_format_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353[],
    schema_configuration: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_schema_configuration_357[],
    enabled?: boolean|null
  }) {
    this.input_format_configuration = input_format_configuration;
    this.output_format_configuration = output_format_configuration;
    this.schema_configuration = schema_configuration;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['input_format_configuration'] = this.input_format_configuration;
    ih['output_format_configuration'] = this.output_format_configuration;
    ih['schema_configuration'] = this.schema_configuration;
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349 implements PcoreValue {
  readonly deserializer: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350[];

  constructor({
    deserializer
  }: {
    deserializer: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350[]
  }) {
    this.deserializer = deserializer;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['deserializer'] = this.deserializer;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350 implements PcoreValue {
  readonly hive_json_ser_de: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_hive_json_ser_de_351[]|null;
  readonly open_x_json_ser_de: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_open_x_json_ser_de_352[]|null;

  constructor({
    hive_json_ser_de = null,
    open_x_json_ser_de = null
  }: {
    hive_json_ser_de?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_hive_json_ser_de_351[]|null,
    open_x_json_ser_de?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_open_x_json_ser_de_352[]|null
  }) {
    this.hive_json_ser_de = hive_json_ser_de;
    this.open_x_json_ser_de = open_x_json_ser_de;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.hive_json_ser_de !== null) {
      ih['hive_json_ser_de'] = this.hive_json_ser_de;
    }
    if (this.open_x_json_ser_de !== null) {
      ih['open_x_json_ser_de'] = this.open_x_json_ser_de;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_hive_json_ser_de_351 implements PcoreValue {
  readonly timestamp_formats: string[]|null;

  constructor({
    timestamp_formats = null
  }: {
    timestamp_formats?: string[]|null
  }) {
    this.timestamp_formats = timestamp_formats;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.timestamp_formats !== null) {
      ih['timestamp_formats'] = this.timestamp_formats;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_hive_json_ser_de_351';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_open_x_json_ser_de_352 implements PcoreValue {
  readonly case_insensitive: boolean|null;
  readonly column_to_json_key_mappings: {[s: string]: string}|null;
  readonly convert_dots_in_json_keys_to_underscores: boolean|null;

  constructor({
    case_insensitive = null,
    column_to_json_key_mappings = null,
    convert_dots_in_json_keys_to_underscores = null
  }: {
    case_insensitive?: boolean|null,
    column_to_json_key_mappings?: {[s: string]: string}|null,
    convert_dots_in_json_keys_to_underscores?: boolean|null
  }) {
    this.case_insensitive = case_insensitive;
    this.column_to_json_key_mappings = column_to_json_key_mappings;
    this.convert_dots_in_json_keys_to_underscores = convert_dots_in_json_keys_to_underscores;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.case_insensitive !== null) {
      ih['case_insensitive'] = this.case_insensitive;
    }
    if (this.column_to_json_key_mappings !== null) {
      ih['column_to_json_key_mappings'] = this.column_to_json_key_mappings;
    }
    if (this.convert_dots_in_json_keys_to_underscores !== null) {
      ih['convert_dots_in_json_keys_to_underscores'] = this.convert_dots_in_json_keys_to_underscores;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_input_format_configuration_349_deserializer_350_open_x_json_ser_de_352';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353 implements PcoreValue {
  readonly serializer: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354[];

  constructor({
    serializer
  }: {
    serializer: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354[]
  }) {
    this.serializer = serializer;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['serializer'] = this.serializer;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354 implements PcoreValue {
  readonly orc_ser_de: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_orc_ser_de_355[]|null;
  readonly parquet_ser_de: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_parquet_ser_de_356[]|null;

  constructor({
    orc_ser_de = null,
    parquet_ser_de = null
  }: {
    orc_ser_de?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_orc_ser_de_355[]|null,
    parquet_ser_de?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_parquet_ser_de_356[]|null
  }) {
    this.orc_ser_de = orc_ser_de;
    this.parquet_ser_de = parquet_ser_de;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.orc_ser_de !== null) {
      ih['orc_ser_de'] = this.orc_ser_de;
    }
    if (this.parquet_ser_de !== null) {
      ih['parquet_ser_de'] = this.parquet_ser_de;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_orc_ser_de_355 implements PcoreValue {
  readonly block_size_bytes: number|null;
  readonly bloom_filter_columns: string[]|null;
  readonly bloom_filter_false_positive_probability: number|null;
  readonly compression: string|null;
  readonly dictionary_key_threshold: number|null;
  readonly enable_padding: boolean|null;
  readonly format_version: string|null;
  readonly padding_tolerance: number|null;
  readonly row_index_stride: number|null;
  readonly stripe_size_bytes: number|null;

  constructor({
    block_size_bytes = null,
    bloom_filter_columns = null,
    bloom_filter_false_positive_probability = null,
    compression = null,
    dictionary_key_threshold = null,
    enable_padding = null,
    format_version = null,
    padding_tolerance = null,
    row_index_stride = null,
    stripe_size_bytes = null
  }: {
    block_size_bytes?: number|null,
    bloom_filter_columns?: string[]|null,
    bloom_filter_false_positive_probability?: number|null,
    compression?: string|null,
    dictionary_key_threshold?: number|null,
    enable_padding?: boolean|null,
    format_version?: string|null,
    padding_tolerance?: number|null,
    row_index_stride?: number|null,
    stripe_size_bytes?: number|null
  }) {
    this.block_size_bytes = block_size_bytes;
    this.bloom_filter_columns = bloom_filter_columns;
    this.bloom_filter_false_positive_probability = bloom_filter_false_positive_probability;
    this.compression = compression;
    this.dictionary_key_threshold = dictionary_key_threshold;
    this.enable_padding = enable_padding;
    this.format_version = format_version;
    this.padding_tolerance = padding_tolerance;
    this.row_index_stride = row_index_stride;
    this.stripe_size_bytes = stripe_size_bytes;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.block_size_bytes !== null) {
      ih['block_size_bytes'] = this.block_size_bytes;
    }
    if (this.bloom_filter_columns !== null) {
      ih['bloom_filter_columns'] = this.bloom_filter_columns;
    }
    if (this.bloom_filter_false_positive_probability !== null) {
      ih['bloom_filter_false_positive_probability'] = this.bloom_filter_false_positive_probability;
    }
    if (this.compression !== null) {
      ih['compression'] = this.compression;
    }
    if (this.dictionary_key_threshold !== null) {
      ih['dictionary_key_threshold'] = this.dictionary_key_threshold;
    }
    if (this.enable_padding !== null) {
      ih['enable_padding'] = this.enable_padding;
    }
    if (this.format_version !== null) {
      ih['format_version'] = this.format_version;
    }
    if (this.padding_tolerance !== null) {
      ih['padding_tolerance'] = this.padding_tolerance;
    }
    if (this.row_index_stride !== null) {
      ih['row_index_stride'] = this.row_index_stride;
    }
    if (this.stripe_size_bytes !== null) {
      ih['stripe_size_bytes'] = this.stripe_size_bytes;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_orc_ser_de_355';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_parquet_ser_de_356 implements PcoreValue {
  readonly block_size_bytes: number|null;
  readonly compression: string|null;
  readonly enable_dictionary_compression: boolean|null;
  readonly max_padding_bytes: number|null;
  readonly page_size_bytes: number|null;
  readonly writer_version: string|null;

  constructor({
    block_size_bytes = null,
    compression = null,
    enable_dictionary_compression = null,
    max_padding_bytes = null,
    page_size_bytes = null,
    writer_version = null
  }: {
    block_size_bytes?: number|null,
    compression?: string|null,
    enable_dictionary_compression?: boolean|null,
    max_padding_bytes?: number|null,
    page_size_bytes?: number|null,
    writer_version?: string|null
  }) {
    this.block_size_bytes = block_size_bytes;
    this.compression = compression;
    this.enable_dictionary_compression = enable_dictionary_compression;
    this.max_padding_bytes = max_padding_bytes;
    this.page_size_bytes = page_size_bytes;
    this.writer_version = writer_version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.block_size_bytes !== null) {
      ih['block_size_bytes'] = this.block_size_bytes;
    }
    if (this.compression !== null) {
      ih['compression'] = this.compression;
    }
    if (this.enable_dictionary_compression !== null) {
      ih['enable_dictionary_compression'] = this.enable_dictionary_compression;
    }
    if (this.max_padding_bytes !== null) {
      ih['max_padding_bytes'] = this.max_padding_bytes;
    }
    if (this.page_size_bytes !== null) {
      ih['page_size_bytes'] = this.page_size_bytes;
    }
    if (this.writer_version !== null) {
      ih['writer_version'] = this.writer_version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_output_format_configuration_353_serializer_354_parquet_ser_de_356';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_schema_configuration_357 implements PcoreValue {
  readonly database_name: string;
  readonly role_arn: string;
  readonly table_name: string;
  readonly catalog_id: string|null;
  readonly region: string|null;
  readonly version_id: string|null;

  constructor({
    database_name,
    role_arn,
    table_name,
    catalog_id = null,
    region = null,
    version_id = null
  }: {
    database_name: string,
    role_arn: string,
    table_name: string,
    catalog_id?: string|null,
    region?: string|null,
    version_id?: string|null
  }) {
    this.database_name = database_name;
    this.role_arn = role_arn;
    this.table_name = table_name;
    this.catalog_id = catalog_id;
    this.region = region;
    this.version_id = version_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['database_name'] = this.database_name;
    ih['role_arn'] = this.role_arn;
    ih['table_name'] = this.table_name;
    if (this.catalog_id !== null) {
      ih['catalog_id'] = this.catalog_id;
    }
    if (this.region !== null) {
      ih['region'] = this.region;
    }
    if (this.version_id !== null) {
      ih['version_id'] = this.version_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_data_format_conversion_configuration_348_schema_configuration_357';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly processors: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359[]|null;

  constructor({
    enabled = null,
    processors = null
  }: {
    enabled?: boolean|null,
    processors?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359[]|null
  }) {
    this.enabled = enabled;
    this.processors = processors;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.processors !== null) {
      ih['processors'] = this.processors;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359 implements PcoreValue {
  readonly type: string;
  readonly parameters: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359_parameters_360[]|null;

  constructor({
    type,
    parameters = null
  }: {
    type: string,
    parameters?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359_parameters_360[]|null
  }) {
    this.type = type;
    this.parameters = parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359_parameters_360 implements PcoreValue {
  readonly parameter_name: string;
  readonly parameter_value: string;

  constructor({
    parameter_name,
    parameter_value
  }: {
    parameter_name: string,
    parameter_value: string
  }) {
    this.parameter_name = parameter_name;
    this.parameter_value = parameter_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['parameter_name'] = this.parameter_name;
    ih['parameter_value'] = this.parameter_value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_processing_configuration_358_processors_359_parameters_360';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361 implements PcoreValue {
  readonly bucket_arn: string;
  readonly role_arn: string;
  readonly buffer_interval: number|null;
  readonly buffer_size: number|null;
  readonly cloudwatch_logging_options: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361_cloudwatch_logging_options_362[]|null;
  readonly compression_format: string|null;
  readonly kms_key_arn: string|null;
  readonly prefix: string|null;

  constructor({
    bucket_arn,
    role_arn,
    buffer_interval = null,
    buffer_size = null,
    cloudwatch_logging_options = null,
    compression_format = null,
    kms_key_arn = null,
    prefix = null
  }: {
    bucket_arn: string,
    role_arn: string,
    buffer_interval?: number|null,
    buffer_size?: number|null,
    cloudwatch_logging_options?: Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361_cloudwatch_logging_options_362[]|null,
    compression_format?: string|null,
    kms_key_arn?: string|null,
    prefix?: string|null
  }) {
    this.bucket_arn = bucket_arn;
    this.role_arn = role_arn;
    this.buffer_interval = buffer_interval;
    this.buffer_size = buffer_size;
    this.cloudwatch_logging_options = cloudwatch_logging_options;
    this.compression_format = compression_format;
    this.kms_key_arn = kms_key_arn;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_arn'] = this.bucket_arn;
    ih['role_arn'] = this.role_arn;
    if (this.buffer_interval !== null) {
      ih['buffer_interval'] = this.buffer_interval;
    }
    if (this.buffer_size !== null) {
      ih['buffer_size'] = this.buffer_size;
    }
    if (this.cloudwatch_logging_options !== null) {
      ih['cloudwatch_logging_options'] = this.cloudwatch_logging_options;
    }
    if (this.compression_format !== null) {
      ih['compression_format'] = this.compression_format;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361';
  }
}

export class Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361_cloudwatch_logging_options_362 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly log_group_name: string|null;
  readonly log_stream_name: string|null;

  constructor({
    enabled = null,
    log_group_name = null,
    log_stream_name = null
  }: {
    enabled?: boolean|null,
    log_group_name?: string|null,
    log_stream_name?: string|null
  }) {
    this.enabled = enabled;
    this.log_group_name = log_group_name;
    this.log_stream_name = log_stream_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.log_group_name !== null) {
      ih['log_group_name'] = this.log_group_name;
    }
    if (this.log_stream_name !== null) {
      ih['log_stream_name'] = this.log_stream_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_extended_s3_configuration_346_s3_backup_configuration_361_cloudwatch_logging_options_362';
  }
}

export class Aws_kinesis_firehose_delivery_stream_kinesis_source_configuration_363 implements PcoreValue {
  readonly kinesis_stream_arn: string;
  readonly role_arn: string;

  constructor({
    kinesis_stream_arn,
    role_arn
  }: {
    kinesis_stream_arn: string,
    role_arn: string
  }) {
    this.kinesis_stream_arn = kinesis_stream_arn;
    this.role_arn = role_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['kinesis_stream_arn'] = this.kinesis_stream_arn;
    ih['role_arn'] = this.role_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_kinesis_source_configuration_363';
  }
}

export class Aws_kinesis_firehose_delivery_stream_redshift_configuration_364 implements PcoreValue {
  readonly cluster_jdbcurl: string;
  readonly data_table_name: string;
  readonly password: string;
  readonly role_arn: string;
  readonly username: string;
  readonly cloudwatch_logging_options: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_cloudwatch_logging_options_365[]|null;
  readonly copy_options: string|null;
  readonly data_table_columns: string|null;
  readonly processing_configuration: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366[]|null;
  readonly retry_duration: number|null;
  readonly s3_backup_configuration: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369[]|null;
  readonly s3_backup_mode: string|null;

  constructor({
    cluster_jdbcurl,
    data_table_name,
    password,
    role_arn,
    username,
    cloudwatch_logging_options = null,
    copy_options = null,
    data_table_columns = null,
    processing_configuration = null,
    retry_duration = null,
    s3_backup_configuration = null,
    s3_backup_mode = null
  }: {
    cluster_jdbcurl: string,
    data_table_name: string,
    password: string,
    role_arn: string,
    username: string,
    cloudwatch_logging_options?: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_cloudwatch_logging_options_365[]|null,
    copy_options?: string|null,
    data_table_columns?: string|null,
    processing_configuration?: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366[]|null,
    retry_duration?: number|null,
    s3_backup_configuration?: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369[]|null,
    s3_backup_mode?: string|null
  }) {
    this.cluster_jdbcurl = cluster_jdbcurl;
    this.data_table_name = data_table_name;
    this.password = password;
    this.role_arn = role_arn;
    this.username = username;
    this.cloudwatch_logging_options = cloudwatch_logging_options;
    this.copy_options = copy_options;
    this.data_table_columns = data_table_columns;
    this.processing_configuration = processing_configuration;
    this.retry_duration = retry_duration;
    this.s3_backup_configuration = s3_backup_configuration;
    this.s3_backup_mode = s3_backup_mode;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_jdbcurl'] = this.cluster_jdbcurl;
    ih['data_table_name'] = this.data_table_name;
    ih['password'] = this.password;
    ih['role_arn'] = this.role_arn;
    ih['username'] = this.username;
    if (this.cloudwatch_logging_options !== null) {
      ih['cloudwatch_logging_options'] = this.cloudwatch_logging_options;
    }
    if (this.copy_options !== null) {
      ih['copy_options'] = this.copy_options;
    }
    if (this.data_table_columns !== null) {
      ih['data_table_columns'] = this.data_table_columns;
    }
    if (this.processing_configuration !== null) {
      ih['processing_configuration'] = this.processing_configuration;
    }
    if (this.retry_duration !== null) {
      ih['retry_duration'] = this.retry_duration;
    }
    if (this.s3_backup_configuration !== null) {
      ih['s3_backup_configuration'] = this.s3_backup_configuration;
    }
    if (this.s3_backup_mode !== null) {
      ih['s3_backup_mode'] = this.s3_backup_mode;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_redshift_configuration_364';
  }
}

export class Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_cloudwatch_logging_options_365 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly log_group_name: string|null;
  readonly log_stream_name: string|null;

  constructor({
    enabled = null,
    log_group_name = null,
    log_stream_name = null
  }: {
    enabled?: boolean|null,
    log_group_name?: string|null,
    log_stream_name?: string|null
  }) {
    this.enabled = enabled;
    this.log_group_name = log_group_name;
    this.log_stream_name = log_stream_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.log_group_name !== null) {
      ih['log_group_name'] = this.log_group_name;
    }
    if (this.log_stream_name !== null) {
      ih['log_stream_name'] = this.log_stream_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_cloudwatch_logging_options_365';
  }
}

export class Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly processors: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367[]|null;

  constructor({
    enabled = null,
    processors = null
  }: {
    enabled?: boolean|null,
    processors?: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367[]|null
  }) {
    this.enabled = enabled;
    this.processors = processors;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.processors !== null) {
      ih['processors'] = this.processors;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366';
  }
}

export class Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367 implements PcoreValue {
  readonly type: string;
  readonly parameters: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367_parameters_368[]|null;

  constructor({
    type,
    parameters = null
  }: {
    type: string,
    parameters?: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367_parameters_368[]|null
  }) {
    this.type = type;
    this.parameters = parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367';
  }
}

export class Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367_parameters_368 implements PcoreValue {
  readonly parameter_name: string;
  readonly parameter_value: string;

  constructor({
    parameter_name,
    parameter_value
  }: {
    parameter_name: string,
    parameter_value: string
  }) {
    this.parameter_name = parameter_name;
    this.parameter_value = parameter_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['parameter_name'] = this.parameter_name;
    ih['parameter_value'] = this.parameter_value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_processing_configuration_366_processors_367_parameters_368';
  }
}

export class Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369 implements PcoreValue {
  readonly bucket_arn: string;
  readonly role_arn: string;
  readonly buffer_interval: number|null;
  readonly buffer_size: number|null;
  readonly cloudwatch_logging_options: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369_cloudwatch_logging_options_370[]|null;
  readonly compression_format: string|null;
  readonly kms_key_arn: string|null;
  readonly prefix: string|null;

  constructor({
    bucket_arn,
    role_arn,
    buffer_interval = null,
    buffer_size = null,
    cloudwatch_logging_options = null,
    compression_format = null,
    kms_key_arn = null,
    prefix = null
  }: {
    bucket_arn: string,
    role_arn: string,
    buffer_interval?: number|null,
    buffer_size?: number|null,
    cloudwatch_logging_options?: Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369_cloudwatch_logging_options_370[]|null,
    compression_format?: string|null,
    kms_key_arn?: string|null,
    prefix?: string|null
  }) {
    this.bucket_arn = bucket_arn;
    this.role_arn = role_arn;
    this.buffer_interval = buffer_interval;
    this.buffer_size = buffer_size;
    this.cloudwatch_logging_options = cloudwatch_logging_options;
    this.compression_format = compression_format;
    this.kms_key_arn = kms_key_arn;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_arn'] = this.bucket_arn;
    ih['role_arn'] = this.role_arn;
    if (this.buffer_interval !== null) {
      ih['buffer_interval'] = this.buffer_interval;
    }
    if (this.buffer_size !== null) {
      ih['buffer_size'] = this.buffer_size;
    }
    if (this.cloudwatch_logging_options !== null) {
      ih['cloudwatch_logging_options'] = this.cloudwatch_logging_options;
    }
    if (this.compression_format !== null) {
      ih['compression_format'] = this.compression_format;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369';
  }
}

export class Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369_cloudwatch_logging_options_370 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly log_group_name: string|null;
  readonly log_stream_name: string|null;

  constructor({
    enabled = null,
    log_group_name = null,
    log_stream_name = null
  }: {
    enabled?: boolean|null,
    log_group_name?: string|null,
    log_stream_name?: string|null
  }) {
    this.enabled = enabled;
    this.log_group_name = log_group_name;
    this.log_stream_name = log_stream_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.log_group_name !== null) {
      ih['log_group_name'] = this.log_group_name;
    }
    if (this.log_stream_name !== null) {
      ih['log_stream_name'] = this.log_stream_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_redshift_configuration_364_s3_backup_configuration_369_cloudwatch_logging_options_370';
  }
}

export class Aws_kinesis_firehose_delivery_stream_s3_configuration_371 implements PcoreValue {
  readonly bucket_arn: string;
  readonly role_arn: string;
  readonly buffer_interval: number|null;
  readonly buffer_size: number|null;
  readonly cloudwatch_logging_options: Aws_kinesis_firehose_delivery_stream_s3_configuration_371_cloudwatch_logging_options_372[]|null;
  readonly compression_format: string|null;
  readonly kms_key_arn: string|null;
  readonly prefix: string|null;

  constructor({
    bucket_arn,
    role_arn,
    buffer_interval = null,
    buffer_size = null,
    cloudwatch_logging_options = null,
    compression_format = null,
    kms_key_arn = null,
    prefix = null
  }: {
    bucket_arn: string,
    role_arn: string,
    buffer_interval?: number|null,
    buffer_size?: number|null,
    cloudwatch_logging_options?: Aws_kinesis_firehose_delivery_stream_s3_configuration_371_cloudwatch_logging_options_372[]|null,
    compression_format?: string|null,
    kms_key_arn?: string|null,
    prefix?: string|null
  }) {
    this.bucket_arn = bucket_arn;
    this.role_arn = role_arn;
    this.buffer_interval = buffer_interval;
    this.buffer_size = buffer_size;
    this.cloudwatch_logging_options = cloudwatch_logging_options;
    this.compression_format = compression_format;
    this.kms_key_arn = kms_key_arn;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_arn'] = this.bucket_arn;
    ih['role_arn'] = this.role_arn;
    if (this.buffer_interval !== null) {
      ih['buffer_interval'] = this.buffer_interval;
    }
    if (this.buffer_size !== null) {
      ih['buffer_size'] = this.buffer_size;
    }
    if (this.cloudwatch_logging_options !== null) {
      ih['cloudwatch_logging_options'] = this.cloudwatch_logging_options;
    }
    if (this.compression_format !== null) {
      ih['compression_format'] = this.compression_format;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_s3_configuration_371';
  }
}

export class Aws_kinesis_firehose_delivery_stream_s3_configuration_371_cloudwatch_logging_options_372 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly log_group_name: string|null;
  readonly log_stream_name: string|null;

  constructor({
    enabled = null,
    log_group_name = null,
    log_stream_name = null
  }: {
    enabled?: boolean|null,
    log_group_name?: string|null,
    log_stream_name?: string|null
  }) {
    this.enabled = enabled;
    this.log_group_name = log_group_name;
    this.log_stream_name = log_stream_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.log_group_name !== null) {
      ih['log_group_name'] = this.log_group_name;
    }
    if (this.log_stream_name !== null) {
      ih['log_stream_name'] = this.log_stream_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_s3_configuration_371_cloudwatch_logging_options_372';
  }
}

export class Aws_kinesis_firehose_delivery_stream_splunk_configuration_373 implements PcoreValue {
  readonly hec_endpoint: string;
  readonly hec_token: string;
  readonly cloudwatch_logging_options: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_cloudwatch_logging_options_374[]|null;
  readonly hec_acknowledgment_timeout: number|null;
  readonly hec_endpoint_type: string|null;
  readonly processing_configuration: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375[]|null;
  readonly retry_duration: number|null;
  readonly s3_backup_mode: string|null;

  constructor({
    hec_endpoint,
    hec_token,
    cloudwatch_logging_options = null,
    hec_acknowledgment_timeout = null,
    hec_endpoint_type = null,
    processing_configuration = null,
    retry_duration = null,
    s3_backup_mode = null
  }: {
    hec_endpoint: string,
    hec_token: string,
    cloudwatch_logging_options?: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_cloudwatch_logging_options_374[]|null,
    hec_acknowledgment_timeout?: number|null,
    hec_endpoint_type?: string|null,
    processing_configuration?: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375[]|null,
    retry_duration?: number|null,
    s3_backup_mode?: string|null
  }) {
    this.hec_endpoint = hec_endpoint;
    this.hec_token = hec_token;
    this.cloudwatch_logging_options = cloudwatch_logging_options;
    this.hec_acknowledgment_timeout = hec_acknowledgment_timeout;
    this.hec_endpoint_type = hec_endpoint_type;
    this.processing_configuration = processing_configuration;
    this.retry_duration = retry_duration;
    this.s3_backup_mode = s3_backup_mode;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['hec_endpoint'] = this.hec_endpoint;
    ih['hec_token'] = this.hec_token;
    if (this.cloudwatch_logging_options !== null) {
      ih['cloudwatch_logging_options'] = this.cloudwatch_logging_options;
    }
    if (this.hec_acknowledgment_timeout !== null) {
      ih['hec_acknowledgment_timeout'] = this.hec_acknowledgment_timeout;
    }
    if (this.hec_endpoint_type !== null) {
      ih['hec_endpoint_type'] = this.hec_endpoint_type;
    }
    if (this.processing_configuration !== null) {
      ih['processing_configuration'] = this.processing_configuration;
    }
    if (this.retry_duration !== null) {
      ih['retry_duration'] = this.retry_duration;
    }
    if (this.s3_backup_mode !== null) {
      ih['s3_backup_mode'] = this.s3_backup_mode;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_splunk_configuration_373';
  }
}

export class Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_cloudwatch_logging_options_374 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly log_group_name: string|null;
  readonly log_stream_name: string|null;

  constructor({
    enabled = null,
    log_group_name = null,
    log_stream_name = null
  }: {
    enabled?: boolean|null,
    log_group_name?: string|null,
    log_stream_name?: string|null
  }) {
    this.enabled = enabled;
    this.log_group_name = log_group_name;
    this.log_stream_name = log_stream_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.log_group_name !== null) {
      ih['log_group_name'] = this.log_group_name;
    }
    if (this.log_stream_name !== null) {
      ih['log_stream_name'] = this.log_stream_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_cloudwatch_logging_options_374';
  }
}

export class Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly processors: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376[]|null;

  constructor({
    enabled = null,
    processors = null
  }: {
    enabled?: boolean|null,
    processors?: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376[]|null
  }) {
    this.enabled = enabled;
    this.processors = processors;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.processors !== null) {
      ih['processors'] = this.processors;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375';
  }
}

export class Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376 implements PcoreValue {
  readonly type: string;
  readonly parameters: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376_parameters_377[]|null;

  constructor({
    type,
    parameters = null
  }: {
    type: string,
    parameters?: Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376_parameters_377[]|null
  }) {
    this.type = type;
    this.parameters = parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376';
  }
}

export class Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376_parameters_377 implements PcoreValue {
  readonly parameter_name: string;
  readonly parameter_value: string;

  constructor({
    parameter_name,
    parameter_value
  }: {
    parameter_name: string,
    parameter_value: string
  }) {
    this.parameter_name = parameter_name;
    this.parameter_value = parameter_value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['parameter_name'] = this.parameter_name;
    ih['parameter_value'] = this.parameter_value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_firehose_delivery_stream_splunk_configuration_373_processing_configuration_375_processors_376_parameters_377';
  }
}

export class Aws_kinesis_stream implements PcoreValue {
  readonly name: string;
  readonly shard_count: number;
  readonly aws_kinesis_stream_id: string|null;
  readonly arn: string|null;
  readonly encryption_type: string|null;
  readonly kms_key_id: string|null;
  readonly retention_period: number|null;
  readonly shard_level_metrics: string[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    shard_count,
    aws_kinesis_stream_id = null,
    arn = null,
    encryption_type = null,
    kms_key_id = null,
    retention_period = null,
    shard_level_metrics = null,
    tags = null
  }: {
    name: string,
    shard_count: number,
    aws_kinesis_stream_id?: string|null,
    arn?: string|null,
    encryption_type?: string|null,
    kms_key_id?: string|null,
    retention_period?: number|null,
    shard_level_metrics?: string[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.shard_count = shard_count;
    this.aws_kinesis_stream_id = aws_kinesis_stream_id;
    this.arn = arn;
    this.encryption_type = encryption_type;
    this.kms_key_id = kms_key_id;
    this.retention_period = retention_period;
    this.shard_level_metrics = shard_level_metrics;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['shard_count'] = this.shard_count;
    if (this.aws_kinesis_stream_id !== null) {
      ih['aws_kinesis_stream_id'] = this.aws_kinesis_stream_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.encryption_type !== null) {
      ih['encryption_type'] = this.encryption_type;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.retention_period !== null) {
      ih['retention_period'] = this.retention_period;
    }
    if (this.shard_level_metrics !== null) {
      ih['shard_level_metrics'] = this.shard_level_metrics;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_stream';
  }
}

export class Aws_kinesis_streamHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kinesis_streamHandler';
  }
}

export class Aws_kms_alias implements PcoreValue {
  readonly target_key_id: string;
  readonly aws_kms_alias_id: string|null;
  readonly arn: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly target_key_arn: string|null;

  constructor({
    target_key_id,
    aws_kms_alias_id = null,
    arn = null,
    name = null,
    name_prefix = null,
    target_key_arn = null
  }: {
    target_key_id: string,
    aws_kms_alias_id?: string|null,
    arn?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    target_key_arn?: string|null
  }) {
    this.target_key_id = target_key_id;
    this.aws_kms_alias_id = aws_kms_alias_id;
    this.arn = arn;
    this.name = name;
    this.name_prefix = name_prefix;
    this.target_key_arn = target_key_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['target_key_id'] = this.target_key_id;
    if (this.aws_kms_alias_id !== null) {
      ih['aws_kms_alias_id'] = this.aws_kms_alias_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.target_key_arn !== null) {
      ih['target_key_arn'] = this.target_key_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kms_alias';
  }
}

export class Aws_kms_aliasHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kms_aliasHandler';
  }
}

export class Aws_kms_grant implements PcoreValue {
  readonly grantee_principal: string;
  readonly key_id: string;
  readonly operations: string[];
  readonly aws_kms_grant_id: string|null;
  readonly constraints: Aws_kms_grant_constraints_378[]|null;
  readonly grant_creation_tokens: string[]|null;
  readonly grant_id: string|null;
  readonly grant_token: string|null;
  readonly name: string|null;
  readonly retire_on_delete: boolean|null;
  readonly retiring_principal: string|null;

  constructor({
    grantee_principal,
    key_id,
    operations,
    aws_kms_grant_id = null,
    constraints = null,
    grant_creation_tokens = null,
    grant_id = null,
    grant_token = null,
    name = null,
    retire_on_delete = null,
    retiring_principal = null
  }: {
    grantee_principal: string,
    key_id: string,
    operations: string[],
    aws_kms_grant_id?: string|null,
    constraints?: Aws_kms_grant_constraints_378[]|null,
    grant_creation_tokens?: string[]|null,
    grant_id?: string|null,
    grant_token?: string|null,
    name?: string|null,
    retire_on_delete?: boolean|null,
    retiring_principal?: string|null
  }) {
    this.grantee_principal = grantee_principal;
    this.key_id = key_id;
    this.operations = operations;
    this.aws_kms_grant_id = aws_kms_grant_id;
    this.constraints = constraints;
    this.grant_creation_tokens = grant_creation_tokens;
    this.grant_id = grant_id;
    this.grant_token = grant_token;
    this.name = name;
    this.retire_on_delete = retire_on_delete;
    this.retiring_principal = retiring_principal;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['grantee_principal'] = this.grantee_principal;
    ih['key_id'] = this.key_id;
    ih['operations'] = this.operations;
    if (this.aws_kms_grant_id !== null) {
      ih['aws_kms_grant_id'] = this.aws_kms_grant_id;
    }
    if (this.constraints !== null) {
      ih['constraints'] = this.constraints;
    }
    if (this.grant_creation_tokens !== null) {
      ih['grant_creation_tokens'] = this.grant_creation_tokens;
    }
    if (this.grant_id !== null) {
      ih['grant_id'] = this.grant_id;
    }
    if (this.grant_token !== null) {
      ih['grant_token'] = this.grant_token;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.retire_on_delete !== null) {
      ih['retire_on_delete'] = this.retire_on_delete;
    }
    if (this.retiring_principal !== null) {
      ih['retiring_principal'] = this.retiring_principal;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kms_grant';
  }
}

export class Aws_kms_grantHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kms_grantHandler';
  }
}

export class Aws_kms_grant_constraints_378 implements PcoreValue {
  readonly encryption_context_equals: {[s: string]: string}|null;
  readonly encryption_context_subset: {[s: string]: string}|null;

  constructor({
    encryption_context_equals = null,
    encryption_context_subset = null
  }: {
    encryption_context_equals?: {[s: string]: string}|null,
    encryption_context_subset?: {[s: string]: string}|null
  }) {
    this.encryption_context_equals = encryption_context_equals;
    this.encryption_context_subset = encryption_context_subset;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.encryption_context_equals !== null) {
      ih['encryption_context_equals'] = this.encryption_context_equals;
    }
    if (this.encryption_context_subset !== null) {
      ih['encryption_context_subset'] = this.encryption_context_subset;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kms_grant_constraints_378';
  }
}

export class Aws_kms_key implements PcoreValue {
  readonly aws_kms_key_id: string|null;
  readonly arn: string|null;
  readonly deletion_window_in_days: number|null;
  readonly description: string|null;
  readonly enable_key_rotation: boolean|null;
  readonly is_enabled: boolean|null;
  readonly key_id: string|null;
  readonly key_usage: string|null;
  readonly policy: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    aws_kms_key_id = null,
    arn = null,
    deletion_window_in_days = null,
    description = null,
    enable_key_rotation = null,
    is_enabled = null,
    key_id = null,
    key_usage = null,
    policy = null,
    tags = null
  }: {
    aws_kms_key_id?: string|null,
    arn?: string|null,
    deletion_window_in_days?: number|null,
    description?: string|null,
    enable_key_rotation?: boolean|null,
    is_enabled?: boolean|null,
    key_id?: string|null,
    key_usage?: string|null,
    policy?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.aws_kms_key_id = aws_kms_key_id;
    this.arn = arn;
    this.deletion_window_in_days = deletion_window_in_days;
    this.description = description;
    this.enable_key_rotation = enable_key_rotation;
    this.is_enabled = is_enabled;
    this.key_id = key_id;
    this.key_usage = key_usage;
    this.policy = policy;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_kms_key_id !== null) {
      ih['aws_kms_key_id'] = this.aws_kms_key_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.deletion_window_in_days !== null) {
      ih['deletion_window_in_days'] = this.deletion_window_in_days;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.enable_key_rotation !== null) {
      ih['enable_key_rotation'] = this.enable_key_rotation;
    }
    if (this.is_enabled !== null) {
      ih['is_enabled'] = this.is_enabled;
    }
    if (this.key_id !== null) {
      ih['key_id'] = this.key_id;
    }
    if (this.key_usage !== null) {
      ih['key_usage'] = this.key_usage;
    }
    if (this.policy !== null) {
      ih['policy'] = this.policy;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kms_key';
  }
}

export class Aws_kms_keyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_kms_keyHandler';
  }
}

export class Aws_lambda_alias implements PcoreValue {
  readonly function_name: string;
  readonly function_version: string;
  readonly name: string;
  readonly aws_lambda_alias_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly invoke_arn: string|null;
  readonly routing_config: Aws_lambda_alias_routing_config_379[]|null;

  constructor({
    function_name,
    function_version,
    name,
    aws_lambda_alias_id = null,
    arn = null,
    description = null,
    invoke_arn = null,
    routing_config = null
  }: {
    function_name: string,
    function_version: string,
    name: string,
    aws_lambda_alias_id?: string|null,
    arn?: string|null,
    description?: string|null,
    invoke_arn?: string|null,
    routing_config?: Aws_lambda_alias_routing_config_379[]|null
  }) {
    this.function_name = function_name;
    this.function_version = function_version;
    this.name = name;
    this.aws_lambda_alias_id = aws_lambda_alias_id;
    this.arn = arn;
    this.description = description;
    this.invoke_arn = invoke_arn;
    this.routing_config = routing_config;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['function_name'] = this.function_name;
    ih['function_version'] = this.function_version;
    ih['name'] = this.name;
    if (this.aws_lambda_alias_id !== null) {
      ih['aws_lambda_alias_id'] = this.aws_lambda_alias_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.invoke_arn !== null) {
      ih['invoke_arn'] = this.invoke_arn;
    }
    if (this.routing_config !== null) {
      ih['routing_config'] = this.routing_config;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_alias';
  }
}

export class Aws_lambda_aliasHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_aliasHandler';
  }
}

export class Aws_lambda_alias_routing_config_379 implements PcoreValue {
  readonly additional_version_weights: {[s: string]: string}|null;

  constructor({
    additional_version_weights = null
  }: {
    additional_version_weights?: {[s: string]: string}|null
  }) {
    this.additional_version_weights = additional_version_weights;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.additional_version_weights !== null) {
      ih['additional_version_weights'] = this.additional_version_weights;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_alias_routing_config_379';
  }
}

export class Aws_lambda_event_source_mapping implements PcoreValue {
  readonly event_source_arn: string;
  readonly function_name: string;
  readonly aws_lambda_event_source_mapping_id: string|null;
  readonly batch_size: number|null;
  readonly enabled: boolean|null;
  readonly function_arn: string|null;
  readonly last_modified: string|null;
  readonly last_processing_result: string|null;
  readonly starting_position: string|null;
  readonly starting_position_timestamp: string|null;
  readonly state: string|null;
  readonly state_transition_reason: string|null;
  readonly uuid: string|null;

  constructor({
    event_source_arn,
    function_name,
    aws_lambda_event_source_mapping_id = null,
    batch_size = null,
    enabled = null,
    function_arn = null,
    last_modified = null,
    last_processing_result = null,
    starting_position = null,
    starting_position_timestamp = null,
    state = null,
    state_transition_reason = null,
    uuid = null
  }: {
    event_source_arn: string,
    function_name: string,
    aws_lambda_event_source_mapping_id?: string|null,
    batch_size?: number|null,
    enabled?: boolean|null,
    function_arn?: string|null,
    last_modified?: string|null,
    last_processing_result?: string|null,
    starting_position?: string|null,
    starting_position_timestamp?: string|null,
    state?: string|null,
    state_transition_reason?: string|null,
    uuid?: string|null
  }) {
    this.event_source_arn = event_source_arn;
    this.function_name = function_name;
    this.aws_lambda_event_source_mapping_id = aws_lambda_event_source_mapping_id;
    this.batch_size = batch_size;
    this.enabled = enabled;
    this.function_arn = function_arn;
    this.last_modified = last_modified;
    this.last_processing_result = last_processing_result;
    this.starting_position = starting_position;
    this.starting_position_timestamp = starting_position_timestamp;
    this.state = state;
    this.state_transition_reason = state_transition_reason;
    this.uuid = uuid;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['event_source_arn'] = this.event_source_arn;
    ih['function_name'] = this.function_name;
    if (this.aws_lambda_event_source_mapping_id !== null) {
      ih['aws_lambda_event_source_mapping_id'] = this.aws_lambda_event_source_mapping_id;
    }
    if (this.batch_size !== null) {
      ih['batch_size'] = this.batch_size;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.function_arn !== null) {
      ih['function_arn'] = this.function_arn;
    }
    if (this.last_modified !== null) {
      ih['last_modified'] = this.last_modified;
    }
    if (this.last_processing_result !== null) {
      ih['last_processing_result'] = this.last_processing_result;
    }
    if (this.starting_position !== null) {
      ih['starting_position'] = this.starting_position;
    }
    if (this.starting_position_timestamp !== null) {
      ih['starting_position_timestamp'] = this.starting_position_timestamp;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    if (this.state_transition_reason !== null) {
      ih['state_transition_reason'] = this.state_transition_reason;
    }
    if (this.uuid !== null) {
      ih['uuid'] = this.uuid;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_event_source_mapping';
  }
}

export class Aws_lambda_event_source_mappingHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_event_source_mappingHandler';
  }
}

export class Aws_lambda_function implements PcoreValue {
  readonly function_name: string;
  readonly handler: string;
  readonly role: string;
  readonly runtime: string;
  readonly aws_lambda_function_id: string|null;
  readonly arn: string|null;
  readonly dead_letter_config: Aws_lambda_function_dead_letter_config_380[]|null;
  readonly description: string|null;
  readonly environment: Aws_lambda_function_environment_381[]|null;
  readonly filename: string|null;
  readonly invoke_arn: string|null;
  readonly kms_key_arn: string|null;
  readonly last_modified: string|null;
  readonly layers: string[]|null;
  readonly memory_size: number|null;
  readonly publish: boolean|null;
  readonly qualified_arn: string|null;
  readonly reserved_concurrent_executions: number|null;
  readonly s3_bucket: string|null;
  readonly s3_key: string|null;
  readonly s3_object_version: string|null;
  readonly source_code_hash: string|null;
  readonly source_code_size: number|null;
  readonly tags: {[s: string]: string}|null;
  readonly timeout: number|null;
  readonly tracing_config: Aws_lambda_function_tracing_config_382[]|null;
  readonly version: string|null;
  readonly vpc_config: Aws_lambda_function_vpc_config_383[]|null;

  constructor({
    function_name,
    handler,
    role,
    runtime,
    aws_lambda_function_id = null,
    arn = null,
    dead_letter_config = null,
    description = null,
    environment = null,
    filename = null,
    invoke_arn = null,
    kms_key_arn = null,
    last_modified = null,
    layers = null,
    memory_size = null,
    publish = null,
    qualified_arn = null,
    reserved_concurrent_executions = null,
    s3_bucket = null,
    s3_key = null,
    s3_object_version = null,
    source_code_hash = null,
    source_code_size = null,
    tags = null,
    timeout = null,
    tracing_config = null,
    version = null,
    vpc_config = null
  }: {
    function_name: string,
    handler: string,
    role: string,
    runtime: string,
    aws_lambda_function_id?: string|null,
    arn?: string|null,
    dead_letter_config?: Aws_lambda_function_dead_letter_config_380[]|null,
    description?: string|null,
    environment?: Aws_lambda_function_environment_381[]|null,
    filename?: string|null,
    invoke_arn?: string|null,
    kms_key_arn?: string|null,
    last_modified?: string|null,
    layers?: string[]|null,
    memory_size?: number|null,
    publish?: boolean|null,
    qualified_arn?: string|null,
    reserved_concurrent_executions?: number|null,
    s3_bucket?: string|null,
    s3_key?: string|null,
    s3_object_version?: string|null,
    source_code_hash?: string|null,
    source_code_size?: number|null,
    tags?: {[s: string]: string}|null,
    timeout?: number|null,
    tracing_config?: Aws_lambda_function_tracing_config_382[]|null,
    version?: string|null,
    vpc_config?: Aws_lambda_function_vpc_config_383[]|null
  }) {
    this.function_name = function_name;
    this.handler = handler;
    this.role = role;
    this.runtime = runtime;
    this.aws_lambda_function_id = aws_lambda_function_id;
    this.arn = arn;
    this.dead_letter_config = dead_letter_config;
    this.description = description;
    this.environment = environment;
    this.filename = filename;
    this.invoke_arn = invoke_arn;
    this.kms_key_arn = kms_key_arn;
    this.last_modified = last_modified;
    this.layers = layers;
    this.memory_size = memory_size;
    this.publish = publish;
    this.qualified_arn = qualified_arn;
    this.reserved_concurrent_executions = reserved_concurrent_executions;
    this.s3_bucket = s3_bucket;
    this.s3_key = s3_key;
    this.s3_object_version = s3_object_version;
    this.source_code_hash = source_code_hash;
    this.source_code_size = source_code_size;
    this.tags = tags;
    this.timeout = timeout;
    this.tracing_config = tracing_config;
    this.version = version;
    this.vpc_config = vpc_config;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['function_name'] = this.function_name;
    ih['handler'] = this.handler;
    ih['role'] = this.role;
    ih['runtime'] = this.runtime;
    if (this.aws_lambda_function_id !== null) {
      ih['aws_lambda_function_id'] = this.aws_lambda_function_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.dead_letter_config !== null) {
      ih['dead_letter_config'] = this.dead_letter_config;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.environment !== null) {
      ih['environment'] = this.environment;
    }
    if (this.filename !== null) {
      ih['filename'] = this.filename;
    }
    if (this.invoke_arn !== null) {
      ih['invoke_arn'] = this.invoke_arn;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.last_modified !== null) {
      ih['last_modified'] = this.last_modified;
    }
    if (this.layers !== null) {
      ih['layers'] = this.layers;
    }
    if (this.memory_size !== null) {
      ih['memory_size'] = this.memory_size;
    }
    if (this.publish !== null) {
      ih['publish'] = this.publish;
    }
    if (this.qualified_arn !== null) {
      ih['qualified_arn'] = this.qualified_arn;
    }
    if (this.reserved_concurrent_executions !== null) {
      ih['reserved_concurrent_executions'] = this.reserved_concurrent_executions;
    }
    if (this.s3_bucket !== null) {
      ih['s3_bucket'] = this.s3_bucket;
    }
    if (this.s3_key !== null) {
      ih['s3_key'] = this.s3_key;
    }
    if (this.s3_object_version !== null) {
      ih['s3_object_version'] = this.s3_object_version;
    }
    if (this.source_code_hash !== null) {
      ih['source_code_hash'] = this.source_code_hash;
    }
    if (this.source_code_size !== null) {
      ih['source_code_size'] = this.source_code_size;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.timeout !== null) {
      ih['timeout'] = this.timeout;
    }
    if (this.tracing_config !== null) {
      ih['tracing_config'] = this.tracing_config;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    if (this.vpc_config !== null) {
      ih['vpc_config'] = this.vpc_config;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_function';
  }
}

export class Aws_lambda_functionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_functionHandler';
  }
}

export class Aws_lambda_function_dead_letter_config_380 implements PcoreValue {
  readonly target_arn: string;

  constructor({
    target_arn
  }: {
    target_arn: string
  }) {
    this.target_arn = target_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['target_arn'] = this.target_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_function_dead_letter_config_380';
  }
}

export class Aws_lambda_function_environment_381 implements PcoreValue {
  readonly variables: {[s: string]: string}|null;

  constructor({
    variables = null
  }: {
    variables?: {[s: string]: string}|null
  }) {
    this.variables = variables;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.variables !== null) {
      ih['variables'] = this.variables;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_function_environment_381';
  }
}

export class Aws_lambda_function_tracing_config_382 implements PcoreValue {
  readonly mode: string;

  constructor({
    mode
  }: {
    mode: string
  }) {
    this.mode = mode;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mode'] = this.mode;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_function_tracing_config_382';
  }
}

export class Aws_lambda_function_vpc_config_383 implements PcoreValue {
  readonly security_group_ids: string[];
  readonly subnet_ids: string[];
  readonly vpc_id: string|null;

  constructor({
    security_group_ids,
    subnet_ids,
    vpc_id = null
  }: {
    security_group_ids: string[],
    subnet_ids: string[],
    vpc_id?: string|null
  }) {
    this.security_group_ids = security_group_ids;
    this.subnet_ids = subnet_ids;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['security_group_ids'] = this.security_group_ids;
    ih['subnet_ids'] = this.subnet_ids;
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_function_vpc_config_383';
  }
}

export class Aws_lambda_layer_version implements PcoreValue {
  readonly layer_name: string;
  readonly aws_lambda_layer_version_id: string|null;
  readonly arn: string|null;
  readonly compatible_runtimes: string[]|null;
  readonly created_date: string|null;
  readonly description: string|null;
  readonly filename: string|null;
  readonly layer_arn: string|null;
  readonly license_info: string|null;
  readonly s3_bucket: string|null;
  readonly s3_key: string|null;
  readonly s3_object_version: string|null;
  readonly source_code_hash: string|null;
  readonly source_code_size: number|null;
  readonly version: string|null;

  constructor({
    layer_name,
    aws_lambda_layer_version_id = null,
    arn = null,
    compatible_runtimes = null,
    created_date = null,
    description = null,
    filename = null,
    layer_arn = null,
    license_info = null,
    s3_bucket = null,
    s3_key = null,
    s3_object_version = null,
    source_code_hash = null,
    source_code_size = null,
    version = null
  }: {
    layer_name: string,
    aws_lambda_layer_version_id?: string|null,
    arn?: string|null,
    compatible_runtimes?: string[]|null,
    created_date?: string|null,
    description?: string|null,
    filename?: string|null,
    layer_arn?: string|null,
    license_info?: string|null,
    s3_bucket?: string|null,
    s3_key?: string|null,
    s3_object_version?: string|null,
    source_code_hash?: string|null,
    source_code_size?: number|null,
    version?: string|null
  }) {
    this.layer_name = layer_name;
    this.aws_lambda_layer_version_id = aws_lambda_layer_version_id;
    this.arn = arn;
    this.compatible_runtimes = compatible_runtimes;
    this.created_date = created_date;
    this.description = description;
    this.filename = filename;
    this.layer_arn = layer_arn;
    this.license_info = license_info;
    this.s3_bucket = s3_bucket;
    this.s3_key = s3_key;
    this.s3_object_version = s3_object_version;
    this.source_code_hash = source_code_hash;
    this.source_code_size = source_code_size;
    this.version = version;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['layer_name'] = this.layer_name;
    if (this.aws_lambda_layer_version_id !== null) {
      ih['aws_lambda_layer_version_id'] = this.aws_lambda_layer_version_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.compatible_runtimes !== null) {
      ih['compatible_runtimes'] = this.compatible_runtimes;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.filename !== null) {
      ih['filename'] = this.filename;
    }
    if (this.layer_arn !== null) {
      ih['layer_arn'] = this.layer_arn;
    }
    if (this.license_info !== null) {
      ih['license_info'] = this.license_info;
    }
    if (this.s3_bucket !== null) {
      ih['s3_bucket'] = this.s3_bucket;
    }
    if (this.s3_key !== null) {
      ih['s3_key'] = this.s3_key;
    }
    if (this.s3_object_version !== null) {
      ih['s3_object_version'] = this.s3_object_version;
    }
    if (this.source_code_hash !== null) {
      ih['source_code_hash'] = this.source_code_hash;
    }
    if (this.source_code_size !== null) {
      ih['source_code_size'] = this.source_code_size;
    }
    if (this.version !== null) {
      ih['version'] = this.version;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_layer_version';
  }
}

export class Aws_lambda_layer_versionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_layer_versionHandler';
  }
}

export class Aws_lambda_permission implements PcoreValue {
  readonly action: string;
  readonly function_name: string;
  readonly principal: string;
  readonly aws_lambda_permission_id: string|null;
  readonly event_source_token: string|null;
  readonly qualifier: string|null;
  readonly source_account: string|null;
  readonly source_arn: string|null;
  readonly statement_id: string|null;
  readonly statement_id_prefix: string|null;

  constructor({
    action,
    function_name,
    principal,
    aws_lambda_permission_id = null,
    event_source_token = null,
    qualifier = null,
    source_account = null,
    source_arn = null,
    statement_id = null,
    statement_id_prefix = null
  }: {
    action: string,
    function_name: string,
    principal: string,
    aws_lambda_permission_id?: string|null,
    event_source_token?: string|null,
    qualifier?: string|null,
    source_account?: string|null,
    source_arn?: string|null,
    statement_id?: string|null,
    statement_id_prefix?: string|null
  }) {
    this.action = action;
    this.function_name = function_name;
    this.principal = principal;
    this.aws_lambda_permission_id = aws_lambda_permission_id;
    this.event_source_token = event_source_token;
    this.qualifier = qualifier;
    this.source_account = source_account;
    this.source_arn = source_arn;
    this.statement_id = statement_id;
    this.statement_id_prefix = statement_id_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['function_name'] = this.function_name;
    ih['principal'] = this.principal;
    if (this.aws_lambda_permission_id !== null) {
      ih['aws_lambda_permission_id'] = this.aws_lambda_permission_id;
    }
    if (this.event_source_token !== null) {
      ih['event_source_token'] = this.event_source_token;
    }
    if (this.qualifier !== null) {
      ih['qualifier'] = this.qualifier;
    }
    if (this.source_account !== null) {
      ih['source_account'] = this.source_account;
    }
    if (this.source_arn !== null) {
      ih['source_arn'] = this.source_arn;
    }
    if (this.statement_id !== null) {
      ih['statement_id'] = this.statement_id;
    }
    if (this.statement_id_prefix !== null) {
      ih['statement_id_prefix'] = this.statement_id_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_permission';
  }
}

export class Aws_lambda_permissionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lambda_permissionHandler';
  }
}

export class Aws_launch_configuration implements PcoreValue {
  readonly image_id: string;
  readonly instance_type: string;
  readonly aws_launch_configuration_id: string|null;
  readonly associate_public_ip_address: boolean|null;
  readonly ebs_block_device: Aws_launch_configuration_ebs_block_device_384[]|null;
  readonly ebs_optimized: boolean|null;
  readonly enable_monitoring: boolean|null;
  readonly ephemeral_block_device: Aws_launch_configuration_ephemeral_block_device_385[]|null;
  readonly iam_instance_profile: string|null;
  readonly key_name: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly placement_tenancy: string|null;
  readonly root_block_device: Aws_launch_configuration_root_block_device_386[]|null;
  readonly security_groups: string[]|null;
  readonly spot_price: string|null;
  readonly user_data: string|null;
  readonly user_data_base64: string|null;
  readonly vpc_classic_link_id: string|null;
  readonly vpc_classic_link_security_groups: string[]|null;

  constructor({
    image_id,
    instance_type,
    aws_launch_configuration_id = null,
    associate_public_ip_address = null,
    ebs_block_device = null,
    ebs_optimized = null,
    enable_monitoring = null,
    ephemeral_block_device = null,
    iam_instance_profile = null,
    key_name = null,
    name = null,
    name_prefix = null,
    placement_tenancy = null,
    root_block_device = null,
    security_groups = null,
    spot_price = null,
    user_data = null,
    user_data_base64 = null,
    vpc_classic_link_id = null,
    vpc_classic_link_security_groups = null
  }: {
    image_id: string,
    instance_type: string,
    aws_launch_configuration_id?: string|null,
    associate_public_ip_address?: boolean|null,
    ebs_block_device?: Aws_launch_configuration_ebs_block_device_384[]|null,
    ebs_optimized?: boolean|null,
    enable_monitoring?: boolean|null,
    ephemeral_block_device?: Aws_launch_configuration_ephemeral_block_device_385[]|null,
    iam_instance_profile?: string|null,
    key_name?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    placement_tenancy?: string|null,
    root_block_device?: Aws_launch_configuration_root_block_device_386[]|null,
    security_groups?: string[]|null,
    spot_price?: string|null,
    user_data?: string|null,
    user_data_base64?: string|null,
    vpc_classic_link_id?: string|null,
    vpc_classic_link_security_groups?: string[]|null
  }) {
    this.image_id = image_id;
    this.instance_type = instance_type;
    this.aws_launch_configuration_id = aws_launch_configuration_id;
    this.associate_public_ip_address = associate_public_ip_address;
    this.ebs_block_device = ebs_block_device;
    this.ebs_optimized = ebs_optimized;
    this.enable_monitoring = enable_monitoring;
    this.ephemeral_block_device = ephemeral_block_device;
    this.iam_instance_profile = iam_instance_profile;
    this.key_name = key_name;
    this.name = name;
    this.name_prefix = name_prefix;
    this.placement_tenancy = placement_tenancy;
    this.root_block_device = root_block_device;
    this.security_groups = security_groups;
    this.spot_price = spot_price;
    this.user_data = user_data;
    this.user_data_base64 = user_data_base64;
    this.vpc_classic_link_id = vpc_classic_link_id;
    this.vpc_classic_link_security_groups = vpc_classic_link_security_groups;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['image_id'] = this.image_id;
    ih['instance_type'] = this.instance_type;
    if (this.aws_launch_configuration_id !== null) {
      ih['aws_launch_configuration_id'] = this.aws_launch_configuration_id;
    }
    if (this.associate_public_ip_address !== null) {
      ih['associate_public_ip_address'] = this.associate_public_ip_address;
    }
    if (this.ebs_block_device !== null) {
      ih['ebs_block_device'] = this.ebs_block_device;
    }
    if (this.ebs_optimized !== null) {
      ih['ebs_optimized'] = this.ebs_optimized;
    }
    if (this.enable_monitoring !== null) {
      ih['enable_monitoring'] = this.enable_monitoring;
    }
    if (this.ephemeral_block_device !== null) {
      ih['ephemeral_block_device'] = this.ephemeral_block_device;
    }
    if (this.iam_instance_profile !== null) {
      ih['iam_instance_profile'] = this.iam_instance_profile;
    }
    if (this.key_name !== null) {
      ih['key_name'] = this.key_name;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.placement_tenancy !== null) {
      ih['placement_tenancy'] = this.placement_tenancy;
    }
    if (this.root_block_device !== null) {
      ih['root_block_device'] = this.root_block_device;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.spot_price !== null) {
      ih['spot_price'] = this.spot_price;
    }
    if (this.user_data !== null) {
      ih['user_data'] = this.user_data;
    }
    if (this.user_data_base64 !== null) {
      ih['user_data_base64'] = this.user_data_base64;
    }
    if (this.vpc_classic_link_id !== null) {
      ih['vpc_classic_link_id'] = this.vpc_classic_link_id;
    }
    if (this.vpc_classic_link_security_groups !== null) {
      ih['vpc_classic_link_security_groups'] = this.vpc_classic_link_security_groups;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_configuration';
  }
}

export class Aws_launch_configurationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_configurationHandler';
  }
}

export class Aws_launch_configuration_ebs_block_device_384 implements PcoreValue {
  readonly device_name: string;
  readonly delete_on_termination: boolean|null;
  readonly encrypted: boolean|null;
  readonly iops: number|null;
  readonly no_device: boolean|null;
  readonly snapshot_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    device_name,
    delete_on_termination = null,
    encrypted = null,
    iops = null,
    no_device = null,
    snapshot_id = null,
    volume_size = null,
    volume_type = null
  }: {
    device_name: string,
    delete_on_termination?: boolean|null,
    encrypted?: boolean|null,
    iops?: number|null,
    no_device?: boolean|null,
    snapshot_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.device_name = device_name;
    this.delete_on_termination = delete_on_termination;
    this.encrypted = encrypted;
    this.iops = iops;
    this.no_device = no_device;
    this.snapshot_id = snapshot_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.no_device !== null) {
      ih['no_device'] = this.no_device;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_configuration_ebs_block_device_384';
  }
}

export class Aws_launch_configuration_ephemeral_block_device_385 implements PcoreValue {
  readonly device_name: string;
  readonly virtual_name: string;

  constructor({
    device_name,
    virtual_name
  }: {
    device_name: string,
    virtual_name: string
  }) {
    this.device_name = device_name;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    ih['virtual_name'] = this.virtual_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_configuration_ephemeral_block_device_385';
  }
}

export class Aws_launch_configuration_root_block_device_386 implements PcoreValue {
  readonly delete_on_termination: boolean|null;
  readonly iops: number|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    delete_on_termination = null,
    iops = null,
    volume_size = null,
    volume_type = null
  }: {
    delete_on_termination?: boolean|null,
    iops?: number|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.delete_on_termination = delete_on_termination;
    this.iops = iops;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_configuration_root_block_device_386';
  }
}

export class Aws_launch_template implements PcoreValue {
  readonly aws_launch_template_id: string|null;
  readonly arn: string|null;
  readonly block_device_mappings: Aws_launch_template_block_device_mappings_387[]|null;
  readonly capacity_reservation_specification: Aws_launch_template_capacity_reservation_specification_389[]|null;
  readonly credit_specification: Aws_launch_template_credit_specification_391[]|null;
  readonly default_version: number|null;
  readonly description: string|null;
  readonly disable_api_termination: boolean|null;
  readonly ebs_optimized: string|null;
  readonly elastic_gpu_specifications: Aws_launch_template_elastic_gpu_specifications_392[]|null;
  readonly iam_instance_profile: Aws_launch_template_iam_instance_profile_393[]|null;
  readonly image_id: string|null;
  readonly instance_initiated_shutdown_behavior: string|null;
  readonly instance_market_options: Aws_launch_template_instance_market_options_394[]|null;
  readonly instance_type: string|null;
  readonly kernel_id: string|null;
  readonly key_name: string|null;
  readonly latest_version: number|null;
  readonly license_specification: Aws_launch_template_license_specification_396[]|null;
  readonly monitoring: Aws_launch_template_monitoring_397[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly network_interfaces: Aws_launch_template_network_interfaces_398[]|null;
  readonly placement: Aws_launch_template_placement_399[]|null;
  readonly ram_disk_id: string|null;
  readonly security_group_names: string[]|null;
  readonly tag_specifications: Aws_launch_template_tag_specifications_400[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly user_data: string|null;
  readonly vpc_security_group_ids: string[]|null;

  constructor({
    aws_launch_template_id = null,
    arn = null,
    block_device_mappings = null,
    capacity_reservation_specification = null,
    credit_specification = null,
    default_version = null,
    description = null,
    disable_api_termination = null,
    ebs_optimized = null,
    elastic_gpu_specifications = null,
    iam_instance_profile = null,
    image_id = null,
    instance_initiated_shutdown_behavior = null,
    instance_market_options = null,
    instance_type = null,
    kernel_id = null,
    key_name = null,
    latest_version = null,
    license_specification = null,
    monitoring = null,
    name = null,
    name_prefix = null,
    network_interfaces = null,
    placement = null,
    ram_disk_id = null,
    security_group_names = null,
    tag_specifications = null,
    tags = null,
    user_data = null,
    vpc_security_group_ids = null
  }: {
    aws_launch_template_id?: string|null,
    arn?: string|null,
    block_device_mappings?: Aws_launch_template_block_device_mappings_387[]|null,
    capacity_reservation_specification?: Aws_launch_template_capacity_reservation_specification_389[]|null,
    credit_specification?: Aws_launch_template_credit_specification_391[]|null,
    default_version?: number|null,
    description?: string|null,
    disable_api_termination?: boolean|null,
    ebs_optimized?: string|null,
    elastic_gpu_specifications?: Aws_launch_template_elastic_gpu_specifications_392[]|null,
    iam_instance_profile?: Aws_launch_template_iam_instance_profile_393[]|null,
    image_id?: string|null,
    instance_initiated_shutdown_behavior?: string|null,
    instance_market_options?: Aws_launch_template_instance_market_options_394[]|null,
    instance_type?: string|null,
    kernel_id?: string|null,
    key_name?: string|null,
    latest_version?: number|null,
    license_specification?: Aws_launch_template_license_specification_396[]|null,
    monitoring?: Aws_launch_template_monitoring_397[]|null,
    name?: string|null,
    name_prefix?: string|null,
    network_interfaces?: Aws_launch_template_network_interfaces_398[]|null,
    placement?: Aws_launch_template_placement_399[]|null,
    ram_disk_id?: string|null,
    security_group_names?: string[]|null,
    tag_specifications?: Aws_launch_template_tag_specifications_400[]|null,
    tags?: {[s: string]: string}|null,
    user_data?: string|null,
    vpc_security_group_ids?: string[]|null
  }) {
    this.aws_launch_template_id = aws_launch_template_id;
    this.arn = arn;
    this.block_device_mappings = block_device_mappings;
    this.capacity_reservation_specification = capacity_reservation_specification;
    this.credit_specification = credit_specification;
    this.default_version = default_version;
    this.description = description;
    this.disable_api_termination = disable_api_termination;
    this.ebs_optimized = ebs_optimized;
    this.elastic_gpu_specifications = elastic_gpu_specifications;
    this.iam_instance_profile = iam_instance_profile;
    this.image_id = image_id;
    this.instance_initiated_shutdown_behavior = instance_initiated_shutdown_behavior;
    this.instance_market_options = instance_market_options;
    this.instance_type = instance_type;
    this.kernel_id = kernel_id;
    this.key_name = key_name;
    this.latest_version = latest_version;
    this.license_specification = license_specification;
    this.monitoring = monitoring;
    this.name = name;
    this.name_prefix = name_prefix;
    this.network_interfaces = network_interfaces;
    this.placement = placement;
    this.ram_disk_id = ram_disk_id;
    this.security_group_names = security_group_names;
    this.tag_specifications = tag_specifications;
    this.tags = tags;
    this.user_data = user_data;
    this.vpc_security_group_ids = vpc_security_group_ids;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_launch_template_id !== null) {
      ih['aws_launch_template_id'] = this.aws_launch_template_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.block_device_mappings !== null) {
      ih['block_device_mappings'] = this.block_device_mappings;
    }
    if (this.capacity_reservation_specification !== null) {
      ih['capacity_reservation_specification'] = this.capacity_reservation_specification;
    }
    if (this.credit_specification !== null) {
      ih['credit_specification'] = this.credit_specification;
    }
    if (this.default_version !== null) {
      ih['default_version'] = this.default_version;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.disable_api_termination !== null) {
      ih['disable_api_termination'] = this.disable_api_termination;
    }
    if (this.ebs_optimized !== null) {
      ih['ebs_optimized'] = this.ebs_optimized;
    }
    if (this.elastic_gpu_specifications !== null) {
      ih['elastic_gpu_specifications'] = this.elastic_gpu_specifications;
    }
    if (this.iam_instance_profile !== null) {
      ih['iam_instance_profile'] = this.iam_instance_profile;
    }
    if (this.image_id !== null) {
      ih['image_id'] = this.image_id;
    }
    if (this.instance_initiated_shutdown_behavior !== null) {
      ih['instance_initiated_shutdown_behavior'] = this.instance_initiated_shutdown_behavior;
    }
    if (this.instance_market_options !== null) {
      ih['instance_market_options'] = this.instance_market_options;
    }
    if (this.instance_type !== null) {
      ih['instance_type'] = this.instance_type;
    }
    if (this.kernel_id !== null) {
      ih['kernel_id'] = this.kernel_id;
    }
    if (this.key_name !== null) {
      ih['key_name'] = this.key_name;
    }
    if (this.latest_version !== null) {
      ih['latest_version'] = this.latest_version;
    }
    if (this.license_specification !== null) {
      ih['license_specification'] = this.license_specification;
    }
    if (this.monitoring !== null) {
      ih['monitoring'] = this.monitoring;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.network_interfaces !== null) {
      ih['network_interfaces'] = this.network_interfaces;
    }
    if (this.placement !== null) {
      ih['placement'] = this.placement;
    }
    if (this.ram_disk_id !== null) {
      ih['ram_disk_id'] = this.ram_disk_id;
    }
    if (this.security_group_names !== null) {
      ih['security_group_names'] = this.security_group_names;
    }
    if (this.tag_specifications !== null) {
      ih['tag_specifications'] = this.tag_specifications;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.user_data !== null) {
      ih['user_data'] = this.user_data;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template';
  }
}

export class Aws_launch_templateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_templateHandler';
  }
}

export class Aws_launch_template_block_device_mappings_387 implements PcoreValue {
  readonly device_name: string|null;
  readonly ebs: Aws_launch_template_block_device_mappings_387_ebs_388[]|null;
  readonly no_device: string|null;
  readonly virtual_name: string|null;

  constructor({
    device_name = null,
    ebs = null,
    no_device = null,
    virtual_name = null
  }: {
    device_name?: string|null,
    ebs?: Aws_launch_template_block_device_mappings_387_ebs_388[]|null,
    no_device?: string|null,
    virtual_name?: string|null
  }) {
    this.device_name = device_name;
    this.ebs = ebs;
    this.no_device = no_device;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.device_name !== null) {
      ih['device_name'] = this.device_name;
    }
    if (this.ebs !== null) {
      ih['ebs'] = this.ebs;
    }
    if (this.no_device !== null) {
      ih['no_device'] = this.no_device;
    }
    if (this.virtual_name !== null) {
      ih['virtual_name'] = this.virtual_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_block_device_mappings_387';
  }
}

export class Aws_launch_template_block_device_mappings_387_ebs_388 implements PcoreValue {
  readonly delete_on_termination: string|null;
  readonly encrypted: string|null;
  readonly iops: number|null;
  readonly kms_key_id: string|null;
  readonly snapshot_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    delete_on_termination = null,
    encrypted = null,
    iops = null,
    kms_key_id = null,
    snapshot_id = null,
    volume_size = null,
    volume_type = null
  }: {
    delete_on_termination?: string|null,
    encrypted?: string|null,
    iops?: number|null,
    kms_key_id?: string|null,
    snapshot_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.delete_on_termination = delete_on_termination;
    this.encrypted = encrypted;
    this.iops = iops;
    this.kms_key_id = kms_key_id;
    this.snapshot_id = snapshot_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_block_device_mappings_387_ebs_388';
  }
}

export class Aws_launch_template_capacity_reservation_specification_389 implements PcoreValue {
  readonly capacity_reservation_preference: string|null;
  readonly capacity_reservation_target: Aws_launch_template_capacity_reservation_specification_389_capacity_reservation_target_390[]|null;

  constructor({
    capacity_reservation_preference = null,
    capacity_reservation_target = null
  }: {
    capacity_reservation_preference?: string|null,
    capacity_reservation_target?: Aws_launch_template_capacity_reservation_specification_389_capacity_reservation_target_390[]|null
  }) {
    this.capacity_reservation_preference = capacity_reservation_preference;
    this.capacity_reservation_target = capacity_reservation_target;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.capacity_reservation_preference !== null) {
      ih['capacity_reservation_preference'] = this.capacity_reservation_preference;
    }
    if (this.capacity_reservation_target !== null) {
      ih['capacity_reservation_target'] = this.capacity_reservation_target;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_capacity_reservation_specification_389';
  }
}

export class Aws_launch_template_capacity_reservation_specification_389_capacity_reservation_target_390 implements PcoreValue {
  readonly capacity_reservation_id: string|null;

  constructor({
    capacity_reservation_id = null
  }: {
    capacity_reservation_id?: string|null
  }) {
    this.capacity_reservation_id = capacity_reservation_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.capacity_reservation_id !== null) {
      ih['capacity_reservation_id'] = this.capacity_reservation_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_capacity_reservation_specification_389_capacity_reservation_target_390';
  }
}

export class Aws_launch_template_credit_specification_391 implements PcoreValue {
  readonly cpu_credits: string|null;

  constructor({
    cpu_credits = null
  }: {
    cpu_credits?: string|null
  }) {
    this.cpu_credits = cpu_credits;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cpu_credits !== null) {
      ih['cpu_credits'] = this.cpu_credits;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_credit_specification_391';
  }
}

export class Aws_launch_template_elastic_gpu_specifications_392 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_elastic_gpu_specifications_392';
  }
}

export class Aws_launch_template_iam_instance_profile_393 implements PcoreValue {
  readonly arn: string|null;
  readonly name: string|null;

  constructor({
    arn = null,
    name = null
  }: {
    arn?: string|null,
    name?: string|null
  }) {
    this.arn = arn;
    this.name = name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_iam_instance_profile_393';
  }
}

export class Aws_launch_template_instance_market_options_394 implements PcoreValue {
  readonly market_type: string|null;
  readonly spot_options: Aws_launch_template_instance_market_options_394_spot_options_395[]|null;

  constructor({
    market_type = null,
    spot_options = null
  }: {
    market_type?: string|null,
    spot_options?: Aws_launch_template_instance_market_options_394_spot_options_395[]|null
  }) {
    this.market_type = market_type;
    this.spot_options = spot_options;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.market_type !== null) {
      ih['market_type'] = this.market_type;
    }
    if (this.spot_options !== null) {
      ih['spot_options'] = this.spot_options;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_instance_market_options_394';
  }
}

export class Aws_launch_template_instance_market_options_394_spot_options_395 implements PcoreValue {
  readonly block_duration_minutes: number|null;
  readonly instance_interruption_behavior: string|null;
  readonly max_price: string|null;
  readonly spot_instance_type: string|null;
  readonly valid_until: string|null;

  constructor({
    block_duration_minutes = null,
    instance_interruption_behavior = null,
    max_price = null,
    spot_instance_type = null,
    valid_until = null
  }: {
    block_duration_minutes?: number|null,
    instance_interruption_behavior?: string|null,
    max_price?: string|null,
    spot_instance_type?: string|null,
    valid_until?: string|null
  }) {
    this.block_duration_minutes = block_duration_minutes;
    this.instance_interruption_behavior = instance_interruption_behavior;
    this.max_price = max_price;
    this.spot_instance_type = spot_instance_type;
    this.valid_until = valid_until;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.block_duration_minutes !== null) {
      ih['block_duration_minutes'] = this.block_duration_minutes;
    }
    if (this.instance_interruption_behavior !== null) {
      ih['instance_interruption_behavior'] = this.instance_interruption_behavior;
    }
    if (this.max_price !== null) {
      ih['max_price'] = this.max_price;
    }
    if (this.spot_instance_type !== null) {
      ih['spot_instance_type'] = this.spot_instance_type;
    }
    if (this.valid_until !== null) {
      ih['valid_until'] = this.valid_until;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_instance_market_options_394_spot_options_395';
  }
}

export class Aws_launch_template_license_specification_396 implements PcoreValue {
  readonly license_configuration_arn: string;

  constructor({
    license_configuration_arn
  }: {
    license_configuration_arn: string
  }) {
    this.license_configuration_arn = license_configuration_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['license_configuration_arn'] = this.license_configuration_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_license_specification_396';
  }
}

export class Aws_launch_template_monitoring_397 implements PcoreValue {
  readonly enabled: boolean|null;

  constructor({
    enabled = null
  }: {
    enabled?: boolean|null
  }) {
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_monitoring_397';
  }
}

export class Aws_launch_template_network_interfaces_398 implements PcoreValue {
  readonly associate_public_ip_address: boolean|null;
  readonly delete_on_termination: boolean|null;
  readonly description: string|null;
  readonly device_index: number|null;
  readonly ipv4_address_count: number|null;
  readonly ipv4_addresses: string[]|null;
  readonly ipv6_address_count: number|null;
  readonly ipv6_addresses: string[]|null;
  readonly network_interface_id: string|null;
  readonly private_ip_address: string|null;
  readonly security_groups: string[]|null;
  readonly subnet_id: string|null;

  constructor({
    associate_public_ip_address = null,
    delete_on_termination = null,
    description = null,
    device_index = null,
    ipv4_address_count = null,
    ipv4_addresses = null,
    ipv6_address_count = null,
    ipv6_addresses = null,
    network_interface_id = null,
    private_ip_address = null,
    security_groups = null,
    subnet_id = null
  }: {
    associate_public_ip_address?: boolean|null,
    delete_on_termination?: boolean|null,
    description?: string|null,
    device_index?: number|null,
    ipv4_address_count?: number|null,
    ipv4_addresses?: string[]|null,
    ipv6_address_count?: number|null,
    ipv6_addresses?: string[]|null,
    network_interface_id?: string|null,
    private_ip_address?: string|null,
    security_groups?: string[]|null,
    subnet_id?: string|null
  }) {
    this.associate_public_ip_address = associate_public_ip_address;
    this.delete_on_termination = delete_on_termination;
    this.description = description;
    this.device_index = device_index;
    this.ipv4_address_count = ipv4_address_count;
    this.ipv4_addresses = ipv4_addresses;
    this.ipv6_address_count = ipv6_address_count;
    this.ipv6_addresses = ipv6_addresses;
    this.network_interface_id = network_interface_id;
    this.private_ip_address = private_ip_address;
    this.security_groups = security_groups;
    this.subnet_id = subnet_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.associate_public_ip_address !== null) {
      ih['associate_public_ip_address'] = this.associate_public_ip_address;
    }
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.device_index !== null) {
      ih['device_index'] = this.device_index;
    }
    if (this.ipv4_address_count !== null) {
      ih['ipv4_address_count'] = this.ipv4_address_count;
    }
    if (this.ipv4_addresses !== null) {
      ih['ipv4_addresses'] = this.ipv4_addresses;
    }
    if (this.ipv6_address_count !== null) {
      ih['ipv6_address_count'] = this.ipv6_address_count;
    }
    if (this.ipv6_addresses !== null) {
      ih['ipv6_addresses'] = this.ipv6_addresses;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.private_ip_address !== null) {
      ih['private_ip_address'] = this.private_ip_address;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_network_interfaces_398';
  }
}

export class Aws_launch_template_placement_399 implements PcoreValue {
  readonly affinity: string|null;
  readonly availability_zone: string|null;
  readonly group_name: string|null;
  readonly host_id: string|null;
  readonly spread_domain: string|null;
  readonly tenancy: string|null;

  constructor({
    affinity = null,
    availability_zone = null,
    group_name = null,
    host_id = null,
    spread_domain = null,
    tenancy = null
  }: {
    affinity?: string|null,
    availability_zone?: string|null,
    group_name?: string|null,
    host_id?: string|null,
    spread_domain?: string|null,
    tenancy?: string|null
  }) {
    this.affinity = affinity;
    this.availability_zone = availability_zone;
    this.group_name = group_name;
    this.host_id = host_id;
    this.spread_domain = spread_domain;
    this.tenancy = tenancy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.affinity !== null) {
      ih['affinity'] = this.affinity;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.group_name !== null) {
      ih['group_name'] = this.group_name;
    }
    if (this.host_id !== null) {
      ih['host_id'] = this.host_id;
    }
    if (this.spread_domain !== null) {
      ih['spread_domain'] = this.spread_domain;
    }
    if (this.tenancy !== null) {
      ih['tenancy'] = this.tenancy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_placement_399';
  }
}

export class Aws_launch_template_tag_specifications_400 implements PcoreValue {
  readonly resource_type: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    resource_type = null,
    tags = null
  }: {
    resource_type?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.resource_type = resource_type;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.resource_type !== null) {
      ih['resource_type'] = this.resource_type;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_launch_template_tag_specifications_400';
  }
}

export class Aws_lb implements PcoreValue {
  readonly aws_lb_id: string|null;
  readonly access_logs: Aws_lb_access_logs_401[]|null;
  readonly arn: string|null;
  readonly arn_suffix: string|null;
  readonly dns_name: string|null;
  readonly enable_cross_zone_load_balancing: boolean|null;
  readonly enable_deletion_protection: boolean|null;
  readonly enable_http2: boolean|null;
  readonly idle_timeout: number|null;
  readonly internal: boolean|null;
  readonly ip_address_type: string|null;
  readonly load_balancer_type: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly security_groups: string[]|null;
  readonly subnet_mapping: Aws_lb_subnet_mapping_402[]|null;
  readonly subnets: string[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;
  readonly zone_id: string|null;

  constructor({
    aws_lb_id = null,
    access_logs = null,
    arn = null,
    arn_suffix = null,
    dns_name = null,
    enable_cross_zone_load_balancing = null,
    enable_deletion_protection = null,
    enable_http2 = null,
    idle_timeout = null,
    internal = null,
    ip_address_type = null,
    load_balancer_type = null,
    name = null,
    name_prefix = null,
    security_groups = null,
    subnet_mapping = null,
    subnets = null,
    tags = null,
    vpc_id = null,
    zone_id = null
  }: {
    aws_lb_id?: string|null,
    access_logs?: Aws_lb_access_logs_401[]|null,
    arn?: string|null,
    arn_suffix?: string|null,
    dns_name?: string|null,
    enable_cross_zone_load_balancing?: boolean|null,
    enable_deletion_protection?: boolean|null,
    enable_http2?: boolean|null,
    idle_timeout?: number|null,
    internal?: boolean|null,
    ip_address_type?: string|null,
    load_balancer_type?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    security_groups?: string[]|null,
    subnet_mapping?: Aws_lb_subnet_mapping_402[]|null,
    subnets?: string[]|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null,
    zone_id?: string|null
  }) {
    this.aws_lb_id = aws_lb_id;
    this.access_logs = access_logs;
    this.arn = arn;
    this.arn_suffix = arn_suffix;
    this.dns_name = dns_name;
    this.enable_cross_zone_load_balancing = enable_cross_zone_load_balancing;
    this.enable_deletion_protection = enable_deletion_protection;
    this.enable_http2 = enable_http2;
    this.idle_timeout = idle_timeout;
    this.internal = internal;
    this.ip_address_type = ip_address_type;
    this.load_balancer_type = load_balancer_type;
    this.name = name;
    this.name_prefix = name_prefix;
    this.security_groups = security_groups;
    this.subnet_mapping = subnet_mapping;
    this.subnets = subnets;
    this.tags = tags;
    this.vpc_id = vpc_id;
    this.zone_id = zone_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_lb_id !== null) {
      ih['aws_lb_id'] = this.aws_lb_id;
    }
    if (this.access_logs !== null) {
      ih['access_logs'] = this.access_logs;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.arn_suffix !== null) {
      ih['arn_suffix'] = this.arn_suffix;
    }
    if (this.dns_name !== null) {
      ih['dns_name'] = this.dns_name;
    }
    if (this.enable_cross_zone_load_balancing !== null) {
      ih['enable_cross_zone_load_balancing'] = this.enable_cross_zone_load_balancing;
    }
    if (this.enable_deletion_protection !== null) {
      ih['enable_deletion_protection'] = this.enable_deletion_protection;
    }
    if (this.enable_http2 !== null) {
      ih['enable_http2'] = this.enable_http2;
    }
    if (this.idle_timeout !== null) {
      ih['idle_timeout'] = this.idle_timeout;
    }
    if (this.internal !== null) {
      ih['internal'] = this.internal;
    }
    if (this.ip_address_type !== null) {
      ih['ip_address_type'] = this.ip_address_type;
    }
    if (this.load_balancer_type !== null) {
      ih['load_balancer_type'] = this.load_balancer_type;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.subnet_mapping !== null) {
      ih['subnet_mapping'] = this.subnet_mapping;
    }
    if (this.subnets !== null) {
      ih['subnets'] = this.subnets;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    if (this.zone_id !== null) {
      ih['zone_id'] = this.zone_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb';
  }
}

export class Aws_lbHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lbHandler';
  }
}

export class Aws_lb_access_logs_401 implements PcoreValue {
  readonly bucket: string;
  readonly enabled: boolean|null;
  readonly prefix: string|null;

  constructor({
    bucket,
    enabled = null,
    prefix = null
  }: {
    bucket: string,
    enabled?: boolean|null,
    prefix?: string|null
  }) {
    this.bucket = bucket;
    this.enabled = enabled;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_access_logs_401';
  }
}

export class Aws_lb_cookie_stickiness_policy implements PcoreValue {
  readonly lb_port: number;
  readonly load_balancer: string;
  readonly name: string;
  readonly aws_lb_cookie_stickiness_policy_id: string|null;
  readonly cookie_expiration_period: number|null;

  constructor({
    lb_port,
    load_balancer,
    name,
    aws_lb_cookie_stickiness_policy_id = null,
    cookie_expiration_period = null
  }: {
    lb_port: number,
    load_balancer: string,
    name: string,
    aws_lb_cookie_stickiness_policy_id?: string|null,
    cookie_expiration_period?: number|null
  }) {
    this.lb_port = lb_port;
    this.load_balancer = load_balancer;
    this.name = name;
    this.aws_lb_cookie_stickiness_policy_id = aws_lb_cookie_stickiness_policy_id;
    this.cookie_expiration_period = cookie_expiration_period;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['lb_port'] = this.lb_port;
    ih['load_balancer'] = this.load_balancer;
    ih['name'] = this.name;
    if (this.aws_lb_cookie_stickiness_policy_id !== null) {
      ih['aws_lb_cookie_stickiness_policy_id'] = this.aws_lb_cookie_stickiness_policy_id;
    }
    if (this.cookie_expiration_period !== null) {
      ih['cookie_expiration_period'] = this.cookie_expiration_period;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_cookie_stickiness_policy';
  }
}

export class Aws_lb_cookie_stickiness_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_cookie_stickiness_policyHandler';
  }
}

export class Aws_lb_listener implements PcoreValue {
  readonly default_action: Aws_lb_listener_default_action_403[];
  readonly load_balancer_arn: string;
  readonly port: number;
  readonly aws_lb_listener_id: string|null;
  readonly arn: string|null;
  readonly certificate_arn: string|null;
  readonly protocol: string|null;
  readonly ssl_policy: string|null;

  constructor({
    default_action,
    load_balancer_arn,
    port,
    aws_lb_listener_id = null,
    arn = null,
    certificate_arn = null,
    protocol = null,
    ssl_policy = null
  }: {
    default_action: Aws_lb_listener_default_action_403[],
    load_balancer_arn: string,
    port: number,
    aws_lb_listener_id?: string|null,
    arn?: string|null,
    certificate_arn?: string|null,
    protocol?: string|null,
    ssl_policy?: string|null
  }) {
    this.default_action = default_action;
    this.load_balancer_arn = load_balancer_arn;
    this.port = port;
    this.aws_lb_listener_id = aws_lb_listener_id;
    this.arn = arn;
    this.certificate_arn = certificate_arn;
    this.protocol = protocol;
    this.ssl_policy = ssl_policy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_action'] = this.default_action;
    ih['load_balancer_arn'] = this.load_balancer_arn;
    ih['port'] = this.port;
    if (this.aws_lb_listener_id !== null) {
      ih['aws_lb_listener_id'] = this.aws_lb_listener_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.certificate_arn !== null) {
      ih['certificate_arn'] = this.certificate_arn;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.ssl_policy !== null) {
      ih['ssl_policy'] = this.ssl_policy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener';
  }
}

export class Aws_lb_listenerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listenerHandler';
  }
}

export class Aws_lb_listener_certificate implements PcoreValue {
  readonly certificate_arn: string;
  readonly listener_arn: string;
  readonly aws_lb_listener_certificate_id: string|null;

  constructor({
    certificate_arn,
    listener_arn,
    aws_lb_listener_certificate_id = null
  }: {
    certificate_arn: string,
    listener_arn: string,
    aws_lb_listener_certificate_id?: string|null
  }) {
    this.certificate_arn = certificate_arn;
    this.listener_arn = listener_arn;
    this.aws_lb_listener_certificate_id = aws_lb_listener_certificate_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['certificate_arn'] = this.certificate_arn;
    ih['listener_arn'] = this.listener_arn;
    if (this.aws_lb_listener_certificate_id !== null) {
      ih['aws_lb_listener_certificate_id'] = this.aws_lb_listener_certificate_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_certificate';
  }
}

export class Aws_lb_listener_certificateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_certificateHandler';
  }
}

export class Aws_lb_listener_default_action_403 implements PcoreValue {
  readonly type: string;
  readonly authenticate_cognito: Aws_lb_listener_default_action_403_authenticate_cognito_404[]|null;
  readonly authenticate_oidc: Aws_lb_listener_default_action_403_authenticate_oidc_405[]|null;
  readonly fixed_response: Aws_lb_listener_default_action_403_fixed_response_406[]|null;
  readonly order: number|null;
  readonly redirect: Aws_lb_listener_default_action_403_redirect_407[]|null;
  readonly target_group_arn: string|null;

  constructor({
    type,
    authenticate_cognito = null,
    authenticate_oidc = null,
    fixed_response = null,
    order = null,
    redirect = null,
    target_group_arn = null
  }: {
    type: string,
    authenticate_cognito?: Aws_lb_listener_default_action_403_authenticate_cognito_404[]|null,
    authenticate_oidc?: Aws_lb_listener_default_action_403_authenticate_oidc_405[]|null,
    fixed_response?: Aws_lb_listener_default_action_403_fixed_response_406[]|null,
    order?: number|null,
    redirect?: Aws_lb_listener_default_action_403_redirect_407[]|null,
    target_group_arn?: string|null
  }) {
    this.type = type;
    this.authenticate_cognito = authenticate_cognito;
    this.authenticate_oidc = authenticate_oidc;
    this.fixed_response = fixed_response;
    this.order = order;
    this.redirect = redirect;
    this.target_group_arn = target_group_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.authenticate_cognito !== null) {
      ih['authenticate_cognito'] = this.authenticate_cognito;
    }
    if (this.authenticate_oidc !== null) {
      ih['authenticate_oidc'] = this.authenticate_oidc;
    }
    if (this.fixed_response !== null) {
      ih['fixed_response'] = this.fixed_response;
    }
    if (this.order !== null) {
      ih['order'] = this.order;
    }
    if (this.redirect !== null) {
      ih['redirect'] = this.redirect;
    }
    if (this.target_group_arn !== null) {
      ih['target_group_arn'] = this.target_group_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_default_action_403';
  }
}

export class Aws_lb_listener_default_action_403_authenticate_cognito_404 implements PcoreValue {
  readonly user_pool_arn: string;
  readonly user_pool_client_id: string;
  readonly user_pool_domain: string;
  readonly authentication_request_extra_params: {[s: string]: string}|null;
  readonly on_unauthenticated_request: string|null;
  readonly scope: string|null;
  readonly session_cookie_name: string|null;
  readonly session_timeout: number|null;

  constructor({
    user_pool_arn,
    user_pool_client_id,
    user_pool_domain,
    authentication_request_extra_params = null,
    on_unauthenticated_request = null,
    scope = null,
    session_cookie_name = null,
    session_timeout = null
  }: {
    user_pool_arn: string,
    user_pool_client_id: string,
    user_pool_domain: string,
    authentication_request_extra_params?: {[s: string]: string}|null,
    on_unauthenticated_request?: string|null,
    scope?: string|null,
    session_cookie_name?: string|null,
    session_timeout?: number|null
  }) {
    this.user_pool_arn = user_pool_arn;
    this.user_pool_client_id = user_pool_client_id;
    this.user_pool_domain = user_pool_domain;
    this.authentication_request_extra_params = authentication_request_extra_params;
    this.on_unauthenticated_request = on_unauthenticated_request;
    this.scope = scope;
    this.session_cookie_name = session_cookie_name;
    this.session_timeout = session_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['user_pool_arn'] = this.user_pool_arn;
    ih['user_pool_client_id'] = this.user_pool_client_id;
    ih['user_pool_domain'] = this.user_pool_domain;
    if (this.authentication_request_extra_params !== null) {
      ih['authentication_request_extra_params'] = this.authentication_request_extra_params;
    }
    if (this.on_unauthenticated_request !== null) {
      ih['on_unauthenticated_request'] = this.on_unauthenticated_request;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.session_cookie_name !== null) {
      ih['session_cookie_name'] = this.session_cookie_name;
    }
    if (this.session_timeout !== null) {
      ih['session_timeout'] = this.session_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_default_action_403_authenticate_cognito_404';
  }
}

export class Aws_lb_listener_default_action_403_authenticate_oidc_405 implements PcoreValue {
  readonly authorization_endpoint: string;
  readonly client_id: string;
  readonly client_secret: string;
  readonly issuer: string;
  readonly token_endpoint: string;
  readonly user_info_endpoint: string;
  readonly authentication_request_extra_params: {[s: string]: string}|null;
  readonly on_unauthenticated_request: string|null;
  readonly scope: string|null;
  readonly session_cookie_name: string|null;
  readonly session_timeout: number|null;

  constructor({
    authorization_endpoint,
    client_id,
    client_secret,
    issuer,
    token_endpoint,
    user_info_endpoint,
    authentication_request_extra_params = null,
    on_unauthenticated_request = null,
    scope = null,
    session_cookie_name = null,
    session_timeout = null
  }: {
    authorization_endpoint: string,
    client_id: string,
    client_secret: string,
    issuer: string,
    token_endpoint: string,
    user_info_endpoint: string,
    authentication_request_extra_params?: {[s: string]: string}|null,
    on_unauthenticated_request?: string|null,
    scope?: string|null,
    session_cookie_name?: string|null,
    session_timeout?: number|null
  }) {
    this.authorization_endpoint = authorization_endpoint;
    this.client_id = client_id;
    this.client_secret = client_secret;
    this.issuer = issuer;
    this.token_endpoint = token_endpoint;
    this.user_info_endpoint = user_info_endpoint;
    this.authentication_request_extra_params = authentication_request_extra_params;
    this.on_unauthenticated_request = on_unauthenticated_request;
    this.scope = scope;
    this.session_cookie_name = session_cookie_name;
    this.session_timeout = session_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['authorization_endpoint'] = this.authorization_endpoint;
    ih['client_id'] = this.client_id;
    ih['client_secret'] = this.client_secret;
    ih['issuer'] = this.issuer;
    ih['token_endpoint'] = this.token_endpoint;
    ih['user_info_endpoint'] = this.user_info_endpoint;
    if (this.authentication_request_extra_params !== null) {
      ih['authentication_request_extra_params'] = this.authentication_request_extra_params;
    }
    if (this.on_unauthenticated_request !== null) {
      ih['on_unauthenticated_request'] = this.on_unauthenticated_request;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.session_cookie_name !== null) {
      ih['session_cookie_name'] = this.session_cookie_name;
    }
    if (this.session_timeout !== null) {
      ih['session_timeout'] = this.session_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_default_action_403_authenticate_oidc_405';
  }
}

export class Aws_lb_listener_default_action_403_fixed_response_406 implements PcoreValue {
  readonly content_type: string;
  readonly message_body: string|null;
  readonly status_code: string|null;

  constructor({
    content_type,
    message_body = null,
    status_code = null
  }: {
    content_type: string,
    message_body?: string|null,
    status_code?: string|null
  }) {
    this.content_type = content_type;
    this.message_body = message_body;
    this.status_code = status_code;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['content_type'] = this.content_type;
    if (this.message_body !== null) {
      ih['message_body'] = this.message_body;
    }
    if (this.status_code !== null) {
      ih['status_code'] = this.status_code;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_default_action_403_fixed_response_406';
  }
}

export class Aws_lb_listener_default_action_403_redirect_407 implements PcoreValue {
  readonly status_code: string;
  readonly host: string|null;
  readonly path: string|null;
  readonly port: string|null;
  readonly protocol: string|null;
  readonly query: string|null;

  constructor({
    status_code,
    host = null,
    path = null,
    port = null,
    protocol = null,
    query = null
  }: {
    status_code: string,
    host?: string|null,
    path?: string|null,
    port?: string|null,
    protocol?: string|null,
    query?: string|null
  }) {
    this.status_code = status_code;
    this.host = host;
    this.path = path;
    this.port = port;
    this.protocol = protocol;
    this.query = query;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['status_code'] = this.status_code;
    if (this.host !== null) {
      ih['host'] = this.host;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.query !== null) {
      ih['query'] = this.query;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_default_action_403_redirect_407';
  }
}

export class Aws_lb_listener_rule implements PcoreValue {
  readonly action: Aws_lb_listener_rule_action_408[];
  readonly condition: Aws_lb_listener_rule_condition_413[];
  readonly listener_arn: string;
  readonly aws_lb_listener_rule_id: string|null;
  readonly arn: string|null;
  readonly priority: number|null;

  constructor({
    action,
    condition,
    listener_arn,
    aws_lb_listener_rule_id = null,
    arn = null,
    priority = null
  }: {
    action: Aws_lb_listener_rule_action_408[],
    condition: Aws_lb_listener_rule_condition_413[],
    listener_arn: string,
    aws_lb_listener_rule_id?: string|null,
    arn?: string|null,
    priority?: number|null
  }) {
    this.action = action;
    this.condition = condition;
    this.listener_arn = listener_arn;
    this.aws_lb_listener_rule_id = aws_lb_listener_rule_id;
    this.arn = arn;
    this.priority = priority;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['condition'] = this.condition;
    ih['listener_arn'] = this.listener_arn;
    if (this.aws_lb_listener_rule_id !== null) {
      ih['aws_lb_listener_rule_id'] = this.aws_lb_listener_rule_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.priority !== null) {
      ih['priority'] = this.priority;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_rule';
  }
}

export class Aws_lb_listener_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_ruleHandler';
  }
}

export class Aws_lb_listener_rule_action_408 implements PcoreValue {
  readonly type: string;
  readonly authenticate_cognito: Aws_lb_listener_rule_action_408_authenticate_cognito_409[]|null;
  readonly authenticate_oidc: Aws_lb_listener_rule_action_408_authenticate_oidc_410[]|null;
  readonly fixed_response: Aws_lb_listener_rule_action_408_fixed_response_411[]|null;
  readonly order: number|null;
  readonly redirect: Aws_lb_listener_rule_action_408_redirect_412[]|null;
  readonly target_group_arn: string|null;

  constructor({
    type,
    authenticate_cognito = null,
    authenticate_oidc = null,
    fixed_response = null,
    order = null,
    redirect = null,
    target_group_arn = null
  }: {
    type: string,
    authenticate_cognito?: Aws_lb_listener_rule_action_408_authenticate_cognito_409[]|null,
    authenticate_oidc?: Aws_lb_listener_rule_action_408_authenticate_oidc_410[]|null,
    fixed_response?: Aws_lb_listener_rule_action_408_fixed_response_411[]|null,
    order?: number|null,
    redirect?: Aws_lb_listener_rule_action_408_redirect_412[]|null,
    target_group_arn?: string|null
  }) {
    this.type = type;
    this.authenticate_cognito = authenticate_cognito;
    this.authenticate_oidc = authenticate_oidc;
    this.fixed_response = fixed_response;
    this.order = order;
    this.redirect = redirect;
    this.target_group_arn = target_group_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.authenticate_cognito !== null) {
      ih['authenticate_cognito'] = this.authenticate_cognito;
    }
    if (this.authenticate_oidc !== null) {
      ih['authenticate_oidc'] = this.authenticate_oidc;
    }
    if (this.fixed_response !== null) {
      ih['fixed_response'] = this.fixed_response;
    }
    if (this.order !== null) {
      ih['order'] = this.order;
    }
    if (this.redirect !== null) {
      ih['redirect'] = this.redirect;
    }
    if (this.target_group_arn !== null) {
      ih['target_group_arn'] = this.target_group_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_rule_action_408';
  }
}

export class Aws_lb_listener_rule_action_408_authenticate_cognito_409 implements PcoreValue {
  readonly user_pool_arn: string;
  readonly user_pool_client_id: string;
  readonly user_pool_domain: string;
  readonly authentication_request_extra_params: {[s: string]: string}|null;
  readonly on_unauthenticated_request: string|null;
  readonly scope: string|null;
  readonly session_cookie_name: string|null;
  readonly session_timeout: number|null;

  constructor({
    user_pool_arn,
    user_pool_client_id,
    user_pool_domain,
    authentication_request_extra_params = null,
    on_unauthenticated_request = null,
    scope = null,
    session_cookie_name = null,
    session_timeout = null
  }: {
    user_pool_arn: string,
    user_pool_client_id: string,
    user_pool_domain: string,
    authentication_request_extra_params?: {[s: string]: string}|null,
    on_unauthenticated_request?: string|null,
    scope?: string|null,
    session_cookie_name?: string|null,
    session_timeout?: number|null
  }) {
    this.user_pool_arn = user_pool_arn;
    this.user_pool_client_id = user_pool_client_id;
    this.user_pool_domain = user_pool_domain;
    this.authentication_request_extra_params = authentication_request_extra_params;
    this.on_unauthenticated_request = on_unauthenticated_request;
    this.scope = scope;
    this.session_cookie_name = session_cookie_name;
    this.session_timeout = session_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['user_pool_arn'] = this.user_pool_arn;
    ih['user_pool_client_id'] = this.user_pool_client_id;
    ih['user_pool_domain'] = this.user_pool_domain;
    if (this.authentication_request_extra_params !== null) {
      ih['authentication_request_extra_params'] = this.authentication_request_extra_params;
    }
    if (this.on_unauthenticated_request !== null) {
      ih['on_unauthenticated_request'] = this.on_unauthenticated_request;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.session_cookie_name !== null) {
      ih['session_cookie_name'] = this.session_cookie_name;
    }
    if (this.session_timeout !== null) {
      ih['session_timeout'] = this.session_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_rule_action_408_authenticate_cognito_409';
  }
}

export class Aws_lb_listener_rule_action_408_authenticate_oidc_410 implements PcoreValue {
  readonly authorization_endpoint: string;
  readonly client_id: string;
  readonly client_secret: string;
  readonly issuer: string;
  readonly token_endpoint: string;
  readonly user_info_endpoint: string;
  readonly authentication_request_extra_params: {[s: string]: string}|null;
  readonly on_unauthenticated_request: string|null;
  readonly scope: string|null;
  readonly session_cookie_name: string|null;
  readonly session_timeout: number|null;

  constructor({
    authorization_endpoint,
    client_id,
    client_secret,
    issuer,
    token_endpoint,
    user_info_endpoint,
    authentication_request_extra_params = null,
    on_unauthenticated_request = null,
    scope = null,
    session_cookie_name = null,
    session_timeout = null
  }: {
    authorization_endpoint: string,
    client_id: string,
    client_secret: string,
    issuer: string,
    token_endpoint: string,
    user_info_endpoint: string,
    authentication_request_extra_params?: {[s: string]: string}|null,
    on_unauthenticated_request?: string|null,
    scope?: string|null,
    session_cookie_name?: string|null,
    session_timeout?: number|null
  }) {
    this.authorization_endpoint = authorization_endpoint;
    this.client_id = client_id;
    this.client_secret = client_secret;
    this.issuer = issuer;
    this.token_endpoint = token_endpoint;
    this.user_info_endpoint = user_info_endpoint;
    this.authentication_request_extra_params = authentication_request_extra_params;
    this.on_unauthenticated_request = on_unauthenticated_request;
    this.scope = scope;
    this.session_cookie_name = session_cookie_name;
    this.session_timeout = session_timeout;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['authorization_endpoint'] = this.authorization_endpoint;
    ih['client_id'] = this.client_id;
    ih['client_secret'] = this.client_secret;
    ih['issuer'] = this.issuer;
    ih['token_endpoint'] = this.token_endpoint;
    ih['user_info_endpoint'] = this.user_info_endpoint;
    if (this.authentication_request_extra_params !== null) {
      ih['authentication_request_extra_params'] = this.authentication_request_extra_params;
    }
    if (this.on_unauthenticated_request !== null) {
      ih['on_unauthenticated_request'] = this.on_unauthenticated_request;
    }
    if (this.scope !== null) {
      ih['scope'] = this.scope;
    }
    if (this.session_cookie_name !== null) {
      ih['session_cookie_name'] = this.session_cookie_name;
    }
    if (this.session_timeout !== null) {
      ih['session_timeout'] = this.session_timeout;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_rule_action_408_authenticate_oidc_410';
  }
}

export class Aws_lb_listener_rule_action_408_fixed_response_411 implements PcoreValue {
  readonly content_type: string;
  readonly message_body: string|null;
  readonly status_code: string|null;

  constructor({
    content_type,
    message_body = null,
    status_code = null
  }: {
    content_type: string,
    message_body?: string|null,
    status_code?: string|null
  }) {
    this.content_type = content_type;
    this.message_body = message_body;
    this.status_code = status_code;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['content_type'] = this.content_type;
    if (this.message_body !== null) {
      ih['message_body'] = this.message_body;
    }
    if (this.status_code !== null) {
      ih['status_code'] = this.status_code;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_rule_action_408_fixed_response_411';
  }
}

export class Aws_lb_listener_rule_action_408_redirect_412 implements PcoreValue {
  readonly status_code: string;
  readonly host: string|null;
  readonly path: string|null;
  readonly port: string|null;
  readonly protocol: string|null;
  readonly query: string|null;

  constructor({
    status_code,
    host = null,
    path = null,
    port = null,
    protocol = null,
    query = null
  }: {
    status_code: string,
    host?: string|null,
    path?: string|null,
    port?: string|null,
    protocol?: string|null,
    query?: string|null
  }) {
    this.status_code = status_code;
    this.host = host;
    this.path = path;
    this.port = port;
    this.protocol = protocol;
    this.query = query;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['status_code'] = this.status_code;
    if (this.host !== null) {
      ih['host'] = this.host;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.query !== null) {
      ih['query'] = this.query;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_rule_action_408_redirect_412';
  }
}

export class Aws_lb_listener_rule_condition_413 implements PcoreValue {
  readonly field: string|null;
  readonly values: string[]|null;

  constructor({
    field = null,
    values = null
  }: {
    field?: string|null,
    values?: string[]|null
  }) {
    this.field = field;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.field !== null) {
      ih['field'] = this.field;
    }
    if (this.values !== null) {
      ih['values'] = this.values;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_listener_rule_condition_413';
  }
}

export class Aws_lb_ssl_negotiation_policy implements PcoreValue {
  readonly lb_port: number;
  readonly load_balancer: string;
  readonly name: string;
  readonly aws_lb_ssl_negotiation_policy_id: string|null;
  readonly attribute: Aws_lb_ssl_negotiation_policy_attribute_414[]|null;

  constructor({
    lb_port,
    load_balancer,
    name,
    aws_lb_ssl_negotiation_policy_id = null,
    attribute = null
  }: {
    lb_port: number,
    load_balancer: string,
    name: string,
    aws_lb_ssl_negotiation_policy_id?: string|null,
    attribute?: Aws_lb_ssl_negotiation_policy_attribute_414[]|null
  }) {
    this.lb_port = lb_port;
    this.load_balancer = load_balancer;
    this.name = name;
    this.aws_lb_ssl_negotiation_policy_id = aws_lb_ssl_negotiation_policy_id;
    this.attribute = attribute;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['lb_port'] = this.lb_port;
    ih['load_balancer'] = this.load_balancer;
    ih['name'] = this.name;
    if (this.aws_lb_ssl_negotiation_policy_id !== null) {
      ih['aws_lb_ssl_negotiation_policy_id'] = this.aws_lb_ssl_negotiation_policy_id;
    }
    if (this.attribute !== null) {
      ih['attribute'] = this.attribute;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_ssl_negotiation_policy';
  }
}

export class Aws_lb_ssl_negotiation_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_ssl_negotiation_policyHandler';
  }
}

export class Aws_lb_ssl_negotiation_policy_attribute_414 implements PcoreValue {
  readonly name: string;
  readonly value: string;

  constructor({
    name,
    value
  }: {
    name: string,
    value: string
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_ssl_negotiation_policy_attribute_414';
  }
}

export class Aws_lb_subnet_mapping_402 implements PcoreValue {
  readonly subnet_id: string;
  readonly allocation_id: string|null;

  constructor({
    subnet_id,
    allocation_id = null
  }: {
    subnet_id: string,
    allocation_id?: string|null
  }) {
    this.subnet_id = subnet_id;
    this.allocation_id = allocation_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_id'] = this.subnet_id;
    if (this.allocation_id !== null) {
      ih['allocation_id'] = this.allocation_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_subnet_mapping_402';
  }
}

export class Aws_lb_target_group implements PcoreValue {
  readonly aws_lb_target_group_id: string|null;
  readonly arn: string|null;
  readonly arn_suffix: string|null;
  readonly deregistration_delay: number|null;
  readonly health_check: Aws_lb_target_group_health_check_415[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly port: number|null;
  readonly protocol: string|null;
  readonly proxy_protocol_v2: boolean|null;
  readonly slow_start: number|null;
  readonly stickiness: Aws_lb_target_group_stickiness_416[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly target_type: string|null;
  readonly vpc_id: string|null;

  constructor({
    aws_lb_target_group_id = null,
    arn = null,
    arn_suffix = null,
    deregistration_delay = null,
    health_check = null,
    name = null,
    name_prefix = null,
    port = null,
    protocol = null,
    proxy_protocol_v2 = null,
    slow_start = null,
    stickiness = null,
    tags = null,
    target_type = null,
    vpc_id = null
  }: {
    aws_lb_target_group_id?: string|null,
    arn?: string|null,
    arn_suffix?: string|null,
    deregistration_delay?: number|null,
    health_check?: Aws_lb_target_group_health_check_415[]|null,
    name?: string|null,
    name_prefix?: string|null,
    port?: number|null,
    protocol?: string|null,
    proxy_protocol_v2?: boolean|null,
    slow_start?: number|null,
    stickiness?: Aws_lb_target_group_stickiness_416[]|null,
    tags?: {[s: string]: string}|null,
    target_type?: string|null,
    vpc_id?: string|null
  }) {
    this.aws_lb_target_group_id = aws_lb_target_group_id;
    this.arn = arn;
    this.arn_suffix = arn_suffix;
    this.deregistration_delay = deregistration_delay;
    this.health_check = health_check;
    this.name = name;
    this.name_prefix = name_prefix;
    this.port = port;
    this.protocol = protocol;
    this.proxy_protocol_v2 = proxy_protocol_v2;
    this.slow_start = slow_start;
    this.stickiness = stickiness;
    this.tags = tags;
    this.target_type = target_type;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_lb_target_group_id !== null) {
      ih['aws_lb_target_group_id'] = this.aws_lb_target_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.arn_suffix !== null) {
      ih['arn_suffix'] = this.arn_suffix;
    }
    if (this.deregistration_delay !== null) {
      ih['deregistration_delay'] = this.deregistration_delay;
    }
    if (this.health_check !== null) {
      ih['health_check'] = this.health_check;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.proxy_protocol_v2 !== null) {
      ih['proxy_protocol_v2'] = this.proxy_protocol_v2;
    }
    if (this.slow_start !== null) {
      ih['slow_start'] = this.slow_start;
    }
    if (this.stickiness !== null) {
      ih['stickiness'] = this.stickiness;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.target_type !== null) {
      ih['target_type'] = this.target_type;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_target_group';
  }
}

export class Aws_lb_target_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_target_groupHandler';
  }
}

export class Aws_lb_target_group_attachment implements PcoreValue {
  readonly target_group_arn: string;
  readonly target_id: string;
  readonly aws_lb_target_group_attachment_id: string|null;
  readonly availability_zone: string|null;
  readonly port: number|null;

  constructor({
    target_group_arn,
    target_id,
    aws_lb_target_group_attachment_id = null,
    availability_zone = null,
    port = null
  }: {
    target_group_arn: string,
    target_id: string,
    aws_lb_target_group_attachment_id?: string|null,
    availability_zone?: string|null,
    port?: number|null
  }) {
    this.target_group_arn = target_group_arn;
    this.target_id = target_id;
    this.aws_lb_target_group_attachment_id = aws_lb_target_group_attachment_id;
    this.availability_zone = availability_zone;
    this.port = port;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['target_group_arn'] = this.target_group_arn;
    ih['target_id'] = this.target_id;
    if (this.aws_lb_target_group_attachment_id !== null) {
      ih['aws_lb_target_group_attachment_id'] = this.aws_lb_target_group_attachment_id;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_target_group_attachment';
  }
}

export class Aws_lb_target_group_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_target_group_attachmentHandler';
  }
}

export class Aws_lb_target_group_health_check_415 implements PcoreValue {
  readonly healthy_threshold: number|null;
  readonly interval: number|null;
  readonly matcher: string|null;
  readonly path: string|null;
  readonly port: string|null;
  readonly protocol: string|null;
  readonly timeout: number|null;
  readonly unhealthy_threshold: number|null;

  constructor({
    healthy_threshold = null,
    interval = null,
    matcher = null,
    path = null,
    port = null,
    protocol = null,
    timeout = null,
    unhealthy_threshold = null
  }: {
    healthy_threshold?: number|null,
    interval?: number|null,
    matcher?: string|null,
    path?: string|null,
    port?: string|null,
    protocol?: string|null,
    timeout?: number|null,
    unhealthy_threshold?: number|null
  }) {
    this.healthy_threshold = healthy_threshold;
    this.interval = interval;
    this.matcher = matcher;
    this.path = path;
    this.port = port;
    this.protocol = protocol;
    this.timeout = timeout;
    this.unhealthy_threshold = unhealthy_threshold;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.healthy_threshold !== null) {
      ih['healthy_threshold'] = this.healthy_threshold;
    }
    if (this.interval !== null) {
      ih['interval'] = this.interval;
    }
    if (this.matcher !== null) {
      ih['matcher'] = this.matcher;
    }
    if (this.path !== null) {
      ih['path'] = this.path;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.protocol !== null) {
      ih['protocol'] = this.protocol;
    }
    if (this.timeout !== null) {
      ih['timeout'] = this.timeout;
    }
    if (this.unhealthy_threshold !== null) {
      ih['unhealthy_threshold'] = this.unhealthy_threshold;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_target_group_health_check_415';
  }
}

export class Aws_lb_target_group_stickiness_416 implements PcoreValue {
  readonly type: string;
  readonly cookie_duration: number|null;
  readonly enabled: boolean|null;

  constructor({
    type,
    cookie_duration = null,
    enabled = null
  }: {
    type: string,
    cookie_duration?: number|null,
    enabled?: boolean|null
  }) {
    this.type = type;
    this.cookie_duration = cookie_duration;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.cookie_duration !== null) {
      ih['cookie_duration'] = this.cookie_duration;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lb_target_group_stickiness_416';
  }
}

export class Aws_licensemanager_association implements PcoreValue {
  readonly license_configuration_arn: string;
  readonly resource_arn: string;
  readonly aws_licensemanager_association_id: string|null;

  constructor({
    license_configuration_arn,
    resource_arn,
    aws_licensemanager_association_id = null
  }: {
    license_configuration_arn: string,
    resource_arn: string,
    aws_licensemanager_association_id?: string|null
  }) {
    this.license_configuration_arn = license_configuration_arn;
    this.resource_arn = resource_arn;
    this.aws_licensemanager_association_id = aws_licensemanager_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['license_configuration_arn'] = this.license_configuration_arn;
    ih['resource_arn'] = this.resource_arn;
    if (this.aws_licensemanager_association_id !== null) {
      ih['aws_licensemanager_association_id'] = this.aws_licensemanager_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_licensemanager_association';
  }
}

export class Aws_licensemanager_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_licensemanager_associationHandler';
  }
}

export class Aws_licensemanager_license_configuration implements PcoreValue {
  readonly license_counting_type: string;
  readonly name: string;
  readonly aws_licensemanager_license_configuration_id: string|null;
  readonly description: string|null;
  readonly license_count: number|null;
  readonly license_count_hard_limit: boolean|null;
  readonly license_rules: string[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    license_counting_type,
    name,
    aws_licensemanager_license_configuration_id = null,
    description = null,
    license_count = null,
    license_count_hard_limit = null,
    license_rules = null,
    tags = null
  }: {
    license_counting_type: string,
    name: string,
    aws_licensemanager_license_configuration_id?: string|null,
    description?: string|null,
    license_count?: number|null,
    license_count_hard_limit?: boolean|null,
    license_rules?: string[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.license_counting_type = license_counting_type;
    this.name = name;
    this.aws_licensemanager_license_configuration_id = aws_licensemanager_license_configuration_id;
    this.description = description;
    this.license_count = license_count;
    this.license_count_hard_limit = license_count_hard_limit;
    this.license_rules = license_rules;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['license_counting_type'] = this.license_counting_type;
    ih['name'] = this.name;
    if (this.aws_licensemanager_license_configuration_id !== null) {
      ih['aws_licensemanager_license_configuration_id'] = this.aws_licensemanager_license_configuration_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.license_count !== null) {
      ih['license_count'] = this.license_count;
    }
    if (this.license_count_hard_limit !== null) {
      ih['license_count_hard_limit'] = this.license_count_hard_limit;
    }
    if (this.license_rules !== null) {
      ih['license_rules'] = this.license_rules;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_licensemanager_license_configuration';
  }
}

export class Aws_licensemanager_license_configurationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_licensemanager_license_configurationHandler';
  }
}

export class Aws_lightsail_domain implements PcoreValue {
  readonly domain_name: string;
  readonly aws_lightsail_domain_id: string|null;
  readonly arn: string|null;

  constructor({
    domain_name,
    aws_lightsail_domain_id = null,
    arn = null
  }: {
    domain_name: string,
    aws_lightsail_domain_id?: string|null,
    arn?: string|null
  }) {
    this.domain_name = domain_name;
    this.aws_lightsail_domain_id = aws_lightsail_domain_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain_name'] = this.domain_name;
    if (this.aws_lightsail_domain_id !== null) {
      ih['aws_lightsail_domain_id'] = this.aws_lightsail_domain_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_domain';
  }
}

export class Aws_lightsail_domainHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_domainHandler';
  }
}

export class Aws_lightsail_instance implements PcoreValue {
  readonly availability_zone: string;
  readonly blueprint_id: string;
  readonly bundle_id: string;
  readonly name: string;
  readonly aws_lightsail_instance_id: string|null;
  readonly arn: string|null;
  readonly cpu_count: number|null;
  readonly created_at: string|null;
  readonly ipv6_address: string|null;
  readonly is_static_ip: boolean|null;
  readonly key_pair_name: string|null;
  readonly private_ip_address: string|null;
  readonly public_ip_address: string|null;
  readonly ram_size: number|null;
  readonly user_data: string|null;
  readonly username: string|null;

  constructor({
    availability_zone,
    blueprint_id,
    bundle_id,
    name,
    aws_lightsail_instance_id = null,
    arn = null,
    cpu_count = null,
    created_at = null,
    ipv6_address = null,
    is_static_ip = null,
    key_pair_name = null,
    private_ip_address = null,
    public_ip_address = null,
    ram_size = null,
    user_data = null,
    username = null
  }: {
    availability_zone: string,
    blueprint_id: string,
    bundle_id: string,
    name: string,
    aws_lightsail_instance_id?: string|null,
    arn?: string|null,
    cpu_count?: number|null,
    created_at?: string|null,
    ipv6_address?: string|null,
    is_static_ip?: boolean|null,
    key_pair_name?: string|null,
    private_ip_address?: string|null,
    public_ip_address?: string|null,
    ram_size?: number|null,
    user_data?: string|null,
    username?: string|null
  }) {
    this.availability_zone = availability_zone;
    this.blueprint_id = blueprint_id;
    this.bundle_id = bundle_id;
    this.name = name;
    this.aws_lightsail_instance_id = aws_lightsail_instance_id;
    this.arn = arn;
    this.cpu_count = cpu_count;
    this.created_at = created_at;
    this.ipv6_address = ipv6_address;
    this.is_static_ip = is_static_ip;
    this.key_pair_name = key_pair_name;
    this.private_ip_address = private_ip_address;
    this.public_ip_address = public_ip_address;
    this.ram_size = ram_size;
    this.user_data = user_data;
    this.username = username;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['availability_zone'] = this.availability_zone;
    ih['blueprint_id'] = this.blueprint_id;
    ih['bundle_id'] = this.bundle_id;
    ih['name'] = this.name;
    if (this.aws_lightsail_instance_id !== null) {
      ih['aws_lightsail_instance_id'] = this.aws_lightsail_instance_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.cpu_count !== null) {
      ih['cpu_count'] = this.cpu_count;
    }
    if (this.created_at !== null) {
      ih['created_at'] = this.created_at;
    }
    if (this.ipv6_address !== null) {
      ih['ipv6_address'] = this.ipv6_address;
    }
    if (this.is_static_ip !== null) {
      ih['is_static_ip'] = this.is_static_ip;
    }
    if (this.key_pair_name !== null) {
      ih['key_pair_name'] = this.key_pair_name;
    }
    if (this.private_ip_address !== null) {
      ih['private_ip_address'] = this.private_ip_address;
    }
    if (this.public_ip_address !== null) {
      ih['public_ip_address'] = this.public_ip_address;
    }
    if (this.ram_size !== null) {
      ih['ram_size'] = this.ram_size;
    }
    if (this.user_data !== null) {
      ih['user_data'] = this.user_data;
    }
    if (this.username !== null) {
      ih['username'] = this.username;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_instance';
  }
}

export class Aws_lightsail_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_instanceHandler';
  }
}

export class Aws_lightsail_key_pair implements PcoreValue {
  readonly aws_lightsail_key_pair_id: string|null;
  readonly arn: string|null;
  readonly encrypted_fingerprint: string|null;
  readonly encrypted_private_key: string|null;
  readonly fingerprint: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly pgp_key: string|null;
  readonly private_key: string|null;
  readonly public_key: string|null;

  constructor({
    aws_lightsail_key_pair_id = null,
    arn = null,
    encrypted_fingerprint = null,
    encrypted_private_key = null,
    fingerprint = null,
    name = null,
    name_prefix = null,
    pgp_key = null,
    private_key = null,
    public_key = null
  }: {
    aws_lightsail_key_pair_id?: string|null,
    arn?: string|null,
    encrypted_fingerprint?: string|null,
    encrypted_private_key?: string|null,
    fingerprint?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    pgp_key?: string|null,
    private_key?: string|null,
    public_key?: string|null
  }) {
    this.aws_lightsail_key_pair_id = aws_lightsail_key_pair_id;
    this.arn = arn;
    this.encrypted_fingerprint = encrypted_fingerprint;
    this.encrypted_private_key = encrypted_private_key;
    this.fingerprint = fingerprint;
    this.name = name;
    this.name_prefix = name_prefix;
    this.pgp_key = pgp_key;
    this.private_key = private_key;
    this.public_key = public_key;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_lightsail_key_pair_id !== null) {
      ih['aws_lightsail_key_pair_id'] = this.aws_lightsail_key_pair_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.encrypted_fingerprint !== null) {
      ih['encrypted_fingerprint'] = this.encrypted_fingerprint;
    }
    if (this.encrypted_private_key !== null) {
      ih['encrypted_private_key'] = this.encrypted_private_key;
    }
    if (this.fingerprint !== null) {
      ih['fingerprint'] = this.fingerprint;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.pgp_key !== null) {
      ih['pgp_key'] = this.pgp_key;
    }
    if (this.private_key !== null) {
      ih['private_key'] = this.private_key;
    }
    if (this.public_key !== null) {
      ih['public_key'] = this.public_key;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_key_pair';
  }
}

export class Aws_lightsail_key_pairHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_key_pairHandler';
  }
}

export class Aws_lightsail_static_ip implements PcoreValue {
  readonly name: string;
  readonly aws_lightsail_static_ip_id: string|null;
  readonly arn: string|null;
  readonly ip_address: string|null;
  readonly support_code: string|null;

  constructor({
    name,
    aws_lightsail_static_ip_id = null,
    arn = null,
    ip_address = null,
    support_code = null
  }: {
    name: string,
    aws_lightsail_static_ip_id?: string|null,
    arn?: string|null,
    ip_address?: string|null,
    support_code?: string|null
  }) {
    this.name = name;
    this.aws_lightsail_static_ip_id = aws_lightsail_static_ip_id;
    this.arn = arn;
    this.ip_address = ip_address;
    this.support_code = support_code;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_lightsail_static_ip_id !== null) {
      ih['aws_lightsail_static_ip_id'] = this.aws_lightsail_static_ip_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.ip_address !== null) {
      ih['ip_address'] = this.ip_address;
    }
    if (this.support_code !== null) {
      ih['support_code'] = this.support_code;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_static_ip';
  }
}

export class Aws_lightsail_static_ipHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_static_ipHandler';
  }
}

export class Aws_lightsail_static_ip_attachment implements PcoreValue {
  readonly instance_name: string;
  readonly static_ip_name: string;
  readonly aws_lightsail_static_ip_attachment_id: string|null;

  constructor({
    instance_name,
    static_ip_name,
    aws_lightsail_static_ip_attachment_id = null
  }: {
    instance_name: string,
    static_ip_name: string,
    aws_lightsail_static_ip_attachment_id?: string|null
  }) {
    this.instance_name = instance_name;
    this.static_ip_name = static_ip_name;
    this.aws_lightsail_static_ip_attachment_id = aws_lightsail_static_ip_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_name'] = this.instance_name;
    ih['static_ip_name'] = this.static_ip_name;
    if (this.aws_lightsail_static_ip_attachment_id !== null) {
      ih['aws_lightsail_static_ip_attachment_id'] = this.aws_lightsail_static_ip_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_static_ip_attachment';
  }
}

export class Aws_lightsail_static_ip_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_lightsail_static_ip_attachmentHandler';
  }
}

export class Aws_load_balancer_backend_server_policy implements PcoreValue {
  readonly instance_port: number;
  readonly load_balancer_name: string;
  readonly aws_load_balancer_backend_server_policy_id: string|null;
  readonly policy_names: string[]|null;

  constructor({
    instance_port,
    load_balancer_name,
    aws_load_balancer_backend_server_policy_id = null,
    policy_names = null
  }: {
    instance_port: number,
    load_balancer_name: string,
    aws_load_balancer_backend_server_policy_id?: string|null,
    policy_names?: string[]|null
  }) {
    this.instance_port = instance_port;
    this.load_balancer_name = load_balancer_name;
    this.aws_load_balancer_backend_server_policy_id = aws_load_balancer_backend_server_policy_id;
    this.policy_names = policy_names;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_port'] = this.instance_port;
    ih['load_balancer_name'] = this.load_balancer_name;
    if (this.aws_load_balancer_backend_server_policy_id !== null) {
      ih['aws_load_balancer_backend_server_policy_id'] = this.aws_load_balancer_backend_server_policy_id;
    }
    if (this.policy_names !== null) {
      ih['policy_names'] = this.policy_names;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_load_balancer_backend_server_policy';
  }
}

export class Aws_load_balancer_backend_server_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_load_balancer_backend_server_policyHandler';
  }
}

export class Aws_load_balancer_listener_policy implements PcoreValue {
  readonly load_balancer_name: string;
  readonly load_balancer_port: number;
  readonly aws_load_balancer_listener_policy_id: string|null;
  readonly policy_names: string[]|null;

  constructor({
    load_balancer_name,
    load_balancer_port,
    aws_load_balancer_listener_policy_id = null,
    policy_names = null
  }: {
    load_balancer_name: string,
    load_balancer_port: number,
    aws_load_balancer_listener_policy_id?: string|null,
    policy_names?: string[]|null
  }) {
    this.load_balancer_name = load_balancer_name;
    this.load_balancer_port = load_balancer_port;
    this.aws_load_balancer_listener_policy_id = aws_load_balancer_listener_policy_id;
    this.policy_names = policy_names;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['load_balancer_name'] = this.load_balancer_name;
    ih['load_balancer_port'] = this.load_balancer_port;
    if (this.aws_load_balancer_listener_policy_id !== null) {
      ih['aws_load_balancer_listener_policy_id'] = this.aws_load_balancer_listener_policy_id;
    }
    if (this.policy_names !== null) {
      ih['policy_names'] = this.policy_names;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_load_balancer_listener_policy';
  }
}

export class Aws_load_balancer_listener_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_load_balancer_listener_policyHandler';
  }
}

export class Aws_load_balancer_policy implements PcoreValue {
  readonly load_balancer_name: string;
  readonly policy_name: string;
  readonly policy_type_name: string;
  readonly aws_load_balancer_policy_id: string|null;
  readonly policy_attribute: Aws_load_balancer_policy_policy_attribute_417[]|null;

  constructor({
    load_balancer_name,
    policy_name,
    policy_type_name,
    aws_load_balancer_policy_id = null,
    policy_attribute = null
  }: {
    load_balancer_name: string,
    policy_name: string,
    policy_type_name: string,
    aws_load_balancer_policy_id?: string|null,
    policy_attribute?: Aws_load_balancer_policy_policy_attribute_417[]|null
  }) {
    this.load_balancer_name = load_balancer_name;
    this.policy_name = policy_name;
    this.policy_type_name = policy_type_name;
    this.aws_load_balancer_policy_id = aws_load_balancer_policy_id;
    this.policy_attribute = policy_attribute;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['load_balancer_name'] = this.load_balancer_name;
    ih['policy_name'] = this.policy_name;
    ih['policy_type_name'] = this.policy_type_name;
    if (this.aws_load_balancer_policy_id !== null) {
      ih['aws_load_balancer_policy_id'] = this.aws_load_balancer_policy_id;
    }
    if (this.policy_attribute !== null) {
      ih['policy_attribute'] = this.policy_attribute;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_load_balancer_policy';
  }
}

export class Aws_load_balancer_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_load_balancer_policyHandler';
  }
}

export class Aws_load_balancer_policy_policy_attribute_417 implements PcoreValue {
  readonly name: string|null;
  readonly value: string|null;

  constructor({
    name = null,
    value = null
  }: {
    name?: string|null,
    value?: string|null
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.value !== null) {
      ih['value'] = this.value;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_load_balancer_policy_policy_attribute_417';
  }
}

export class Aws_macie_member_account_association implements PcoreValue {
  readonly member_account_id: string;
  readonly aws_macie_member_account_association_id: string|null;

  constructor({
    member_account_id,
    aws_macie_member_account_association_id = null
  }: {
    member_account_id: string,
    aws_macie_member_account_association_id?: string|null
  }) {
    this.member_account_id = member_account_id;
    this.aws_macie_member_account_association_id = aws_macie_member_account_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['member_account_id'] = this.member_account_id;
    if (this.aws_macie_member_account_association_id !== null) {
      ih['aws_macie_member_account_association_id'] = this.aws_macie_member_account_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_macie_member_account_association';
  }
}

export class Aws_macie_member_account_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_macie_member_account_associationHandler';
  }
}

export class Aws_macie_s3_bucket_association implements PcoreValue {
  readonly bucket_name: string;
  readonly aws_macie_s3_bucket_association_id: string|null;
  readonly classification_type: Aws_macie_s3_bucket_association_classification_type_418[]|null;
  readonly member_account_id: string|null;
  readonly prefix: string|null;

  constructor({
    bucket_name,
    aws_macie_s3_bucket_association_id = null,
    classification_type = null,
    member_account_id = null,
    prefix = null
  }: {
    bucket_name: string,
    aws_macie_s3_bucket_association_id?: string|null,
    classification_type?: Aws_macie_s3_bucket_association_classification_type_418[]|null,
    member_account_id?: string|null,
    prefix?: string|null
  }) {
    this.bucket_name = bucket_name;
    this.aws_macie_s3_bucket_association_id = aws_macie_s3_bucket_association_id;
    this.classification_type = classification_type;
    this.member_account_id = member_account_id;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_name'] = this.bucket_name;
    if (this.aws_macie_s3_bucket_association_id !== null) {
      ih['aws_macie_s3_bucket_association_id'] = this.aws_macie_s3_bucket_association_id;
    }
    if (this.classification_type !== null) {
      ih['classification_type'] = this.classification_type;
    }
    if (this.member_account_id !== null) {
      ih['member_account_id'] = this.member_account_id;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_macie_s3_bucket_association';
  }
}

export class Aws_macie_s3_bucket_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_macie_s3_bucket_associationHandler';
  }
}

export class Aws_macie_s3_bucket_association_classification_type_418 implements PcoreValue {
  readonly continuous: string|null;
  readonly one_time: string|null;

  constructor({
    continuous = null,
    one_time = null
  }: {
    continuous?: string|null,
    one_time?: string|null
  }) {
    this.continuous = continuous;
    this.one_time = one_time;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.continuous !== null) {
      ih['continuous'] = this.continuous;
    }
    if (this.one_time !== null) {
      ih['one_time'] = this.one_time;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_macie_s3_bucket_association_classification_type_418';
  }
}

export class Aws_main_route_table_association implements PcoreValue {
  readonly route_table_id: string;
  readonly vpc_id: string;
  readonly aws_main_route_table_association_id: string|null;
  readonly original_route_table_id: string|null;

  constructor({
    route_table_id,
    vpc_id,
    aws_main_route_table_association_id = null,
    original_route_table_id = null
  }: {
    route_table_id: string,
    vpc_id: string,
    aws_main_route_table_association_id?: string|null,
    original_route_table_id?: string|null
  }) {
    this.route_table_id = route_table_id;
    this.vpc_id = vpc_id;
    this.aws_main_route_table_association_id = aws_main_route_table_association_id;
    this.original_route_table_id = original_route_table_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['route_table_id'] = this.route_table_id;
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_main_route_table_association_id !== null) {
      ih['aws_main_route_table_association_id'] = this.aws_main_route_table_association_id;
    }
    if (this.original_route_table_id !== null) {
      ih['original_route_table_id'] = this.original_route_table_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_main_route_table_association';
  }
}

export class Aws_main_route_table_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_main_route_table_associationHandler';
  }
}

export class Aws_media_package_channel implements PcoreValue {
  readonly channel_id: string;
  readonly aws_media_package_channel_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly hls_ingest: Aws_media_package_channel_hls_ingest_419[]|null;

  constructor({
    channel_id,
    aws_media_package_channel_id = null,
    arn = null,
    description = null,
    hls_ingest = null
  }: {
    channel_id: string,
    aws_media_package_channel_id?: string|null,
    arn?: string|null,
    description?: string|null,
    hls_ingest?: Aws_media_package_channel_hls_ingest_419[]|null
  }) {
    this.channel_id = channel_id;
    this.aws_media_package_channel_id = aws_media_package_channel_id;
    this.arn = arn;
    this.description = description;
    this.hls_ingest = hls_ingest;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['channel_id'] = this.channel_id;
    if (this.aws_media_package_channel_id !== null) {
      ih['aws_media_package_channel_id'] = this.aws_media_package_channel_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.hls_ingest !== null) {
      ih['hls_ingest'] = this.hls_ingest;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_media_package_channel';
  }
}

export class Aws_media_package_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_media_package_channelHandler';
  }
}

export class Aws_media_package_channel_hls_ingest_419 implements PcoreValue {
  readonly ingest_endpoints: Aws_media_package_channel_hls_ingest_419_ingest_endpoints_420[]|null;

  constructor({
    ingest_endpoints = null
  }: {
    ingest_endpoints?: Aws_media_package_channel_hls_ingest_419_ingest_endpoints_420[]|null
  }) {
    this.ingest_endpoints = ingest_endpoints;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.ingest_endpoints !== null) {
      ih['ingest_endpoints'] = this.ingest_endpoints;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_media_package_channel_hls_ingest_419';
  }
}

export class Aws_media_package_channel_hls_ingest_419_ingest_endpoints_420 implements PcoreValue {
  readonly password: string|null;
  readonly url: string|null;
  readonly username: string|null;

  constructor({
    password = null,
    url = null,
    username = null
  }: {
    password?: string|null,
    url?: string|null,
    username?: string|null
  }) {
    this.password = password;
    this.url = url;
    this.username = username;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.password !== null) {
      ih['password'] = this.password;
    }
    if (this.url !== null) {
      ih['url'] = this.url;
    }
    if (this.username !== null) {
      ih['username'] = this.username;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_media_package_channel_hls_ingest_419_ingest_endpoints_420';
  }
}

export class Aws_media_store_container implements PcoreValue {
  readonly name: string;
  readonly aws_media_store_container_id: string|null;
  readonly arn: string|null;
  readonly endpoint: string|null;

  constructor({
    name,
    aws_media_store_container_id = null,
    arn = null,
    endpoint = null
  }: {
    name: string,
    aws_media_store_container_id?: string|null,
    arn?: string|null,
    endpoint?: string|null
  }) {
    this.name = name;
    this.aws_media_store_container_id = aws_media_store_container_id;
    this.arn = arn;
    this.endpoint = endpoint;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_media_store_container_id !== null) {
      ih['aws_media_store_container_id'] = this.aws_media_store_container_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_media_store_container';
  }
}

export class Aws_media_store_containerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_media_store_containerHandler';
  }
}

export class Aws_media_store_container_policy implements PcoreValue {
  readonly container_name: string;
  readonly policy: string;
  readonly aws_media_store_container_policy_id: string|null;

  constructor({
    container_name,
    policy,
    aws_media_store_container_policy_id = null
  }: {
    container_name: string,
    policy: string,
    aws_media_store_container_policy_id?: string|null
  }) {
    this.container_name = container_name;
    this.policy = policy;
    this.aws_media_store_container_policy_id = aws_media_store_container_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['container_name'] = this.container_name;
    ih['policy'] = this.policy;
    if (this.aws_media_store_container_policy_id !== null) {
      ih['aws_media_store_container_policy_id'] = this.aws_media_store_container_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_media_store_container_policy';
  }
}

export class Aws_media_store_container_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_media_store_container_policyHandler';
  }
}

export class Aws_mq_broker implements PcoreValue {
  readonly broker_name: string;
  readonly engine_type: string;
  readonly engine_version: string;
  readonly host_instance_type: string;
  readonly security_groups: string[];
  readonly user: Aws_mq_broker_user_425[];
  readonly aws_mq_broker_id: string|null;
  readonly apply_immediately: boolean|null;
  readonly arn: string|null;
  readonly auto_minor_version_upgrade: boolean|null;
  readonly configuration: Aws_mq_broker_configuration_421[]|null;
  readonly deployment_mode: string|null;
  readonly instances: Aws_mq_broker_instances_422[]|null;
  readonly logs: Aws_mq_broker_logs_423[]|null;
  readonly maintenance_window_start_time: Aws_mq_broker_maintenance_window_start_time_424[]|null;
  readonly publicly_accessible: boolean|null;
  readonly subnet_ids: string[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    broker_name,
    engine_type,
    engine_version,
    host_instance_type,
    security_groups,
    user,
    aws_mq_broker_id = null,
    apply_immediately = null,
    arn = null,
    auto_minor_version_upgrade = null,
    configuration = null,
    deployment_mode = null,
    instances = null,
    logs = null,
    maintenance_window_start_time = null,
    publicly_accessible = null,
    subnet_ids = null,
    tags = null
  }: {
    broker_name: string,
    engine_type: string,
    engine_version: string,
    host_instance_type: string,
    security_groups: string[],
    user: Aws_mq_broker_user_425[],
    aws_mq_broker_id?: string|null,
    apply_immediately?: boolean|null,
    arn?: string|null,
    auto_minor_version_upgrade?: boolean|null,
    configuration?: Aws_mq_broker_configuration_421[]|null,
    deployment_mode?: string|null,
    instances?: Aws_mq_broker_instances_422[]|null,
    logs?: Aws_mq_broker_logs_423[]|null,
    maintenance_window_start_time?: Aws_mq_broker_maintenance_window_start_time_424[]|null,
    publicly_accessible?: boolean|null,
    subnet_ids?: string[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.broker_name = broker_name;
    this.engine_type = engine_type;
    this.engine_version = engine_version;
    this.host_instance_type = host_instance_type;
    this.security_groups = security_groups;
    this.user = user;
    this.aws_mq_broker_id = aws_mq_broker_id;
    this.apply_immediately = apply_immediately;
    this.arn = arn;
    this.auto_minor_version_upgrade = auto_minor_version_upgrade;
    this.configuration = configuration;
    this.deployment_mode = deployment_mode;
    this.instances = instances;
    this.logs = logs;
    this.maintenance_window_start_time = maintenance_window_start_time;
    this.publicly_accessible = publicly_accessible;
    this.subnet_ids = subnet_ids;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['broker_name'] = this.broker_name;
    ih['engine_type'] = this.engine_type;
    ih['engine_version'] = this.engine_version;
    ih['host_instance_type'] = this.host_instance_type;
    ih['security_groups'] = this.security_groups;
    ih['user'] = this.user;
    if (this.aws_mq_broker_id !== null) {
      ih['aws_mq_broker_id'] = this.aws_mq_broker_id;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.auto_minor_version_upgrade !== null) {
      ih['auto_minor_version_upgrade'] = this.auto_minor_version_upgrade;
    }
    if (this.configuration !== null) {
      ih['configuration'] = this.configuration;
    }
    if (this.deployment_mode !== null) {
      ih['deployment_mode'] = this.deployment_mode;
    }
    if (this.instances !== null) {
      ih['instances'] = this.instances;
    }
    if (this.logs !== null) {
      ih['logs'] = this.logs;
    }
    if (this.maintenance_window_start_time !== null) {
      ih['maintenance_window_start_time'] = this.maintenance_window_start_time;
    }
    if (this.publicly_accessible !== null) {
      ih['publicly_accessible'] = this.publicly_accessible;
    }
    if (this.subnet_ids !== null) {
      ih['subnet_ids'] = this.subnet_ids;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_broker';
  }
}

export class Aws_mq_brokerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_brokerHandler';
  }
}

export class Aws_mq_broker_configuration_421 implements PcoreValue {
  readonly id: string|null;
  readonly revision: number|null;

  constructor({
    id = null,
    revision = null
  }: {
    id?: string|null,
    revision?: number|null
  }) {
    this.id = id;
    this.revision = revision;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.revision !== null) {
      ih['revision'] = this.revision;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_broker_configuration_421';
  }
}

export class Aws_mq_broker_instances_422 implements PcoreValue {
  readonly console_url: string|null;
  readonly endpoints: string[]|null;
  readonly ip_address: string|null;

  constructor({
    console_url = null,
    endpoints = null,
    ip_address = null
  }: {
    console_url?: string|null,
    endpoints?: string[]|null,
    ip_address?: string|null
  }) {
    this.console_url = console_url;
    this.endpoints = endpoints;
    this.ip_address = ip_address;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.console_url !== null) {
      ih['console_url'] = this.console_url;
    }
    if (this.endpoints !== null) {
      ih['endpoints'] = this.endpoints;
    }
    if (this.ip_address !== null) {
      ih['ip_address'] = this.ip_address;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_broker_instances_422';
  }
}

export class Aws_mq_broker_logs_423 implements PcoreValue {
  readonly audit: boolean|null;
  readonly general: boolean|null;

  constructor({
    audit = null,
    general = null
  }: {
    audit?: boolean|null,
    general?: boolean|null
  }) {
    this.audit = audit;
    this.general = general;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.audit !== null) {
      ih['audit'] = this.audit;
    }
    if (this.general !== null) {
      ih['general'] = this.general;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_broker_logs_423';
  }
}

export class Aws_mq_broker_maintenance_window_start_time_424 implements PcoreValue {
  readonly day_of_week: string;
  readonly time_of_day: string;
  readonly time_zone: string;

  constructor({
    day_of_week,
    time_of_day,
    time_zone
  }: {
    day_of_week: string,
    time_of_day: string,
    time_zone: string
  }) {
    this.day_of_week = day_of_week;
    this.time_of_day = time_of_day;
    this.time_zone = time_zone;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['day_of_week'] = this.day_of_week;
    ih['time_of_day'] = this.time_of_day;
    ih['time_zone'] = this.time_zone;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_broker_maintenance_window_start_time_424';
  }
}

export class Aws_mq_broker_user_425 implements PcoreValue {
  readonly password: string;
  readonly username: string;
  readonly console_access: boolean|null;
  readonly groups: string[]|null;

  constructor({
    password,
    username,
    console_access = null,
    groups = null
  }: {
    password: string,
    username: string,
    console_access?: boolean|null,
    groups?: string[]|null
  }) {
    this.password = password;
    this.username = username;
    this.console_access = console_access;
    this.groups = groups;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['password'] = this.password;
    ih['username'] = this.username;
    if (this.console_access !== null) {
      ih['console_access'] = this.console_access;
    }
    if (this.groups !== null) {
      ih['groups'] = this.groups;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_broker_user_425';
  }
}

export class Aws_mq_configuration implements PcoreValue {
  readonly data: string;
  readonly engine_type: string;
  readonly engine_version: string;
  readonly name: string;
  readonly aws_mq_configuration_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly latest_revision: number|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    data,
    engine_type,
    engine_version,
    name,
    aws_mq_configuration_id = null,
    arn = null,
    description = null,
    latest_revision = null,
    tags = null
  }: {
    data: string,
    engine_type: string,
    engine_version: string,
    name: string,
    aws_mq_configuration_id?: string|null,
    arn?: string|null,
    description?: string|null,
    latest_revision?: number|null,
    tags?: {[s: string]: string}|null
  }) {
    this.data = data;
    this.engine_type = engine_type;
    this.engine_version = engine_version;
    this.name = name;
    this.aws_mq_configuration_id = aws_mq_configuration_id;
    this.arn = arn;
    this.description = description;
    this.latest_revision = latest_revision;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['data'] = this.data;
    ih['engine_type'] = this.engine_type;
    ih['engine_version'] = this.engine_version;
    ih['name'] = this.name;
    if (this.aws_mq_configuration_id !== null) {
      ih['aws_mq_configuration_id'] = this.aws_mq_configuration_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.latest_revision !== null) {
      ih['latest_revision'] = this.latest_revision;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_configuration';
  }
}

export class Aws_mq_configurationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_mq_configurationHandler';
  }
}

export class Aws_nat_gateway implements PcoreValue {
  readonly allocation_id: string;
  readonly subnet_id: string;
  readonly aws_nat_gateway_id: string|null;
  readonly network_interface_id: string|null;
  readonly private_ip: string|null;
  readonly public_ip: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    allocation_id,
    subnet_id,
    aws_nat_gateway_id = null,
    network_interface_id = null,
    private_ip = null,
    public_ip = null,
    tags = null
  }: {
    allocation_id: string,
    subnet_id: string,
    aws_nat_gateway_id?: string|null,
    network_interface_id?: string|null,
    private_ip?: string|null,
    public_ip?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.allocation_id = allocation_id;
    this.subnet_id = subnet_id;
    this.aws_nat_gateway_id = aws_nat_gateway_id;
    this.network_interface_id = network_interface_id;
    this.private_ip = private_ip;
    this.public_ip = public_ip;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['allocation_id'] = this.allocation_id;
    ih['subnet_id'] = this.subnet_id;
    if (this.aws_nat_gateway_id !== null) {
      ih['aws_nat_gateway_id'] = this.aws_nat_gateway_id;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.private_ip !== null) {
      ih['private_ip'] = this.private_ip;
    }
    if (this.public_ip !== null) {
      ih['public_ip'] = this.public_ip;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_nat_gateway';
  }
}

export class Aws_nat_gatewayHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_nat_gatewayHandler';
  }
}

export class Aws_neptune_cluster implements PcoreValue {
  readonly aws_neptune_cluster_id: string|null;
  readonly apply_immediately: boolean|null;
  readonly arn: string|null;
  readonly availability_zones: string[]|null;
  readonly backup_retention_period: number|null;
  readonly cluster_identifier: string|null;
  readonly cluster_identifier_prefix: string|null;
  readonly cluster_members: string[]|null;
  readonly cluster_resource_id: string|null;
  readonly endpoint: string|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly final_snapshot_identifier: string|null;
  readonly hosted_zone_id: string|null;
  readonly iam_database_authentication_enabled: boolean|null;
  readonly iam_roles: string[]|null;
  readonly kms_key_arn: string|null;
  readonly neptune_cluster_parameter_group_name: string|null;
  readonly neptune_subnet_group_name: string|null;
  readonly port: number|null;
  readonly preferred_backup_window: string|null;
  readonly preferred_maintenance_window: string|null;
  readonly reader_endpoint: string|null;
  readonly replication_source_identifier: string|null;
  readonly skip_final_snapshot: boolean|null;
  readonly snapshot_identifier: string|null;
  readonly storage_encrypted: boolean|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_security_group_ids: string[]|null;

  constructor({
    aws_neptune_cluster_id = null,
    apply_immediately = null,
    arn = null,
    availability_zones = null,
    backup_retention_period = null,
    cluster_identifier = null,
    cluster_identifier_prefix = null,
    cluster_members = null,
    cluster_resource_id = null,
    endpoint = null,
    engine = null,
    engine_version = null,
    final_snapshot_identifier = null,
    hosted_zone_id = null,
    iam_database_authentication_enabled = null,
    iam_roles = null,
    kms_key_arn = null,
    neptune_cluster_parameter_group_name = null,
    neptune_subnet_group_name = null,
    port = null,
    preferred_backup_window = null,
    preferred_maintenance_window = null,
    reader_endpoint = null,
    replication_source_identifier = null,
    skip_final_snapshot = null,
    snapshot_identifier = null,
    storage_encrypted = null,
    tags = null,
    vpc_security_group_ids = null
  }: {
    aws_neptune_cluster_id?: string|null,
    apply_immediately?: boolean|null,
    arn?: string|null,
    availability_zones?: string[]|null,
    backup_retention_period?: number|null,
    cluster_identifier?: string|null,
    cluster_identifier_prefix?: string|null,
    cluster_members?: string[]|null,
    cluster_resource_id?: string|null,
    endpoint?: string|null,
    engine?: string|null,
    engine_version?: string|null,
    final_snapshot_identifier?: string|null,
    hosted_zone_id?: string|null,
    iam_database_authentication_enabled?: boolean|null,
    iam_roles?: string[]|null,
    kms_key_arn?: string|null,
    neptune_cluster_parameter_group_name?: string|null,
    neptune_subnet_group_name?: string|null,
    port?: number|null,
    preferred_backup_window?: string|null,
    preferred_maintenance_window?: string|null,
    reader_endpoint?: string|null,
    replication_source_identifier?: string|null,
    skip_final_snapshot?: boolean|null,
    snapshot_identifier?: string|null,
    storage_encrypted?: boolean|null,
    tags?: {[s: string]: string}|null,
    vpc_security_group_ids?: string[]|null
  }) {
    this.aws_neptune_cluster_id = aws_neptune_cluster_id;
    this.apply_immediately = apply_immediately;
    this.arn = arn;
    this.availability_zones = availability_zones;
    this.backup_retention_period = backup_retention_period;
    this.cluster_identifier = cluster_identifier;
    this.cluster_identifier_prefix = cluster_identifier_prefix;
    this.cluster_members = cluster_members;
    this.cluster_resource_id = cluster_resource_id;
    this.endpoint = endpoint;
    this.engine = engine;
    this.engine_version = engine_version;
    this.final_snapshot_identifier = final_snapshot_identifier;
    this.hosted_zone_id = hosted_zone_id;
    this.iam_database_authentication_enabled = iam_database_authentication_enabled;
    this.iam_roles = iam_roles;
    this.kms_key_arn = kms_key_arn;
    this.neptune_cluster_parameter_group_name = neptune_cluster_parameter_group_name;
    this.neptune_subnet_group_name = neptune_subnet_group_name;
    this.port = port;
    this.preferred_backup_window = preferred_backup_window;
    this.preferred_maintenance_window = preferred_maintenance_window;
    this.reader_endpoint = reader_endpoint;
    this.replication_source_identifier = replication_source_identifier;
    this.skip_final_snapshot = skip_final_snapshot;
    this.snapshot_identifier = snapshot_identifier;
    this.storage_encrypted = storage_encrypted;
    this.tags = tags;
    this.vpc_security_group_ids = vpc_security_group_ids;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_neptune_cluster_id !== null) {
      ih['aws_neptune_cluster_id'] = this.aws_neptune_cluster_id;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.backup_retention_period !== null) {
      ih['backup_retention_period'] = this.backup_retention_period;
    }
    if (this.cluster_identifier !== null) {
      ih['cluster_identifier'] = this.cluster_identifier;
    }
    if (this.cluster_identifier_prefix !== null) {
      ih['cluster_identifier_prefix'] = this.cluster_identifier_prefix;
    }
    if (this.cluster_members !== null) {
      ih['cluster_members'] = this.cluster_members;
    }
    if (this.cluster_resource_id !== null) {
      ih['cluster_resource_id'] = this.cluster_resource_id;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.final_snapshot_identifier !== null) {
      ih['final_snapshot_identifier'] = this.final_snapshot_identifier;
    }
    if (this.hosted_zone_id !== null) {
      ih['hosted_zone_id'] = this.hosted_zone_id;
    }
    if (this.iam_database_authentication_enabled !== null) {
      ih['iam_database_authentication_enabled'] = this.iam_database_authentication_enabled;
    }
    if (this.iam_roles !== null) {
      ih['iam_roles'] = this.iam_roles;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.neptune_cluster_parameter_group_name !== null) {
      ih['neptune_cluster_parameter_group_name'] = this.neptune_cluster_parameter_group_name;
    }
    if (this.neptune_subnet_group_name !== null) {
      ih['neptune_subnet_group_name'] = this.neptune_subnet_group_name;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.preferred_backup_window !== null) {
      ih['preferred_backup_window'] = this.preferred_backup_window;
    }
    if (this.preferred_maintenance_window !== null) {
      ih['preferred_maintenance_window'] = this.preferred_maintenance_window;
    }
    if (this.reader_endpoint !== null) {
      ih['reader_endpoint'] = this.reader_endpoint;
    }
    if (this.replication_source_identifier !== null) {
      ih['replication_source_identifier'] = this.replication_source_identifier;
    }
    if (this.skip_final_snapshot !== null) {
      ih['skip_final_snapshot'] = this.skip_final_snapshot;
    }
    if (this.snapshot_identifier !== null) {
      ih['snapshot_identifier'] = this.snapshot_identifier;
    }
    if (this.storage_encrypted !== null) {
      ih['storage_encrypted'] = this.storage_encrypted;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_cluster';
  }
}

export class Aws_neptune_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_clusterHandler';
  }
}

export class Aws_neptune_cluster_instance implements PcoreValue {
  readonly cluster_identifier: string;
  readonly instance_class: string;
  readonly aws_neptune_cluster_instance_id: string|null;
  readonly address: string|null;
  readonly apply_immediately: boolean|null;
  readonly arn: string|null;
  readonly auto_minor_version_upgrade: boolean|null;
  readonly availability_zone: string|null;
  readonly dbi_resource_id: string|null;
  readonly endpoint: string|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly identifier: string|null;
  readonly identifier_prefix: string|null;
  readonly kms_key_arn: string|null;
  readonly neptune_parameter_group_name: string|null;
  readonly neptune_subnet_group_name: string|null;
  readonly port: number|null;
  readonly preferred_backup_window: string|null;
  readonly preferred_maintenance_window: string|null;
  readonly promotion_tier: number|null;
  readonly publicly_accessible: boolean|null;
  readonly storage_encrypted: boolean|null;
  readonly tags: {[s: string]: string}|null;
  readonly writer: boolean|null;

  constructor({
    cluster_identifier,
    instance_class,
    aws_neptune_cluster_instance_id = null,
    address = null,
    apply_immediately = null,
    arn = null,
    auto_minor_version_upgrade = null,
    availability_zone = null,
    dbi_resource_id = null,
    endpoint = null,
    engine = null,
    engine_version = null,
    identifier = null,
    identifier_prefix = null,
    kms_key_arn = null,
    neptune_parameter_group_name = null,
    neptune_subnet_group_name = null,
    port = null,
    preferred_backup_window = null,
    preferred_maintenance_window = null,
    promotion_tier = null,
    publicly_accessible = null,
    storage_encrypted = null,
    tags = null,
    writer = null
  }: {
    cluster_identifier: string,
    instance_class: string,
    aws_neptune_cluster_instance_id?: string|null,
    address?: string|null,
    apply_immediately?: boolean|null,
    arn?: string|null,
    auto_minor_version_upgrade?: boolean|null,
    availability_zone?: string|null,
    dbi_resource_id?: string|null,
    endpoint?: string|null,
    engine?: string|null,
    engine_version?: string|null,
    identifier?: string|null,
    identifier_prefix?: string|null,
    kms_key_arn?: string|null,
    neptune_parameter_group_name?: string|null,
    neptune_subnet_group_name?: string|null,
    port?: number|null,
    preferred_backup_window?: string|null,
    preferred_maintenance_window?: string|null,
    promotion_tier?: number|null,
    publicly_accessible?: boolean|null,
    storage_encrypted?: boolean|null,
    tags?: {[s: string]: string}|null,
    writer?: boolean|null
  }) {
    this.cluster_identifier = cluster_identifier;
    this.instance_class = instance_class;
    this.aws_neptune_cluster_instance_id = aws_neptune_cluster_instance_id;
    this.address = address;
    this.apply_immediately = apply_immediately;
    this.arn = arn;
    this.auto_minor_version_upgrade = auto_minor_version_upgrade;
    this.availability_zone = availability_zone;
    this.dbi_resource_id = dbi_resource_id;
    this.endpoint = endpoint;
    this.engine = engine;
    this.engine_version = engine_version;
    this.identifier = identifier;
    this.identifier_prefix = identifier_prefix;
    this.kms_key_arn = kms_key_arn;
    this.neptune_parameter_group_name = neptune_parameter_group_name;
    this.neptune_subnet_group_name = neptune_subnet_group_name;
    this.port = port;
    this.preferred_backup_window = preferred_backup_window;
    this.preferred_maintenance_window = preferred_maintenance_window;
    this.promotion_tier = promotion_tier;
    this.publicly_accessible = publicly_accessible;
    this.storage_encrypted = storage_encrypted;
    this.tags = tags;
    this.writer = writer;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_identifier'] = this.cluster_identifier;
    ih['instance_class'] = this.instance_class;
    if (this.aws_neptune_cluster_instance_id !== null) {
      ih['aws_neptune_cluster_instance_id'] = this.aws_neptune_cluster_instance_id;
    }
    if (this.address !== null) {
      ih['address'] = this.address;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.auto_minor_version_upgrade !== null) {
      ih['auto_minor_version_upgrade'] = this.auto_minor_version_upgrade;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.dbi_resource_id !== null) {
      ih['dbi_resource_id'] = this.dbi_resource_id;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.identifier !== null) {
      ih['identifier'] = this.identifier;
    }
    if (this.identifier_prefix !== null) {
      ih['identifier_prefix'] = this.identifier_prefix;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.neptune_parameter_group_name !== null) {
      ih['neptune_parameter_group_name'] = this.neptune_parameter_group_name;
    }
    if (this.neptune_subnet_group_name !== null) {
      ih['neptune_subnet_group_name'] = this.neptune_subnet_group_name;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.preferred_backup_window !== null) {
      ih['preferred_backup_window'] = this.preferred_backup_window;
    }
    if (this.preferred_maintenance_window !== null) {
      ih['preferred_maintenance_window'] = this.preferred_maintenance_window;
    }
    if (this.promotion_tier !== null) {
      ih['promotion_tier'] = this.promotion_tier;
    }
    if (this.publicly_accessible !== null) {
      ih['publicly_accessible'] = this.publicly_accessible;
    }
    if (this.storage_encrypted !== null) {
      ih['storage_encrypted'] = this.storage_encrypted;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.writer !== null) {
      ih['writer'] = this.writer;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_cluster_instance';
  }
}

export class Aws_neptune_cluster_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_cluster_instanceHandler';
  }
}

export class Aws_neptune_cluster_parameter_group implements PcoreValue {
  readonly family: string;
  readonly aws_neptune_cluster_parameter_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly parameter: Aws_neptune_cluster_parameter_group_parameter_426[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    family,
    aws_neptune_cluster_parameter_group_id = null,
    arn = null,
    description = null,
    name = null,
    name_prefix = null,
    parameter = null,
    tags = null
  }: {
    family: string,
    aws_neptune_cluster_parameter_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    parameter?: Aws_neptune_cluster_parameter_group_parameter_426[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.family = family;
    this.aws_neptune_cluster_parameter_group_id = aws_neptune_cluster_parameter_group_id;
    this.arn = arn;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
    this.parameter = parameter;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['family'] = this.family;
    if (this.aws_neptune_cluster_parameter_group_id !== null) {
      ih['aws_neptune_cluster_parameter_group_id'] = this.aws_neptune_cluster_parameter_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.parameter !== null) {
      ih['parameter'] = this.parameter;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_cluster_parameter_group';
  }
}

export class Aws_neptune_cluster_parameter_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_cluster_parameter_groupHandler';
  }
}

export class Aws_neptune_cluster_parameter_group_parameter_426 implements PcoreValue {
  readonly name: string;
  readonly value: string;
  readonly apply_method: string|null;

  constructor({
    name,
    value,
    apply_method = null
  }: {
    name: string,
    value: string,
    apply_method?: string|null
  }) {
    this.name = name;
    this.value = value;
    this.apply_method = apply_method;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    if (this.apply_method !== null) {
      ih['apply_method'] = this.apply_method;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_cluster_parameter_group_parameter_426';
  }
}

export class Aws_neptune_cluster_snapshot implements PcoreValue {
  readonly db_cluster_identifier: string;
  readonly db_cluster_snapshot_identifier: string;
  readonly aws_neptune_cluster_snapshot_id: string|null;
  readonly allocated_storage: number|null;
  readonly availability_zones: string[]|null;
  readonly db_cluster_snapshot_arn: string|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly kms_key_id: string|null;
  readonly license_model: string|null;
  readonly port: number|null;
  readonly snapshot_type: string|null;
  readonly source_db_cluster_snapshot_arn: string|null;
  readonly status: string|null;
  readonly storage_encrypted: boolean|null;
  readonly vpc_id: string|null;

  constructor({
    db_cluster_identifier,
    db_cluster_snapshot_identifier,
    aws_neptune_cluster_snapshot_id = null,
    allocated_storage = null,
    availability_zones = null,
    db_cluster_snapshot_arn = null,
    engine = null,
    engine_version = null,
    kms_key_id = null,
    license_model = null,
    port = null,
    snapshot_type = null,
    source_db_cluster_snapshot_arn = null,
    status = null,
    storage_encrypted = null,
    vpc_id = null
  }: {
    db_cluster_identifier: string,
    db_cluster_snapshot_identifier: string,
    aws_neptune_cluster_snapshot_id?: string|null,
    allocated_storage?: number|null,
    availability_zones?: string[]|null,
    db_cluster_snapshot_arn?: string|null,
    engine?: string|null,
    engine_version?: string|null,
    kms_key_id?: string|null,
    license_model?: string|null,
    port?: number|null,
    snapshot_type?: string|null,
    source_db_cluster_snapshot_arn?: string|null,
    status?: string|null,
    storage_encrypted?: boolean|null,
    vpc_id?: string|null
  }) {
    this.db_cluster_identifier = db_cluster_identifier;
    this.db_cluster_snapshot_identifier = db_cluster_snapshot_identifier;
    this.aws_neptune_cluster_snapshot_id = aws_neptune_cluster_snapshot_id;
    this.allocated_storage = allocated_storage;
    this.availability_zones = availability_zones;
    this.db_cluster_snapshot_arn = db_cluster_snapshot_arn;
    this.engine = engine;
    this.engine_version = engine_version;
    this.kms_key_id = kms_key_id;
    this.license_model = license_model;
    this.port = port;
    this.snapshot_type = snapshot_type;
    this.source_db_cluster_snapshot_arn = source_db_cluster_snapshot_arn;
    this.status = status;
    this.storage_encrypted = storage_encrypted;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['db_cluster_identifier'] = this.db_cluster_identifier;
    ih['db_cluster_snapshot_identifier'] = this.db_cluster_snapshot_identifier;
    if (this.aws_neptune_cluster_snapshot_id !== null) {
      ih['aws_neptune_cluster_snapshot_id'] = this.aws_neptune_cluster_snapshot_id;
    }
    if (this.allocated_storage !== null) {
      ih['allocated_storage'] = this.allocated_storage;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.db_cluster_snapshot_arn !== null) {
      ih['db_cluster_snapshot_arn'] = this.db_cluster_snapshot_arn;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.license_model !== null) {
      ih['license_model'] = this.license_model;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.snapshot_type !== null) {
      ih['snapshot_type'] = this.snapshot_type;
    }
    if (this.source_db_cluster_snapshot_arn !== null) {
      ih['source_db_cluster_snapshot_arn'] = this.source_db_cluster_snapshot_arn;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.storage_encrypted !== null) {
      ih['storage_encrypted'] = this.storage_encrypted;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_cluster_snapshot';
  }
}

export class Aws_neptune_cluster_snapshotHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_cluster_snapshotHandler';
  }
}

export class Aws_neptune_event_subscription implements PcoreValue {
  readonly sns_topic_arn: string;
  readonly aws_neptune_event_subscription_id: string|null;
  readonly arn: string|null;
  readonly customer_aws_id: string|null;
  readonly enabled: boolean|null;
  readonly event_categories: string[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly source_ids: string[]|null;
  readonly source_type: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    sns_topic_arn,
    aws_neptune_event_subscription_id = null,
    arn = null,
    customer_aws_id = null,
    enabled = null,
    event_categories = null,
    name = null,
    name_prefix = null,
    source_ids = null,
    source_type = null,
    tags = null
  }: {
    sns_topic_arn: string,
    aws_neptune_event_subscription_id?: string|null,
    arn?: string|null,
    customer_aws_id?: string|null,
    enabled?: boolean|null,
    event_categories?: string[]|null,
    name?: string|null,
    name_prefix?: string|null,
    source_ids?: string[]|null,
    source_type?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.sns_topic_arn = sns_topic_arn;
    this.aws_neptune_event_subscription_id = aws_neptune_event_subscription_id;
    this.arn = arn;
    this.customer_aws_id = customer_aws_id;
    this.enabled = enabled;
    this.event_categories = event_categories;
    this.name = name;
    this.name_prefix = name_prefix;
    this.source_ids = source_ids;
    this.source_type = source_type;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['sns_topic_arn'] = this.sns_topic_arn;
    if (this.aws_neptune_event_subscription_id !== null) {
      ih['aws_neptune_event_subscription_id'] = this.aws_neptune_event_subscription_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.customer_aws_id !== null) {
      ih['customer_aws_id'] = this.customer_aws_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.event_categories !== null) {
      ih['event_categories'] = this.event_categories;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.source_ids !== null) {
      ih['source_ids'] = this.source_ids;
    }
    if (this.source_type !== null) {
      ih['source_type'] = this.source_type;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_event_subscription';
  }
}

export class Aws_neptune_event_subscriptionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_event_subscriptionHandler';
  }
}

export class Aws_neptune_parameter_group implements PcoreValue {
  readonly family: string;
  readonly name: string;
  readonly aws_neptune_parameter_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly parameter: Aws_neptune_parameter_group_parameter_427[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    family,
    name,
    aws_neptune_parameter_group_id = null,
    arn = null,
    description = null,
    parameter = null,
    tags = null
  }: {
    family: string,
    name: string,
    aws_neptune_parameter_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    parameter?: Aws_neptune_parameter_group_parameter_427[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.family = family;
    this.name = name;
    this.aws_neptune_parameter_group_id = aws_neptune_parameter_group_id;
    this.arn = arn;
    this.description = description;
    this.parameter = parameter;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['family'] = this.family;
    ih['name'] = this.name;
    if (this.aws_neptune_parameter_group_id !== null) {
      ih['aws_neptune_parameter_group_id'] = this.aws_neptune_parameter_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.parameter !== null) {
      ih['parameter'] = this.parameter;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_parameter_group';
  }
}

export class Aws_neptune_parameter_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_parameter_groupHandler';
  }
}

export class Aws_neptune_parameter_group_parameter_427 implements PcoreValue {
  readonly name: string;
  readonly value: string;
  readonly apply_method: string|null;

  constructor({
    name,
    value,
    apply_method = null
  }: {
    name: string,
    value: string,
    apply_method?: string|null
  }) {
    this.name = name;
    this.value = value;
    this.apply_method = apply_method;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    if (this.apply_method !== null) {
      ih['apply_method'] = this.apply_method;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_parameter_group_parameter_427';
  }
}

export class Aws_neptune_subnet_group implements PcoreValue {
  readonly subnet_ids: string[];
  readonly aws_neptune_subnet_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    subnet_ids,
    aws_neptune_subnet_group_id = null,
    arn = null,
    description = null,
    name = null,
    name_prefix = null,
    tags = null
  }: {
    subnet_ids: string[],
    aws_neptune_subnet_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.subnet_ids = subnet_ids;
    this.aws_neptune_subnet_group_id = aws_neptune_subnet_group_id;
    this.arn = arn;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_ids'] = this.subnet_ids;
    if (this.aws_neptune_subnet_group_id !== null) {
      ih['aws_neptune_subnet_group_id'] = this.aws_neptune_subnet_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_subnet_group';
  }
}

export class Aws_neptune_subnet_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_neptune_subnet_groupHandler';
  }
}

export class Aws_network_acl implements PcoreValue {
  readonly vpc_id: string;
  readonly aws_network_acl_id: string|null;
  readonly egress: Aws_network_acl_egress_428[]|null;
  readonly ingress: Aws_network_acl_ingress_429[]|null;
  readonly owner_id: string|null;
  readonly subnet_id: string|null;
  readonly subnet_ids: string[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    vpc_id,
    aws_network_acl_id = null,
    egress = null,
    ingress = null,
    owner_id = null,
    subnet_id = null,
    subnet_ids = null,
    tags = null
  }: {
    vpc_id: string,
    aws_network_acl_id?: string|null,
    egress?: Aws_network_acl_egress_428[]|null,
    ingress?: Aws_network_acl_ingress_429[]|null,
    owner_id?: string|null,
    subnet_id?: string|null,
    subnet_ids?: string[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.vpc_id = vpc_id;
    this.aws_network_acl_id = aws_network_acl_id;
    this.egress = egress;
    this.ingress = ingress;
    this.owner_id = owner_id;
    this.subnet_id = subnet_id;
    this.subnet_ids = subnet_ids;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_network_acl_id !== null) {
      ih['aws_network_acl_id'] = this.aws_network_acl_id;
    }
    if (this.egress !== null) {
      ih['egress'] = this.egress;
    }
    if (this.ingress !== null) {
      ih['ingress'] = this.ingress;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.subnet_ids !== null) {
      ih['subnet_ids'] = this.subnet_ids;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_acl';
  }
}

export class Aws_network_aclHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_aclHandler';
  }
}

export class Aws_network_acl_egress_428 implements PcoreValue {
  readonly action: string;
  readonly from_port: number;
  readonly protocol: string;
  readonly rule_no: number;
  readonly to_port: number;
  readonly cidr_block: string|null;
  readonly icmp_code: number|null;
  readonly icmp_type: number|null;
  readonly ipv6_cidr_block: string|null;

  constructor({
    action,
    from_port,
    protocol,
    rule_no,
    to_port,
    cidr_block = null,
    icmp_code = null,
    icmp_type = null,
    ipv6_cidr_block = null
  }: {
    action: string,
    from_port: number,
    protocol: string,
    rule_no: number,
    to_port: number,
    cidr_block?: string|null,
    icmp_code?: number|null,
    icmp_type?: number|null,
    ipv6_cidr_block?: string|null
  }) {
    this.action = action;
    this.from_port = from_port;
    this.protocol = protocol;
    this.rule_no = rule_no;
    this.to_port = to_port;
    this.cidr_block = cidr_block;
    this.icmp_code = icmp_code;
    this.icmp_type = icmp_type;
    this.ipv6_cidr_block = ipv6_cidr_block;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['rule_no'] = this.rule_no;
    ih['to_port'] = this.to_port;
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.icmp_code !== null) {
      ih['icmp_code'] = this.icmp_code;
    }
    if (this.icmp_type !== null) {
      ih['icmp_type'] = this.icmp_type;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_acl_egress_428';
  }
}

export class Aws_network_acl_ingress_429 implements PcoreValue {
  readonly action: string;
  readonly from_port: number;
  readonly protocol: string;
  readonly rule_no: number;
  readonly to_port: number;
  readonly cidr_block: string|null;
  readonly icmp_code: number|null;
  readonly icmp_type: number|null;
  readonly ipv6_cidr_block: string|null;

  constructor({
    action,
    from_port,
    protocol,
    rule_no,
    to_port,
    cidr_block = null,
    icmp_code = null,
    icmp_type = null,
    ipv6_cidr_block = null
  }: {
    action: string,
    from_port: number,
    protocol: string,
    rule_no: number,
    to_port: number,
    cidr_block?: string|null,
    icmp_code?: number|null,
    icmp_type?: number|null,
    ipv6_cidr_block?: string|null
  }) {
    this.action = action;
    this.from_port = from_port;
    this.protocol = protocol;
    this.rule_no = rule_no;
    this.to_port = to_port;
    this.cidr_block = cidr_block;
    this.icmp_code = icmp_code;
    this.icmp_type = icmp_type;
    this.ipv6_cidr_block = ipv6_cidr_block;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['rule_no'] = this.rule_no;
    ih['to_port'] = this.to_port;
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.icmp_code !== null) {
      ih['icmp_code'] = this.icmp_code;
    }
    if (this.icmp_type !== null) {
      ih['icmp_type'] = this.icmp_type;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_acl_ingress_429';
  }
}

export class Aws_network_acl_rule implements PcoreValue {
  readonly network_acl_id: string;
  readonly protocol: string;
  readonly rule_action: string;
  readonly rule_number: number;
  readonly aws_network_acl_rule_id: string|null;
  readonly cidr_block: string|null;
  readonly egress: boolean|null;
  readonly from_port: number|null;
  readonly icmp_code: string|null;
  readonly icmp_type: string|null;
  readonly ipv6_cidr_block: string|null;
  readonly to_port: number|null;

  constructor({
    network_acl_id,
    protocol,
    rule_action,
    rule_number,
    aws_network_acl_rule_id = null,
    cidr_block = null,
    egress = null,
    from_port = null,
    icmp_code = null,
    icmp_type = null,
    ipv6_cidr_block = null,
    to_port = null
  }: {
    network_acl_id: string,
    protocol: string,
    rule_action: string,
    rule_number: number,
    aws_network_acl_rule_id?: string|null,
    cidr_block?: string|null,
    egress?: boolean|null,
    from_port?: number|null,
    icmp_code?: string|null,
    icmp_type?: string|null,
    ipv6_cidr_block?: string|null,
    to_port?: number|null
  }) {
    this.network_acl_id = network_acl_id;
    this.protocol = protocol;
    this.rule_action = rule_action;
    this.rule_number = rule_number;
    this.aws_network_acl_rule_id = aws_network_acl_rule_id;
    this.cidr_block = cidr_block;
    this.egress = egress;
    this.from_port = from_port;
    this.icmp_code = icmp_code;
    this.icmp_type = icmp_type;
    this.ipv6_cidr_block = ipv6_cidr_block;
    this.to_port = to_port;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['network_acl_id'] = this.network_acl_id;
    ih['protocol'] = this.protocol;
    ih['rule_action'] = this.rule_action;
    ih['rule_number'] = this.rule_number;
    if (this.aws_network_acl_rule_id !== null) {
      ih['aws_network_acl_rule_id'] = this.aws_network_acl_rule_id;
    }
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.egress !== null) {
      ih['egress'] = this.egress;
    }
    if (this.from_port !== null) {
      ih['from_port'] = this.from_port;
    }
    if (this.icmp_code !== null) {
      ih['icmp_code'] = this.icmp_code;
    }
    if (this.icmp_type !== null) {
      ih['icmp_type'] = this.icmp_type;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    if (this.to_port !== null) {
      ih['to_port'] = this.to_port;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_acl_rule';
  }
}

export class Aws_network_acl_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_acl_ruleHandler';
  }
}

export class Aws_network_interface implements PcoreValue {
  readonly subnet_id: string;
  readonly aws_network_interface_id: string|null;
  readonly attachment: Aws_network_interface_attachment_430[]|null;
  readonly description: string|null;
  readonly private_dns_name: string|null;
  readonly private_ip: string|null;
  readonly private_ips: string[]|null;
  readonly private_ips_count: number|null;
  readonly security_groups: string[]|null;
  readonly source_dest_check: boolean|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    subnet_id,
    aws_network_interface_id = null,
    attachment = null,
    description = null,
    private_dns_name = null,
    private_ip = null,
    private_ips = null,
    private_ips_count = null,
    security_groups = null,
    source_dest_check = null,
    tags = null
  }: {
    subnet_id: string,
    aws_network_interface_id?: string|null,
    attachment?: Aws_network_interface_attachment_430[]|null,
    description?: string|null,
    private_dns_name?: string|null,
    private_ip?: string|null,
    private_ips?: string[]|null,
    private_ips_count?: number|null,
    security_groups?: string[]|null,
    source_dest_check?: boolean|null,
    tags?: {[s: string]: string}|null
  }) {
    this.subnet_id = subnet_id;
    this.aws_network_interface_id = aws_network_interface_id;
    this.attachment = attachment;
    this.description = description;
    this.private_dns_name = private_dns_name;
    this.private_ip = private_ip;
    this.private_ips = private_ips;
    this.private_ips_count = private_ips_count;
    this.security_groups = security_groups;
    this.source_dest_check = source_dest_check;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_id'] = this.subnet_id;
    if (this.aws_network_interface_id !== null) {
      ih['aws_network_interface_id'] = this.aws_network_interface_id;
    }
    if (this.attachment !== null) {
      ih['attachment'] = this.attachment;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.private_dns_name !== null) {
      ih['private_dns_name'] = this.private_dns_name;
    }
    if (this.private_ip !== null) {
      ih['private_ip'] = this.private_ip;
    }
    if (this.private_ips !== null) {
      ih['private_ips'] = this.private_ips;
    }
    if (this.private_ips_count !== null) {
      ih['private_ips_count'] = this.private_ips_count;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.source_dest_check !== null) {
      ih['source_dest_check'] = this.source_dest_check;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_interface';
  }
}

export class Aws_network_interfaceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_interfaceHandler';
  }
}

export class Aws_network_interface_attachment implements PcoreValue {
  readonly device_index: number;
  readonly instance_id: string;
  readonly network_interface_id: string;
  readonly aws_network_interface_attachment_id: string|null;
  readonly attachment_id: string|null;
  readonly status: string|null;

  constructor({
    device_index,
    instance_id,
    network_interface_id,
    aws_network_interface_attachment_id = null,
    attachment_id = null,
    status = null
  }: {
    device_index: number,
    instance_id: string,
    network_interface_id: string,
    aws_network_interface_attachment_id?: string|null,
    attachment_id?: string|null,
    status?: string|null
  }) {
    this.device_index = device_index;
    this.instance_id = instance_id;
    this.network_interface_id = network_interface_id;
    this.aws_network_interface_attachment_id = aws_network_interface_attachment_id;
    this.attachment_id = attachment_id;
    this.status = status;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_index'] = this.device_index;
    ih['instance_id'] = this.instance_id;
    ih['network_interface_id'] = this.network_interface_id;
    if (this.aws_network_interface_attachment_id !== null) {
      ih['aws_network_interface_attachment_id'] = this.aws_network_interface_attachment_id;
    }
    if (this.attachment_id !== null) {
      ih['attachment_id'] = this.attachment_id;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_interface_attachment';
  }
}

export class Aws_network_interface_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_interface_attachmentHandler';
  }
}

export class Aws_network_interface_attachment_430 implements PcoreValue {
  readonly device_index: number;
  readonly instance: string;
  readonly attachment_id: string|null;

  constructor({
    device_index,
    instance,
    attachment_id = null
  }: {
    device_index: number,
    instance: string,
    attachment_id?: string|null
  }) {
    this.device_index = device_index;
    this.instance = instance;
    this.attachment_id = attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_index'] = this.device_index;
    ih['instance'] = this.instance;
    if (this.attachment_id !== null) {
      ih['attachment_id'] = this.attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_interface_attachment_430';
  }
}

export class Aws_network_interface_sg_attachment implements PcoreValue {
  readonly network_interface_id: string;
  readonly security_group_id: string;
  readonly aws_network_interface_sg_attachment_id: string|null;

  constructor({
    network_interface_id,
    security_group_id,
    aws_network_interface_sg_attachment_id = null
  }: {
    network_interface_id: string,
    security_group_id: string,
    aws_network_interface_sg_attachment_id?: string|null
  }) {
    this.network_interface_id = network_interface_id;
    this.security_group_id = security_group_id;
    this.aws_network_interface_sg_attachment_id = aws_network_interface_sg_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['network_interface_id'] = this.network_interface_id;
    ih['security_group_id'] = this.security_group_id;
    if (this.aws_network_interface_sg_attachment_id !== null) {
      ih['aws_network_interface_sg_attachment_id'] = this.aws_network_interface_sg_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_interface_sg_attachment';
  }
}

export class Aws_network_interface_sg_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_network_interface_sg_attachmentHandler';
  }
}

export class Aws_opsworks_application implements PcoreValue {
  readonly name: string;
  readonly stack_id: string;
  readonly type: string;
  readonly aws_opsworks_application_id: string|null;
  readonly app_source: Aws_opsworks_application_app_source_431[]|null;
  readonly auto_bundle_on_deploy: string|null;
  readonly aws_flow_ruby_settings: string|null;
  readonly data_source_arn: string|null;
  readonly data_source_database_name: string|null;
  readonly data_source_type: string|null;
  readonly description: string|null;
  readonly document_root: string|null;
  readonly domains: string[]|null;
  readonly enable_ssl: boolean|null;
  readonly environment: Aws_opsworks_application_environment_432[]|null;
  readonly rails_env: string|null;
  readonly short_name: string|null;
  readonly ssl_configuration: Aws_opsworks_application_ssl_configuration_433[]|null;

  constructor({
    name,
    stack_id,
    type,
    aws_opsworks_application_id = null,
    app_source = null,
    auto_bundle_on_deploy = null,
    aws_flow_ruby_settings = null,
    data_source_arn = null,
    data_source_database_name = null,
    data_source_type = null,
    description = null,
    document_root = null,
    domains = null,
    enable_ssl = null,
    environment = null,
    rails_env = null,
    short_name = null,
    ssl_configuration = null
  }: {
    name: string,
    stack_id: string,
    type: string,
    aws_opsworks_application_id?: string|null,
    app_source?: Aws_opsworks_application_app_source_431[]|null,
    auto_bundle_on_deploy?: string|null,
    aws_flow_ruby_settings?: string|null,
    data_source_arn?: string|null,
    data_source_database_name?: string|null,
    data_source_type?: string|null,
    description?: string|null,
    document_root?: string|null,
    domains?: string[]|null,
    enable_ssl?: boolean|null,
    environment?: Aws_opsworks_application_environment_432[]|null,
    rails_env?: string|null,
    short_name?: string|null,
    ssl_configuration?: Aws_opsworks_application_ssl_configuration_433[]|null
  }) {
    this.name = name;
    this.stack_id = stack_id;
    this.type = type;
    this.aws_opsworks_application_id = aws_opsworks_application_id;
    this.app_source = app_source;
    this.auto_bundle_on_deploy = auto_bundle_on_deploy;
    this.aws_flow_ruby_settings = aws_flow_ruby_settings;
    this.data_source_arn = data_source_arn;
    this.data_source_database_name = data_source_database_name;
    this.data_source_type = data_source_type;
    this.description = description;
    this.document_root = document_root;
    this.domains = domains;
    this.enable_ssl = enable_ssl;
    this.environment = environment;
    this.rails_env = rails_env;
    this.short_name = short_name;
    this.ssl_configuration = ssl_configuration;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['stack_id'] = this.stack_id;
    ih['type'] = this.type;
    if (this.aws_opsworks_application_id !== null) {
      ih['aws_opsworks_application_id'] = this.aws_opsworks_application_id;
    }
    if (this.app_source !== null) {
      ih['app_source'] = this.app_source;
    }
    if (this.auto_bundle_on_deploy !== null) {
      ih['auto_bundle_on_deploy'] = this.auto_bundle_on_deploy;
    }
    if (this.aws_flow_ruby_settings !== null) {
      ih['aws_flow_ruby_settings'] = this.aws_flow_ruby_settings;
    }
    if (this.data_source_arn !== null) {
      ih['data_source_arn'] = this.data_source_arn;
    }
    if (this.data_source_database_name !== null) {
      ih['data_source_database_name'] = this.data_source_database_name;
    }
    if (this.data_source_type !== null) {
      ih['data_source_type'] = this.data_source_type;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.document_root !== null) {
      ih['document_root'] = this.document_root;
    }
    if (this.domains !== null) {
      ih['domains'] = this.domains;
    }
    if (this.enable_ssl !== null) {
      ih['enable_ssl'] = this.enable_ssl;
    }
    if (this.environment !== null) {
      ih['environment'] = this.environment;
    }
    if (this.rails_env !== null) {
      ih['rails_env'] = this.rails_env;
    }
    if (this.short_name !== null) {
      ih['short_name'] = this.short_name;
    }
    if (this.ssl_configuration !== null) {
      ih['ssl_configuration'] = this.ssl_configuration;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_application';
  }
}

export class Aws_opsworks_applicationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_applicationHandler';
  }
}

export class Aws_opsworks_application_app_source_431 implements PcoreValue {
  readonly type: string;
  readonly password: string|null;
  readonly revision: string|null;
  readonly ssh_key: string|null;
  readonly url: string|null;
  readonly username: string|null;

  constructor({
    type,
    password = null,
    revision = null,
    ssh_key = null,
    url = null,
    username = null
  }: {
    type: string,
    password?: string|null,
    revision?: string|null,
    ssh_key?: string|null,
    url?: string|null,
    username?: string|null
  }) {
    this.type = type;
    this.password = password;
    this.revision = revision;
    this.ssh_key = ssh_key;
    this.url = url;
    this.username = username;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.password !== null) {
      ih['password'] = this.password;
    }
    if (this.revision !== null) {
      ih['revision'] = this.revision;
    }
    if (this.ssh_key !== null) {
      ih['ssh_key'] = this.ssh_key;
    }
    if (this.url !== null) {
      ih['url'] = this.url;
    }
    if (this.username !== null) {
      ih['username'] = this.username;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_application_app_source_431';
  }
}

export class Aws_opsworks_application_environment_432 implements PcoreValue {
  readonly key: string;
  readonly value: string;
  readonly secure: boolean|null;

  constructor({
    key,
    value,
    secure = null
  }: {
    key: string,
    value: string,
    secure?: boolean|null
  }) {
    this.key = key;
    this.value = value;
    this.secure = secure;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['value'] = this.value;
    if (this.secure !== null) {
      ih['secure'] = this.secure;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_application_environment_432';
  }
}

export class Aws_opsworks_application_ssl_configuration_433 implements PcoreValue {
  readonly certificate: string;
  readonly private_key: string;
  readonly chain: string|null;

  constructor({
    certificate,
    private_key,
    chain = null
  }: {
    certificate: string,
    private_key: string,
    chain?: string|null
  }) {
    this.certificate = certificate;
    this.private_key = private_key;
    this.chain = chain;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['certificate'] = this.certificate;
    ih['private_key'] = this.private_key;
    if (this.chain !== null) {
      ih['chain'] = this.chain;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_application_ssl_configuration_433';
  }
}

export class Aws_opsworks_custom_layer implements PcoreValue {
  readonly name: string;
  readonly short_name: string;
  readonly stack_id: string;
  readonly aws_opsworks_custom_layer_id: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_custom_layer_ebs_volume_434[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    name,
    short_name,
    stack_id,
    aws_opsworks_custom_layer_id = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    name: string,
    short_name: string,
    stack_id: string,
    aws_opsworks_custom_layer_id?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_custom_layer_ebs_volume_434[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.name = name;
    this.short_name = short_name;
    this.stack_id = stack_id;
    this.aws_opsworks_custom_layer_id = aws_opsworks_custom_layer_id;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['short_name'] = this.short_name;
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_custom_layer_id !== null) {
      ih['aws_opsworks_custom_layer_id'] = this.aws_opsworks_custom_layer_id;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_custom_layer';
  }
}

export class Aws_opsworks_custom_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_custom_layerHandler';
  }
}

export class Aws_opsworks_custom_layer_ebs_volume_434 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_custom_layer_ebs_volume_434';
  }
}

export class Aws_opsworks_ganglia_layer implements PcoreValue {
  readonly password: string;
  readonly stack_id: string;
  readonly aws_opsworks_ganglia_layer_id: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_ganglia_layer_ebs_volume_435[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly name: string|null;
  readonly system_packages: string[]|null;
  readonly url: string|null;
  readonly use_ebs_optimized_instances: boolean|null;
  readonly username: string|null;

  constructor({
    password,
    stack_id,
    aws_opsworks_ganglia_layer_id = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    name = null,
    system_packages = null,
    url = null,
    use_ebs_optimized_instances = null,
    username = null
  }: {
    password: string,
    stack_id: string,
    aws_opsworks_ganglia_layer_id?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_ganglia_layer_ebs_volume_435[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    name?: string|null,
    system_packages?: string[]|null,
    url?: string|null,
    use_ebs_optimized_instances?: boolean|null,
    username?: string|null
  }) {
    this.password = password;
    this.stack_id = stack_id;
    this.aws_opsworks_ganglia_layer_id = aws_opsworks_ganglia_layer_id;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.name = name;
    this.system_packages = system_packages;
    this.url = url;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
    this.username = username;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['password'] = this.password;
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_ganglia_layer_id !== null) {
      ih['aws_opsworks_ganglia_layer_id'] = this.aws_opsworks_ganglia_layer_id;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.url !== null) {
      ih['url'] = this.url;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    if (this.username !== null) {
      ih['username'] = this.username;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_ganglia_layer';
  }
}

export class Aws_opsworks_ganglia_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_ganglia_layerHandler';
  }
}

export class Aws_opsworks_ganglia_layer_ebs_volume_435 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_ganglia_layer_ebs_volume_435';
  }
}

export class Aws_opsworks_haproxy_layer implements PcoreValue {
  readonly stack_id: string;
  readonly stats_password: string;
  readonly aws_opsworks_haproxy_layer_id: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_haproxy_layer_ebs_volume_436[]|null;
  readonly elastic_load_balancer: string|null;
  readonly healthcheck_method: string|null;
  readonly healthcheck_url: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly name: string|null;
  readonly stats_enabled: boolean|null;
  readonly stats_url: string|null;
  readonly stats_user: string|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    stack_id,
    stats_password,
    aws_opsworks_haproxy_layer_id = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    healthcheck_method = null,
    healthcheck_url = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    name = null,
    stats_enabled = null,
    stats_url = null,
    stats_user = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    stack_id: string,
    stats_password: string,
    aws_opsworks_haproxy_layer_id?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_haproxy_layer_ebs_volume_436[]|null,
    elastic_load_balancer?: string|null,
    healthcheck_method?: string|null,
    healthcheck_url?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    name?: string|null,
    stats_enabled?: boolean|null,
    stats_url?: string|null,
    stats_user?: string|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.stack_id = stack_id;
    this.stats_password = stats_password;
    this.aws_opsworks_haproxy_layer_id = aws_opsworks_haproxy_layer_id;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.healthcheck_method = healthcheck_method;
    this.healthcheck_url = healthcheck_url;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.name = name;
    this.stats_enabled = stats_enabled;
    this.stats_url = stats_url;
    this.stats_user = stats_user;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['stack_id'] = this.stack_id;
    ih['stats_password'] = this.stats_password;
    if (this.aws_opsworks_haproxy_layer_id !== null) {
      ih['aws_opsworks_haproxy_layer_id'] = this.aws_opsworks_haproxy_layer_id;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.healthcheck_method !== null) {
      ih['healthcheck_method'] = this.healthcheck_method;
    }
    if (this.healthcheck_url !== null) {
      ih['healthcheck_url'] = this.healthcheck_url;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.stats_enabled !== null) {
      ih['stats_enabled'] = this.stats_enabled;
    }
    if (this.stats_url !== null) {
      ih['stats_url'] = this.stats_url;
    }
    if (this.stats_user !== null) {
      ih['stats_user'] = this.stats_user;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_haproxy_layer';
  }
}

export class Aws_opsworks_haproxy_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_haproxy_layerHandler';
  }
}

export class Aws_opsworks_haproxy_layer_ebs_volume_436 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_haproxy_layer_ebs_volume_436';
  }
}

export class Aws_opsworks_instance implements PcoreValue {
  readonly layer_ids: string[];
  readonly stack_id: string;
  readonly aws_opsworks_instance_id: string|null;
  readonly agent_version: string|null;
  readonly ami_id: string|null;
  readonly architecture: string|null;
  readonly auto_scaling_type: string|null;
  readonly availability_zone: string|null;
  readonly created_at: string|null;
  readonly delete_ebs: boolean|null;
  readonly delete_eip: boolean|null;
  readonly ebs_block_device: Aws_opsworks_instance_ebs_block_device_437[]|null;
  readonly ebs_optimized: boolean|null;
  readonly ec2_instance_id: string|null;
  readonly ecs_cluster_arn: string|null;
  readonly elastic_ip: string|null;
  readonly ephemeral_block_device: Aws_opsworks_instance_ephemeral_block_device_438[]|null;
  readonly hostname: string|null;
  readonly infrastructure_class: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_profile_arn: string|null;
  readonly instance_type: string|null;
  readonly last_service_error_id: string|null;
  readonly os: string|null;
  readonly platform: string|null;
  readonly private_dns: string|null;
  readonly private_ip: string|null;
  readonly public_dns: string|null;
  readonly public_ip: string|null;
  readonly registered_by: string|null;
  readonly reported_agent_version: string|null;
  readonly reported_os_family: string|null;
  readonly reported_os_name: string|null;
  readonly reported_os_version: string|null;
  readonly root_block_device: Aws_opsworks_instance_root_block_device_439[]|null;
  readonly root_device_type: string|null;
  readonly root_device_volume_id: string|null;
  readonly security_group_ids: string[]|null;
  readonly ssh_host_dsa_key_fingerprint: string|null;
  readonly ssh_host_rsa_key_fingerprint: string|null;
  readonly ssh_key_name: string|null;
  readonly state: string|null;
  readonly status: string|null;
  readonly subnet_id: string|null;
  readonly tenancy: string|null;
  readonly virtualization_type: string|null;

  constructor({
    layer_ids,
    stack_id,
    aws_opsworks_instance_id = null,
    agent_version = null,
    ami_id = null,
    architecture = null,
    auto_scaling_type = null,
    availability_zone = null,
    created_at = null,
    delete_ebs = null,
    delete_eip = null,
    ebs_block_device = null,
    ebs_optimized = null,
    ec2_instance_id = null,
    ecs_cluster_arn = null,
    elastic_ip = null,
    ephemeral_block_device = null,
    hostname = null,
    infrastructure_class = null,
    install_updates_on_boot = null,
    instance_profile_arn = null,
    instance_type = null,
    last_service_error_id = null,
    os = null,
    platform = null,
    private_dns = null,
    private_ip = null,
    public_dns = null,
    public_ip = null,
    registered_by = null,
    reported_agent_version = null,
    reported_os_family = null,
    reported_os_name = null,
    reported_os_version = null,
    root_block_device = null,
    root_device_type = null,
    root_device_volume_id = null,
    security_group_ids = null,
    ssh_host_dsa_key_fingerprint = null,
    ssh_host_rsa_key_fingerprint = null,
    ssh_key_name = null,
    state = null,
    status = null,
    subnet_id = null,
    tenancy = null,
    virtualization_type = null
  }: {
    layer_ids: string[],
    stack_id: string,
    aws_opsworks_instance_id?: string|null,
    agent_version?: string|null,
    ami_id?: string|null,
    architecture?: string|null,
    auto_scaling_type?: string|null,
    availability_zone?: string|null,
    created_at?: string|null,
    delete_ebs?: boolean|null,
    delete_eip?: boolean|null,
    ebs_block_device?: Aws_opsworks_instance_ebs_block_device_437[]|null,
    ebs_optimized?: boolean|null,
    ec2_instance_id?: string|null,
    ecs_cluster_arn?: string|null,
    elastic_ip?: string|null,
    ephemeral_block_device?: Aws_opsworks_instance_ephemeral_block_device_438[]|null,
    hostname?: string|null,
    infrastructure_class?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_profile_arn?: string|null,
    instance_type?: string|null,
    last_service_error_id?: string|null,
    os?: string|null,
    platform?: string|null,
    private_dns?: string|null,
    private_ip?: string|null,
    public_dns?: string|null,
    public_ip?: string|null,
    registered_by?: string|null,
    reported_agent_version?: string|null,
    reported_os_family?: string|null,
    reported_os_name?: string|null,
    reported_os_version?: string|null,
    root_block_device?: Aws_opsworks_instance_root_block_device_439[]|null,
    root_device_type?: string|null,
    root_device_volume_id?: string|null,
    security_group_ids?: string[]|null,
    ssh_host_dsa_key_fingerprint?: string|null,
    ssh_host_rsa_key_fingerprint?: string|null,
    ssh_key_name?: string|null,
    state?: string|null,
    status?: string|null,
    subnet_id?: string|null,
    tenancy?: string|null,
    virtualization_type?: string|null
  }) {
    this.layer_ids = layer_ids;
    this.stack_id = stack_id;
    this.aws_opsworks_instance_id = aws_opsworks_instance_id;
    this.agent_version = agent_version;
    this.ami_id = ami_id;
    this.architecture = architecture;
    this.auto_scaling_type = auto_scaling_type;
    this.availability_zone = availability_zone;
    this.created_at = created_at;
    this.delete_ebs = delete_ebs;
    this.delete_eip = delete_eip;
    this.ebs_block_device = ebs_block_device;
    this.ebs_optimized = ebs_optimized;
    this.ec2_instance_id = ec2_instance_id;
    this.ecs_cluster_arn = ecs_cluster_arn;
    this.elastic_ip = elastic_ip;
    this.ephemeral_block_device = ephemeral_block_device;
    this.hostname = hostname;
    this.infrastructure_class = infrastructure_class;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_profile_arn = instance_profile_arn;
    this.instance_type = instance_type;
    this.last_service_error_id = last_service_error_id;
    this.os = os;
    this.platform = platform;
    this.private_dns = private_dns;
    this.private_ip = private_ip;
    this.public_dns = public_dns;
    this.public_ip = public_ip;
    this.registered_by = registered_by;
    this.reported_agent_version = reported_agent_version;
    this.reported_os_family = reported_os_family;
    this.reported_os_name = reported_os_name;
    this.reported_os_version = reported_os_version;
    this.root_block_device = root_block_device;
    this.root_device_type = root_device_type;
    this.root_device_volume_id = root_device_volume_id;
    this.security_group_ids = security_group_ids;
    this.ssh_host_dsa_key_fingerprint = ssh_host_dsa_key_fingerprint;
    this.ssh_host_rsa_key_fingerprint = ssh_host_rsa_key_fingerprint;
    this.ssh_key_name = ssh_key_name;
    this.state = state;
    this.status = status;
    this.subnet_id = subnet_id;
    this.tenancy = tenancy;
    this.virtualization_type = virtualization_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['layer_ids'] = this.layer_ids;
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_instance_id !== null) {
      ih['aws_opsworks_instance_id'] = this.aws_opsworks_instance_id;
    }
    if (this.agent_version !== null) {
      ih['agent_version'] = this.agent_version;
    }
    if (this.ami_id !== null) {
      ih['ami_id'] = this.ami_id;
    }
    if (this.architecture !== null) {
      ih['architecture'] = this.architecture;
    }
    if (this.auto_scaling_type !== null) {
      ih['auto_scaling_type'] = this.auto_scaling_type;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.created_at !== null) {
      ih['created_at'] = this.created_at;
    }
    if (this.delete_ebs !== null) {
      ih['delete_ebs'] = this.delete_ebs;
    }
    if (this.delete_eip !== null) {
      ih['delete_eip'] = this.delete_eip;
    }
    if (this.ebs_block_device !== null) {
      ih['ebs_block_device'] = this.ebs_block_device;
    }
    if (this.ebs_optimized !== null) {
      ih['ebs_optimized'] = this.ebs_optimized;
    }
    if (this.ec2_instance_id !== null) {
      ih['ec2_instance_id'] = this.ec2_instance_id;
    }
    if (this.ecs_cluster_arn !== null) {
      ih['ecs_cluster_arn'] = this.ecs_cluster_arn;
    }
    if (this.elastic_ip !== null) {
      ih['elastic_ip'] = this.elastic_ip;
    }
    if (this.ephemeral_block_device !== null) {
      ih['ephemeral_block_device'] = this.ephemeral_block_device;
    }
    if (this.hostname !== null) {
      ih['hostname'] = this.hostname;
    }
    if (this.infrastructure_class !== null) {
      ih['infrastructure_class'] = this.infrastructure_class;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_profile_arn !== null) {
      ih['instance_profile_arn'] = this.instance_profile_arn;
    }
    if (this.instance_type !== null) {
      ih['instance_type'] = this.instance_type;
    }
    if (this.last_service_error_id !== null) {
      ih['last_service_error_id'] = this.last_service_error_id;
    }
    if (this.os !== null) {
      ih['os'] = this.os;
    }
    if (this.platform !== null) {
      ih['platform'] = this.platform;
    }
    if (this.private_dns !== null) {
      ih['private_dns'] = this.private_dns;
    }
    if (this.private_ip !== null) {
      ih['private_ip'] = this.private_ip;
    }
    if (this.public_dns !== null) {
      ih['public_dns'] = this.public_dns;
    }
    if (this.public_ip !== null) {
      ih['public_ip'] = this.public_ip;
    }
    if (this.registered_by !== null) {
      ih['registered_by'] = this.registered_by;
    }
    if (this.reported_agent_version !== null) {
      ih['reported_agent_version'] = this.reported_agent_version;
    }
    if (this.reported_os_family !== null) {
      ih['reported_os_family'] = this.reported_os_family;
    }
    if (this.reported_os_name !== null) {
      ih['reported_os_name'] = this.reported_os_name;
    }
    if (this.reported_os_version !== null) {
      ih['reported_os_version'] = this.reported_os_version;
    }
    if (this.root_block_device !== null) {
      ih['root_block_device'] = this.root_block_device;
    }
    if (this.root_device_type !== null) {
      ih['root_device_type'] = this.root_device_type;
    }
    if (this.root_device_volume_id !== null) {
      ih['root_device_volume_id'] = this.root_device_volume_id;
    }
    if (this.security_group_ids !== null) {
      ih['security_group_ids'] = this.security_group_ids;
    }
    if (this.ssh_host_dsa_key_fingerprint !== null) {
      ih['ssh_host_dsa_key_fingerprint'] = this.ssh_host_dsa_key_fingerprint;
    }
    if (this.ssh_host_rsa_key_fingerprint !== null) {
      ih['ssh_host_rsa_key_fingerprint'] = this.ssh_host_rsa_key_fingerprint;
    }
    if (this.ssh_key_name !== null) {
      ih['ssh_key_name'] = this.ssh_key_name;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.tenancy !== null) {
      ih['tenancy'] = this.tenancy;
    }
    if (this.virtualization_type !== null) {
      ih['virtualization_type'] = this.virtualization_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_instance';
  }
}

export class Aws_opsworks_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_instanceHandler';
  }
}

export class Aws_opsworks_instance_ebs_block_device_437 implements PcoreValue {
  readonly device_name: string;
  readonly delete_on_termination: boolean|null;
  readonly iops: number|null;
  readonly snapshot_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    device_name,
    delete_on_termination = null,
    iops = null,
    snapshot_id = null,
    volume_size = null,
    volume_type = null
  }: {
    device_name: string,
    delete_on_termination?: boolean|null,
    iops?: number|null,
    snapshot_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.device_name = device_name;
    this.delete_on_termination = delete_on_termination;
    this.iops = iops;
    this.snapshot_id = snapshot_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_instance_ebs_block_device_437';
  }
}

export class Aws_opsworks_instance_ephemeral_block_device_438 implements PcoreValue {
  readonly device_name: string;
  readonly virtual_name: string;

  constructor({
    device_name,
    virtual_name
  }: {
    device_name: string,
    virtual_name: string
  }) {
    this.device_name = device_name;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    ih['virtual_name'] = this.virtual_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_instance_ephemeral_block_device_438';
  }
}

export class Aws_opsworks_instance_root_block_device_439 implements PcoreValue {
  readonly delete_on_termination: boolean|null;
  readonly iops: number|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    delete_on_termination = null,
    iops = null,
    volume_size = null,
    volume_type = null
  }: {
    delete_on_termination?: boolean|null,
    iops?: number|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.delete_on_termination = delete_on_termination;
    this.iops = iops;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_instance_root_block_device_439';
  }
}

export class Aws_opsworks_java_app_layer implements PcoreValue {
  readonly stack_id: string;
  readonly aws_opsworks_java_app_layer_id: string|null;
  readonly app_server: string|null;
  readonly app_server_version: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_java_app_layer_ebs_volume_440[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly jvm_options: string|null;
  readonly jvm_type: string|null;
  readonly jvm_version: string|null;
  readonly name: string|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    stack_id,
    aws_opsworks_java_app_layer_id = null,
    app_server = null,
    app_server_version = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    jvm_options = null,
    jvm_type = null,
    jvm_version = null,
    name = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    stack_id: string,
    aws_opsworks_java_app_layer_id?: string|null,
    app_server?: string|null,
    app_server_version?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_java_app_layer_ebs_volume_440[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    jvm_options?: string|null,
    jvm_type?: string|null,
    jvm_version?: string|null,
    name?: string|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.stack_id = stack_id;
    this.aws_opsworks_java_app_layer_id = aws_opsworks_java_app_layer_id;
    this.app_server = app_server;
    this.app_server_version = app_server_version;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.jvm_options = jvm_options;
    this.jvm_type = jvm_type;
    this.jvm_version = jvm_version;
    this.name = name;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_java_app_layer_id !== null) {
      ih['aws_opsworks_java_app_layer_id'] = this.aws_opsworks_java_app_layer_id;
    }
    if (this.app_server !== null) {
      ih['app_server'] = this.app_server;
    }
    if (this.app_server_version !== null) {
      ih['app_server_version'] = this.app_server_version;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.jvm_options !== null) {
      ih['jvm_options'] = this.jvm_options;
    }
    if (this.jvm_type !== null) {
      ih['jvm_type'] = this.jvm_type;
    }
    if (this.jvm_version !== null) {
      ih['jvm_version'] = this.jvm_version;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_java_app_layer';
  }
}

export class Aws_opsworks_java_app_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_java_app_layerHandler';
  }
}

export class Aws_opsworks_java_app_layer_ebs_volume_440 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_java_app_layer_ebs_volume_440';
  }
}

export class Aws_opsworks_memcached_layer implements PcoreValue {
  readonly stack_id: string;
  readonly aws_opsworks_memcached_layer_id: string|null;
  readonly allocated_memory: number|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_memcached_layer_ebs_volume_441[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly name: string|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    stack_id,
    aws_opsworks_memcached_layer_id = null,
    allocated_memory = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    name = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    stack_id: string,
    aws_opsworks_memcached_layer_id?: string|null,
    allocated_memory?: number|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_memcached_layer_ebs_volume_441[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    name?: string|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.stack_id = stack_id;
    this.aws_opsworks_memcached_layer_id = aws_opsworks_memcached_layer_id;
    this.allocated_memory = allocated_memory;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.name = name;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_memcached_layer_id !== null) {
      ih['aws_opsworks_memcached_layer_id'] = this.aws_opsworks_memcached_layer_id;
    }
    if (this.allocated_memory !== null) {
      ih['allocated_memory'] = this.allocated_memory;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_memcached_layer';
  }
}

export class Aws_opsworks_memcached_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_memcached_layerHandler';
  }
}

export class Aws_opsworks_memcached_layer_ebs_volume_441 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_memcached_layer_ebs_volume_441';
  }
}

export class Aws_opsworks_mysql_layer implements PcoreValue {
  readonly stack_id: string;
  readonly aws_opsworks_mysql_layer_id: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_mysql_layer_ebs_volume_442[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly name: string|null;
  readonly root_password: string|null;
  readonly root_password_on_all_instances: boolean|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    stack_id,
    aws_opsworks_mysql_layer_id = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    name = null,
    root_password = null,
    root_password_on_all_instances = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    stack_id: string,
    aws_opsworks_mysql_layer_id?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_mysql_layer_ebs_volume_442[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    name?: string|null,
    root_password?: string|null,
    root_password_on_all_instances?: boolean|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.stack_id = stack_id;
    this.aws_opsworks_mysql_layer_id = aws_opsworks_mysql_layer_id;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.name = name;
    this.root_password = root_password;
    this.root_password_on_all_instances = root_password_on_all_instances;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_mysql_layer_id !== null) {
      ih['aws_opsworks_mysql_layer_id'] = this.aws_opsworks_mysql_layer_id;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.root_password !== null) {
      ih['root_password'] = this.root_password;
    }
    if (this.root_password_on_all_instances !== null) {
      ih['root_password_on_all_instances'] = this.root_password_on_all_instances;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_mysql_layer';
  }
}

export class Aws_opsworks_mysql_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_mysql_layerHandler';
  }
}

export class Aws_opsworks_mysql_layer_ebs_volume_442 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_mysql_layer_ebs_volume_442';
  }
}

export class Aws_opsworks_nodejs_app_layer implements PcoreValue {
  readonly stack_id: string;
  readonly aws_opsworks_nodejs_app_layer_id: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_nodejs_app_layer_ebs_volume_443[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly name: string|null;
  readonly nodejs_version: string|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    stack_id,
    aws_opsworks_nodejs_app_layer_id = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    name = null,
    nodejs_version = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    stack_id: string,
    aws_opsworks_nodejs_app_layer_id?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_nodejs_app_layer_ebs_volume_443[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    name?: string|null,
    nodejs_version?: string|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.stack_id = stack_id;
    this.aws_opsworks_nodejs_app_layer_id = aws_opsworks_nodejs_app_layer_id;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.name = name;
    this.nodejs_version = nodejs_version;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_nodejs_app_layer_id !== null) {
      ih['aws_opsworks_nodejs_app_layer_id'] = this.aws_opsworks_nodejs_app_layer_id;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.nodejs_version !== null) {
      ih['nodejs_version'] = this.nodejs_version;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_nodejs_app_layer';
  }
}

export class Aws_opsworks_nodejs_app_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_nodejs_app_layerHandler';
  }
}

export class Aws_opsworks_nodejs_app_layer_ebs_volume_443 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_nodejs_app_layer_ebs_volume_443';
  }
}

export class Aws_opsworks_permission implements PcoreValue {
  readonly user_arn: string;
  readonly aws_opsworks_permission_id: string|null;
  readonly allow_ssh: boolean|null;
  readonly allow_sudo: boolean|null;
  readonly level: string|null;
  readonly stack_id: string|null;

  constructor({
    user_arn,
    aws_opsworks_permission_id = null,
    allow_ssh = null,
    allow_sudo = null,
    level = null,
    stack_id = null
  }: {
    user_arn: string,
    aws_opsworks_permission_id?: string|null,
    allow_ssh?: boolean|null,
    allow_sudo?: boolean|null,
    level?: string|null,
    stack_id?: string|null
  }) {
    this.user_arn = user_arn;
    this.aws_opsworks_permission_id = aws_opsworks_permission_id;
    this.allow_ssh = allow_ssh;
    this.allow_sudo = allow_sudo;
    this.level = level;
    this.stack_id = stack_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['user_arn'] = this.user_arn;
    if (this.aws_opsworks_permission_id !== null) {
      ih['aws_opsworks_permission_id'] = this.aws_opsworks_permission_id;
    }
    if (this.allow_ssh !== null) {
      ih['allow_ssh'] = this.allow_ssh;
    }
    if (this.allow_sudo !== null) {
      ih['allow_sudo'] = this.allow_sudo;
    }
    if (this.level !== null) {
      ih['level'] = this.level;
    }
    if (this.stack_id !== null) {
      ih['stack_id'] = this.stack_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_permission';
  }
}

export class Aws_opsworks_permissionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_permissionHandler';
  }
}

export class Aws_opsworks_php_app_layer implements PcoreValue {
  readonly stack_id: string;
  readonly aws_opsworks_php_app_layer_id: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_php_app_layer_ebs_volume_444[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly name: string|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    stack_id,
    aws_opsworks_php_app_layer_id = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    name = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    stack_id: string,
    aws_opsworks_php_app_layer_id?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_php_app_layer_ebs_volume_444[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    name?: string|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.stack_id = stack_id;
    this.aws_opsworks_php_app_layer_id = aws_opsworks_php_app_layer_id;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.name = name;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_php_app_layer_id !== null) {
      ih['aws_opsworks_php_app_layer_id'] = this.aws_opsworks_php_app_layer_id;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_php_app_layer';
  }
}

export class Aws_opsworks_php_app_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_php_app_layerHandler';
  }
}

export class Aws_opsworks_php_app_layer_ebs_volume_444 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_php_app_layer_ebs_volume_444';
  }
}

export class Aws_opsworks_rails_app_layer implements PcoreValue {
  readonly stack_id: string;
  readonly aws_opsworks_rails_app_layer_id: string|null;
  readonly app_server: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly bundler_version: string|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_rails_app_layer_ebs_volume_445[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly manage_bundler: boolean|null;
  readonly name: string|null;
  readonly passenger_version: string|null;
  readonly ruby_version: string|null;
  readonly rubygems_version: string|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    stack_id,
    aws_opsworks_rails_app_layer_id = null,
    app_server = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    bundler_version = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    manage_bundler = null,
    name = null,
    passenger_version = null,
    ruby_version = null,
    rubygems_version = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    stack_id: string,
    aws_opsworks_rails_app_layer_id?: string|null,
    app_server?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    bundler_version?: string|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_rails_app_layer_ebs_volume_445[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    manage_bundler?: boolean|null,
    name?: string|null,
    passenger_version?: string|null,
    ruby_version?: string|null,
    rubygems_version?: string|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.stack_id = stack_id;
    this.aws_opsworks_rails_app_layer_id = aws_opsworks_rails_app_layer_id;
    this.app_server = app_server;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.bundler_version = bundler_version;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.manage_bundler = manage_bundler;
    this.name = name;
    this.passenger_version = passenger_version;
    this.ruby_version = ruby_version;
    this.rubygems_version = rubygems_version;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_rails_app_layer_id !== null) {
      ih['aws_opsworks_rails_app_layer_id'] = this.aws_opsworks_rails_app_layer_id;
    }
    if (this.app_server !== null) {
      ih['app_server'] = this.app_server;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.bundler_version !== null) {
      ih['bundler_version'] = this.bundler_version;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.manage_bundler !== null) {
      ih['manage_bundler'] = this.manage_bundler;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.passenger_version !== null) {
      ih['passenger_version'] = this.passenger_version;
    }
    if (this.ruby_version !== null) {
      ih['ruby_version'] = this.ruby_version;
    }
    if (this.rubygems_version !== null) {
      ih['rubygems_version'] = this.rubygems_version;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_rails_app_layer';
  }
}

export class Aws_opsworks_rails_app_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_rails_app_layerHandler';
  }
}

export class Aws_opsworks_rails_app_layer_ebs_volume_445 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_rails_app_layer_ebs_volume_445';
  }
}

export class Aws_opsworks_rds_db_instance implements PcoreValue {
  readonly db_password: string;
  readonly db_user: string;
  readonly rds_db_instance_arn: string;
  readonly stack_id: string;
  readonly aws_opsworks_rds_db_instance_id: string|null;

  constructor({
    db_password,
    db_user,
    rds_db_instance_arn,
    stack_id,
    aws_opsworks_rds_db_instance_id = null
  }: {
    db_password: string,
    db_user: string,
    rds_db_instance_arn: string,
    stack_id: string,
    aws_opsworks_rds_db_instance_id?: string|null
  }) {
    this.db_password = db_password;
    this.db_user = db_user;
    this.rds_db_instance_arn = rds_db_instance_arn;
    this.stack_id = stack_id;
    this.aws_opsworks_rds_db_instance_id = aws_opsworks_rds_db_instance_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['db_password'] = this.db_password;
    ih['db_user'] = this.db_user;
    ih['rds_db_instance_arn'] = this.rds_db_instance_arn;
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_rds_db_instance_id !== null) {
      ih['aws_opsworks_rds_db_instance_id'] = this.aws_opsworks_rds_db_instance_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_rds_db_instance';
  }
}

export class Aws_opsworks_rds_db_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_rds_db_instanceHandler';
  }
}

export class Aws_opsworks_stack implements PcoreValue {
  readonly default_instance_profile_arn: string;
  readonly name: string;
  readonly region: string;
  readonly service_role_arn: string;
  readonly aws_opsworks_stack_id: string|null;
  readonly agent_version: string|null;
  readonly arn: string|null;
  readonly berkshelf_version: string|null;
  readonly color: string|null;
  readonly configuration_manager_name: string|null;
  readonly configuration_manager_version: string|null;
  readonly custom_cookbooks_source: Aws_opsworks_stack_custom_cookbooks_source_446[]|null;
  readonly custom_json: string|null;
  readonly default_availability_zone: string|null;
  readonly default_os: string|null;
  readonly default_root_device_type: string|null;
  readonly default_ssh_key_name: string|null;
  readonly default_subnet_id: string|null;
  readonly hostname_theme: string|null;
  readonly manage_berkshelf: boolean|null;
  readonly stack_endpoint: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly use_custom_cookbooks: boolean|null;
  readonly use_opsworks_security_groups: boolean|null;
  readonly vpc_id: string|null;

  constructor({
    default_instance_profile_arn,
    name,
    region,
    service_role_arn,
    aws_opsworks_stack_id = null,
    agent_version = null,
    arn = null,
    berkshelf_version = null,
    color = null,
    configuration_manager_name = null,
    configuration_manager_version = null,
    custom_cookbooks_source = null,
    custom_json = null,
    default_availability_zone = null,
    default_os = null,
    default_root_device_type = null,
    default_ssh_key_name = null,
    default_subnet_id = null,
    hostname_theme = null,
    manage_berkshelf = null,
    stack_endpoint = null,
    tags = null,
    use_custom_cookbooks = null,
    use_opsworks_security_groups = null,
    vpc_id = null
  }: {
    default_instance_profile_arn: string,
    name: string,
    region: string,
    service_role_arn: string,
    aws_opsworks_stack_id?: string|null,
    agent_version?: string|null,
    arn?: string|null,
    berkshelf_version?: string|null,
    color?: string|null,
    configuration_manager_name?: string|null,
    configuration_manager_version?: string|null,
    custom_cookbooks_source?: Aws_opsworks_stack_custom_cookbooks_source_446[]|null,
    custom_json?: string|null,
    default_availability_zone?: string|null,
    default_os?: string|null,
    default_root_device_type?: string|null,
    default_ssh_key_name?: string|null,
    default_subnet_id?: string|null,
    hostname_theme?: string|null,
    manage_berkshelf?: boolean|null,
    stack_endpoint?: string|null,
    tags?: {[s: string]: string}|null,
    use_custom_cookbooks?: boolean|null,
    use_opsworks_security_groups?: boolean|null,
    vpc_id?: string|null
  }) {
    this.default_instance_profile_arn = default_instance_profile_arn;
    this.name = name;
    this.region = region;
    this.service_role_arn = service_role_arn;
    this.aws_opsworks_stack_id = aws_opsworks_stack_id;
    this.agent_version = agent_version;
    this.arn = arn;
    this.berkshelf_version = berkshelf_version;
    this.color = color;
    this.configuration_manager_name = configuration_manager_name;
    this.configuration_manager_version = configuration_manager_version;
    this.custom_cookbooks_source = custom_cookbooks_source;
    this.custom_json = custom_json;
    this.default_availability_zone = default_availability_zone;
    this.default_os = default_os;
    this.default_root_device_type = default_root_device_type;
    this.default_ssh_key_name = default_ssh_key_name;
    this.default_subnet_id = default_subnet_id;
    this.hostname_theme = hostname_theme;
    this.manage_berkshelf = manage_berkshelf;
    this.stack_endpoint = stack_endpoint;
    this.tags = tags;
    this.use_custom_cookbooks = use_custom_cookbooks;
    this.use_opsworks_security_groups = use_opsworks_security_groups;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_instance_profile_arn'] = this.default_instance_profile_arn;
    ih['name'] = this.name;
    ih['region'] = this.region;
    ih['service_role_arn'] = this.service_role_arn;
    if (this.aws_opsworks_stack_id !== null) {
      ih['aws_opsworks_stack_id'] = this.aws_opsworks_stack_id;
    }
    if (this.agent_version !== null) {
      ih['agent_version'] = this.agent_version;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.berkshelf_version !== null) {
      ih['berkshelf_version'] = this.berkshelf_version;
    }
    if (this.color !== null) {
      ih['color'] = this.color;
    }
    if (this.configuration_manager_name !== null) {
      ih['configuration_manager_name'] = this.configuration_manager_name;
    }
    if (this.configuration_manager_version !== null) {
      ih['configuration_manager_version'] = this.configuration_manager_version;
    }
    if (this.custom_cookbooks_source !== null) {
      ih['custom_cookbooks_source'] = this.custom_cookbooks_source;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.default_availability_zone !== null) {
      ih['default_availability_zone'] = this.default_availability_zone;
    }
    if (this.default_os !== null) {
      ih['default_os'] = this.default_os;
    }
    if (this.default_root_device_type !== null) {
      ih['default_root_device_type'] = this.default_root_device_type;
    }
    if (this.default_ssh_key_name !== null) {
      ih['default_ssh_key_name'] = this.default_ssh_key_name;
    }
    if (this.default_subnet_id !== null) {
      ih['default_subnet_id'] = this.default_subnet_id;
    }
    if (this.hostname_theme !== null) {
      ih['hostname_theme'] = this.hostname_theme;
    }
    if (this.manage_berkshelf !== null) {
      ih['manage_berkshelf'] = this.manage_berkshelf;
    }
    if (this.stack_endpoint !== null) {
      ih['stack_endpoint'] = this.stack_endpoint;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.use_custom_cookbooks !== null) {
      ih['use_custom_cookbooks'] = this.use_custom_cookbooks;
    }
    if (this.use_opsworks_security_groups !== null) {
      ih['use_opsworks_security_groups'] = this.use_opsworks_security_groups;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_stack';
  }
}

export class Aws_opsworks_stackHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_stackHandler';
  }
}

export class Aws_opsworks_stack_custom_cookbooks_source_446 implements PcoreValue {
  readonly type: string;
  readonly url: string;
  readonly password: string|null;
  readonly revision: string|null;
  readonly ssh_key: string|null;
  readonly username: string|null;

  constructor({
    type,
    url,
    password = null,
    revision = null,
    ssh_key = null,
    username = null
  }: {
    type: string,
    url: string,
    password?: string|null,
    revision?: string|null,
    ssh_key?: string|null,
    username?: string|null
  }) {
    this.type = type;
    this.url = url;
    this.password = password;
    this.revision = revision;
    this.ssh_key = ssh_key;
    this.username = username;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    ih['url'] = this.url;
    if (this.password !== null) {
      ih['password'] = this.password;
    }
    if (this.revision !== null) {
      ih['revision'] = this.revision;
    }
    if (this.ssh_key !== null) {
      ih['ssh_key'] = this.ssh_key;
    }
    if (this.username !== null) {
      ih['username'] = this.username;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_stack_custom_cookbooks_source_446';
  }
}

export class Aws_opsworks_static_web_layer implements PcoreValue {
  readonly stack_id: string;
  readonly aws_opsworks_static_web_layer_id: string|null;
  readonly auto_assign_elastic_ips: boolean|null;
  readonly auto_assign_public_ips: boolean|null;
  readonly auto_healing: boolean|null;
  readonly custom_configure_recipes: string[]|null;
  readonly custom_deploy_recipes: string[]|null;
  readonly custom_instance_profile_arn: string|null;
  readonly custom_json: string|null;
  readonly custom_security_group_ids: string[]|null;
  readonly custom_setup_recipes: string[]|null;
  readonly custom_shutdown_recipes: string[]|null;
  readonly custom_undeploy_recipes: string[]|null;
  readonly drain_elb_on_shutdown: boolean|null;
  readonly ebs_volume: Aws_opsworks_static_web_layer_ebs_volume_447[]|null;
  readonly elastic_load_balancer: string|null;
  readonly install_updates_on_boot: boolean|null;
  readonly instance_shutdown_timeout: number|null;
  readonly name: string|null;
  readonly system_packages: string[]|null;
  readonly use_ebs_optimized_instances: boolean|null;

  constructor({
    stack_id,
    aws_opsworks_static_web_layer_id = null,
    auto_assign_elastic_ips = null,
    auto_assign_public_ips = null,
    auto_healing = null,
    custom_configure_recipes = null,
    custom_deploy_recipes = null,
    custom_instance_profile_arn = null,
    custom_json = null,
    custom_security_group_ids = null,
    custom_setup_recipes = null,
    custom_shutdown_recipes = null,
    custom_undeploy_recipes = null,
    drain_elb_on_shutdown = null,
    ebs_volume = null,
    elastic_load_balancer = null,
    install_updates_on_boot = null,
    instance_shutdown_timeout = null,
    name = null,
    system_packages = null,
    use_ebs_optimized_instances = null
  }: {
    stack_id: string,
    aws_opsworks_static_web_layer_id?: string|null,
    auto_assign_elastic_ips?: boolean|null,
    auto_assign_public_ips?: boolean|null,
    auto_healing?: boolean|null,
    custom_configure_recipes?: string[]|null,
    custom_deploy_recipes?: string[]|null,
    custom_instance_profile_arn?: string|null,
    custom_json?: string|null,
    custom_security_group_ids?: string[]|null,
    custom_setup_recipes?: string[]|null,
    custom_shutdown_recipes?: string[]|null,
    custom_undeploy_recipes?: string[]|null,
    drain_elb_on_shutdown?: boolean|null,
    ebs_volume?: Aws_opsworks_static_web_layer_ebs_volume_447[]|null,
    elastic_load_balancer?: string|null,
    install_updates_on_boot?: boolean|null,
    instance_shutdown_timeout?: number|null,
    name?: string|null,
    system_packages?: string[]|null,
    use_ebs_optimized_instances?: boolean|null
  }) {
    this.stack_id = stack_id;
    this.aws_opsworks_static_web_layer_id = aws_opsworks_static_web_layer_id;
    this.auto_assign_elastic_ips = auto_assign_elastic_ips;
    this.auto_assign_public_ips = auto_assign_public_ips;
    this.auto_healing = auto_healing;
    this.custom_configure_recipes = custom_configure_recipes;
    this.custom_deploy_recipes = custom_deploy_recipes;
    this.custom_instance_profile_arn = custom_instance_profile_arn;
    this.custom_json = custom_json;
    this.custom_security_group_ids = custom_security_group_ids;
    this.custom_setup_recipes = custom_setup_recipes;
    this.custom_shutdown_recipes = custom_shutdown_recipes;
    this.custom_undeploy_recipes = custom_undeploy_recipes;
    this.drain_elb_on_shutdown = drain_elb_on_shutdown;
    this.ebs_volume = ebs_volume;
    this.elastic_load_balancer = elastic_load_balancer;
    this.install_updates_on_boot = install_updates_on_boot;
    this.instance_shutdown_timeout = instance_shutdown_timeout;
    this.name = name;
    this.system_packages = system_packages;
    this.use_ebs_optimized_instances = use_ebs_optimized_instances;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['stack_id'] = this.stack_id;
    if (this.aws_opsworks_static_web_layer_id !== null) {
      ih['aws_opsworks_static_web_layer_id'] = this.aws_opsworks_static_web_layer_id;
    }
    if (this.auto_assign_elastic_ips !== null) {
      ih['auto_assign_elastic_ips'] = this.auto_assign_elastic_ips;
    }
    if (this.auto_assign_public_ips !== null) {
      ih['auto_assign_public_ips'] = this.auto_assign_public_ips;
    }
    if (this.auto_healing !== null) {
      ih['auto_healing'] = this.auto_healing;
    }
    if (this.custom_configure_recipes !== null) {
      ih['custom_configure_recipes'] = this.custom_configure_recipes;
    }
    if (this.custom_deploy_recipes !== null) {
      ih['custom_deploy_recipes'] = this.custom_deploy_recipes;
    }
    if (this.custom_instance_profile_arn !== null) {
      ih['custom_instance_profile_arn'] = this.custom_instance_profile_arn;
    }
    if (this.custom_json !== null) {
      ih['custom_json'] = this.custom_json;
    }
    if (this.custom_security_group_ids !== null) {
      ih['custom_security_group_ids'] = this.custom_security_group_ids;
    }
    if (this.custom_setup_recipes !== null) {
      ih['custom_setup_recipes'] = this.custom_setup_recipes;
    }
    if (this.custom_shutdown_recipes !== null) {
      ih['custom_shutdown_recipes'] = this.custom_shutdown_recipes;
    }
    if (this.custom_undeploy_recipes !== null) {
      ih['custom_undeploy_recipes'] = this.custom_undeploy_recipes;
    }
    if (this.drain_elb_on_shutdown !== null) {
      ih['drain_elb_on_shutdown'] = this.drain_elb_on_shutdown;
    }
    if (this.ebs_volume !== null) {
      ih['ebs_volume'] = this.ebs_volume;
    }
    if (this.elastic_load_balancer !== null) {
      ih['elastic_load_balancer'] = this.elastic_load_balancer;
    }
    if (this.install_updates_on_boot !== null) {
      ih['install_updates_on_boot'] = this.install_updates_on_boot;
    }
    if (this.instance_shutdown_timeout !== null) {
      ih['instance_shutdown_timeout'] = this.instance_shutdown_timeout;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.system_packages !== null) {
      ih['system_packages'] = this.system_packages;
    }
    if (this.use_ebs_optimized_instances !== null) {
      ih['use_ebs_optimized_instances'] = this.use_ebs_optimized_instances;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_static_web_layer';
  }
}

export class Aws_opsworks_static_web_layerHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_static_web_layerHandler';
  }
}

export class Aws_opsworks_static_web_layer_ebs_volume_447 implements PcoreValue {
  readonly mount_point: string;
  readonly number_of_disks: number;
  readonly size: number;
  readonly iops: number|null;
  readonly raid_level: string|null;
  readonly type: string|null;

  constructor({
    mount_point,
    number_of_disks,
    size,
    iops = null,
    raid_level = null,
    type = null
  }: {
    mount_point: string,
    number_of_disks: number,
    size: number,
    iops?: number|null,
    raid_level?: string|null,
    type?: string|null
  }) {
    this.mount_point = mount_point;
    this.number_of_disks = number_of_disks;
    this.size = size;
    this.iops = iops;
    this.raid_level = raid_level;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mount_point'] = this.mount_point;
    ih['number_of_disks'] = this.number_of_disks;
    ih['size'] = this.size;
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.raid_level !== null) {
      ih['raid_level'] = this.raid_level;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_static_web_layer_ebs_volume_447';
  }
}

export class Aws_opsworks_user_profile implements PcoreValue {
  readonly ssh_username: string;
  readonly user_arn: string;
  readonly aws_opsworks_user_profile_id: string|null;
  readonly allow_self_management: boolean|null;
  readonly ssh_public_key: string|null;

  constructor({
    ssh_username,
    user_arn,
    aws_opsworks_user_profile_id = null,
    allow_self_management = null,
    ssh_public_key = null
  }: {
    ssh_username: string,
    user_arn: string,
    aws_opsworks_user_profile_id?: string|null,
    allow_self_management?: boolean|null,
    ssh_public_key?: string|null
  }) {
    this.ssh_username = ssh_username;
    this.user_arn = user_arn;
    this.aws_opsworks_user_profile_id = aws_opsworks_user_profile_id;
    this.allow_self_management = allow_self_management;
    this.ssh_public_key = ssh_public_key;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ssh_username'] = this.ssh_username;
    ih['user_arn'] = this.user_arn;
    if (this.aws_opsworks_user_profile_id !== null) {
      ih['aws_opsworks_user_profile_id'] = this.aws_opsworks_user_profile_id;
    }
    if (this.allow_self_management !== null) {
      ih['allow_self_management'] = this.allow_self_management;
    }
    if (this.ssh_public_key !== null) {
      ih['ssh_public_key'] = this.ssh_public_key;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_user_profile';
  }
}

export class Aws_opsworks_user_profileHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_opsworks_user_profileHandler';
  }
}

export class Aws_organizations_account implements PcoreValue {
  readonly email: string;
  readonly name: string;
  readonly aws_organizations_account_id: string|null;
  readonly arn: string|null;
  readonly iam_user_access_to_billing: string|null;
  readonly joined_method: string|null;
  readonly joined_timestamp: string|null;
  readonly role_name: string|null;
  readonly status: string|null;

  constructor({
    email,
    name,
    aws_organizations_account_id = null,
    arn = null,
    iam_user_access_to_billing = null,
    joined_method = null,
    joined_timestamp = null,
    role_name = null,
    status = null
  }: {
    email: string,
    name: string,
    aws_organizations_account_id?: string|null,
    arn?: string|null,
    iam_user_access_to_billing?: string|null,
    joined_method?: string|null,
    joined_timestamp?: string|null,
    role_name?: string|null,
    status?: string|null
  }) {
    this.email = email;
    this.name = name;
    this.aws_organizations_account_id = aws_organizations_account_id;
    this.arn = arn;
    this.iam_user_access_to_billing = iam_user_access_to_billing;
    this.joined_method = joined_method;
    this.joined_timestamp = joined_timestamp;
    this.role_name = role_name;
    this.status = status;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['email'] = this.email;
    ih['name'] = this.name;
    if (this.aws_organizations_account_id !== null) {
      ih['aws_organizations_account_id'] = this.aws_organizations_account_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.iam_user_access_to_billing !== null) {
      ih['iam_user_access_to_billing'] = this.iam_user_access_to_billing;
    }
    if (this.joined_method !== null) {
      ih['joined_method'] = this.joined_method;
    }
    if (this.joined_timestamp !== null) {
      ih['joined_timestamp'] = this.joined_timestamp;
    }
    if (this.role_name !== null) {
      ih['role_name'] = this.role_name;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_organizations_account';
  }
}

export class Aws_organizations_accountHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_organizations_accountHandler';
  }
}

export class Aws_organizations_organization implements PcoreValue {
  readonly aws_organizations_organization_id: string|null;
  readonly arn: string|null;
  readonly aws_service_access_principals: string[]|null;
  readonly feature_set: string|null;
  readonly master_account_arn: string|null;
  readonly master_account_email: string|null;
  readonly master_account_id: string|null;

  constructor({
    aws_organizations_organization_id = null,
    arn = null,
    aws_service_access_principals = null,
    feature_set = null,
    master_account_arn = null,
    master_account_email = null,
    master_account_id = null
  }: {
    aws_organizations_organization_id?: string|null,
    arn?: string|null,
    aws_service_access_principals?: string[]|null,
    feature_set?: string|null,
    master_account_arn?: string|null,
    master_account_email?: string|null,
    master_account_id?: string|null
  }) {
    this.aws_organizations_organization_id = aws_organizations_organization_id;
    this.arn = arn;
    this.aws_service_access_principals = aws_service_access_principals;
    this.feature_set = feature_set;
    this.master_account_arn = master_account_arn;
    this.master_account_email = master_account_email;
    this.master_account_id = master_account_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_organizations_organization_id !== null) {
      ih['aws_organizations_organization_id'] = this.aws_organizations_organization_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.aws_service_access_principals !== null) {
      ih['aws_service_access_principals'] = this.aws_service_access_principals;
    }
    if (this.feature_set !== null) {
      ih['feature_set'] = this.feature_set;
    }
    if (this.master_account_arn !== null) {
      ih['master_account_arn'] = this.master_account_arn;
    }
    if (this.master_account_email !== null) {
      ih['master_account_email'] = this.master_account_email;
    }
    if (this.master_account_id !== null) {
      ih['master_account_id'] = this.master_account_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_organizations_organization';
  }
}

export class Aws_organizations_organizationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_organizations_organizationHandler';
  }
}

export class Aws_organizations_policy implements PcoreValue {
  readonly content: string;
  readonly name: string;
  readonly aws_organizations_policy_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly type: string|null;

  constructor({
    content,
    name,
    aws_organizations_policy_id = null,
    arn = null,
    description = null,
    type = null
  }: {
    content: string,
    name: string,
    aws_organizations_policy_id?: string|null,
    arn?: string|null,
    description?: string|null,
    type?: string|null
  }) {
    this.content = content;
    this.name = name;
    this.aws_organizations_policy_id = aws_organizations_policy_id;
    this.arn = arn;
    this.description = description;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['content'] = this.content;
    ih['name'] = this.name;
    if (this.aws_organizations_policy_id !== null) {
      ih['aws_organizations_policy_id'] = this.aws_organizations_policy_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_organizations_policy';
  }
}

export class Aws_organizations_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_organizations_policyHandler';
  }
}

export class Aws_organizations_policy_attachment implements PcoreValue {
  readonly policy_id: string;
  readonly target_id: string;
  readonly aws_organizations_policy_attachment_id: string|null;

  constructor({
    policy_id,
    target_id,
    aws_organizations_policy_attachment_id = null
  }: {
    policy_id: string,
    target_id: string,
    aws_organizations_policy_attachment_id?: string|null
  }) {
    this.policy_id = policy_id;
    this.target_id = target_id;
    this.aws_organizations_policy_attachment_id = aws_organizations_policy_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy_id'] = this.policy_id;
    ih['target_id'] = this.target_id;
    if (this.aws_organizations_policy_attachment_id !== null) {
      ih['aws_organizations_policy_attachment_id'] = this.aws_organizations_policy_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_organizations_policy_attachment';
  }
}

export class Aws_organizations_policy_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_organizations_policy_attachmentHandler';
  }
}

export class Aws_pinpoint_adm_channel implements PcoreValue {
  readonly application_id: string;
  readonly client_id: string;
  readonly client_secret: string;
  readonly aws_pinpoint_adm_channel_id: string|null;
  readonly enabled: boolean|null;

  constructor({
    application_id,
    client_id,
    client_secret,
    aws_pinpoint_adm_channel_id = null,
    enabled = null
  }: {
    application_id: string,
    client_id: string,
    client_secret: string,
    aws_pinpoint_adm_channel_id?: string|null,
    enabled?: boolean|null
  }) {
    this.application_id = application_id;
    this.client_id = client_id;
    this.client_secret = client_secret;
    this.aws_pinpoint_adm_channel_id = aws_pinpoint_adm_channel_id;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application_id'] = this.application_id;
    ih['client_id'] = this.client_id;
    ih['client_secret'] = this.client_secret;
    if (this.aws_pinpoint_adm_channel_id !== null) {
      ih['aws_pinpoint_adm_channel_id'] = this.aws_pinpoint_adm_channel_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_adm_channel';
  }
}

export class Aws_pinpoint_adm_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_adm_channelHandler';
  }
}

export class Aws_pinpoint_apns_channel implements PcoreValue {
  readonly application_id: string;
  readonly aws_pinpoint_apns_channel_id: string|null;
  readonly bundle_id: string|null;
  readonly certificate: string|null;
  readonly default_authentication_method: string|null;
  readonly enabled: boolean|null;
  readonly private_key: string|null;
  readonly team_id: string|null;
  readonly token_key: string|null;
  readonly token_key_id: string|null;

  constructor({
    application_id,
    aws_pinpoint_apns_channel_id = null,
    bundle_id = null,
    certificate = null,
    default_authentication_method = null,
    enabled = null,
    private_key = null,
    team_id = null,
    token_key = null,
    token_key_id = null
  }: {
    application_id: string,
    aws_pinpoint_apns_channel_id?: string|null,
    bundle_id?: string|null,
    certificate?: string|null,
    default_authentication_method?: string|null,
    enabled?: boolean|null,
    private_key?: string|null,
    team_id?: string|null,
    token_key?: string|null,
    token_key_id?: string|null
  }) {
    this.application_id = application_id;
    this.aws_pinpoint_apns_channel_id = aws_pinpoint_apns_channel_id;
    this.bundle_id = bundle_id;
    this.certificate = certificate;
    this.default_authentication_method = default_authentication_method;
    this.enabled = enabled;
    this.private_key = private_key;
    this.team_id = team_id;
    this.token_key = token_key;
    this.token_key_id = token_key_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application_id'] = this.application_id;
    if (this.aws_pinpoint_apns_channel_id !== null) {
      ih['aws_pinpoint_apns_channel_id'] = this.aws_pinpoint_apns_channel_id;
    }
    if (this.bundle_id !== null) {
      ih['bundle_id'] = this.bundle_id;
    }
    if (this.certificate !== null) {
      ih['certificate'] = this.certificate;
    }
    if (this.default_authentication_method !== null) {
      ih['default_authentication_method'] = this.default_authentication_method;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.private_key !== null) {
      ih['private_key'] = this.private_key;
    }
    if (this.team_id !== null) {
      ih['team_id'] = this.team_id;
    }
    if (this.token_key !== null) {
      ih['token_key'] = this.token_key;
    }
    if (this.token_key_id !== null) {
      ih['token_key_id'] = this.token_key_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_apns_channel';
  }
}

export class Aws_pinpoint_apns_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_apns_channelHandler';
  }
}

export class Aws_pinpoint_apns_sandbox_channel implements PcoreValue {
  readonly application_id: string;
  readonly aws_pinpoint_apns_sandbox_channel_id: string|null;
  readonly bundle_id: string|null;
  readonly certificate: string|null;
  readonly default_authentication_method: string|null;
  readonly enabled: boolean|null;
  readonly private_key: string|null;
  readonly team_id: string|null;
  readonly token_key: string|null;
  readonly token_key_id: string|null;

  constructor({
    application_id,
    aws_pinpoint_apns_sandbox_channel_id = null,
    bundle_id = null,
    certificate = null,
    default_authentication_method = null,
    enabled = null,
    private_key = null,
    team_id = null,
    token_key = null,
    token_key_id = null
  }: {
    application_id: string,
    aws_pinpoint_apns_sandbox_channel_id?: string|null,
    bundle_id?: string|null,
    certificate?: string|null,
    default_authentication_method?: string|null,
    enabled?: boolean|null,
    private_key?: string|null,
    team_id?: string|null,
    token_key?: string|null,
    token_key_id?: string|null
  }) {
    this.application_id = application_id;
    this.aws_pinpoint_apns_sandbox_channel_id = aws_pinpoint_apns_sandbox_channel_id;
    this.bundle_id = bundle_id;
    this.certificate = certificate;
    this.default_authentication_method = default_authentication_method;
    this.enabled = enabled;
    this.private_key = private_key;
    this.team_id = team_id;
    this.token_key = token_key;
    this.token_key_id = token_key_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application_id'] = this.application_id;
    if (this.aws_pinpoint_apns_sandbox_channel_id !== null) {
      ih['aws_pinpoint_apns_sandbox_channel_id'] = this.aws_pinpoint_apns_sandbox_channel_id;
    }
    if (this.bundle_id !== null) {
      ih['bundle_id'] = this.bundle_id;
    }
    if (this.certificate !== null) {
      ih['certificate'] = this.certificate;
    }
    if (this.default_authentication_method !== null) {
      ih['default_authentication_method'] = this.default_authentication_method;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.private_key !== null) {
      ih['private_key'] = this.private_key;
    }
    if (this.team_id !== null) {
      ih['team_id'] = this.team_id;
    }
    if (this.token_key !== null) {
      ih['token_key'] = this.token_key;
    }
    if (this.token_key_id !== null) {
      ih['token_key_id'] = this.token_key_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_apns_sandbox_channel';
  }
}

export class Aws_pinpoint_apns_sandbox_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_apns_sandbox_channelHandler';
  }
}

export class Aws_pinpoint_apns_voip_channel implements PcoreValue {
  readonly application_id: string;
  readonly aws_pinpoint_apns_voip_channel_id: string|null;
  readonly bundle_id: string|null;
  readonly certificate: string|null;
  readonly default_authentication_method: string|null;
  readonly enabled: boolean|null;
  readonly private_key: string|null;
  readonly team_id: string|null;
  readonly token_key: string|null;
  readonly token_key_id: string|null;

  constructor({
    application_id,
    aws_pinpoint_apns_voip_channel_id = null,
    bundle_id = null,
    certificate = null,
    default_authentication_method = null,
    enabled = null,
    private_key = null,
    team_id = null,
    token_key = null,
    token_key_id = null
  }: {
    application_id: string,
    aws_pinpoint_apns_voip_channel_id?: string|null,
    bundle_id?: string|null,
    certificate?: string|null,
    default_authentication_method?: string|null,
    enabled?: boolean|null,
    private_key?: string|null,
    team_id?: string|null,
    token_key?: string|null,
    token_key_id?: string|null
  }) {
    this.application_id = application_id;
    this.aws_pinpoint_apns_voip_channel_id = aws_pinpoint_apns_voip_channel_id;
    this.bundle_id = bundle_id;
    this.certificate = certificate;
    this.default_authentication_method = default_authentication_method;
    this.enabled = enabled;
    this.private_key = private_key;
    this.team_id = team_id;
    this.token_key = token_key;
    this.token_key_id = token_key_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application_id'] = this.application_id;
    if (this.aws_pinpoint_apns_voip_channel_id !== null) {
      ih['aws_pinpoint_apns_voip_channel_id'] = this.aws_pinpoint_apns_voip_channel_id;
    }
    if (this.bundle_id !== null) {
      ih['bundle_id'] = this.bundle_id;
    }
    if (this.certificate !== null) {
      ih['certificate'] = this.certificate;
    }
    if (this.default_authentication_method !== null) {
      ih['default_authentication_method'] = this.default_authentication_method;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.private_key !== null) {
      ih['private_key'] = this.private_key;
    }
    if (this.team_id !== null) {
      ih['team_id'] = this.team_id;
    }
    if (this.token_key !== null) {
      ih['token_key'] = this.token_key;
    }
    if (this.token_key_id !== null) {
      ih['token_key_id'] = this.token_key_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_apns_voip_channel';
  }
}

export class Aws_pinpoint_apns_voip_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_apns_voip_channelHandler';
  }
}

export class Aws_pinpoint_apns_voip_sandbox_channel implements PcoreValue {
  readonly application_id: string;
  readonly aws_pinpoint_apns_voip_sandbox_channel_id: string|null;
  readonly bundle_id: string|null;
  readonly certificate: string|null;
  readonly default_authentication_method: string|null;
  readonly enabled: boolean|null;
  readonly private_key: string|null;
  readonly team_id: string|null;
  readonly token_key: string|null;
  readonly token_key_id: string|null;

  constructor({
    application_id,
    aws_pinpoint_apns_voip_sandbox_channel_id = null,
    bundle_id = null,
    certificate = null,
    default_authentication_method = null,
    enabled = null,
    private_key = null,
    team_id = null,
    token_key = null,
    token_key_id = null
  }: {
    application_id: string,
    aws_pinpoint_apns_voip_sandbox_channel_id?: string|null,
    bundle_id?: string|null,
    certificate?: string|null,
    default_authentication_method?: string|null,
    enabled?: boolean|null,
    private_key?: string|null,
    team_id?: string|null,
    token_key?: string|null,
    token_key_id?: string|null
  }) {
    this.application_id = application_id;
    this.aws_pinpoint_apns_voip_sandbox_channel_id = aws_pinpoint_apns_voip_sandbox_channel_id;
    this.bundle_id = bundle_id;
    this.certificate = certificate;
    this.default_authentication_method = default_authentication_method;
    this.enabled = enabled;
    this.private_key = private_key;
    this.team_id = team_id;
    this.token_key = token_key;
    this.token_key_id = token_key_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application_id'] = this.application_id;
    if (this.aws_pinpoint_apns_voip_sandbox_channel_id !== null) {
      ih['aws_pinpoint_apns_voip_sandbox_channel_id'] = this.aws_pinpoint_apns_voip_sandbox_channel_id;
    }
    if (this.bundle_id !== null) {
      ih['bundle_id'] = this.bundle_id;
    }
    if (this.certificate !== null) {
      ih['certificate'] = this.certificate;
    }
    if (this.default_authentication_method !== null) {
      ih['default_authentication_method'] = this.default_authentication_method;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.private_key !== null) {
      ih['private_key'] = this.private_key;
    }
    if (this.team_id !== null) {
      ih['team_id'] = this.team_id;
    }
    if (this.token_key !== null) {
      ih['token_key'] = this.token_key;
    }
    if (this.token_key_id !== null) {
      ih['token_key_id'] = this.token_key_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_apns_voip_sandbox_channel';
  }
}

export class Aws_pinpoint_apns_voip_sandbox_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_apns_voip_sandbox_channelHandler';
  }
}

export class Aws_pinpoint_app implements PcoreValue {
  readonly aws_pinpoint_app_id: string|null;
  readonly application_id: string|null;
  readonly campaign_hook: Aws_pinpoint_app_campaign_hook_448[]|null;
  readonly limits: Aws_pinpoint_app_limits_449[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly quiet_time: Aws_pinpoint_app_quiet_time_450[]|null;

  constructor({
    aws_pinpoint_app_id = null,
    application_id = null,
    campaign_hook = null,
    limits = null,
    name = null,
    name_prefix = null,
    quiet_time = null
  }: {
    aws_pinpoint_app_id?: string|null,
    application_id?: string|null,
    campaign_hook?: Aws_pinpoint_app_campaign_hook_448[]|null,
    limits?: Aws_pinpoint_app_limits_449[]|null,
    name?: string|null,
    name_prefix?: string|null,
    quiet_time?: Aws_pinpoint_app_quiet_time_450[]|null
  }) {
    this.aws_pinpoint_app_id = aws_pinpoint_app_id;
    this.application_id = application_id;
    this.campaign_hook = campaign_hook;
    this.limits = limits;
    this.name = name;
    this.name_prefix = name_prefix;
    this.quiet_time = quiet_time;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_pinpoint_app_id !== null) {
      ih['aws_pinpoint_app_id'] = this.aws_pinpoint_app_id;
    }
    if (this.application_id !== null) {
      ih['application_id'] = this.application_id;
    }
    if (this.campaign_hook !== null) {
      ih['campaign_hook'] = this.campaign_hook;
    }
    if (this.limits !== null) {
      ih['limits'] = this.limits;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.quiet_time !== null) {
      ih['quiet_time'] = this.quiet_time;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_app';
  }
}

export class Aws_pinpoint_appHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_appHandler';
  }
}

export class Aws_pinpoint_app_campaign_hook_448 implements PcoreValue {
  readonly lambda_function_name: string|null;
  readonly mode: string|null;
  readonly web_url: string|null;

  constructor({
    lambda_function_name = null,
    mode = null,
    web_url = null
  }: {
    lambda_function_name?: string|null,
    mode?: string|null,
    web_url?: string|null
  }) {
    this.lambda_function_name = lambda_function_name;
    this.mode = mode;
    this.web_url = web_url;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.lambda_function_name !== null) {
      ih['lambda_function_name'] = this.lambda_function_name;
    }
    if (this.mode !== null) {
      ih['mode'] = this.mode;
    }
    if (this.web_url !== null) {
      ih['web_url'] = this.web_url;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_app_campaign_hook_448';
  }
}

export class Aws_pinpoint_app_limits_449 implements PcoreValue {
  readonly daily: number|null;
  readonly maximum_duration: number|null;
  readonly messages_per_second: number|null;
  readonly total: number|null;

  constructor({
    daily = null,
    maximum_duration = null,
    messages_per_second = null,
    total = null
  }: {
    daily?: number|null,
    maximum_duration?: number|null,
    messages_per_second?: number|null,
    total?: number|null
  }) {
    this.daily = daily;
    this.maximum_duration = maximum_duration;
    this.messages_per_second = messages_per_second;
    this.total = total;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.daily !== null) {
      ih['daily'] = this.daily;
    }
    if (this.maximum_duration !== null) {
      ih['maximum_duration'] = this.maximum_duration;
    }
    if (this.messages_per_second !== null) {
      ih['messages_per_second'] = this.messages_per_second;
    }
    if (this.total !== null) {
      ih['total'] = this.total;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_app_limits_449';
  }
}

export class Aws_pinpoint_app_quiet_time_450 implements PcoreValue {
  readonly end: string|null;
  readonly start: string|null;

  constructor({
    end = null,
    start = null
  }: {
    end?: string|null,
    start?: string|null
  }) {
    this.end = end;
    this.start = start;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.end !== null) {
      ih['end'] = this.end;
    }
    if (this.start !== null) {
      ih['start'] = this.start;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_app_quiet_time_450';
  }
}

export class Aws_pinpoint_baidu_channel implements PcoreValue {
  readonly api_key: string;
  readonly application_id: string;
  readonly secret_key: string;
  readonly aws_pinpoint_baidu_channel_id: string|null;
  readonly enabled: boolean|null;

  constructor({
    api_key,
    application_id,
    secret_key,
    aws_pinpoint_baidu_channel_id = null,
    enabled = null
  }: {
    api_key: string,
    application_id: string,
    secret_key: string,
    aws_pinpoint_baidu_channel_id?: string|null,
    enabled?: boolean|null
  }) {
    this.api_key = api_key;
    this.application_id = application_id;
    this.secret_key = secret_key;
    this.aws_pinpoint_baidu_channel_id = aws_pinpoint_baidu_channel_id;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['api_key'] = this.api_key;
    ih['application_id'] = this.application_id;
    ih['secret_key'] = this.secret_key;
    if (this.aws_pinpoint_baidu_channel_id !== null) {
      ih['aws_pinpoint_baidu_channel_id'] = this.aws_pinpoint_baidu_channel_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_baidu_channel';
  }
}

export class Aws_pinpoint_baidu_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_baidu_channelHandler';
  }
}

export class Aws_pinpoint_email_channel implements PcoreValue {
  readonly application_id: string;
  readonly from_address: string;
  readonly identity: string;
  readonly role_arn: string;
  readonly aws_pinpoint_email_channel_id: string|null;
  readonly enabled: boolean|null;
  readonly messages_per_second: number|null;

  constructor({
    application_id,
    from_address,
    identity,
    role_arn,
    aws_pinpoint_email_channel_id = null,
    enabled = null,
    messages_per_second = null
  }: {
    application_id: string,
    from_address: string,
    identity: string,
    role_arn: string,
    aws_pinpoint_email_channel_id?: string|null,
    enabled?: boolean|null,
    messages_per_second?: number|null
  }) {
    this.application_id = application_id;
    this.from_address = from_address;
    this.identity = identity;
    this.role_arn = role_arn;
    this.aws_pinpoint_email_channel_id = aws_pinpoint_email_channel_id;
    this.enabled = enabled;
    this.messages_per_second = messages_per_second;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application_id'] = this.application_id;
    ih['from_address'] = this.from_address;
    ih['identity'] = this.identity;
    ih['role_arn'] = this.role_arn;
    if (this.aws_pinpoint_email_channel_id !== null) {
      ih['aws_pinpoint_email_channel_id'] = this.aws_pinpoint_email_channel_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.messages_per_second !== null) {
      ih['messages_per_second'] = this.messages_per_second;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_email_channel';
  }
}

export class Aws_pinpoint_email_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_email_channelHandler';
  }
}

export class Aws_pinpoint_event_stream implements PcoreValue {
  readonly application_id: string;
  readonly destination_stream_arn: string;
  readonly role_arn: string;
  readonly aws_pinpoint_event_stream_id: string|null;

  constructor({
    application_id,
    destination_stream_arn,
    role_arn,
    aws_pinpoint_event_stream_id = null
  }: {
    application_id: string,
    destination_stream_arn: string,
    role_arn: string,
    aws_pinpoint_event_stream_id?: string|null
  }) {
    this.application_id = application_id;
    this.destination_stream_arn = destination_stream_arn;
    this.role_arn = role_arn;
    this.aws_pinpoint_event_stream_id = aws_pinpoint_event_stream_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application_id'] = this.application_id;
    ih['destination_stream_arn'] = this.destination_stream_arn;
    ih['role_arn'] = this.role_arn;
    if (this.aws_pinpoint_event_stream_id !== null) {
      ih['aws_pinpoint_event_stream_id'] = this.aws_pinpoint_event_stream_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_event_stream';
  }
}

export class Aws_pinpoint_event_streamHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_event_streamHandler';
  }
}

export class Aws_pinpoint_gcm_channel implements PcoreValue {
  readonly api_key: string;
  readonly application_id: string;
  readonly aws_pinpoint_gcm_channel_id: string|null;
  readonly enabled: boolean|null;

  constructor({
    api_key,
    application_id,
    aws_pinpoint_gcm_channel_id = null,
    enabled = null
  }: {
    api_key: string,
    application_id: string,
    aws_pinpoint_gcm_channel_id?: string|null,
    enabled?: boolean|null
  }) {
    this.api_key = api_key;
    this.application_id = application_id;
    this.aws_pinpoint_gcm_channel_id = aws_pinpoint_gcm_channel_id;
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['api_key'] = this.api_key;
    ih['application_id'] = this.application_id;
    if (this.aws_pinpoint_gcm_channel_id !== null) {
      ih['aws_pinpoint_gcm_channel_id'] = this.aws_pinpoint_gcm_channel_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_gcm_channel';
  }
}

export class Aws_pinpoint_gcm_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_gcm_channelHandler';
  }
}

export class Aws_pinpoint_sms_channel implements PcoreValue {
  readonly application_id: string;
  readonly aws_pinpoint_sms_channel_id: string|null;
  readonly enabled: boolean|null;
  readonly promotional_messages_per_second: number|null;
  readonly sender_id: string|null;
  readonly short_code: string|null;
  readonly transactional_messages_per_second: number|null;

  constructor({
    application_id,
    aws_pinpoint_sms_channel_id = null,
    enabled = null,
    promotional_messages_per_second = null,
    sender_id = null,
    short_code = null,
    transactional_messages_per_second = null
  }: {
    application_id: string,
    aws_pinpoint_sms_channel_id?: string|null,
    enabled?: boolean|null,
    promotional_messages_per_second?: number|null,
    sender_id?: string|null,
    short_code?: string|null,
    transactional_messages_per_second?: number|null
  }) {
    this.application_id = application_id;
    this.aws_pinpoint_sms_channel_id = aws_pinpoint_sms_channel_id;
    this.enabled = enabled;
    this.promotional_messages_per_second = promotional_messages_per_second;
    this.sender_id = sender_id;
    this.short_code = short_code;
    this.transactional_messages_per_second = transactional_messages_per_second;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['application_id'] = this.application_id;
    if (this.aws_pinpoint_sms_channel_id !== null) {
      ih['aws_pinpoint_sms_channel_id'] = this.aws_pinpoint_sms_channel_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.promotional_messages_per_second !== null) {
      ih['promotional_messages_per_second'] = this.promotional_messages_per_second;
    }
    if (this.sender_id !== null) {
      ih['sender_id'] = this.sender_id;
    }
    if (this.short_code !== null) {
      ih['short_code'] = this.short_code;
    }
    if (this.transactional_messages_per_second !== null) {
      ih['transactional_messages_per_second'] = this.transactional_messages_per_second;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_sms_channel';
  }
}

export class Aws_pinpoint_sms_channelHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_pinpoint_sms_channelHandler';
  }
}

export class Aws_placement_group implements PcoreValue {
  readonly name: string;
  readonly strategy: string;
  readonly aws_placement_group_id: string|null;

  constructor({
    name,
    strategy,
    aws_placement_group_id = null
  }: {
    name: string,
    strategy: string,
    aws_placement_group_id?: string|null
  }) {
    this.name = name;
    this.strategy = strategy;
    this.aws_placement_group_id = aws_placement_group_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['strategy'] = this.strategy;
    if (this.aws_placement_group_id !== null) {
      ih['aws_placement_group_id'] = this.aws_placement_group_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_placement_group';
  }
}

export class Aws_placement_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_placement_groupHandler';
  }
}

export class Aws_proxy_protocol_policy implements PcoreValue {
  readonly instance_ports: string[];
  readonly load_balancer: string;
  readonly aws_proxy_protocol_policy_id: string|null;

  constructor({
    instance_ports,
    load_balancer,
    aws_proxy_protocol_policy_id = null
  }: {
    instance_ports: string[],
    load_balancer: string,
    aws_proxy_protocol_policy_id?: string|null
  }) {
    this.instance_ports = instance_ports;
    this.load_balancer = load_balancer;
    this.aws_proxy_protocol_policy_id = aws_proxy_protocol_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_ports'] = this.instance_ports;
    ih['load_balancer'] = this.load_balancer;
    if (this.aws_proxy_protocol_policy_id !== null) {
      ih['aws_proxy_protocol_policy_id'] = this.aws_proxy_protocol_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_proxy_protocol_policy';
  }
}

export class Aws_proxy_protocol_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_proxy_protocol_policyHandler';
  }
}

export class Aws_ram_resource_share implements PcoreValue {
  readonly name: string;
  readonly aws_ram_resource_share_id: string|null;
  readonly allow_external_principals: boolean|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    aws_ram_resource_share_id = null,
    allow_external_principals = null,
    tags = null
  }: {
    name: string,
    aws_ram_resource_share_id?: string|null,
    allow_external_principals?: boolean|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.aws_ram_resource_share_id = aws_ram_resource_share_id;
    this.allow_external_principals = allow_external_principals;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_ram_resource_share_id !== null) {
      ih['aws_ram_resource_share_id'] = this.aws_ram_resource_share_id;
    }
    if (this.allow_external_principals !== null) {
      ih['allow_external_principals'] = this.allow_external_principals;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ram_resource_share';
  }
}

export class Aws_ram_resource_shareHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ram_resource_shareHandler';
  }
}

export class Aws_rds_cluster implements PcoreValue {
  readonly aws_rds_cluster_id: string|null;
  readonly apply_immediately: boolean|null;
  readonly arn: string|null;
  readonly availability_zones: string[]|null;
  readonly backtrack_window: number|null;
  readonly backup_retention_period: number|null;
  readonly cluster_identifier: string|null;
  readonly cluster_identifier_prefix: string|null;
  readonly cluster_members: string[]|null;
  readonly cluster_resource_id: string|null;
  readonly database_name: string|null;
  readonly db_cluster_parameter_group_name: string|null;
  readonly db_subnet_group_name: string|null;
  readonly deletion_protection: boolean|null;
  readonly enabled_cloudwatch_logs_exports: string[]|null;
  readonly endpoint: string|null;
  readonly engine: string|null;
  readonly engine_mode: string|null;
  readonly engine_version: string|null;
  readonly final_snapshot_identifier: string|null;
  readonly global_cluster_identifier: string|null;
  readonly hosted_zone_id: string|null;
  readonly iam_database_authentication_enabled: boolean|null;
  readonly iam_roles: string[]|null;
  readonly kms_key_id: string|null;
  readonly master_password: string|null;
  readonly master_username: string|null;
  readonly port: number|null;
  readonly preferred_backup_window: string|null;
  readonly preferred_maintenance_window: string|null;
  readonly reader_endpoint: string|null;
  readonly replication_source_identifier: string|null;
  readonly s3_import: Aws_rds_cluster_s3_import_451[]|null;
  readonly scaling_configuration: Aws_rds_cluster_scaling_configuration_452[]|null;
  readonly skip_final_snapshot: boolean|null;
  readonly snapshot_identifier: string|null;
  readonly source_region: string|null;
  readonly storage_encrypted: boolean|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_security_group_ids: string[]|null;

  constructor({
    aws_rds_cluster_id = null,
    apply_immediately = null,
    arn = null,
    availability_zones = null,
    backtrack_window = null,
    backup_retention_period = null,
    cluster_identifier = null,
    cluster_identifier_prefix = null,
    cluster_members = null,
    cluster_resource_id = null,
    database_name = null,
    db_cluster_parameter_group_name = null,
    db_subnet_group_name = null,
    deletion_protection = null,
    enabled_cloudwatch_logs_exports = null,
    endpoint = null,
    engine = null,
    engine_mode = null,
    engine_version = null,
    final_snapshot_identifier = null,
    global_cluster_identifier = null,
    hosted_zone_id = null,
    iam_database_authentication_enabled = null,
    iam_roles = null,
    kms_key_id = null,
    master_password = null,
    master_username = null,
    port = null,
    preferred_backup_window = null,
    preferred_maintenance_window = null,
    reader_endpoint = null,
    replication_source_identifier = null,
    s3_import = null,
    scaling_configuration = null,
    skip_final_snapshot = null,
    snapshot_identifier = null,
    source_region = null,
    storage_encrypted = null,
    tags = null,
    vpc_security_group_ids = null
  }: {
    aws_rds_cluster_id?: string|null,
    apply_immediately?: boolean|null,
    arn?: string|null,
    availability_zones?: string[]|null,
    backtrack_window?: number|null,
    backup_retention_period?: number|null,
    cluster_identifier?: string|null,
    cluster_identifier_prefix?: string|null,
    cluster_members?: string[]|null,
    cluster_resource_id?: string|null,
    database_name?: string|null,
    db_cluster_parameter_group_name?: string|null,
    db_subnet_group_name?: string|null,
    deletion_protection?: boolean|null,
    enabled_cloudwatch_logs_exports?: string[]|null,
    endpoint?: string|null,
    engine?: string|null,
    engine_mode?: string|null,
    engine_version?: string|null,
    final_snapshot_identifier?: string|null,
    global_cluster_identifier?: string|null,
    hosted_zone_id?: string|null,
    iam_database_authentication_enabled?: boolean|null,
    iam_roles?: string[]|null,
    kms_key_id?: string|null,
    master_password?: string|null,
    master_username?: string|null,
    port?: number|null,
    preferred_backup_window?: string|null,
    preferred_maintenance_window?: string|null,
    reader_endpoint?: string|null,
    replication_source_identifier?: string|null,
    s3_import?: Aws_rds_cluster_s3_import_451[]|null,
    scaling_configuration?: Aws_rds_cluster_scaling_configuration_452[]|null,
    skip_final_snapshot?: boolean|null,
    snapshot_identifier?: string|null,
    source_region?: string|null,
    storage_encrypted?: boolean|null,
    tags?: {[s: string]: string}|null,
    vpc_security_group_ids?: string[]|null
  }) {
    this.aws_rds_cluster_id = aws_rds_cluster_id;
    this.apply_immediately = apply_immediately;
    this.arn = arn;
    this.availability_zones = availability_zones;
    this.backtrack_window = backtrack_window;
    this.backup_retention_period = backup_retention_period;
    this.cluster_identifier = cluster_identifier;
    this.cluster_identifier_prefix = cluster_identifier_prefix;
    this.cluster_members = cluster_members;
    this.cluster_resource_id = cluster_resource_id;
    this.database_name = database_name;
    this.db_cluster_parameter_group_name = db_cluster_parameter_group_name;
    this.db_subnet_group_name = db_subnet_group_name;
    this.deletion_protection = deletion_protection;
    this.enabled_cloudwatch_logs_exports = enabled_cloudwatch_logs_exports;
    this.endpoint = endpoint;
    this.engine = engine;
    this.engine_mode = engine_mode;
    this.engine_version = engine_version;
    this.final_snapshot_identifier = final_snapshot_identifier;
    this.global_cluster_identifier = global_cluster_identifier;
    this.hosted_zone_id = hosted_zone_id;
    this.iam_database_authentication_enabled = iam_database_authentication_enabled;
    this.iam_roles = iam_roles;
    this.kms_key_id = kms_key_id;
    this.master_password = master_password;
    this.master_username = master_username;
    this.port = port;
    this.preferred_backup_window = preferred_backup_window;
    this.preferred_maintenance_window = preferred_maintenance_window;
    this.reader_endpoint = reader_endpoint;
    this.replication_source_identifier = replication_source_identifier;
    this.s3_import = s3_import;
    this.scaling_configuration = scaling_configuration;
    this.skip_final_snapshot = skip_final_snapshot;
    this.snapshot_identifier = snapshot_identifier;
    this.source_region = source_region;
    this.storage_encrypted = storage_encrypted;
    this.tags = tags;
    this.vpc_security_group_ids = vpc_security_group_ids;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_rds_cluster_id !== null) {
      ih['aws_rds_cluster_id'] = this.aws_rds_cluster_id;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.backtrack_window !== null) {
      ih['backtrack_window'] = this.backtrack_window;
    }
    if (this.backup_retention_period !== null) {
      ih['backup_retention_period'] = this.backup_retention_period;
    }
    if (this.cluster_identifier !== null) {
      ih['cluster_identifier'] = this.cluster_identifier;
    }
    if (this.cluster_identifier_prefix !== null) {
      ih['cluster_identifier_prefix'] = this.cluster_identifier_prefix;
    }
    if (this.cluster_members !== null) {
      ih['cluster_members'] = this.cluster_members;
    }
    if (this.cluster_resource_id !== null) {
      ih['cluster_resource_id'] = this.cluster_resource_id;
    }
    if (this.database_name !== null) {
      ih['database_name'] = this.database_name;
    }
    if (this.db_cluster_parameter_group_name !== null) {
      ih['db_cluster_parameter_group_name'] = this.db_cluster_parameter_group_name;
    }
    if (this.db_subnet_group_name !== null) {
      ih['db_subnet_group_name'] = this.db_subnet_group_name;
    }
    if (this.deletion_protection !== null) {
      ih['deletion_protection'] = this.deletion_protection;
    }
    if (this.enabled_cloudwatch_logs_exports !== null) {
      ih['enabled_cloudwatch_logs_exports'] = this.enabled_cloudwatch_logs_exports;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_mode !== null) {
      ih['engine_mode'] = this.engine_mode;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.final_snapshot_identifier !== null) {
      ih['final_snapshot_identifier'] = this.final_snapshot_identifier;
    }
    if (this.global_cluster_identifier !== null) {
      ih['global_cluster_identifier'] = this.global_cluster_identifier;
    }
    if (this.hosted_zone_id !== null) {
      ih['hosted_zone_id'] = this.hosted_zone_id;
    }
    if (this.iam_database_authentication_enabled !== null) {
      ih['iam_database_authentication_enabled'] = this.iam_database_authentication_enabled;
    }
    if (this.iam_roles !== null) {
      ih['iam_roles'] = this.iam_roles;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.master_password !== null) {
      ih['master_password'] = this.master_password;
    }
    if (this.master_username !== null) {
      ih['master_username'] = this.master_username;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.preferred_backup_window !== null) {
      ih['preferred_backup_window'] = this.preferred_backup_window;
    }
    if (this.preferred_maintenance_window !== null) {
      ih['preferred_maintenance_window'] = this.preferred_maintenance_window;
    }
    if (this.reader_endpoint !== null) {
      ih['reader_endpoint'] = this.reader_endpoint;
    }
    if (this.replication_source_identifier !== null) {
      ih['replication_source_identifier'] = this.replication_source_identifier;
    }
    if (this.s3_import !== null) {
      ih['s3_import'] = this.s3_import;
    }
    if (this.scaling_configuration !== null) {
      ih['scaling_configuration'] = this.scaling_configuration;
    }
    if (this.skip_final_snapshot !== null) {
      ih['skip_final_snapshot'] = this.skip_final_snapshot;
    }
    if (this.snapshot_identifier !== null) {
      ih['snapshot_identifier'] = this.snapshot_identifier;
    }
    if (this.source_region !== null) {
      ih['source_region'] = this.source_region;
    }
    if (this.storage_encrypted !== null) {
      ih['storage_encrypted'] = this.storage_encrypted;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster';
  }
}

export class Aws_rds_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_clusterHandler';
  }
}

export class Aws_rds_cluster_endpoint implements PcoreValue {
  readonly cluster_endpoint_identifier: string;
  readonly cluster_identifier: string;
  readonly custom_endpoint_type: string;
  readonly aws_rds_cluster_endpoint_id: string|null;
  readonly arn: string|null;
  readonly endpoint: string|null;
  readonly excluded_members: string[]|null;
  readonly static_members: string[]|null;

  constructor({
    cluster_endpoint_identifier,
    cluster_identifier,
    custom_endpoint_type,
    aws_rds_cluster_endpoint_id = null,
    arn = null,
    endpoint = null,
    excluded_members = null,
    static_members = null
  }: {
    cluster_endpoint_identifier: string,
    cluster_identifier: string,
    custom_endpoint_type: string,
    aws_rds_cluster_endpoint_id?: string|null,
    arn?: string|null,
    endpoint?: string|null,
    excluded_members?: string[]|null,
    static_members?: string[]|null
  }) {
    this.cluster_endpoint_identifier = cluster_endpoint_identifier;
    this.cluster_identifier = cluster_identifier;
    this.custom_endpoint_type = custom_endpoint_type;
    this.aws_rds_cluster_endpoint_id = aws_rds_cluster_endpoint_id;
    this.arn = arn;
    this.endpoint = endpoint;
    this.excluded_members = excluded_members;
    this.static_members = static_members;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_endpoint_identifier'] = this.cluster_endpoint_identifier;
    ih['cluster_identifier'] = this.cluster_identifier;
    ih['custom_endpoint_type'] = this.custom_endpoint_type;
    if (this.aws_rds_cluster_endpoint_id !== null) {
      ih['aws_rds_cluster_endpoint_id'] = this.aws_rds_cluster_endpoint_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.excluded_members !== null) {
      ih['excluded_members'] = this.excluded_members;
    }
    if (this.static_members !== null) {
      ih['static_members'] = this.static_members;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_endpoint';
  }
}

export class Aws_rds_cluster_endpointHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_endpointHandler';
  }
}

export class Aws_rds_cluster_instance implements PcoreValue {
  readonly cluster_identifier: string;
  readonly instance_class: string;
  readonly aws_rds_cluster_instance_id: string|null;
  readonly apply_immediately: boolean|null;
  readonly arn: string|null;
  readonly auto_minor_version_upgrade: boolean|null;
  readonly availability_zone: string|null;
  readonly copy_tags_to_snapshot: boolean|null;
  readonly db_parameter_group_name: string|null;
  readonly db_subnet_group_name: string|null;
  readonly dbi_resource_id: string|null;
  readonly endpoint: string|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly identifier: string|null;
  readonly identifier_prefix: string|null;
  readonly kms_key_id: string|null;
  readonly monitoring_interval: number|null;
  readonly monitoring_role_arn: string|null;
  readonly performance_insights_enabled: boolean|null;
  readonly performance_insights_kms_key_id: string|null;
  readonly port: number|null;
  readonly preferred_backup_window: string|null;
  readonly preferred_maintenance_window: string|null;
  readonly promotion_tier: number|null;
  readonly publicly_accessible: boolean|null;
  readonly storage_encrypted: boolean|null;
  readonly tags: {[s: string]: string}|null;
  readonly writer: boolean|null;

  constructor({
    cluster_identifier,
    instance_class,
    aws_rds_cluster_instance_id = null,
    apply_immediately = null,
    arn = null,
    auto_minor_version_upgrade = null,
    availability_zone = null,
    copy_tags_to_snapshot = null,
    db_parameter_group_name = null,
    db_subnet_group_name = null,
    dbi_resource_id = null,
    endpoint = null,
    engine = null,
    engine_version = null,
    identifier = null,
    identifier_prefix = null,
    kms_key_id = null,
    monitoring_interval = null,
    monitoring_role_arn = null,
    performance_insights_enabled = null,
    performance_insights_kms_key_id = null,
    port = null,
    preferred_backup_window = null,
    preferred_maintenance_window = null,
    promotion_tier = null,
    publicly_accessible = null,
    storage_encrypted = null,
    tags = null,
    writer = null
  }: {
    cluster_identifier: string,
    instance_class: string,
    aws_rds_cluster_instance_id?: string|null,
    apply_immediately?: boolean|null,
    arn?: string|null,
    auto_minor_version_upgrade?: boolean|null,
    availability_zone?: string|null,
    copy_tags_to_snapshot?: boolean|null,
    db_parameter_group_name?: string|null,
    db_subnet_group_name?: string|null,
    dbi_resource_id?: string|null,
    endpoint?: string|null,
    engine?: string|null,
    engine_version?: string|null,
    identifier?: string|null,
    identifier_prefix?: string|null,
    kms_key_id?: string|null,
    monitoring_interval?: number|null,
    monitoring_role_arn?: string|null,
    performance_insights_enabled?: boolean|null,
    performance_insights_kms_key_id?: string|null,
    port?: number|null,
    preferred_backup_window?: string|null,
    preferred_maintenance_window?: string|null,
    promotion_tier?: number|null,
    publicly_accessible?: boolean|null,
    storage_encrypted?: boolean|null,
    tags?: {[s: string]: string}|null,
    writer?: boolean|null
  }) {
    this.cluster_identifier = cluster_identifier;
    this.instance_class = instance_class;
    this.aws_rds_cluster_instance_id = aws_rds_cluster_instance_id;
    this.apply_immediately = apply_immediately;
    this.arn = arn;
    this.auto_minor_version_upgrade = auto_minor_version_upgrade;
    this.availability_zone = availability_zone;
    this.copy_tags_to_snapshot = copy_tags_to_snapshot;
    this.db_parameter_group_name = db_parameter_group_name;
    this.db_subnet_group_name = db_subnet_group_name;
    this.dbi_resource_id = dbi_resource_id;
    this.endpoint = endpoint;
    this.engine = engine;
    this.engine_version = engine_version;
    this.identifier = identifier;
    this.identifier_prefix = identifier_prefix;
    this.kms_key_id = kms_key_id;
    this.monitoring_interval = monitoring_interval;
    this.monitoring_role_arn = monitoring_role_arn;
    this.performance_insights_enabled = performance_insights_enabled;
    this.performance_insights_kms_key_id = performance_insights_kms_key_id;
    this.port = port;
    this.preferred_backup_window = preferred_backup_window;
    this.preferred_maintenance_window = preferred_maintenance_window;
    this.promotion_tier = promotion_tier;
    this.publicly_accessible = publicly_accessible;
    this.storage_encrypted = storage_encrypted;
    this.tags = tags;
    this.writer = writer;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_identifier'] = this.cluster_identifier;
    ih['instance_class'] = this.instance_class;
    if (this.aws_rds_cluster_instance_id !== null) {
      ih['aws_rds_cluster_instance_id'] = this.aws_rds_cluster_instance_id;
    }
    if (this.apply_immediately !== null) {
      ih['apply_immediately'] = this.apply_immediately;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.auto_minor_version_upgrade !== null) {
      ih['auto_minor_version_upgrade'] = this.auto_minor_version_upgrade;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.copy_tags_to_snapshot !== null) {
      ih['copy_tags_to_snapshot'] = this.copy_tags_to_snapshot;
    }
    if (this.db_parameter_group_name !== null) {
      ih['db_parameter_group_name'] = this.db_parameter_group_name;
    }
    if (this.db_subnet_group_name !== null) {
      ih['db_subnet_group_name'] = this.db_subnet_group_name;
    }
    if (this.dbi_resource_id !== null) {
      ih['dbi_resource_id'] = this.dbi_resource_id;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.identifier !== null) {
      ih['identifier'] = this.identifier;
    }
    if (this.identifier_prefix !== null) {
      ih['identifier_prefix'] = this.identifier_prefix;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.monitoring_interval !== null) {
      ih['monitoring_interval'] = this.monitoring_interval;
    }
    if (this.monitoring_role_arn !== null) {
      ih['monitoring_role_arn'] = this.monitoring_role_arn;
    }
    if (this.performance_insights_enabled !== null) {
      ih['performance_insights_enabled'] = this.performance_insights_enabled;
    }
    if (this.performance_insights_kms_key_id !== null) {
      ih['performance_insights_kms_key_id'] = this.performance_insights_kms_key_id;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.preferred_backup_window !== null) {
      ih['preferred_backup_window'] = this.preferred_backup_window;
    }
    if (this.preferred_maintenance_window !== null) {
      ih['preferred_maintenance_window'] = this.preferred_maintenance_window;
    }
    if (this.promotion_tier !== null) {
      ih['promotion_tier'] = this.promotion_tier;
    }
    if (this.publicly_accessible !== null) {
      ih['publicly_accessible'] = this.publicly_accessible;
    }
    if (this.storage_encrypted !== null) {
      ih['storage_encrypted'] = this.storage_encrypted;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.writer !== null) {
      ih['writer'] = this.writer;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_instance';
  }
}

export class Aws_rds_cluster_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_instanceHandler';
  }
}

export class Aws_rds_cluster_parameter_group implements PcoreValue {
  readonly family: string;
  readonly aws_rds_cluster_parameter_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly parameter: Aws_rds_cluster_parameter_group_parameter_453[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    family,
    aws_rds_cluster_parameter_group_id = null,
    arn = null,
    description = null,
    name = null,
    name_prefix = null,
    parameter = null,
    tags = null
  }: {
    family: string,
    aws_rds_cluster_parameter_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    parameter?: Aws_rds_cluster_parameter_group_parameter_453[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.family = family;
    this.aws_rds_cluster_parameter_group_id = aws_rds_cluster_parameter_group_id;
    this.arn = arn;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
    this.parameter = parameter;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['family'] = this.family;
    if (this.aws_rds_cluster_parameter_group_id !== null) {
      ih['aws_rds_cluster_parameter_group_id'] = this.aws_rds_cluster_parameter_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.parameter !== null) {
      ih['parameter'] = this.parameter;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_parameter_group';
  }
}

export class Aws_rds_cluster_parameter_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_parameter_groupHandler';
  }
}

export class Aws_rds_cluster_parameter_group_parameter_453 implements PcoreValue {
  readonly name: string;
  readonly value: string;
  readonly apply_method: string|null;

  constructor({
    name,
    value,
    apply_method = null
  }: {
    name: string,
    value: string,
    apply_method?: string|null
  }) {
    this.name = name;
    this.value = value;
    this.apply_method = apply_method;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    if (this.apply_method !== null) {
      ih['apply_method'] = this.apply_method;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_parameter_group_parameter_453';
  }
}

export class Aws_rds_cluster_s3_import_451 implements PcoreValue {
  readonly bucket_name: string;
  readonly ingestion_role: string;
  readonly source_engine: string;
  readonly source_engine_version: string;
  readonly bucket_prefix: string|null;

  constructor({
    bucket_name,
    ingestion_role,
    source_engine,
    source_engine_version,
    bucket_prefix = null
  }: {
    bucket_name: string,
    ingestion_role: string,
    source_engine: string,
    source_engine_version: string,
    bucket_prefix?: string|null
  }) {
    this.bucket_name = bucket_name;
    this.ingestion_role = ingestion_role;
    this.source_engine = source_engine;
    this.source_engine_version = source_engine_version;
    this.bucket_prefix = bucket_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_name'] = this.bucket_name;
    ih['ingestion_role'] = this.ingestion_role;
    ih['source_engine'] = this.source_engine;
    ih['source_engine_version'] = this.source_engine_version;
    if (this.bucket_prefix !== null) {
      ih['bucket_prefix'] = this.bucket_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_s3_import_451';
  }
}

export class Aws_rds_cluster_scaling_configuration_452 implements PcoreValue {
  readonly auto_pause: boolean|null;
  readonly max_capacity: number|null;
  readonly min_capacity: number|null;
  readonly seconds_until_auto_pause: number|null;

  constructor({
    auto_pause = null,
    max_capacity = null,
    min_capacity = null,
    seconds_until_auto_pause = null
  }: {
    auto_pause?: boolean|null,
    max_capacity?: number|null,
    min_capacity?: number|null,
    seconds_until_auto_pause?: number|null
  }) {
    this.auto_pause = auto_pause;
    this.max_capacity = max_capacity;
    this.min_capacity = min_capacity;
    this.seconds_until_auto_pause = seconds_until_auto_pause;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.auto_pause !== null) {
      ih['auto_pause'] = this.auto_pause;
    }
    if (this.max_capacity !== null) {
      ih['max_capacity'] = this.max_capacity;
    }
    if (this.min_capacity !== null) {
      ih['min_capacity'] = this.min_capacity;
    }
    if (this.seconds_until_auto_pause !== null) {
      ih['seconds_until_auto_pause'] = this.seconds_until_auto_pause;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_cluster_scaling_configuration_452';
  }
}

export class Aws_rds_global_cluster implements PcoreValue {
  readonly global_cluster_identifier: string;
  readonly aws_rds_global_cluster_id: string|null;
  readonly arn: string|null;
  readonly database_name: string|null;
  readonly deletion_protection: boolean|null;
  readonly engine: string|null;
  readonly engine_version: string|null;
  readonly global_cluster_resource_id: string|null;
  readonly storage_encrypted: boolean|null;

  constructor({
    global_cluster_identifier,
    aws_rds_global_cluster_id = null,
    arn = null,
    database_name = null,
    deletion_protection = null,
    engine = null,
    engine_version = null,
    global_cluster_resource_id = null,
    storage_encrypted = null
  }: {
    global_cluster_identifier: string,
    aws_rds_global_cluster_id?: string|null,
    arn?: string|null,
    database_name?: string|null,
    deletion_protection?: boolean|null,
    engine?: string|null,
    engine_version?: string|null,
    global_cluster_resource_id?: string|null,
    storage_encrypted?: boolean|null
  }) {
    this.global_cluster_identifier = global_cluster_identifier;
    this.aws_rds_global_cluster_id = aws_rds_global_cluster_id;
    this.arn = arn;
    this.database_name = database_name;
    this.deletion_protection = deletion_protection;
    this.engine = engine;
    this.engine_version = engine_version;
    this.global_cluster_resource_id = global_cluster_resource_id;
    this.storage_encrypted = storage_encrypted;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['global_cluster_identifier'] = this.global_cluster_identifier;
    if (this.aws_rds_global_cluster_id !== null) {
      ih['aws_rds_global_cluster_id'] = this.aws_rds_global_cluster_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.database_name !== null) {
      ih['database_name'] = this.database_name;
    }
    if (this.deletion_protection !== null) {
      ih['deletion_protection'] = this.deletion_protection;
    }
    if (this.engine !== null) {
      ih['engine'] = this.engine;
    }
    if (this.engine_version !== null) {
      ih['engine_version'] = this.engine_version;
    }
    if (this.global_cluster_resource_id !== null) {
      ih['global_cluster_resource_id'] = this.global_cluster_resource_id;
    }
    if (this.storage_encrypted !== null) {
      ih['storage_encrypted'] = this.storage_encrypted;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_global_cluster';
  }
}

export class Aws_rds_global_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_rds_global_clusterHandler';
  }
}

export class Aws_redshift_cluster implements PcoreValue {
  readonly cluster_identifier: string;
  readonly node_type: string;
  readonly aws_redshift_cluster_id: string|null;
  readonly allow_version_upgrade: boolean|null;
  readonly automated_snapshot_retention_period: number|null;
  readonly availability_zone: string|null;
  readonly bucket_name: string|null;
  readonly cluster_parameter_group_name: string|null;
  readonly cluster_public_key: string|null;
  readonly cluster_revision_number: string|null;
  readonly cluster_security_groups: string[]|null;
  readonly cluster_subnet_group_name: string|null;
  readonly cluster_type: string|null;
  readonly cluster_version: string|null;
  readonly database_name: string|null;
  readonly dns_name: string|null;
  readonly elastic_ip: string|null;
  readonly enable_logging: boolean|null;
  readonly encrypted: boolean|null;
  readonly endpoint: string|null;
  readonly enhanced_vpc_routing: boolean|null;
  readonly final_snapshot_identifier: string|null;
  readonly iam_roles: string[]|null;
  readonly kms_key_id: string|null;
  readonly logging: Aws_redshift_cluster_logging_454[]|null;
  readonly master_password: string|null;
  readonly master_username: string|null;
  readonly number_of_nodes: number|null;
  readonly owner_account: string|null;
  readonly port: number|null;
  readonly preferred_maintenance_window: string|null;
  readonly publicly_accessible: boolean|null;
  readonly s3_key_prefix: string|null;
  readonly skip_final_snapshot: boolean|null;
  readonly snapshot_cluster_identifier: string|null;
  readonly snapshot_copy: Aws_redshift_cluster_snapshot_copy_455[]|null;
  readonly snapshot_identifier: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_security_group_ids: string[]|null;

  constructor({
    cluster_identifier,
    node_type,
    aws_redshift_cluster_id = null,
    allow_version_upgrade = null,
    automated_snapshot_retention_period = null,
    availability_zone = null,
    bucket_name = null,
    cluster_parameter_group_name = null,
    cluster_public_key = null,
    cluster_revision_number = null,
    cluster_security_groups = null,
    cluster_subnet_group_name = null,
    cluster_type = null,
    cluster_version = null,
    database_name = null,
    dns_name = null,
    elastic_ip = null,
    enable_logging = null,
    encrypted = null,
    endpoint = null,
    enhanced_vpc_routing = null,
    final_snapshot_identifier = null,
    iam_roles = null,
    kms_key_id = null,
    logging = null,
    master_password = null,
    master_username = null,
    number_of_nodes = null,
    owner_account = null,
    port = null,
    preferred_maintenance_window = null,
    publicly_accessible = null,
    s3_key_prefix = null,
    skip_final_snapshot = null,
    snapshot_cluster_identifier = null,
    snapshot_copy = null,
    snapshot_identifier = null,
    tags = null,
    vpc_security_group_ids = null
  }: {
    cluster_identifier: string,
    node_type: string,
    aws_redshift_cluster_id?: string|null,
    allow_version_upgrade?: boolean|null,
    automated_snapshot_retention_period?: number|null,
    availability_zone?: string|null,
    bucket_name?: string|null,
    cluster_parameter_group_name?: string|null,
    cluster_public_key?: string|null,
    cluster_revision_number?: string|null,
    cluster_security_groups?: string[]|null,
    cluster_subnet_group_name?: string|null,
    cluster_type?: string|null,
    cluster_version?: string|null,
    database_name?: string|null,
    dns_name?: string|null,
    elastic_ip?: string|null,
    enable_logging?: boolean|null,
    encrypted?: boolean|null,
    endpoint?: string|null,
    enhanced_vpc_routing?: boolean|null,
    final_snapshot_identifier?: string|null,
    iam_roles?: string[]|null,
    kms_key_id?: string|null,
    logging?: Aws_redshift_cluster_logging_454[]|null,
    master_password?: string|null,
    master_username?: string|null,
    number_of_nodes?: number|null,
    owner_account?: string|null,
    port?: number|null,
    preferred_maintenance_window?: string|null,
    publicly_accessible?: boolean|null,
    s3_key_prefix?: string|null,
    skip_final_snapshot?: boolean|null,
    snapshot_cluster_identifier?: string|null,
    snapshot_copy?: Aws_redshift_cluster_snapshot_copy_455[]|null,
    snapshot_identifier?: string|null,
    tags?: {[s: string]: string}|null,
    vpc_security_group_ids?: string[]|null
  }) {
    this.cluster_identifier = cluster_identifier;
    this.node_type = node_type;
    this.aws_redshift_cluster_id = aws_redshift_cluster_id;
    this.allow_version_upgrade = allow_version_upgrade;
    this.automated_snapshot_retention_period = automated_snapshot_retention_period;
    this.availability_zone = availability_zone;
    this.bucket_name = bucket_name;
    this.cluster_parameter_group_name = cluster_parameter_group_name;
    this.cluster_public_key = cluster_public_key;
    this.cluster_revision_number = cluster_revision_number;
    this.cluster_security_groups = cluster_security_groups;
    this.cluster_subnet_group_name = cluster_subnet_group_name;
    this.cluster_type = cluster_type;
    this.cluster_version = cluster_version;
    this.database_name = database_name;
    this.dns_name = dns_name;
    this.elastic_ip = elastic_ip;
    this.enable_logging = enable_logging;
    this.encrypted = encrypted;
    this.endpoint = endpoint;
    this.enhanced_vpc_routing = enhanced_vpc_routing;
    this.final_snapshot_identifier = final_snapshot_identifier;
    this.iam_roles = iam_roles;
    this.kms_key_id = kms_key_id;
    this.logging = logging;
    this.master_password = master_password;
    this.master_username = master_username;
    this.number_of_nodes = number_of_nodes;
    this.owner_account = owner_account;
    this.port = port;
    this.preferred_maintenance_window = preferred_maintenance_window;
    this.publicly_accessible = publicly_accessible;
    this.s3_key_prefix = s3_key_prefix;
    this.skip_final_snapshot = skip_final_snapshot;
    this.snapshot_cluster_identifier = snapshot_cluster_identifier;
    this.snapshot_copy = snapshot_copy;
    this.snapshot_identifier = snapshot_identifier;
    this.tags = tags;
    this.vpc_security_group_ids = vpc_security_group_ids;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cluster_identifier'] = this.cluster_identifier;
    ih['node_type'] = this.node_type;
    if (this.aws_redshift_cluster_id !== null) {
      ih['aws_redshift_cluster_id'] = this.aws_redshift_cluster_id;
    }
    if (this.allow_version_upgrade !== null) {
      ih['allow_version_upgrade'] = this.allow_version_upgrade;
    }
    if (this.automated_snapshot_retention_period !== null) {
      ih['automated_snapshot_retention_period'] = this.automated_snapshot_retention_period;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.bucket_name !== null) {
      ih['bucket_name'] = this.bucket_name;
    }
    if (this.cluster_parameter_group_name !== null) {
      ih['cluster_parameter_group_name'] = this.cluster_parameter_group_name;
    }
    if (this.cluster_public_key !== null) {
      ih['cluster_public_key'] = this.cluster_public_key;
    }
    if (this.cluster_revision_number !== null) {
      ih['cluster_revision_number'] = this.cluster_revision_number;
    }
    if (this.cluster_security_groups !== null) {
      ih['cluster_security_groups'] = this.cluster_security_groups;
    }
    if (this.cluster_subnet_group_name !== null) {
      ih['cluster_subnet_group_name'] = this.cluster_subnet_group_name;
    }
    if (this.cluster_type !== null) {
      ih['cluster_type'] = this.cluster_type;
    }
    if (this.cluster_version !== null) {
      ih['cluster_version'] = this.cluster_version;
    }
    if (this.database_name !== null) {
      ih['database_name'] = this.database_name;
    }
    if (this.dns_name !== null) {
      ih['dns_name'] = this.dns_name;
    }
    if (this.elastic_ip !== null) {
      ih['elastic_ip'] = this.elastic_ip;
    }
    if (this.enable_logging !== null) {
      ih['enable_logging'] = this.enable_logging;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.enhanced_vpc_routing !== null) {
      ih['enhanced_vpc_routing'] = this.enhanced_vpc_routing;
    }
    if (this.final_snapshot_identifier !== null) {
      ih['final_snapshot_identifier'] = this.final_snapshot_identifier;
    }
    if (this.iam_roles !== null) {
      ih['iam_roles'] = this.iam_roles;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.logging !== null) {
      ih['logging'] = this.logging;
    }
    if (this.master_password !== null) {
      ih['master_password'] = this.master_password;
    }
    if (this.master_username !== null) {
      ih['master_username'] = this.master_username;
    }
    if (this.number_of_nodes !== null) {
      ih['number_of_nodes'] = this.number_of_nodes;
    }
    if (this.owner_account !== null) {
      ih['owner_account'] = this.owner_account;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.preferred_maintenance_window !== null) {
      ih['preferred_maintenance_window'] = this.preferred_maintenance_window;
    }
    if (this.publicly_accessible !== null) {
      ih['publicly_accessible'] = this.publicly_accessible;
    }
    if (this.s3_key_prefix !== null) {
      ih['s3_key_prefix'] = this.s3_key_prefix;
    }
    if (this.skip_final_snapshot !== null) {
      ih['skip_final_snapshot'] = this.skip_final_snapshot;
    }
    if (this.snapshot_cluster_identifier !== null) {
      ih['snapshot_cluster_identifier'] = this.snapshot_cluster_identifier;
    }
    if (this.snapshot_copy !== null) {
      ih['snapshot_copy'] = this.snapshot_copy;
    }
    if (this.snapshot_identifier !== null) {
      ih['snapshot_identifier'] = this.snapshot_identifier;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_cluster';
  }
}

export class Aws_redshift_clusterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_clusterHandler';
  }
}

export class Aws_redshift_cluster_logging_454 implements PcoreValue {
  readonly enable: boolean;
  readonly bucket_name: string|null;
  readonly s3_key_prefix: string|null;

  constructor({
    enable,
    bucket_name = null,
    s3_key_prefix = null
  }: {
    enable: boolean,
    bucket_name?: string|null,
    s3_key_prefix?: string|null
  }) {
    this.enable = enable;
    this.bucket_name = bucket_name;
    this.s3_key_prefix = s3_key_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['enable'] = this.enable;
    if (this.bucket_name !== null) {
      ih['bucket_name'] = this.bucket_name;
    }
    if (this.s3_key_prefix !== null) {
      ih['s3_key_prefix'] = this.s3_key_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_cluster_logging_454';
  }
}

export class Aws_redshift_cluster_snapshot_copy_455 implements PcoreValue {
  readonly destination_region: string;
  readonly grant_name: string|null;
  readonly retention_period: number|null;

  constructor({
    destination_region,
    grant_name = null,
    retention_period = null
  }: {
    destination_region: string,
    grant_name?: string|null,
    retention_period?: number|null
  }) {
    this.destination_region = destination_region;
    this.grant_name = grant_name;
    this.retention_period = retention_period;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination_region'] = this.destination_region;
    if (this.grant_name !== null) {
      ih['grant_name'] = this.grant_name;
    }
    if (this.retention_period !== null) {
      ih['retention_period'] = this.retention_period;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_cluster_snapshot_copy_455';
  }
}

export class Aws_redshift_event_subscription implements PcoreValue {
  readonly name: string;
  readonly sns_topic_arn: string;
  readonly aws_redshift_event_subscription_id: string|null;
  readonly customer_aws_id: string|null;
  readonly enabled: boolean|null;
  readonly event_categories: string[]|null;
  readonly severity: string|null;
  readonly source_ids: string[]|null;
  readonly source_type: string|null;
  readonly status: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    sns_topic_arn,
    aws_redshift_event_subscription_id = null,
    customer_aws_id = null,
    enabled = null,
    event_categories = null,
    severity = null,
    source_ids = null,
    source_type = null,
    status = null,
    tags = null
  }: {
    name: string,
    sns_topic_arn: string,
    aws_redshift_event_subscription_id?: string|null,
    customer_aws_id?: string|null,
    enabled?: boolean|null,
    event_categories?: string[]|null,
    severity?: string|null,
    source_ids?: string[]|null,
    source_type?: string|null,
    status?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.sns_topic_arn = sns_topic_arn;
    this.aws_redshift_event_subscription_id = aws_redshift_event_subscription_id;
    this.customer_aws_id = customer_aws_id;
    this.enabled = enabled;
    this.event_categories = event_categories;
    this.severity = severity;
    this.source_ids = source_ids;
    this.source_type = source_type;
    this.status = status;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['sns_topic_arn'] = this.sns_topic_arn;
    if (this.aws_redshift_event_subscription_id !== null) {
      ih['aws_redshift_event_subscription_id'] = this.aws_redshift_event_subscription_id;
    }
    if (this.customer_aws_id !== null) {
      ih['customer_aws_id'] = this.customer_aws_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.event_categories !== null) {
      ih['event_categories'] = this.event_categories;
    }
    if (this.severity !== null) {
      ih['severity'] = this.severity;
    }
    if (this.source_ids !== null) {
      ih['source_ids'] = this.source_ids;
    }
    if (this.source_type !== null) {
      ih['source_type'] = this.source_type;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_event_subscription';
  }
}

export class Aws_redshift_event_subscriptionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_event_subscriptionHandler';
  }
}

export class Aws_redshift_parameter_group implements PcoreValue {
  readonly family: string;
  readonly name: string;
  readonly aws_redshift_parameter_group_id: string|null;
  readonly description: string|null;
  readonly parameter: Aws_redshift_parameter_group_parameter_456[]|null;

  constructor({
    family,
    name,
    aws_redshift_parameter_group_id = null,
    description = null,
    parameter = null
  }: {
    family: string,
    name: string,
    aws_redshift_parameter_group_id?: string|null,
    description?: string|null,
    parameter?: Aws_redshift_parameter_group_parameter_456[]|null
  }) {
    this.family = family;
    this.name = name;
    this.aws_redshift_parameter_group_id = aws_redshift_parameter_group_id;
    this.description = description;
    this.parameter = parameter;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['family'] = this.family;
    ih['name'] = this.name;
    if (this.aws_redshift_parameter_group_id !== null) {
      ih['aws_redshift_parameter_group_id'] = this.aws_redshift_parameter_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.parameter !== null) {
      ih['parameter'] = this.parameter;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_parameter_group';
  }
}

export class Aws_redshift_parameter_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_parameter_groupHandler';
  }
}

export class Aws_redshift_parameter_group_parameter_456 implements PcoreValue {
  readonly name: string;
  readonly value: string;

  constructor({
    name,
    value
  }: {
    name: string,
    value: string
  }) {
    this.name = name;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_parameter_group_parameter_456';
  }
}

export class Aws_redshift_security_group implements PcoreValue {
  readonly ingress: Aws_redshift_security_group_ingress_457[];
  readonly name: string;
  readonly aws_redshift_security_group_id: string|null;
  readonly description: string|null;

  constructor({
    ingress,
    name,
    aws_redshift_security_group_id = null,
    description = null
  }: {
    ingress: Aws_redshift_security_group_ingress_457[],
    name: string,
    aws_redshift_security_group_id?: string|null,
    description?: string|null
  }) {
    this.ingress = ingress;
    this.name = name;
    this.aws_redshift_security_group_id = aws_redshift_security_group_id;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ingress'] = this.ingress;
    ih['name'] = this.name;
    if (this.aws_redshift_security_group_id !== null) {
      ih['aws_redshift_security_group_id'] = this.aws_redshift_security_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_security_group';
  }
}

export class Aws_redshift_security_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_security_groupHandler';
  }
}

export class Aws_redshift_security_group_ingress_457 implements PcoreValue {
  readonly cidr: string|null;
  readonly security_group_name: string|null;
  readonly security_group_owner_id: string|null;

  constructor({
    cidr = null,
    security_group_name = null,
    security_group_owner_id = null
  }: {
    cidr?: string|null,
    security_group_name?: string|null,
    security_group_owner_id?: string|null
  }) {
    this.cidr = cidr;
    this.security_group_name = security_group_name;
    this.security_group_owner_id = security_group_owner_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cidr !== null) {
      ih['cidr'] = this.cidr;
    }
    if (this.security_group_name !== null) {
      ih['security_group_name'] = this.security_group_name;
    }
    if (this.security_group_owner_id !== null) {
      ih['security_group_owner_id'] = this.security_group_owner_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_security_group_ingress_457';
  }
}

export class Aws_redshift_snapshot_copy_grant implements PcoreValue {
  readonly snapshot_copy_grant_name: string;
  readonly aws_redshift_snapshot_copy_grant_id: string|null;
  readonly kms_key_id: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    snapshot_copy_grant_name,
    aws_redshift_snapshot_copy_grant_id = null,
    kms_key_id = null,
    tags = null
  }: {
    snapshot_copy_grant_name: string,
    aws_redshift_snapshot_copy_grant_id?: string|null,
    kms_key_id?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.snapshot_copy_grant_name = snapshot_copy_grant_name;
    this.aws_redshift_snapshot_copy_grant_id = aws_redshift_snapshot_copy_grant_id;
    this.kms_key_id = kms_key_id;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['snapshot_copy_grant_name'] = this.snapshot_copy_grant_name;
    if (this.aws_redshift_snapshot_copy_grant_id !== null) {
      ih['aws_redshift_snapshot_copy_grant_id'] = this.aws_redshift_snapshot_copy_grant_id;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_snapshot_copy_grant';
  }
}

export class Aws_redshift_snapshot_copy_grantHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_snapshot_copy_grantHandler';
  }
}

export class Aws_redshift_subnet_group implements PcoreValue {
  readonly name: string;
  readonly subnet_ids: string[];
  readonly aws_redshift_subnet_group_id: string|null;
  readonly description: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    subnet_ids,
    aws_redshift_subnet_group_id = null,
    description = null,
    tags = null
  }: {
    name: string,
    subnet_ids: string[],
    aws_redshift_subnet_group_id?: string|null,
    description?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.subnet_ids = subnet_ids;
    this.aws_redshift_subnet_group_id = aws_redshift_subnet_group_id;
    this.description = description;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['subnet_ids'] = this.subnet_ids;
    if (this.aws_redshift_subnet_group_id !== null) {
      ih['aws_redshift_subnet_group_id'] = this.aws_redshift_subnet_group_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_subnet_group';
  }
}

export class Aws_redshift_subnet_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_redshift_subnet_groupHandler';
  }
}

export class Aws_resourcegroups_group implements PcoreValue {
  readonly name: string;
  readonly resource_query: Aws_resourcegroups_group_resource_query_458[];
  readonly aws_resourcegroups_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;

  constructor({
    name,
    resource_query,
    aws_resourcegroups_group_id = null,
    arn = null,
    description = null
  }: {
    name: string,
    resource_query: Aws_resourcegroups_group_resource_query_458[],
    aws_resourcegroups_group_id?: string|null,
    arn?: string|null,
    description?: string|null
  }) {
    this.name = name;
    this.resource_query = resource_query;
    this.aws_resourcegroups_group_id = aws_resourcegroups_group_id;
    this.arn = arn;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['resource_query'] = this.resource_query;
    if (this.aws_resourcegroups_group_id !== null) {
      ih['aws_resourcegroups_group_id'] = this.aws_resourcegroups_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_resourcegroups_group';
  }
}

export class Aws_resourcegroups_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_resourcegroups_groupHandler';
  }
}

export class Aws_resourcegroups_group_resource_query_458 implements PcoreValue {
  readonly query: string;
  readonly type: string|null;

  constructor({
    query,
    type = null
  }: {
    query: string,
    type?: string|null
  }) {
    this.query = query;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['query'] = this.query;
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_resourcegroups_group_resource_query_458';
  }
}

export class Aws_route implements PcoreValue {
  readonly route_table_id: string;
  readonly aws_route_id: string|null;
  readonly destination_cidr_block: string|null;
  readonly destination_ipv6_cidr_block: string|null;
  readonly destination_prefix_list_id: string|null;
  readonly egress_only_gateway_id: string|null;
  readonly gateway_id: string|null;
  readonly instance_id: string|null;
  readonly instance_owner_id: string|null;
  readonly nat_gateway_id: string|null;
  readonly network_interface_id: string|null;
  readonly origin: string|null;
  readonly state: string|null;
  readonly transit_gateway_id: string|null;
  readonly vpc_peering_connection_id: string|null;

  constructor({
    route_table_id,
    aws_route_id = null,
    destination_cidr_block = null,
    destination_ipv6_cidr_block = null,
    destination_prefix_list_id = null,
    egress_only_gateway_id = null,
    gateway_id = null,
    instance_id = null,
    instance_owner_id = null,
    nat_gateway_id = null,
    network_interface_id = null,
    origin = null,
    state = null,
    transit_gateway_id = null,
    vpc_peering_connection_id = null
  }: {
    route_table_id: string,
    aws_route_id?: string|null,
    destination_cidr_block?: string|null,
    destination_ipv6_cidr_block?: string|null,
    destination_prefix_list_id?: string|null,
    egress_only_gateway_id?: string|null,
    gateway_id?: string|null,
    instance_id?: string|null,
    instance_owner_id?: string|null,
    nat_gateway_id?: string|null,
    network_interface_id?: string|null,
    origin?: string|null,
    state?: string|null,
    transit_gateway_id?: string|null,
    vpc_peering_connection_id?: string|null
  }) {
    this.route_table_id = route_table_id;
    this.aws_route_id = aws_route_id;
    this.destination_cidr_block = destination_cidr_block;
    this.destination_ipv6_cidr_block = destination_ipv6_cidr_block;
    this.destination_prefix_list_id = destination_prefix_list_id;
    this.egress_only_gateway_id = egress_only_gateway_id;
    this.gateway_id = gateway_id;
    this.instance_id = instance_id;
    this.instance_owner_id = instance_owner_id;
    this.nat_gateway_id = nat_gateway_id;
    this.network_interface_id = network_interface_id;
    this.origin = origin;
    this.state = state;
    this.transit_gateway_id = transit_gateway_id;
    this.vpc_peering_connection_id = vpc_peering_connection_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['route_table_id'] = this.route_table_id;
    if (this.aws_route_id !== null) {
      ih['aws_route_id'] = this.aws_route_id;
    }
    if (this.destination_cidr_block !== null) {
      ih['destination_cidr_block'] = this.destination_cidr_block;
    }
    if (this.destination_ipv6_cidr_block !== null) {
      ih['destination_ipv6_cidr_block'] = this.destination_ipv6_cidr_block;
    }
    if (this.destination_prefix_list_id !== null) {
      ih['destination_prefix_list_id'] = this.destination_prefix_list_id;
    }
    if (this.egress_only_gateway_id !== null) {
      ih['egress_only_gateway_id'] = this.egress_only_gateway_id;
    }
    if (this.gateway_id !== null) {
      ih['gateway_id'] = this.gateway_id;
    }
    if (this.instance_id !== null) {
      ih['instance_id'] = this.instance_id;
    }
    if (this.instance_owner_id !== null) {
      ih['instance_owner_id'] = this.instance_owner_id;
    }
    if (this.nat_gateway_id !== null) {
      ih['nat_gateway_id'] = this.nat_gateway_id;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.origin !== null) {
      ih['origin'] = this.origin;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    if (this.transit_gateway_id !== null) {
      ih['transit_gateway_id'] = this.transit_gateway_id;
    }
    if (this.vpc_peering_connection_id !== null) {
      ih['vpc_peering_connection_id'] = this.vpc_peering_connection_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route';
  }
}

export class Aws_route53_delegation_set implements PcoreValue {
  readonly aws_route53_delegation_set_id: string|null;
  readonly name_servers: string[]|null;
  readonly reference_name: string|null;

  constructor({
    aws_route53_delegation_set_id = null,
    name_servers = null,
    reference_name = null
  }: {
    aws_route53_delegation_set_id?: string|null,
    name_servers?: string[]|null,
    reference_name?: string|null
  }) {
    this.aws_route53_delegation_set_id = aws_route53_delegation_set_id;
    this.name_servers = name_servers;
    this.reference_name = reference_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_route53_delegation_set_id !== null) {
      ih['aws_route53_delegation_set_id'] = this.aws_route53_delegation_set_id;
    }
    if (this.name_servers !== null) {
      ih['name_servers'] = this.name_servers;
    }
    if (this.reference_name !== null) {
      ih['reference_name'] = this.reference_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_delegation_set';
  }
}

export class Aws_route53_delegation_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_delegation_setHandler';
  }
}

export class Aws_route53_health_check implements PcoreValue {
  readonly type: string;
  readonly aws_route53_health_check_id: string|null;
  readonly child_health_threshold: number|null;
  readonly child_healthchecks: string[]|null;
  readonly cloudwatch_alarm_name: string|null;
  readonly cloudwatch_alarm_region: string|null;
  readonly enable_sni: boolean|null;
  readonly failure_threshold: number|null;
  readonly fqdn: string|null;
  readonly insufficient_data_health_status: string|null;
  readonly invert_healthcheck: boolean|null;
  readonly ip_address: string|null;
  readonly measure_latency: boolean|null;
  readonly port: number|null;
  readonly reference_name: string|null;
  readonly regions: string[]|null;
  readonly request_interval: number|null;
  readonly resource_path: string|null;
  readonly search_string: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    type,
    aws_route53_health_check_id = null,
    child_health_threshold = null,
    child_healthchecks = null,
    cloudwatch_alarm_name = null,
    cloudwatch_alarm_region = null,
    enable_sni = null,
    failure_threshold = null,
    fqdn = null,
    insufficient_data_health_status = null,
    invert_healthcheck = null,
    ip_address = null,
    measure_latency = null,
    port = null,
    reference_name = null,
    regions = null,
    request_interval = null,
    resource_path = null,
    search_string = null,
    tags = null
  }: {
    type: string,
    aws_route53_health_check_id?: string|null,
    child_health_threshold?: number|null,
    child_healthchecks?: string[]|null,
    cloudwatch_alarm_name?: string|null,
    cloudwatch_alarm_region?: string|null,
    enable_sni?: boolean|null,
    failure_threshold?: number|null,
    fqdn?: string|null,
    insufficient_data_health_status?: string|null,
    invert_healthcheck?: boolean|null,
    ip_address?: string|null,
    measure_latency?: boolean|null,
    port?: number|null,
    reference_name?: string|null,
    regions?: string[]|null,
    request_interval?: number|null,
    resource_path?: string|null,
    search_string?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.type = type;
    this.aws_route53_health_check_id = aws_route53_health_check_id;
    this.child_health_threshold = child_health_threshold;
    this.child_healthchecks = child_healthchecks;
    this.cloudwatch_alarm_name = cloudwatch_alarm_name;
    this.cloudwatch_alarm_region = cloudwatch_alarm_region;
    this.enable_sni = enable_sni;
    this.failure_threshold = failure_threshold;
    this.fqdn = fqdn;
    this.insufficient_data_health_status = insufficient_data_health_status;
    this.invert_healthcheck = invert_healthcheck;
    this.ip_address = ip_address;
    this.measure_latency = measure_latency;
    this.port = port;
    this.reference_name = reference_name;
    this.regions = regions;
    this.request_interval = request_interval;
    this.resource_path = resource_path;
    this.search_string = search_string;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.aws_route53_health_check_id !== null) {
      ih['aws_route53_health_check_id'] = this.aws_route53_health_check_id;
    }
    if (this.child_health_threshold !== null) {
      ih['child_health_threshold'] = this.child_health_threshold;
    }
    if (this.child_healthchecks !== null) {
      ih['child_healthchecks'] = this.child_healthchecks;
    }
    if (this.cloudwatch_alarm_name !== null) {
      ih['cloudwatch_alarm_name'] = this.cloudwatch_alarm_name;
    }
    if (this.cloudwatch_alarm_region !== null) {
      ih['cloudwatch_alarm_region'] = this.cloudwatch_alarm_region;
    }
    if (this.enable_sni !== null) {
      ih['enable_sni'] = this.enable_sni;
    }
    if (this.failure_threshold !== null) {
      ih['failure_threshold'] = this.failure_threshold;
    }
    if (this.fqdn !== null) {
      ih['fqdn'] = this.fqdn;
    }
    if (this.insufficient_data_health_status !== null) {
      ih['insufficient_data_health_status'] = this.insufficient_data_health_status;
    }
    if (this.invert_healthcheck !== null) {
      ih['invert_healthcheck'] = this.invert_healthcheck;
    }
    if (this.ip_address !== null) {
      ih['ip_address'] = this.ip_address;
    }
    if (this.measure_latency !== null) {
      ih['measure_latency'] = this.measure_latency;
    }
    if (this.port !== null) {
      ih['port'] = this.port;
    }
    if (this.reference_name !== null) {
      ih['reference_name'] = this.reference_name;
    }
    if (this.regions !== null) {
      ih['regions'] = this.regions;
    }
    if (this.request_interval !== null) {
      ih['request_interval'] = this.request_interval;
    }
    if (this.resource_path !== null) {
      ih['resource_path'] = this.resource_path;
    }
    if (this.search_string !== null) {
      ih['search_string'] = this.search_string;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_health_check';
  }
}

export class Aws_route53_health_checkHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_health_checkHandler';
  }
}

export class Aws_route53_query_log implements PcoreValue {
  readonly cloudwatch_log_group_arn: string;
  readonly zone_id: string;
  readonly aws_route53_query_log_id: string|null;

  constructor({
    cloudwatch_log_group_arn,
    zone_id,
    aws_route53_query_log_id = null
  }: {
    cloudwatch_log_group_arn: string,
    zone_id: string,
    aws_route53_query_log_id?: string|null
  }) {
    this.cloudwatch_log_group_arn = cloudwatch_log_group_arn;
    this.zone_id = zone_id;
    this.aws_route53_query_log_id = aws_route53_query_log_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cloudwatch_log_group_arn'] = this.cloudwatch_log_group_arn;
    ih['zone_id'] = this.zone_id;
    if (this.aws_route53_query_log_id !== null) {
      ih['aws_route53_query_log_id'] = this.aws_route53_query_log_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_query_log';
  }
}

export class Aws_route53_query_logHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_query_logHandler';
  }
}

export class Aws_route53_record implements PcoreValue {
  readonly name: string;
  readonly type: string;
  readonly zone_id: string;
  readonly aws_route53_record_id: string|null;
  readonly alias: Aws_route53_record_alias_459[]|null;
  readonly allow_overwrite: boolean|null;
  readonly failover: string|null;
  readonly failover_routing_policy: Aws_route53_record_failover_routing_policy_460[]|null;
  readonly fqdn: string|null;
  readonly geolocation_routing_policy: Aws_route53_record_geolocation_routing_policy_461[]|null;
  readonly health_check_id: string|null;
  readonly latency_routing_policy: Aws_route53_record_latency_routing_policy_462[]|null;
  readonly multivalue_answer_routing_policy: boolean|null;
  readonly records: string[]|null;
  readonly set_identifier: string|null;
  readonly ttl: number|null;
  readonly weight: number|null;
  readonly weighted_routing_policy: Aws_route53_record_weighted_routing_policy_463[]|null;

  constructor({
    name,
    type,
    zone_id,
    aws_route53_record_id = null,
    alias = null,
    allow_overwrite = null,
    failover = null,
    failover_routing_policy = null,
    fqdn = null,
    geolocation_routing_policy = null,
    health_check_id = null,
    latency_routing_policy = null,
    multivalue_answer_routing_policy = null,
    records = null,
    set_identifier = null,
    ttl = null,
    weight = null,
    weighted_routing_policy = null
  }: {
    name: string,
    type: string,
    zone_id: string,
    aws_route53_record_id?: string|null,
    alias?: Aws_route53_record_alias_459[]|null,
    allow_overwrite?: boolean|null,
    failover?: string|null,
    failover_routing_policy?: Aws_route53_record_failover_routing_policy_460[]|null,
    fqdn?: string|null,
    geolocation_routing_policy?: Aws_route53_record_geolocation_routing_policy_461[]|null,
    health_check_id?: string|null,
    latency_routing_policy?: Aws_route53_record_latency_routing_policy_462[]|null,
    multivalue_answer_routing_policy?: boolean|null,
    records?: string[]|null,
    set_identifier?: string|null,
    ttl?: number|null,
    weight?: number|null,
    weighted_routing_policy?: Aws_route53_record_weighted_routing_policy_463[]|null
  }) {
    this.name = name;
    this.type = type;
    this.zone_id = zone_id;
    this.aws_route53_record_id = aws_route53_record_id;
    this.alias = alias;
    this.allow_overwrite = allow_overwrite;
    this.failover = failover;
    this.failover_routing_policy = failover_routing_policy;
    this.fqdn = fqdn;
    this.geolocation_routing_policy = geolocation_routing_policy;
    this.health_check_id = health_check_id;
    this.latency_routing_policy = latency_routing_policy;
    this.multivalue_answer_routing_policy = multivalue_answer_routing_policy;
    this.records = records;
    this.set_identifier = set_identifier;
    this.ttl = ttl;
    this.weight = weight;
    this.weighted_routing_policy = weighted_routing_policy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['type'] = this.type;
    ih['zone_id'] = this.zone_id;
    if (this.aws_route53_record_id !== null) {
      ih['aws_route53_record_id'] = this.aws_route53_record_id;
    }
    if (this.alias !== null) {
      ih['alias'] = this.alias;
    }
    if (this.allow_overwrite !== null) {
      ih['allow_overwrite'] = this.allow_overwrite;
    }
    if (this.failover !== null) {
      ih['failover'] = this.failover;
    }
    if (this.failover_routing_policy !== null) {
      ih['failover_routing_policy'] = this.failover_routing_policy;
    }
    if (this.fqdn !== null) {
      ih['fqdn'] = this.fqdn;
    }
    if (this.geolocation_routing_policy !== null) {
      ih['geolocation_routing_policy'] = this.geolocation_routing_policy;
    }
    if (this.health_check_id !== null) {
      ih['health_check_id'] = this.health_check_id;
    }
    if (this.latency_routing_policy !== null) {
      ih['latency_routing_policy'] = this.latency_routing_policy;
    }
    if (this.multivalue_answer_routing_policy !== null) {
      ih['multivalue_answer_routing_policy'] = this.multivalue_answer_routing_policy;
    }
    if (this.records !== null) {
      ih['records'] = this.records;
    }
    if (this.set_identifier !== null) {
      ih['set_identifier'] = this.set_identifier;
    }
    if (this.ttl !== null) {
      ih['ttl'] = this.ttl;
    }
    if (this.weight !== null) {
      ih['weight'] = this.weight;
    }
    if (this.weighted_routing_policy !== null) {
      ih['weighted_routing_policy'] = this.weighted_routing_policy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_record';
  }
}

export class Aws_route53_recordHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_recordHandler';
  }
}

export class Aws_route53_record_alias_459 implements PcoreValue {
  readonly evaluate_target_health: boolean;
  readonly name: string;
  readonly zone_id: string;

  constructor({
    evaluate_target_health,
    name,
    zone_id
  }: {
    evaluate_target_health: boolean,
    name: string,
    zone_id: string
  }) {
    this.evaluate_target_health = evaluate_target_health;
    this.name = name;
    this.zone_id = zone_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['evaluate_target_health'] = this.evaluate_target_health;
    ih['name'] = this.name;
    ih['zone_id'] = this.zone_id;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_record_alias_459';
  }
}

export class Aws_route53_record_failover_routing_policy_460 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_record_failover_routing_policy_460';
  }
}

export class Aws_route53_record_geolocation_routing_policy_461 implements PcoreValue {
  readonly continent: string|null;
  readonly country: string|null;
  readonly subdivision: string|null;

  constructor({
    continent = null,
    country = null,
    subdivision = null
  }: {
    continent?: string|null,
    country?: string|null,
    subdivision?: string|null
  }) {
    this.continent = continent;
    this.country = country;
    this.subdivision = subdivision;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.continent !== null) {
      ih['continent'] = this.continent;
    }
    if (this.country !== null) {
      ih['country'] = this.country;
    }
    if (this.subdivision !== null) {
      ih['subdivision'] = this.subdivision;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_record_geolocation_routing_policy_461';
  }
}

export class Aws_route53_record_latency_routing_policy_462 implements PcoreValue {
  readonly region: string;

  constructor({
    region
  }: {
    region: string
  }) {
    this.region = region;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['region'] = this.region;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_record_latency_routing_policy_462';
  }
}

export class Aws_route53_record_weighted_routing_policy_463 implements PcoreValue {
  readonly weight: number;

  constructor({
    weight
  }: {
    weight: number
  }) {
    this.weight = weight;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['weight'] = this.weight;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_record_weighted_routing_policy_463';
  }
}

export class Aws_route53_zone implements PcoreValue {
  readonly name: string;
  readonly aws_route53_zone_id: string|null;
  readonly comment: string|null;
  readonly delegation_set_id: string|null;
  readonly force_destroy: boolean|null;
  readonly name_servers: string[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc: Aws_route53_zone_vpc_464[]|null;
  readonly vpc_id: string|null;
  readonly vpc_region: string|null;
  readonly zone_id: string|null;

  constructor({
    name,
    aws_route53_zone_id = null,
    comment = null,
    delegation_set_id = null,
    force_destroy = null,
    name_servers = null,
    tags = null,
    vpc = null,
    vpc_id = null,
    vpc_region = null,
    zone_id = null
  }: {
    name: string,
    aws_route53_zone_id?: string|null,
    comment?: string|null,
    delegation_set_id?: string|null,
    force_destroy?: boolean|null,
    name_servers?: string[]|null,
    tags?: {[s: string]: string}|null,
    vpc?: Aws_route53_zone_vpc_464[]|null,
    vpc_id?: string|null,
    vpc_region?: string|null,
    zone_id?: string|null
  }) {
    this.name = name;
    this.aws_route53_zone_id = aws_route53_zone_id;
    this.comment = comment;
    this.delegation_set_id = delegation_set_id;
    this.force_destroy = force_destroy;
    this.name_servers = name_servers;
    this.tags = tags;
    this.vpc = vpc;
    this.vpc_id = vpc_id;
    this.vpc_region = vpc_region;
    this.zone_id = zone_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_route53_zone_id !== null) {
      ih['aws_route53_zone_id'] = this.aws_route53_zone_id;
    }
    if (this.comment !== null) {
      ih['comment'] = this.comment;
    }
    if (this.delegation_set_id !== null) {
      ih['delegation_set_id'] = this.delegation_set_id;
    }
    if (this.force_destroy !== null) {
      ih['force_destroy'] = this.force_destroy;
    }
    if (this.name_servers !== null) {
      ih['name_servers'] = this.name_servers;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc !== null) {
      ih['vpc'] = this.vpc;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    if (this.vpc_region !== null) {
      ih['vpc_region'] = this.vpc_region;
    }
    if (this.zone_id !== null) {
      ih['zone_id'] = this.zone_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_zone';
  }
}

export class Aws_route53_zoneHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_zoneHandler';
  }
}

export class Aws_route53_zone_association implements PcoreValue {
  readonly vpc_id: string;
  readonly zone_id: string;
  readonly aws_route53_zone_association_id: string|null;
  readonly vpc_region: string|null;

  constructor({
    vpc_id,
    zone_id,
    aws_route53_zone_association_id = null,
    vpc_region = null
  }: {
    vpc_id: string,
    zone_id: string,
    aws_route53_zone_association_id?: string|null,
    vpc_region?: string|null
  }) {
    this.vpc_id = vpc_id;
    this.zone_id = zone_id;
    this.aws_route53_zone_association_id = aws_route53_zone_association_id;
    this.vpc_region = vpc_region;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['vpc_id'] = this.vpc_id;
    ih['zone_id'] = this.zone_id;
    if (this.aws_route53_zone_association_id !== null) {
      ih['aws_route53_zone_association_id'] = this.aws_route53_zone_association_id;
    }
    if (this.vpc_region !== null) {
      ih['vpc_region'] = this.vpc_region;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_zone_association';
  }
}

export class Aws_route53_zone_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_zone_associationHandler';
  }
}

export class Aws_route53_zone_vpc_464 implements PcoreValue {
  readonly vpc_id: string;
  readonly vpc_region: string|null;

  constructor({
    vpc_id,
    vpc_region = null
  }: {
    vpc_id: string,
    vpc_region?: string|null
  }) {
    this.vpc_id = vpc_id;
    this.vpc_region = vpc_region;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['vpc_id'] = this.vpc_id;
    if (this.vpc_region !== null) {
      ih['vpc_region'] = this.vpc_region;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route53_zone_vpc_464';
  }
}

export class Aws_routeHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_routeHandler';
  }
}

export class Aws_route_table implements PcoreValue {
  readonly vpc_id: string;
  readonly aws_route_table_id: string|null;
  readonly owner_id: string|null;
  readonly propagating_vgws: string[]|null;
  readonly route: Aws_route_table_route_465[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    vpc_id,
    aws_route_table_id = null,
    owner_id = null,
    propagating_vgws = null,
    route = null,
    tags = null
  }: {
    vpc_id: string,
    aws_route_table_id?: string|null,
    owner_id?: string|null,
    propagating_vgws?: string[]|null,
    route?: Aws_route_table_route_465[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.vpc_id = vpc_id;
    this.aws_route_table_id = aws_route_table_id;
    this.owner_id = owner_id;
    this.propagating_vgws = propagating_vgws;
    this.route = route;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_route_table_id !== null) {
      ih['aws_route_table_id'] = this.aws_route_table_id;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.propagating_vgws !== null) {
      ih['propagating_vgws'] = this.propagating_vgws;
    }
    if (this.route !== null) {
      ih['route'] = this.route;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route_table';
  }
}

export class Aws_route_tableHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route_tableHandler';
  }
}

export class Aws_route_table_association implements PcoreValue {
  readonly route_table_id: string;
  readonly subnet_id: string;
  readonly aws_route_table_association_id: string|null;

  constructor({
    route_table_id,
    subnet_id,
    aws_route_table_association_id = null
  }: {
    route_table_id: string,
    subnet_id: string,
    aws_route_table_association_id?: string|null
  }) {
    this.route_table_id = route_table_id;
    this.subnet_id = subnet_id;
    this.aws_route_table_association_id = aws_route_table_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['route_table_id'] = this.route_table_id;
    ih['subnet_id'] = this.subnet_id;
    if (this.aws_route_table_association_id !== null) {
      ih['aws_route_table_association_id'] = this.aws_route_table_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route_table_association';
  }
}

export class Aws_route_table_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route_table_associationHandler';
  }
}

export class Aws_route_table_route_465 implements PcoreValue {
  readonly cidr_block: string|null;
  readonly egress_only_gateway_id: string|null;
  readonly gateway_id: string|null;
  readonly instance_id: string|null;
  readonly ipv6_cidr_block: string|null;
  readonly nat_gateway_id: string|null;
  readonly network_interface_id: string|null;
  readonly transit_gateway_id: string|null;
  readonly vpc_peering_connection_id: string|null;

  constructor({
    cidr_block = null,
    egress_only_gateway_id = null,
    gateway_id = null,
    instance_id = null,
    ipv6_cidr_block = null,
    nat_gateway_id = null,
    network_interface_id = null,
    transit_gateway_id = null,
    vpc_peering_connection_id = null
  }: {
    cidr_block?: string|null,
    egress_only_gateway_id?: string|null,
    gateway_id?: string|null,
    instance_id?: string|null,
    ipv6_cidr_block?: string|null,
    nat_gateway_id?: string|null,
    network_interface_id?: string|null,
    transit_gateway_id?: string|null,
    vpc_peering_connection_id?: string|null
  }) {
    this.cidr_block = cidr_block;
    this.egress_only_gateway_id = egress_only_gateway_id;
    this.gateway_id = gateway_id;
    this.instance_id = instance_id;
    this.ipv6_cidr_block = ipv6_cidr_block;
    this.nat_gateway_id = nat_gateway_id;
    this.network_interface_id = network_interface_id;
    this.transit_gateway_id = transit_gateway_id;
    this.vpc_peering_connection_id = vpc_peering_connection_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cidr_block !== null) {
      ih['cidr_block'] = this.cidr_block;
    }
    if (this.egress_only_gateway_id !== null) {
      ih['egress_only_gateway_id'] = this.egress_only_gateway_id;
    }
    if (this.gateway_id !== null) {
      ih['gateway_id'] = this.gateway_id;
    }
    if (this.instance_id !== null) {
      ih['instance_id'] = this.instance_id;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    if (this.nat_gateway_id !== null) {
      ih['nat_gateway_id'] = this.nat_gateway_id;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.transit_gateway_id !== null) {
      ih['transit_gateway_id'] = this.transit_gateway_id;
    }
    if (this.vpc_peering_connection_id !== null) {
      ih['vpc_peering_connection_id'] = this.vpc_peering_connection_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_route_table_route_465';
  }
}

export class Aws_s3_account_public_access_block implements PcoreValue {
  readonly aws_s3_account_public_access_block_id: string|null;
  readonly account_id: string|null;
  readonly block_public_acls: boolean|null;
  readonly block_public_policy: boolean|null;
  readonly ignore_public_acls: boolean|null;
  readonly restrict_public_buckets: boolean|null;

  constructor({
    aws_s3_account_public_access_block_id = null,
    account_id = null,
    block_public_acls = null,
    block_public_policy = null,
    ignore_public_acls = null,
    restrict_public_buckets = null
  }: {
    aws_s3_account_public_access_block_id?: string|null,
    account_id?: string|null,
    block_public_acls?: boolean|null,
    block_public_policy?: boolean|null,
    ignore_public_acls?: boolean|null,
    restrict_public_buckets?: boolean|null
  }) {
    this.aws_s3_account_public_access_block_id = aws_s3_account_public_access_block_id;
    this.account_id = account_id;
    this.block_public_acls = block_public_acls;
    this.block_public_policy = block_public_policy;
    this.ignore_public_acls = ignore_public_acls;
    this.restrict_public_buckets = restrict_public_buckets;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_s3_account_public_access_block_id !== null) {
      ih['aws_s3_account_public_access_block_id'] = this.aws_s3_account_public_access_block_id;
    }
    if (this.account_id !== null) {
      ih['account_id'] = this.account_id;
    }
    if (this.block_public_acls !== null) {
      ih['block_public_acls'] = this.block_public_acls;
    }
    if (this.block_public_policy !== null) {
      ih['block_public_policy'] = this.block_public_policy;
    }
    if (this.ignore_public_acls !== null) {
      ih['ignore_public_acls'] = this.ignore_public_acls;
    }
    if (this.restrict_public_buckets !== null) {
      ih['restrict_public_buckets'] = this.restrict_public_buckets;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_account_public_access_block';
  }
}

export class Aws_s3_account_public_access_blockHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_account_public_access_blockHandler';
  }
}

export class Aws_s3_bucket implements PcoreValue {
  readonly aws_s3_bucket_id: string|null;
  readonly acceleration_status: string|null;
  readonly acl: string|null;
  readonly arn: string|null;
  readonly bucket: string|null;
  readonly bucket_domain_name: string|null;
  readonly bucket_prefix: string|null;
  readonly bucket_regional_domain_name: string|null;
  readonly cors_rule: Aws_s3_bucket_cors_rule_466[]|null;
  readonly force_destroy: boolean|null;
  readonly hosted_zone_id: string|null;
  readonly lifecycle_rule: Aws_s3_bucket_lifecycle_rule_467[]|null;
  readonly logging: Aws_s3_bucket_logging_472[]|null;
  readonly object_lock_configuration: Aws_s3_bucket_object_lock_configuration_473[]|null;
  readonly policy: string|null;
  readonly region: string|null;
  readonly replication_configuration: Aws_s3_bucket_replication_configuration_476[]|null;
  readonly request_payer: string|null;
  readonly server_side_encryption_configuration: Aws_s3_bucket_server_side_encryption_configuration_483[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly versioning: Aws_s3_bucket_versioning_486[]|null;
  readonly website: Aws_s3_bucket_website_487[]|null;
  readonly website_domain: string|null;
  readonly website_endpoint: string|null;

  constructor({
    aws_s3_bucket_id = null,
    acceleration_status = null,
    acl = null,
    arn = null,
    bucket = null,
    bucket_domain_name = null,
    bucket_prefix = null,
    bucket_regional_domain_name = null,
    cors_rule = null,
    force_destroy = null,
    hosted_zone_id = null,
    lifecycle_rule = null,
    logging = null,
    object_lock_configuration = null,
    policy = null,
    region = null,
    replication_configuration = null,
    request_payer = null,
    server_side_encryption_configuration = null,
    tags = null,
    versioning = null,
    website = null,
    website_domain = null,
    website_endpoint = null
  }: {
    aws_s3_bucket_id?: string|null,
    acceleration_status?: string|null,
    acl?: string|null,
    arn?: string|null,
    bucket?: string|null,
    bucket_domain_name?: string|null,
    bucket_prefix?: string|null,
    bucket_regional_domain_name?: string|null,
    cors_rule?: Aws_s3_bucket_cors_rule_466[]|null,
    force_destroy?: boolean|null,
    hosted_zone_id?: string|null,
    lifecycle_rule?: Aws_s3_bucket_lifecycle_rule_467[]|null,
    logging?: Aws_s3_bucket_logging_472[]|null,
    object_lock_configuration?: Aws_s3_bucket_object_lock_configuration_473[]|null,
    policy?: string|null,
    region?: string|null,
    replication_configuration?: Aws_s3_bucket_replication_configuration_476[]|null,
    request_payer?: string|null,
    server_side_encryption_configuration?: Aws_s3_bucket_server_side_encryption_configuration_483[]|null,
    tags?: {[s: string]: string}|null,
    versioning?: Aws_s3_bucket_versioning_486[]|null,
    website?: Aws_s3_bucket_website_487[]|null,
    website_domain?: string|null,
    website_endpoint?: string|null
  }) {
    this.aws_s3_bucket_id = aws_s3_bucket_id;
    this.acceleration_status = acceleration_status;
    this.acl = acl;
    this.arn = arn;
    this.bucket = bucket;
    this.bucket_domain_name = bucket_domain_name;
    this.bucket_prefix = bucket_prefix;
    this.bucket_regional_domain_name = bucket_regional_domain_name;
    this.cors_rule = cors_rule;
    this.force_destroy = force_destroy;
    this.hosted_zone_id = hosted_zone_id;
    this.lifecycle_rule = lifecycle_rule;
    this.logging = logging;
    this.object_lock_configuration = object_lock_configuration;
    this.policy = policy;
    this.region = region;
    this.replication_configuration = replication_configuration;
    this.request_payer = request_payer;
    this.server_side_encryption_configuration = server_side_encryption_configuration;
    this.tags = tags;
    this.versioning = versioning;
    this.website = website;
    this.website_domain = website_domain;
    this.website_endpoint = website_endpoint;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_s3_bucket_id !== null) {
      ih['aws_s3_bucket_id'] = this.aws_s3_bucket_id;
    }
    if (this.acceleration_status !== null) {
      ih['acceleration_status'] = this.acceleration_status;
    }
    if (this.acl !== null) {
      ih['acl'] = this.acl;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.bucket !== null) {
      ih['bucket'] = this.bucket;
    }
    if (this.bucket_domain_name !== null) {
      ih['bucket_domain_name'] = this.bucket_domain_name;
    }
    if (this.bucket_prefix !== null) {
      ih['bucket_prefix'] = this.bucket_prefix;
    }
    if (this.bucket_regional_domain_name !== null) {
      ih['bucket_regional_domain_name'] = this.bucket_regional_domain_name;
    }
    if (this.cors_rule !== null) {
      ih['cors_rule'] = this.cors_rule;
    }
    if (this.force_destroy !== null) {
      ih['force_destroy'] = this.force_destroy;
    }
    if (this.hosted_zone_id !== null) {
      ih['hosted_zone_id'] = this.hosted_zone_id;
    }
    if (this.lifecycle_rule !== null) {
      ih['lifecycle_rule'] = this.lifecycle_rule;
    }
    if (this.logging !== null) {
      ih['logging'] = this.logging;
    }
    if (this.object_lock_configuration !== null) {
      ih['object_lock_configuration'] = this.object_lock_configuration;
    }
    if (this.policy !== null) {
      ih['policy'] = this.policy;
    }
    if (this.region !== null) {
      ih['region'] = this.region;
    }
    if (this.replication_configuration !== null) {
      ih['replication_configuration'] = this.replication_configuration;
    }
    if (this.request_payer !== null) {
      ih['request_payer'] = this.request_payer;
    }
    if (this.server_side_encryption_configuration !== null) {
      ih['server_side_encryption_configuration'] = this.server_side_encryption_configuration;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.versioning !== null) {
      ih['versioning'] = this.versioning;
    }
    if (this.website !== null) {
      ih['website'] = this.website;
    }
    if (this.website_domain !== null) {
      ih['website_domain'] = this.website_domain;
    }
    if (this.website_endpoint !== null) {
      ih['website_endpoint'] = this.website_endpoint;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket';
  }
}

export class Aws_s3_bucketHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucketHandler';
  }
}

export class Aws_s3_bucket_cors_rule_466 implements PcoreValue {
  readonly allowed_methods: string[];
  readonly allowed_origins: string[];
  readonly allowed_headers: string[]|null;
  readonly expose_headers: string[]|null;
  readonly max_age_seconds: number|null;

  constructor({
    allowed_methods,
    allowed_origins,
    allowed_headers = null,
    expose_headers = null,
    max_age_seconds = null
  }: {
    allowed_methods: string[],
    allowed_origins: string[],
    allowed_headers?: string[]|null,
    expose_headers?: string[]|null,
    max_age_seconds?: number|null
  }) {
    this.allowed_methods = allowed_methods;
    this.allowed_origins = allowed_origins;
    this.allowed_headers = allowed_headers;
    this.expose_headers = expose_headers;
    this.max_age_seconds = max_age_seconds;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['allowed_methods'] = this.allowed_methods;
    ih['allowed_origins'] = this.allowed_origins;
    if (this.allowed_headers !== null) {
      ih['allowed_headers'] = this.allowed_headers;
    }
    if (this.expose_headers !== null) {
      ih['expose_headers'] = this.expose_headers;
    }
    if (this.max_age_seconds !== null) {
      ih['max_age_seconds'] = this.max_age_seconds;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_cors_rule_466';
  }
}

export class Aws_s3_bucket_inventory implements PcoreValue {
  readonly bucket: string;
  readonly destination: Aws_s3_bucket_inventory_destination_488[];
  readonly included_object_versions: string;
  readonly name: string;
  readonly schedule: Aws_s3_bucket_inventory_schedule_494[];
  readonly aws_s3_bucket_inventory_id: string|null;
  readonly enabled: boolean|null;
  readonly filter: Aws_s3_bucket_inventory_filter_493[]|null;
  readonly optional_fields: string[]|null;

  constructor({
    bucket,
    destination,
    included_object_versions,
    name,
    schedule,
    aws_s3_bucket_inventory_id = null,
    enabled = null,
    filter = null,
    optional_fields = null
  }: {
    bucket: string,
    destination: Aws_s3_bucket_inventory_destination_488[],
    included_object_versions: string,
    name: string,
    schedule: Aws_s3_bucket_inventory_schedule_494[],
    aws_s3_bucket_inventory_id?: string|null,
    enabled?: boolean|null,
    filter?: Aws_s3_bucket_inventory_filter_493[]|null,
    optional_fields?: string[]|null
  }) {
    this.bucket = bucket;
    this.destination = destination;
    this.included_object_versions = included_object_versions;
    this.name = name;
    this.schedule = schedule;
    this.aws_s3_bucket_inventory_id = aws_s3_bucket_inventory_id;
    this.enabled = enabled;
    this.filter = filter;
    this.optional_fields = optional_fields;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    ih['destination'] = this.destination;
    ih['included_object_versions'] = this.included_object_versions;
    ih['name'] = this.name;
    ih['schedule'] = this.schedule;
    if (this.aws_s3_bucket_inventory_id !== null) {
      ih['aws_s3_bucket_inventory_id'] = this.aws_s3_bucket_inventory_id;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.filter !== null) {
      ih['filter'] = this.filter;
    }
    if (this.optional_fields !== null) {
      ih['optional_fields'] = this.optional_fields;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventory';
  }
}

export class Aws_s3_bucket_inventoryHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventoryHandler';
  }
}

export class Aws_s3_bucket_inventory_destination_488 implements PcoreValue {
  readonly bucket: Aws_s3_bucket_inventory_destination_488_bucket_489[];

  constructor({
    bucket
  }: {
    bucket: Aws_s3_bucket_inventory_destination_488_bucket_489[]
  }) {
    this.bucket = bucket;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventory_destination_488';
  }
}

export class Aws_s3_bucket_inventory_destination_488_bucket_489 implements PcoreValue {
  readonly bucket_arn: string;
  readonly format: string;
  readonly account_id: string|null;
  readonly encryption: Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490[]|null;
  readonly prefix: string|null;

  constructor({
    bucket_arn,
    format,
    account_id = null,
    encryption = null,
    prefix = null
  }: {
    bucket_arn: string,
    format: string,
    account_id?: string|null,
    encryption?: Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490[]|null,
    prefix?: string|null
  }) {
    this.bucket_arn = bucket_arn;
    this.format = format;
    this.account_id = account_id;
    this.encryption = encryption;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_arn'] = this.bucket_arn;
    ih['format'] = this.format;
    if (this.account_id !== null) {
      ih['account_id'] = this.account_id;
    }
    if (this.encryption !== null) {
      ih['encryption'] = this.encryption;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventory_destination_488_bucket_489';
  }
}

export class Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490 implements PcoreValue {
  readonly sse_kms: Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_kms_491[]|null;
  readonly sse_s3: Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_s3_492[]|null;

  constructor({
    sse_kms = null,
    sse_s3 = null
  }: {
    sse_kms?: Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_kms_491[]|null,
    sse_s3?: Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_s3_492[]|null
  }) {
    this.sse_kms = sse_kms;
    this.sse_s3 = sse_s3;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.sse_kms !== null) {
      ih['sse_kms'] = this.sse_kms;
    }
    if (this.sse_s3 !== null) {
      ih['sse_s3'] = this.sse_s3;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490';
  }
}

export class Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_kms_491 implements PcoreValue {
  readonly key_id: string;

  constructor({
    key_id
  }: {
    key_id: string
  }) {
    this.key_id = key_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key_id'] = this.key_id;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_kms_491';
  }
}

export class Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_s3_492 implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventory_destination_488_bucket_489_encryption_490_sse_s3_492';
  }
}

export class Aws_s3_bucket_inventory_filter_493 implements PcoreValue {
  readonly prefix: string|null;

  constructor({
    prefix = null
  }: {
    prefix?: string|null
  }) {
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventory_filter_493';
  }
}

export class Aws_s3_bucket_inventory_schedule_494 implements PcoreValue {
  readonly frequency: string;

  constructor({
    frequency
  }: {
    frequency: string
  }) {
    this.frequency = frequency;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['frequency'] = this.frequency;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_inventory_schedule_494';
  }
}

export class Aws_s3_bucket_lifecycle_rule_467 implements PcoreValue {
  readonly enabled: boolean;
  readonly abort_incomplete_multipart_upload_days: number|null;
  readonly expiration: Aws_s3_bucket_lifecycle_rule_467_expiration_468[]|null;
  readonly id: string|null;
  readonly noncurrent_version_expiration: Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_expiration_469[]|null;
  readonly noncurrent_version_transition: Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_transition_470[]|null;
  readonly prefix: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly transition: Aws_s3_bucket_lifecycle_rule_467_transition_471[]|null;

  constructor({
    enabled,
    abort_incomplete_multipart_upload_days = null,
    expiration = null,
    id = null,
    noncurrent_version_expiration = null,
    noncurrent_version_transition = null,
    prefix = null,
    tags = null,
    transition = null
  }: {
    enabled: boolean,
    abort_incomplete_multipart_upload_days?: number|null,
    expiration?: Aws_s3_bucket_lifecycle_rule_467_expiration_468[]|null,
    id?: string|null,
    noncurrent_version_expiration?: Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_expiration_469[]|null,
    noncurrent_version_transition?: Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_transition_470[]|null,
    prefix?: string|null,
    tags?: {[s: string]: string}|null,
    transition?: Aws_s3_bucket_lifecycle_rule_467_transition_471[]|null
  }) {
    this.enabled = enabled;
    this.abort_incomplete_multipart_upload_days = abort_incomplete_multipart_upload_days;
    this.expiration = expiration;
    this.id = id;
    this.noncurrent_version_expiration = noncurrent_version_expiration;
    this.noncurrent_version_transition = noncurrent_version_transition;
    this.prefix = prefix;
    this.tags = tags;
    this.transition = transition;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['enabled'] = this.enabled;
    if (this.abort_incomplete_multipart_upload_days !== null) {
      ih['abort_incomplete_multipart_upload_days'] = this.abort_incomplete_multipart_upload_days;
    }
    if (this.expiration !== null) {
      ih['expiration'] = this.expiration;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.noncurrent_version_expiration !== null) {
      ih['noncurrent_version_expiration'] = this.noncurrent_version_expiration;
    }
    if (this.noncurrent_version_transition !== null) {
      ih['noncurrent_version_transition'] = this.noncurrent_version_transition;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.transition !== null) {
      ih['transition'] = this.transition;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_lifecycle_rule_467';
  }
}

export class Aws_s3_bucket_lifecycle_rule_467_expiration_468 implements PcoreValue {
  readonly date: string|null;
  readonly days: number|null;
  readonly expired_object_delete_marker: boolean|null;

  constructor({
    date = null,
    days = null,
    expired_object_delete_marker = null
  }: {
    date?: string|null,
    days?: number|null,
    expired_object_delete_marker?: boolean|null
  }) {
    this.date = date;
    this.days = days;
    this.expired_object_delete_marker = expired_object_delete_marker;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.date !== null) {
      ih['date'] = this.date;
    }
    if (this.days !== null) {
      ih['days'] = this.days;
    }
    if (this.expired_object_delete_marker !== null) {
      ih['expired_object_delete_marker'] = this.expired_object_delete_marker;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_lifecycle_rule_467_expiration_468';
  }
}

export class Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_expiration_469 implements PcoreValue {
  readonly days: number|null;

  constructor({
    days = null
  }: {
    days?: number|null
  }) {
    this.days = days;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.days !== null) {
      ih['days'] = this.days;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_expiration_469';
  }
}

export class Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_transition_470 implements PcoreValue {
  readonly storage_class: string;
  readonly days: number|null;

  constructor({
    storage_class,
    days = null
  }: {
    storage_class: string,
    days?: number|null
  }) {
    this.storage_class = storage_class;
    this.days = days;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['storage_class'] = this.storage_class;
    if (this.days !== null) {
      ih['days'] = this.days;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_lifecycle_rule_467_noncurrent_version_transition_470';
  }
}

export class Aws_s3_bucket_lifecycle_rule_467_transition_471 implements PcoreValue {
  readonly storage_class: string;
  readonly date: string|null;
  readonly days: number|null;

  constructor({
    storage_class,
    date = null,
    days = null
  }: {
    storage_class: string,
    date?: string|null,
    days?: number|null
  }) {
    this.storage_class = storage_class;
    this.date = date;
    this.days = days;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['storage_class'] = this.storage_class;
    if (this.date !== null) {
      ih['date'] = this.date;
    }
    if (this.days !== null) {
      ih['days'] = this.days;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_lifecycle_rule_467_transition_471';
  }
}

export class Aws_s3_bucket_logging_472 implements PcoreValue {
  readonly target_bucket: string;
  readonly target_prefix: string|null;

  constructor({
    target_bucket,
    target_prefix = null
  }: {
    target_bucket: string,
    target_prefix?: string|null
  }) {
    this.target_bucket = target_bucket;
    this.target_prefix = target_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['target_bucket'] = this.target_bucket;
    if (this.target_prefix !== null) {
      ih['target_prefix'] = this.target_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_logging_472';
  }
}

export class Aws_s3_bucket_metric implements PcoreValue {
  readonly bucket: string;
  readonly name: string;
  readonly aws_s3_bucket_metric_id: string|null;
  readonly filter: Aws_s3_bucket_metric_filter_495[]|null;

  constructor({
    bucket,
    name,
    aws_s3_bucket_metric_id = null,
    filter = null
  }: {
    bucket: string,
    name: string,
    aws_s3_bucket_metric_id?: string|null,
    filter?: Aws_s3_bucket_metric_filter_495[]|null
  }) {
    this.bucket = bucket;
    this.name = name;
    this.aws_s3_bucket_metric_id = aws_s3_bucket_metric_id;
    this.filter = filter;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    ih['name'] = this.name;
    if (this.aws_s3_bucket_metric_id !== null) {
      ih['aws_s3_bucket_metric_id'] = this.aws_s3_bucket_metric_id;
    }
    if (this.filter !== null) {
      ih['filter'] = this.filter;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_metric';
  }
}

export class Aws_s3_bucket_metricHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_metricHandler';
  }
}

export class Aws_s3_bucket_metric_filter_495 implements PcoreValue {
  readonly prefix: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    prefix = null,
    tags = null
  }: {
    prefix?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.prefix = prefix;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_metric_filter_495';
  }
}

export class Aws_s3_bucket_notification implements PcoreValue {
  readonly bucket: string;
  readonly aws_s3_bucket_notification_id: string|null;
  readonly lambda_function: Aws_s3_bucket_notification_lambda_function_496[]|null;
  readonly queue: Aws_s3_bucket_notification_queue_497[]|null;
  readonly topic: Aws_s3_bucket_notification_topic_498[]|null;

  constructor({
    bucket,
    aws_s3_bucket_notification_id = null,
    lambda_function = null,
    queue = null,
    topic = null
  }: {
    bucket: string,
    aws_s3_bucket_notification_id?: string|null,
    lambda_function?: Aws_s3_bucket_notification_lambda_function_496[]|null,
    queue?: Aws_s3_bucket_notification_queue_497[]|null,
    topic?: Aws_s3_bucket_notification_topic_498[]|null
  }) {
    this.bucket = bucket;
    this.aws_s3_bucket_notification_id = aws_s3_bucket_notification_id;
    this.lambda_function = lambda_function;
    this.queue = queue;
    this.topic = topic;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    if (this.aws_s3_bucket_notification_id !== null) {
      ih['aws_s3_bucket_notification_id'] = this.aws_s3_bucket_notification_id;
    }
    if (this.lambda_function !== null) {
      ih['lambda_function'] = this.lambda_function;
    }
    if (this.queue !== null) {
      ih['queue'] = this.queue;
    }
    if (this.topic !== null) {
      ih['topic'] = this.topic;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_notification';
  }
}

export class Aws_s3_bucket_notificationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_notificationHandler';
  }
}

export class Aws_s3_bucket_notification_lambda_function_496 implements PcoreValue {
  readonly events: string[];
  readonly filter_prefix: string|null;
  readonly filter_suffix: string|null;
  readonly id: string|null;
  readonly lambda_function_arn: string|null;

  constructor({
    events,
    filter_prefix = null,
    filter_suffix = null,
    id = null,
    lambda_function_arn = null
  }: {
    events: string[],
    filter_prefix?: string|null,
    filter_suffix?: string|null,
    id?: string|null,
    lambda_function_arn?: string|null
  }) {
    this.events = events;
    this.filter_prefix = filter_prefix;
    this.filter_suffix = filter_suffix;
    this.id = id;
    this.lambda_function_arn = lambda_function_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['events'] = this.events;
    if (this.filter_prefix !== null) {
      ih['filter_prefix'] = this.filter_prefix;
    }
    if (this.filter_suffix !== null) {
      ih['filter_suffix'] = this.filter_suffix;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.lambda_function_arn !== null) {
      ih['lambda_function_arn'] = this.lambda_function_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_notification_lambda_function_496';
  }
}

export class Aws_s3_bucket_notification_queue_497 implements PcoreValue {
  readonly events: string[];
  readonly queue_arn: string;
  readonly filter_prefix: string|null;
  readonly filter_suffix: string|null;
  readonly id: string|null;

  constructor({
    events,
    queue_arn,
    filter_prefix = null,
    filter_suffix = null,
    id = null
  }: {
    events: string[],
    queue_arn: string,
    filter_prefix?: string|null,
    filter_suffix?: string|null,
    id?: string|null
  }) {
    this.events = events;
    this.queue_arn = queue_arn;
    this.filter_prefix = filter_prefix;
    this.filter_suffix = filter_suffix;
    this.id = id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['events'] = this.events;
    ih['queue_arn'] = this.queue_arn;
    if (this.filter_prefix !== null) {
      ih['filter_prefix'] = this.filter_prefix;
    }
    if (this.filter_suffix !== null) {
      ih['filter_suffix'] = this.filter_suffix;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_notification_queue_497';
  }
}

export class Aws_s3_bucket_notification_topic_498 implements PcoreValue {
  readonly events: string[];
  readonly topic_arn: string;
  readonly filter_prefix: string|null;
  readonly filter_suffix: string|null;
  readonly id: string|null;

  constructor({
    events,
    topic_arn,
    filter_prefix = null,
    filter_suffix = null,
    id = null
  }: {
    events: string[],
    topic_arn: string,
    filter_prefix?: string|null,
    filter_suffix?: string|null,
    id?: string|null
  }) {
    this.events = events;
    this.topic_arn = topic_arn;
    this.filter_prefix = filter_prefix;
    this.filter_suffix = filter_suffix;
    this.id = id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['events'] = this.events;
    ih['topic_arn'] = this.topic_arn;
    if (this.filter_prefix !== null) {
      ih['filter_prefix'] = this.filter_prefix;
    }
    if (this.filter_suffix !== null) {
      ih['filter_suffix'] = this.filter_suffix;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_notification_topic_498';
  }
}

export class Aws_s3_bucket_object implements PcoreValue {
  readonly bucket: string;
  readonly key: string;
  readonly aws_s3_bucket_object_id: string|null;
  readonly acl: string|null;
  readonly cache_control: string|null;
  readonly content: string|null;
  readonly content_base64: string|null;
  readonly content_disposition: string|null;
  readonly content_encoding: string|null;
  readonly content_language: string|null;
  readonly content_type: string|null;
  readonly etag: string|null;
  readonly kms_key_id: string|null;
  readonly server_side_encryption: string|null;
  readonly source: string|null;
  readonly storage_class: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly version_id: string|null;
  readonly website_redirect: string|null;

  constructor({
    bucket,
    key,
    aws_s3_bucket_object_id = null,
    acl = null,
    cache_control = null,
    content = null,
    content_base64 = null,
    content_disposition = null,
    content_encoding = null,
    content_language = null,
    content_type = null,
    etag = null,
    kms_key_id = null,
    server_side_encryption = null,
    source = null,
    storage_class = null,
    tags = null,
    version_id = null,
    website_redirect = null
  }: {
    bucket: string,
    key: string,
    aws_s3_bucket_object_id?: string|null,
    acl?: string|null,
    cache_control?: string|null,
    content?: string|null,
    content_base64?: string|null,
    content_disposition?: string|null,
    content_encoding?: string|null,
    content_language?: string|null,
    content_type?: string|null,
    etag?: string|null,
    kms_key_id?: string|null,
    server_side_encryption?: string|null,
    source?: string|null,
    storage_class?: string|null,
    tags?: {[s: string]: string}|null,
    version_id?: string|null,
    website_redirect?: string|null
  }) {
    this.bucket = bucket;
    this.key = key;
    this.aws_s3_bucket_object_id = aws_s3_bucket_object_id;
    this.acl = acl;
    this.cache_control = cache_control;
    this.content = content;
    this.content_base64 = content_base64;
    this.content_disposition = content_disposition;
    this.content_encoding = content_encoding;
    this.content_language = content_language;
    this.content_type = content_type;
    this.etag = etag;
    this.kms_key_id = kms_key_id;
    this.server_side_encryption = server_side_encryption;
    this.source = source;
    this.storage_class = storage_class;
    this.tags = tags;
    this.version_id = version_id;
    this.website_redirect = website_redirect;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    ih['key'] = this.key;
    if (this.aws_s3_bucket_object_id !== null) {
      ih['aws_s3_bucket_object_id'] = this.aws_s3_bucket_object_id;
    }
    if (this.acl !== null) {
      ih['acl'] = this.acl;
    }
    if (this.cache_control !== null) {
      ih['cache_control'] = this.cache_control;
    }
    if (this.content !== null) {
      ih['content'] = this.content;
    }
    if (this.content_base64 !== null) {
      ih['content_base64'] = this.content_base64;
    }
    if (this.content_disposition !== null) {
      ih['content_disposition'] = this.content_disposition;
    }
    if (this.content_encoding !== null) {
      ih['content_encoding'] = this.content_encoding;
    }
    if (this.content_language !== null) {
      ih['content_language'] = this.content_language;
    }
    if (this.content_type !== null) {
      ih['content_type'] = this.content_type;
    }
    if (this.etag !== null) {
      ih['etag'] = this.etag;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.server_side_encryption !== null) {
      ih['server_side_encryption'] = this.server_side_encryption;
    }
    if (this.source !== null) {
      ih['source'] = this.source;
    }
    if (this.storage_class !== null) {
      ih['storage_class'] = this.storage_class;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.version_id !== null) {
      ih['version_id'] = this.version_id;
    }
    if (this.website_redirect !== null) {
      ih['website_redirect'] = this.website_redirect;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_object';
  }
}

export class Aws_s3_bucket_objectHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_objectHandler';
  }
}

export class Aws_s3_bucket_object_lock_configuration_473 implements PcoreValue {
  readonly object_lock_enabled: string;
  readonly rule: Aws_s3_bucket_object_lock_configuration_473_rule_474[]|null;

  constructor({
    object_lock_enabled,
    rule = null
  }: {
    object_lock_enabled: string,
    rule?: Aws_s3_bucket_object_lock_configuration_473_rule_474[]|null
  }) {
    this.object_lock_enabled = object_lock_enabled;
    this.rule = rule;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['object_lock_enabled'] = this.object_lock_enabled;
    if (this.rule !== null) {
      ih['rule'] = this.rule;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_object_lock_configuration_473';
  }
}

export class Aws_s3_bucket_object_lock_configuration_473_rule_474 implements PcoreValue {
  readonly default_retention: Aws_s3_bucket_object_lock_configuration_473_rule_474_default_retention_475[];

  constructor({
    default_retention
  }: {
    default_retention: Aws_s3_bucket_object_lock_configuration_473_rule_474_default_retention_475[]
  }) {
    this.default_retention = default_retention;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_retention'] = this.default_retention;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_object_lock_configuration_473_rule_474';
  }
}

export class Aws_s3_bucket_object_lock_configuration_473_rule_474_default_retention_475 implements PcoreValue {
  readonly mode: string;
  readonly days: number|null;
  readonly years: number|null;

  constructor({
    mode,
    days = null,
    years = null
  }: {
    mode: string,
    days?: number|null,
    years?: number|null
  }) {
    this.mode = mode;
    this.days = days;
    this.years = years;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['mode'] = this.mode;
    if (this.days !== null) {
      ih['days'] = this.days;
    }
    if (this.years !== null) {
      ih['years'] = this.years;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_object_lock_configuration_473_rule_474_default_retention_475';
  }
}

export class Aws_s3_bucket_policy implements PcoreValue {
  readonly bucket: string;
  readonly policy: string;
  readonly aws_s3_bucket_policy_id: string|null;

  constructor({
    bucket,
    policy,
    aws_s3_bucket_policy_id = null
  }: {
    bucket: string,
    policy: string,
    aws_s3_bucket_policy_id?: string|null
  }) {
    this.bucket = bucket;
    this.policy = policy;
    this.aws_s3_bucket_policy_id = aws_s3_bucket_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    ih['policy'] = this.policy;
    if (this.aws_s3_bucket_policy_id !== null) {
      ih['aws_s3_bucket_policy_id'] = this.aws_s3_bucket_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_policy';
  }
}

export class Aws_s3_bucket_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_policyHandler';
  }
}

export class Aws_s3_bucket_public_access_block implements PcoreValue {
  readonly bucket: string;
  readonly aws_s3_bucket_public_access_block_id: string|null;
  readonly block_public_acls: boolean|null;
  readonly block_public_policy: boolean|null;
  readonly ignore_public_acls: boolean|null;
  readonly restrict_public_buckets: boolean|null;

  constructor({
    bucket,
    aws_s3_bucket_public_access_block_id = null,
    block_public_acls = null,
    block_public_policy = null,
    ignore_public_acls = null,
    restrict_public_buckets = null
  }: {
    bucket: string,
    aws_s3_bucket_public_access_block_id?: string|null,
    block_public_acls?: boolean|null,
    block_public_policy?: boolean|null,
    ignore_public_acls?: boolean|null,
    restrict_public_buckets?: boolean|null
  }) {
    this.bucket = bucket;
    this.aws_s3_bucket_public_access_block_id = aws_s3_bucket_public_access_block_id;
    this.block_public_acls = block_public_acls;
    this.block_public_policy = block_public_policy;
    this.ignore_public_acls = ignore_public_acls;
    this.restrict_public_buckets = restrict_public_buckets;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    if (this.aws_s3_bucket_public_access_block_id !== null) {
      ih['aws_s3_bucket_public_access_block_id'] = this.aws_s3_bucket_public_access_block_id;
    }
    if (this.block_public_acls !== null) {
      ih['block_public_acls'] = this.block_public_acls;
    }
    if (this.block_public_policy !== null) {
      ih['block_public_policy'] = this.block_public_policy;
    }
    if (this.ignore_public_acls !== null) {
      ih['ignore_public_acls'] = this.ignore_public_acls;
    }
    if (this.restrict_public_buckets !== null) {
      ih['restrict_public_buckets'] = this.restrict_public_buckets;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_public_access_block';
  }
}

export class Aws_s3_bucket_public_access_blockHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_public_access_blockHandler';
  }
}

export class Aws_s3_bucket_replication_configuration_476 implements PcoreValue {
  readonly role: string;
  readonly rules: Aws_s3_bucket_replication_configuration_476_rules_477[];

  constructor({
    role,
    rules
  }: {
    role: string,
    rules: Aws_s3_bucket_replication_configuration_476_rules_477[]
  }) {
    this.role = role;
    this.rules = rules;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['role'] = this.role;
    ih['rules'] = this.rules;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_replication_configuration_476';
  }
}

export class Aws_s3_bucket_replication_configuration_476_rules_477 implements PcoreValue {
  readonly destination: Aws_s3_bucket_replication_configuration_476_rules_477_destination_478[];
  readonly status: string;
  readonly filter: Aws_s3_bucket_replication_configuration_476_rules_477_filter_480[]|null;
  readonly id: string|null;
  readonly prefix: string|null;
  readonly priority: number|null;
  readonly source_selection_criteria: Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481[]|null;

  constructor({
    destination,
    status,
    filter = null,
    id = null,
    prefix = null,
    priority = null,
    source_selection_criteria = null
  }: {
    destination: Aws_s3_bucket_replication_configuration_476_rules_477_destination_478[],
    status: string,
    filter?: Aws_s3_bucket_replication_configuration_476_rules_477_filter_480[]|null,
    id?: string|null,
    prefix?: string|null,
    priority?: number|null,
    source_selection_criteria?: Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481[]|null
  }) {
    this.destination = destination;
    this.status = status;
    this.filter = filter;
    this.id = id;
    this.prefix = prefix;
    this.priority = priority;
    this.source_selection_criteria = source_selection_criteria;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination'] = this.destination;
    ih['status'] = this.status;
    if (this.filter !== null) {
      ih['filter'] = this.filter;
    }
    if (this.id !== null) {
      ih['id'] = this.id;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    if (this.priority !== null) {
      ih['priority'] = this.priority;
    }
    if (this.source_selection_criteria !== null) {
      ih['source_selection_criteria'] = this.source_selection_criteria;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_replication_configuration_476_rules_477';
  }
}

export class Aws_s3_bucket_replication_configuration_476_rules_477_destination_478 implements PcoreValue {
  readonly bucket: string;
  readonly access_control_translation: Aws_s3_bucket_replication_configuration_476_rules_477_destination_478_access_control_translation_479[]|null;
  readonly account_id: string|null;
  readonly replica_kms_key_id: string|null;
  readonly storage_class: string|null;

  constructor({
    bucket,
    access_control_translation = null,
    account_id = null,
    replica_kms_key_id = null,
    storage_class = null
  }: {
    bucket: string,
    access_control_translation?: Aws_s3_bucket_replication_configuration_476_rules_477_destination_478_access_control_translation_479[]|null,
    account_id?: string|null,
    replica_kms_key_id?: string|null,
    storage_class?: string|null
  }) {
    this.bucket = bucket;
    this.access_control_translation = access_control_translation;
    this.account_id = account_id;
    this.replica_kms_key_id = replica_kms_key_id;
    this.storage_class = storage_class;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    if (this.access_control_translation !== null) {
      ih['access_control_translation'] = this.access_control_translation;
    }
    if (this.account_id !== null) {
      ih['account_id'] = this.account_id;
    }
    if (this.replica_kms_key_id !== null) {
      ih['replica_kms_key_id'] = this.replica_kms_key_id;
    }
    if (this.storage_class !== null) {
      ih['storage_class'] = this.storage_class;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_replication_configuration_476_rules_477_destination_478';
  }
}

export class Aws_s3_bucket_replication_configuration_476_rules_477_destination_478_access_control_translation_479 implements PcoreValue {
  readonly owner: string;

  constructor({
    owner
  }: {
    owner: string
  }) {
    this.owner = owner;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['owner'] = this.owner;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_replication_configuration_476_rules_477_destination_478_access_control_translation_479';
  }
}

export class Aws_s3_bucket_replication_configuration_476_rules_477_filter_480 implements PcoreValue {
  readonly prefix: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    prefix = null,
    tags = null
  }: {
    prefix?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.prefix = prefix;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_replication_configuration_476_rules_477_filter_480';
  }
}

export class Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481 implements PcoreValue {
  readonly sse_kms_encrypted_objects: Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481_sse_kms_encrypted_objects_482[]|null;

  constructor({
    sse_kms_encrypted_objects = null
  }: {
    sse_kms_encrypted_objects?: Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481_sse_kms_encrypted_objects_482[]|null
  }) {
    this.sse_kms_encrypted_objects = sse_kms_encrypted_objects;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.sse_kms_encrypted_objects !== null) {
      ih['sse_kms_encrypted_objects'] = this.sse_kms_encrypted_objects;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481';
  }
}

export class Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481_sse_kms_encrypted_objects_482 implements PcoreValue {
  readonly enabled: boolean;

  constructor({
    enabled
  }: {
    enabled: boolean
  }) {
    this.enabled = enabled;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['enabled'] = this.enabled;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_replication_configuration_476_rules_477_source_selection_criteria_481_sse_kms_encrypted_objects_482';
  }
}

export class Aws_s3_bucket_server_side_encryption_configuration_483 implements PcoreValue {
  readonly rule: Aws_s3_bucket_server_side_encryption_configuration_483_rule_484[];

  constructor({
    rule
  }: {
    rule: Aws_s3_bucket_server_side_encryption_configuration_483_rule_484[]
  }) {
    this.rule = rule;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['rule'] = this.rule;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_server_side_encryption_configuration_483';
  }
}

export class Aws_s3_bucket_server_side_encryption_configuration_483_rule_484 implements PcoreValue {
  readonly apply_server_side_encryption_by_default: Aws_s3_bucket_server_side_encryption_configuration_483_rule_484_apply_server_side_encryption_by_default_485[];

  constructor({
    apply_server_side_encryption_by_default
  }: {
    apply_server_side_encryption_by_default: Aws_s3_bucket_server_side_encryption_configuration_483_rule_484_apply_server_side_encryption_by_default_485[]
  }) {
    this.apply_server_side_encryption_by_default = apply_server_side_encryption_by_default;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['apply_server_side_encryption_by_default'] = this.apply_server_side_encryption_by_default;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_server_side_encryption_configuration_483_rule_484';
  }
}

export class Aws_s3_bucket_server_side_encryption_configuration_483_rule_484_apply_server_side_encryption_by_default_485 implements PcoreValue {
  readonly sse_algorithm: string;
  readonly kms_master_key_id: string|null;

  constructor({
    sse_algorithm,
    kms_master_key_id = null
  }: {
    sse_algorithm: string,
    kms_master_key_id?: string|null
  }) {
    this.sse_algorithm = sse_algorithm;
    this.kms_master_key_id = kms_master_key_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['sse_algorithm'] = this.sse_algorithm;
    if (this.kms_master_key_id !== null) {
      ih['kms_master_key_id'] = this.kms_master_key_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_server_side_encryption_configuration_483_rule_484_apply_server_side_encryption_by_default_485';
  }
}

export class Aws_s3_bucket_versioning_486 implements PcoreValue {
  readonly enabled: boolean|null;
  readonly mfa_delete: boolean|null;

  constructor({
    enabled = null,
    mfa_delete = null
  }: {
    enabled?: boolean|null,
    mfa_delete?: boolean|null
  }) {
    this.enabled = enabled;
    this.mfa_delete = mfa_delete;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.mfa_delete !== null) {
      ih['mfa_delete'] = this.mfa_delete;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_versioning_486';
  }
}

export class Aws_s3_bucket_website_487 implements PcoreValue {
  readonly error_document: string|null;
  readonly index_document: string|null;
  readonly redirect_all_requests_to: string|null;
  readonly routing_rules: string|null;

  constructor({
    error_document = null,
    index_document = null,
    redirect_all_requests_to = null,
    routing_rules = null
  }: {
    error_document?: string|null,
    index_document?: string|null,
    redirect_all_requests_to?: string|null,
    routing_rules?: string|null
  }) {
    this.error_document = error_document;
    this.index_document = index_document;
    this.redirect_all_requests_to = redirect_all_requests_to;
    this.routing_rules = routing_rules;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.error_document !== null) {
      ih['error_document'] = this.error_document;
    }
    if (this.index_document !== null) {
      ih['index_document'] = this.index_document;
    }
    if (this.redirect_all_requests_to !== null) {
      ih['redirect_all_requests_to'] = this.redirect_all_requests_to;
    }
    if (this.routing_rules !== null) {
      ih['routing_rules'] = this.routing_rules;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_s3_bucket_website_487';
  }
}

export class Aws_sagemaker_notebook_instance implements PcoreValue {
  readonly instance_type: string;
  readonly name: string;
  readonly role_arn: string;
  readonly aws_sagemaker_notebook_instance_id: string|null;
  readonly arn: string|null;
  readonly kms_key_id: string|null;
  readonly security_groups: string[]|null;
  readonly subnet_id: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    instance_type,
    name,
    role_arn,
    aws_sagemaker_notebook_instance_id = null,
    arn = null,
    kms_key_id = null,
    security_groups = null,
    subnet_id = null,
    tags = null
  }: {
    instance_type: string,
    name: string,
    role_arn: string,
    aws_sagemaker_notebook_instance_id?: string|null,
    arn?: string|null,
    kms_key_id?: string|null,
    security_groups?: string[]|null,
    subnet_id?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.instance_type = instance_type;
    this.name = name;
    this.role_arn = role_arn;
    this.aws_sagemaker_notebook_instance_id = aws_sagemaker_notebook_instance_id;
    this.arn = arn;
    this.kms_key_id = kms_key_id;
    this.security_groups = security_groups;
    this.subnet_id = subnet_id;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['instance_type'] = this.instance_type;
    ih['name'] = this.name;
    ih['role_arn'] = this.role_arn;
    if (this.aws_sagemaker_notebook_instance_id !== null) {
      ih['aws_sagemaker_notebook_instance_id'] = this.aws_sagemaker_notebook_instance_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sagemaker_notebook_instance';
  }
}

export class Aws_sagemaker_notebook_instanceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sagemaker_notebook_instanceHandler';
  }
}

export class Aws_secretsmanager_secret implements PcoreValue {
  readonly aws_secretsmanager_secret_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly kms_key_id: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly policy: string|null;
  readonly recovery_window_in_days: number|null;
  readonly rotation_enabled: boolean|null;
  readonly rotation_lambda_arn: string|null;
  readonly rotation_rules: Aws_secretsmanager_secret_rotation_rules_499[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    aws_secretsmanager_secret_id = null,
    arn = null,
    description = null,
    kms_key_id = null,
    name = null,
    name_prefix = null,
    policy = null,
    recovery_window_in_days = null,
    rotation_enabled = null,
    rotation_lambda_arn = null,
    rotation_rules = null,
    tags = null
  }: {
    aws_secretsmanager_secret_id?: string|null,
    arn?: string|null,
    description?: string|null,
    kms_key_id?: string|null,
    name?: string|null,
    name_prefix?: string|null,
    policy?: string|null,
    recovery_window_in_days?: number|null,
    rotation_enabled?: boolean|null,
    rotation_lambda_arn?: string|null,
    rotation_rules?: Aws_secretsmanager_secret_rotation_rules_499[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.aws_secretsmanager_secret_id = aws_secretsmanager_secret_id;
    this.arn = arn;
    this.description = description;
    this.kms_key_id = kms_key_id;
    this.name = name;
    this.name_prefix = name_prefix;
    this.policy = policy;
    this.recovery_window_in_days = recovery_window_in_days;
    this.rotation_enabled = rotation_enabled;
    this.rotation_lambda_arn = rotation_lambda_arn;
    this.rotation_rules = rotation_rules;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_secretsmanager_secret_id !== null) {
      ih['aws_secretsmanager_secret_id'] = this.aws_secretsmanager_secret_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.kms_key_id !== null) {
      ih['kms_key_id'] = this.kms_key_id;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.policy !== null) {
      ih['policy'] = this.policy;
    }
    if (this.recovery_window_in_days !== null) {
      ih['recovery_window_in_days'] = this.recovery_window_in_days;
    }
    if (this.rotation_enabled !== null) {
      ih['rotation_enabled'] = this.rotation_enabled;
    }
    if (this.rotation_lambda_arn !== null) {
      ih['rotation_lambda_arn'] = this.rotation_lambda_arn;
    }
    if (this.rotation_rules !== null) {
      ih['rotation_rules'] = this.rotation_rules;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_secretsmanager_secret';
  }
}

export class Aws_secretsmanager_secretHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_secretsmanager_secretHandler';
  }
}

export class Aws_secretsmanager_secret_rotation_rules_499 implements PcoreValue {
  readonly automatically_after_days: number;

  constructor({
    automatically_after_days
  }: {
    automatically_after_days: number
  }) {
    this.automatically_after_days = automatically_after_days;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['automatically_after_days'] = this.automatically_after_days;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_secretsmanager_secret_rotation_rules_499';
  }
}

export class Aws_secretsmanager_secret_version implements PcoreValue {
  readonly secret_id: string;
  readonly aws_secretsmanager_secret_version_id: string|null;
  readonly arn: string|null;
  readonly secret_binary: string|null;
  readonly secret_string: string|null;
  readonly version_id: string|null;
  readonly version_stages: string[]|null;

  constructor({
    secret_id,
    aws_secretsmanager_secret_version_id = null,
    arn = null,
    secret_binary = null,
    secret_string = null,
    version_id = null,
    version_stages = null
  }: {
    secret_id: string,
    aws_secretsmanager_secret_version_id?: string|null,
    arn?: string|null,
    secret_binary?: string|null,
    secret_string?: string|null,
    version_id?: string|null,
    version_stages?: string[]|null
  }) {
    this.secret_id = secret_id;
    this.aws_secretsmanager_secret_version_id = aws_secretsmanager_secret_version_id;
    this.arn = arn;
    this.secret_binary = secret_binary;
    this.secret_string = secret_string;
    this.version_id = version_id;
    this.version_stages = version_stages;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['secret_id'] = this.secret_id;
    if (this.aws_secretsmanager_secret_version_id !== null) {
      ih['aws_secretsmanager_secret_version_id'] = this.aws_secretsmanager_secret_version_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.secret_binary !== null) {
      ih['secret_binary'] = this.secret_binary;
    }
    if (this.secret_string !== null) {
      ih['secret_string'] = this.secret_string;
    }
    if (this.version_id !== null) {
      ih['version_id'] = this.version_id;
    }
    if (this.version_stages !== null) {
      ih['version_stages'] = this.version_stages;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_secretsmanager_secret_version';
  }
}

export class Aws_secretsmanager_secret_versionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_secretsmanager_secret_versionHandler';
  }
}

export class Aws_security_group implements PcoreValue {
  readonly aws_security_group_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly egress: Aws_security_group_egress_500[]|null;
  readonly ingress: Aws_security_group_ingress_501[]|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly owner_id: string|null;
  readonly revoke_rules_on_delete: boolean|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    aws_security_group_id = null,
    arn = null,
    description = null,
    egress = null,
    ingress = null,
    name = null,
    name_prefix = null,
    owner_id = null,
    revoke_rules_on_delete = null,
    tags = null,
    vpc_id = null
  }: {
    aws_security_group_id?: string|null,
    arn?: string|null,
    description?: string|null,
    egress?: Aws_security_group_egress_500[]|null,
    ingress?: Aws_security_group_ingress_501[]|null,
    name?: string|null,
    name_prefix?: string|null,
    owner_id?: string|null,
    revoke_rules_on_delete?: boolean|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.aws_security_group_id = aws_security_group_id;
    this.arn = arn;
    this.description = description;
    this.egress = egress;
    this.ingress = ingress;
    this.name = name;
    this.name_prefix = name_prefix;
    this.owner_id = owner_id;
    this.revoke_rules_on_delete = revoke_rules_on_delete;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_security_group_id !== null) {
      ih['aws_security_group_id'] = this.aws_security_group_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.egress !== null) {
      ih['egress'] = this.egress;
    }
    if (this.ingress !== null) {
      ih['ingress'] = this.ingress;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.revoke_rules_on_delete !== null) {
      ih['revoke_rules_on_delete'] = this.revoke_rules_on_delete;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_security_group';
  }
}

export class Aws_security_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_security_groupHandler';
  }
}

export class Aws_security_group_egress_500 implements PcoreValue {
  readonly from_port: number;
  readonly protocol: string;
  readonly to_port: number;
  readonly cidr_blocks: string[]|null;
  readonly description: string|null;
  readonly ipv6_cidr_blocks: string[]|null;
  readonly prefix_list_ids: string[]|null;
  readonly security_groups: string[]|null;
  readonly self: boolean|null;

  constructor({
    from_port,
    protocol,
    to_port,
    cidr_blocks = null,
    description = null,
    ipv6_cidr_blocks = null,
    prefix_list_ids = null,
    security_groups = null,
    self = null
  }: {
    from_port: number,
    protocol: string,
    to_port: number,
    cidr_blocks?: string[]|null,
    description?: string|null,
    ipv6_cidr_blocks?: string[]|null,
    prefix_list_ids?: string[]|null,
    security_groups?: string[]|null,
    self?: boolean|null
  }) {
    this.from_port = from_port;
    this.protocol = protocol;
    this.to_port = to_port;
    this.cidr_blocks = cidr_blocks;
    this.description = description;
    this.ipv6_cidr_blocks = ipv6_cidr_blocks;
    this.prefix_list_ids = prefix_list_ids;
    this.security_groups = security_groups;
    this.self = self;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['to_port'] = this.to_port;
    if (this.cidr_blocks !== null) {
      ih['cidr_blocks'] = this.cidr_blocks;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ipv6_cidr_blocks !== null) {
      ih['ipv6_cidr_blocks'] = this.ipv6_cidr_blocks;
    }
    if (this.prefix_list_ids !== null) {
      ih['prefix_list_ids'] = this.prefix_list_ids;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.self !== null) {
      ih['self'] = this.self;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_security_group_egress_500';
  }
}

export class Aws_security_group_ingress_501 implements PcoreValue {
  readonly from_port: number;
  readonly protocol: string;
  readonly to_port: number;
  readonly cidr_blocks: string[]|null;
  readonly description: string|null;
  readonly ipv6_cidr_blocks: string[]|null;
  readonly prefix_list_ids: string[]|null;
  readonly security_groups: string[]|null;
  readonly self: boolean|null;

  constructor({
    from_port,
    protocol,
    to_port,
    cidr_blocks = null,
    description = null,
    ipv6_cidr_blocks = null,
    prefix_list_ids = null,
    security_groups = null,
    self = null
  }: {
    from_port: number,
    protocol: string,
    to_port: number,
    cidr_blocks?: string[]|null,
    description?: string|null,
    ipv6_cidr_blocks?: string[]|null,
    prefix_list_ids?: string[]|null,
    security_groups?: string[]|null,
    self?: boolean|null
  }) {
    this.from_port = from_port;
    this.protocol = protocol;
    this.to_port = to_port;
    this.cidr_blocks = cidr_blocks;
    this.description = description;
    this.ipv6_cidr_blocks = ipv6_cidr_blocks;
    this.prefix_list_ids = prefix_list_ids;
    this.security_groups = security_groups;
    this.self = self;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['to_port'] = this.to_port;
    if (this.cidr_blocks !== null) {
      ih['cidr_blocks'] = this.cidr_blocks;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ipv6_cidr_blocks !== null) {
      ih['ipv6_cidr_blocks'] = this.ipv6_cidr_blocks;
    }
    if (this.prefix_list_ids !== null) {
      ih['prefix_list_ids'] = this.prefix_list_ids;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.self !== null) {
      ih['self'] = this.self;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_security_group_ingress_501';
  }
}

export class Aws_security_group_rule implements PcoreValue {
  readonly from_port: number;
  readonly protocol: string;
  readonly security_group_id: string;
  readonly to_port: number;
  readonly type: string;
  readonly aws_security_group_rule_id: string|null;
  readonly cidr_blocks: string[]|null;
  readonly description: string|null;
  readonly ipv6_cidr_blocks: string[]|null;
  readonly prefix_list_ids: string[]|null;
  readonly self: boolean|null;
  readonly source_security_group_id: string|null;

  constructor({
    from_port,
    protocol,
    security_group_id,
    to_port,
    type,
    aws_security_group_rule_id = null,
    cidr_blocks = null,
    description = null,
    ipv6_cidr_blocks = null,
    prefix_list_ids = null,
    self = null,
    source_security_group_id = null
  }: {
    from_port: number,
    protocol: string,
    security_group_id: string,
    to_port: number,
    type: string,
    aws_security_group_rule_id?: string|null,
    cidr_blocks?: string[]|null,
    description?: string|null,
    ipv6_cidr_blocks?: string[]|null,
    prefix_list_ids?: string[]|null,
    self?: boolean|null,
    source_security_group_id?: string|null
  }) {
    this.from_port = from_port;
    this.protocol = protocol;
    this.security_group_id = security_group_id;
    this.to_port = to_port;
    this.type = type;
    this.aws_security_group_rule_id = aws_security_group_rule_id;
    this.cidr_blocks = cidr_blocks;
    this.description = description;
    this.ipv6_cidr_blocks = ipv6_cidr_blocks;
    this.prefix_list_ids = prefix_list_ids;
    this.self = self;
    this.source_security_group_id = source_security_group_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['from_port'] = this.from_port;
    ih['protocol'] = this.protocol;
    ih['security_group_id'] = this.security_group_id;
    ih['to_port'] = this.to_port;
    ih['type'] = this.type;
    if (this.aws_security_group_rule_id !== null) {
      ih['aws_security_group_rule_id'] = this.aws_security_group_rule_id;
    }
    if (this.cidr_blocks !== null) {
      ih['cidr_blocks'] = this.cidr_blocks;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.ipv6_cidr_blocks !== null) {
      ih['ipv6_cidr_blocks'] = this.ipv6_cidr_blocks;
    }
    if (this.prefix_list_ids !== null) {
      ih['prefix_list_ids'] = this.prefix_list_ids;
    }
    if (this.self !== null) {
      ih['self'] = this.self;
    }
    if (this.source_security_group_id !== null) {
      ih['source_security_group_id'] = this.source_security_group_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_security_group_rule';
  }
}

export class Aws_security_group_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_security_group_ruleHandler';
  }
}

export class Aws_securityhub_account implements PcoreValue {
  readonly aws_securityhub_account_id: string|null;

  constructor({
    aws_securityhub_account_id = null
  }: {
    aws_securityhub_account_id?: string|null
  }) {
    this.aws_securityhub_account_id = aws_securityhub_account_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_securityhub_account_id !== null) {
      ih['aws_securityhub_account_id'] = this.aws_securityhub_account_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_securityhub_account';
  }
}

export class Aws_securityhub_accountHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_securityhub_accountHandler';
  }
}

export class Aws_securityhub_product_subscription implements PcoreValue {
  readonly product_arn: string;
  readonly aws_securityhub_product_subscription_id: string|null;
  readonly arn: string|null;

  constructor({
    product_arn,
    aws_securityhub_product_subscription_id = null,
    arn = null
  }: {
    product_arn: string,
    aws_securityhub_product_subscription_id?: string|null,
    arn?: string|null
  }) {
    this.product_arn = product_arn;
    this.aws_securityhub_product_subscription_id = aws_securityhub_product_subscription_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['product_arn'] = this.product_arn;
    if (this.aws_securityhub_product_subscription_id !== null) {
      ih['aws_securityhub_product_subscription_id'] = this.aws_securityhub_product_subscription_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_securityhub_product_subscription';
  }
}

export class Aws_securityhub_product_subscriptionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_securityhub_product_subscriptionHandler';
  }
}

export class Aws_securityhub_standards_subscription implements PcoreValue {
  readonly standards_arn: string;
  readonly aws_securityhub_standards_subscription_id: string|null;

  constructor({
    standards_arn,
    aws_securityhub_standards_subscription_id = null
  }: {
    standards_arn: string,
    aws_securityhub_standards_subscription_id?: string|null
  }) {
    this.standards_arn = standards_arn;
    this.aws_securityhub_standards_subscription_id = aws_securityhub_standards_subscription_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['standards_arn'] = this.standards_arn;
    if (this.aws_securityhub_standards_subscription_id !== null) {
      ih['aws_securityhub_standards_subscription_id'] = this.aws_securityhub_standards_subscription_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_securityhub_standards_subscription';
  }
}

export class Aws_securityhub_standards_subscriptionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_securityhub_standards_subscriptionHandler';
  }
}

export class Aws_service_discovery_http_namespace implements PcoreValue {
  readonly name: string;
  readonly aws_service_discovery_http_namespace_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;

  constructor({
    name,
    aws_service_discovery_http_namespace_id = null,
    arn = null,
    description = null
  }: {
    name: string,
    aws_service_discovery_http_namespace_id?: string|null,
    arn?: string|null,
    description?: string|null
  }) {
    this.name = name;
    this.aws_service_discovery_http_namespace_id = aws_service_discovery_http_namespace_id;
    this.arn = arn;
    this.description = description;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_service_discovery_http_namespace_id !== null) {
      ih['aws_service_discovery_http_namespace_id'] = this.aws_service_discovery_http_namespace_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_http_namespace';
  }
}

export class Aws_service_discovery_http_namespaceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_http_namespaceHandler';
  }
}

export class Aws_service_discovery_private_dns_namespace implements PcoreValue {
  readonly name: string;
  readonly vpc: string;
  readonly aws_service_discovery_private_dns_namespace_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly hosted_zone: string|null;

  constructor({
    name,
    vpc,
    aws_service_discovery_private_dns_namespace_id = null,
    arn = null,
    description = null,
    hosted_zone = null
  }: {
    name: string,
    vpc: string,
    aws_service_discovery_private_dns_namespace_id?: string|null,
    arn?: string|null,
    description?: string|null,
    hosted_zone?: string|null
  }) {
    this.name = name;
    this.vpc = vpc;
    this.aws_service_discovery_private_dns_namespace_id = aws_service_discovery_private_dns_namespace_id;
    this.arn = arn;
    this.description = description;
    this.hosted_zone = hosted_zone;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['vpc'] = this.vpc;
    if (this.aws_service_discovery_private_dns_namespace_id !== null) {
      ih['aws_service_discovery_private_dns_namespace_id'] = this.aws_service_discovery_private_dns_namespace_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.hosted_zone !== null) {
      ih['hosted_zone'] = this.hosted_zone;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_private_dns_namespace';
  }
}

export class Aws_service_discovery_private_dns_namespaceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_private_dns_namespaceHandler';
  }
}

export class Aws_service_discovery_public_dns_namespace implements PcoreValue {
  readonly name: string;
  readonly aws_service_discovery_public_dns_namespace_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly hosted_zone: string|null;

  constructor({
    name,
    aws_service_discovery_public_dns_namespace_id = null,
    arn = null,
    description = null,
    hosted_zone = null
  }: {
    name: string,
    aws_service_discovery_public_dns_namespace_id?: string|null,
    arn?: string|null,
    description?: string|null,
    hosted_zone?: string|null
  }) {
    this.name = name;
    this.aws_service_discovery_public_dns_namespace_id = aws_service_discovery_public_dns_namespace_id;
    this.arn = arn;
    this.description = description;
    this.hosted_zone = hosted_zone;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_service_discovery_public_dns_namespace_id !== null) {
      ih['aws_service_discovery_public_dns_namespace_id'] = this.aws_service_discovery_public_dns_namespace_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.hosted_zone !== null) {
      ih['hosted_zone'] = this.hosted_zone;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_public_dns_namespace';
  }
}

export class Aws_service_discovery_public_dns_namespaceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_public_dns_namespaceHandler';
  }
}

export class Aws_service_discovery_service implements PcoreValue {
  readonly dns_config: Aws_service_discovery_service_dns_config_502[];
  readonly name: string;
  readonly aws_service_discovery_service_id: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly health_check_config: Aws_service_discovery_service_health_check_config_504[]|null;
  readonly health_check_custom_config: Aws_service_discovery_service_health_check_custom_config_505[]|null;

  constructor({
    dns_config,
    name,
    aws_service_discovery_service_id = null,
    arn = null,
    description = null,
    health_check_config = null,
    health_check_custom_config = null
  }: {
    dns_config: Aws_service_discovery_service_dns_config_502[],
    name: string,
    aws_service_discovery_service_id?: string|null,
    arn?: string|null,
    description?: string|null,
    health_check_config?: Aws_service_discovery_service_health_check_config_504[]|null,
    health_check_custom_config?: Aws_service_discovery_service_health_check_custom_config_505[]|null
  }) {
    this.dns_config = dns_config;
    this.name = name;
    this.aws_service_discovery_service_id = aws_service_discovery_service_id;
    this.arn = arn;
    this.description = description;
    this.health_check_config = health_check_config;
    this.health_check_custom_config = health_check_custom_config;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['dns_config'] = this.dns_config;
    ih['name'] = this.name;
    if (this.aws_service_discovery_service_id !== null) {
      ih['aws_service_discovery_service_id'] = this.aws_service_discovery_service_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.health_check_config !== null) {
      ih['health_check_config'] = this.health_check_config;
    }
    if (this.health_check_custom_config !== null) {
      ih['health_check_custom_config'] = this.health_check_custom_config;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_service';
  }
}

export class Aws_service_discovery_serviceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_serviceHandler';
  }
}

export class Aws_service_discovery_service_dns_config_502 implements PcoreValue {
  readonly dns_records: Aws_service_discovery_service_dns_config_502_dns_records_503[];
  readonly namespace_id: string;
  readonly routing_policy: string|null;

  constructor({
    dns_records,
    namespace_id,
    routing_policy = null
  }: {
    dns_records: Aws_service_discovery_service_dns_config_502_dns_records_503[],
    namespace_id: string,
    routing_policy?: string|null
  }) {
    this.dns_records = dns_records;
    this.namespace_id = namespace_id;
    this.routing_policy = routing_policy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['dns_records'] = this.dns_records;
    ih['namespace_id'] = this.namespace_id;
    if (this.routing_policy !== null) {
      ih['routing_policy'] = this.routing_policy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_service_dns_config_502';
  }
}

export class Aws_service_discovery_service_dns_config_502_dns_records_503 implements PcoreValue {
  readonly ttl: number;
  readonly type: string;

  constructor({
    ttl,
    type
  }: {
    ttl: number,
    type: string
  }) {
    this.ttl = ttl;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ttl'] = this.ttl;
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_service_dns_config_502_dns_records_503';
  }
}

export class Aws_service_discovery_service_health_check_config_504 implements PcoreValue {
  readonly failure_threshold: number|null;
  readonly resource_path: string|null;
  readonly type: string|null;

  constructor({
    failure_threshold = null,
    resource_path = null,
    type = null
  }: {
    failure_threshold?: number|null,
    resource_path?: string|null,
    type?: string|null
  }) {
    this.failure_threshold = failure_threshold;
    this.resource_path = resource_path;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.failure_threshold !== null) {
      ih['failure_threshold'] = this.failure_threshold;
    }
    if (this.resource_path !== null) {
      ih['resource_path'] = this.resource_path;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_service_health_check_config_504';
  }
}

export class Aws_service_discovery_service_health_check_custom_config_505 implements PcoreValue {
  readonly failure_threshold: number|null;

  constructor({
    failure_threshold = null
  }: {
    failure_threshold?: number|null
  }) {
    this.failure_threshold = failure_threshold;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.failure_threshold !== null) {
      ih['failure_threshold'] = this.failure_threshold;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_service_discovery_service_health_check_custom_config_505';
  }
}

export class Aws_servicecatalog_portfolio implements PcoreValue {
  readonly name: string;
  readonly aws_servicecatalog_portfolio_id: string|null;
  readonly arn: string|null;
  readonly created_time: string|null;
  readonly description: string|null;
  readonly provider_name: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    aws_servicecatalog_portfolio_id = null,
    arn = null,
    created_time = null,
    description = null,
    provider_name = null,
    tags = null
  }: {
    name: string,
    aws_servicecatalog_portfolio_id?: string|null,
    arn?: string|null,
    created_time?: string|null,
    description?: string|null,
    provider_name?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.aws_servicecatalog_portfolio_id = aws_servicecatalog_portfolio_id;
    this.arn = arn;
    this.created_time = created_time;
    this.description = description;
    this.provider_name = provider_name;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_servicecatalog_portfolio_id !== null) {
      ih['aws_servicecatalog_portfolio_id'] = this.aws_servicecatalog_portfolio_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.created_time !== null) {
      ih['created_time'] = this.created_time;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.provider_name !== null) {
      ih['provider_name'] = this.provider_name;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_servicecatalog_portfolio';
  }
}

export class Aws_servicecatalog_portfolioHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_servicecatalog_portfolioHandler';
  }
}

export class Aws_ses_active_receipt_rule_set implements PcoreValue {
  readonly rule_set_name: string;
  readonly aws_ses_active_receipt_rule_set_id: string|null;

  constructor({
    rule_set_name,
    aws_ses_active_receipt_rule_set_id = null
  }: {
    rule_set_name: string,
    aws_ses_active_receipt_rule_set_id?: string|null
  }) {
    this.rule_set_name = rule_set_name;
    this.aws_ses_active_receipt_rule_set_id = aws_ses_active_receipt_rule_set_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['rule_set_name'] = this.rule_set_name;
    if (this.aws_ses_active_receipt_rule_set_id !== null) {
      ih['aws_ses_active_receipt_rule_set_id'] = this.aws_ses_active_receipt_rule_set_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_active_receipt_rule_set';
  }
}

export class Aws_ses_active_receipt_rule_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_active_receipt_rule_setHandler';
  }
}

export class Aws_ses_configuration_set implements PcoreValue {
  readonly name: string;
  readonly aws_ses_configuration_set_id: string|null;

  constructor({
    name,
    aws_ses_configuration_set_id = null
  }: {
    name: string,
    aws_ses_configuration_set_id?: string|null
  }) {
    this.name = name;
    this.aws_ses_configuration_set_id = aws_ses_configuration_set_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_ses_configuration_set_id !== null) {
      ih['aws_ses_configuration_set_id'] = this.aws_ses_configuration_set_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_configuration_set';
  }
}

export class Aws_ses_configuration_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_configuration_setHandler';
  }
}

export class Aws_ses_domain_dkim implements PcoreValue {
  readonly domain: string;
  readonly aws_ses_domain_dkim_id: string|null;
  readonly dkim_tokens: string[]|null;

  constructor({
    domain,
    aws_ses_domain_dkim_id = null,
    dkim_tokens = null
  }: {
    domain: string,
    aws_ses_domain_dkim_id?: string|null,
    dkim_tokens?: string[]|null
  }) {
    this.domain = domain;
    this.aws_ses_domain_dkim_id = aws_ses_domain_dkim_id;
    this.dkim_tokens = dkim_tokens;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain'] = this.domain;
    if (this.aws_ses_domain_dkim_id !== null) {
      ih['aws_ses_domain_dkim_id'] = this.aws_ses_domain_dkim_id;
    }
    if (this.dkim_tokens !== null) {
      ih['dkim_tokens'] = this.dkim_tokens;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_domain_dkim';
  }
}

export class Aws_ses_domain_dkimHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_domain_dkimHandler';
  }
}

export class Aws_ses_domain_identity implements PcoreValue {
  readonly domain: string;
  readonly aws_ses_domain_identity_id: string|null;
  readonly arn: string|null;
  readonly verification_token: string|null;

  constructor({
    domain,
    aws_ses_domain_identity_id = null,
    arn = null,
    verification_token = null
  }: {
    domain: string,
    aws_ses_domain_identity_id?: string|null,
    arn?: string|null,
    verification_token?: string|null
  }) {
    this.domain = domain;
    this.aws_ses_domain_identity_id = aws_ses_domain_identity_id;
    this.arn = arn;
    this.verification_token = verification_token;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain'] = this.domain;
    if (this.aws_ses_domain_identity_id !== null) {
      ih['aws_ses_domain_identity_id'] = this.aws_ses_domain_identity_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.verification_token !== null) {
      ih['verification_token'] = this.verification_token;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_domain_identity';
  }
}

export class Aws_ses_domain_identityHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_domain_identityHandler';
  }
}

export class Aws_ses_domain_identity_verification implements PcoreValue {
  readonly domain: string;
  readonly aws_ses_domain_identity_verification_id: string|null;
  readonly arn: string|null;

  constructor({
    domain,
    aws_ses_domain_identity_verification_id = null,
    arn = null
  }: {
    domain: string,
    aws_ses_domain_identity_verification_id?: string|null,
    arn?: string|null
  }) {
    this.domain = domain;
    this.aws_ses_domain_identity_verification_id = aws_ses_domain_identity_verification_id;
    this.arn = arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain'] = this.domain;
    if (this.aws_ses_domain_identity_verification_id !== null) {
      ih['aws_ses_domain_identity_verification_id'] = this.aws_ses_domain_identity_verification_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_domain_identity_verification';
  }
}

export class Aws_ses_domain_identity_verificationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_domain_identity_verificationHandler';
  }
}

export class Aws_ses_domain_mail_from implements PcoreValue {
  readonly domain: string;
  readonly mail_from_domain: string;
  readonly aws_ses_domain_mail_from_id: string|null;
  readonly behavior_on_mx_failure: string|null;

  constructor({
    domain,
    mail_from_domain,
    aws_ses_domain_mail_from_id = null,
    behavior_on_mx_failure = null
  }: {
    domain: string,
    mail_from_domain: string,
    aws_ses_domain_mail_from_id?: string|null,
    behavior_on_mx_failure?: string|null
  }) {
    this.domain = domain;
    this.mail_from_domain = mail_from_domain;
    this.aws_ses_domain_mail_from_id = aws_ses_domain_mail_from_id;
    this.behavior_on_mx_failure = behavior_on_mx_failure;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain'] = this.domain;
    ih['mail_from_domain'] = this.mail_from_domain;
    if (this.aws_ses_domain_mail_from_id !== null) {
      ih['aws_ses_domain_mail_from_id'] = this.aws_ses_domain_mail_from_id;
    }
    if (this.behavior_on_mx_failure !== null) {
      ih['behavior_on_mx_failure'] = this.behavior_on_mx_failure;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_domain_mail_from';
  }
}

export class Aws_ses_domain_mail_fromHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_domain_mail_fromHandler';
  }
}

export class Aws_ses_event_destination implements PcoreValue {
  readonly configuration_set_name: string;
  readonly matching_types: string[];
  readonly name: string;
  readonly aws_ses_event_destination_id: string|null;
  readonly cloudwatch_destination: Aws_ses_event_destination_cloudwatch_destination_506[]|null;
  readonly enabled: boolean|null;
  readonly kinesis_destination: Aws_ses_event_destination_kinesis_destination_507[]|null;
  readonly sns_destination: Aws_ses_event_destination_sns_destination_508[]|null;

  constructor({
    configuration_set_name,
    matching_types,
    name,
    aws_ses_event_destination_id = null,
    cloudwatch_destination = null,
    enabled = null,
    kinesis_destination = null,
    sns_destination = null
  }: {
    configuration_set_name: string,
    matching_types: string[],
    name: string,
    aws_ses_event_destination_id?: string|null,
    cloudwatch_destination?: Aws_ses_event_destination_cloudwatch_destination_506[]|null,
    enabled?: boolean|null,
    kinesis_destination?: Aws_ses_event_destination_kinesis_destination_507[]|null,
    sns_destination?: Aws_ses_event_destination_sns_destination_508[]|null
  }) {
    this.configuration_set_name = configuration_set_name;
    this.matching_types = matching_types;
    this.name = name;
    this.aws_ses_event_destination_id = aws_ses_event_destination_id;
    this.cloudwatch_destination = cloudwatch_destination;
    this.enabled = enabled;
    this.kinesis_destination = kinesis_destination;
    this.sns_destination = sns_destination;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['configuration_set_name'] = this.configuration_set_name;
    ih['matching_types'] = this.matching_types;
    ih['name'] = this.name;
    if (this.aws_ses_event_destination_id !== null) {
      ih['aws_ses_event_destination_id'] = this.aws_ses_event_destination_id;
    }
    if (this.cloudwatch_destination !== null) {
      ih['cloudwatch_destination'] = this.cloudwatch_destination;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.kinesis_destination !== null) {
      ih['kinesis_destination'] = this.kinesis_destination;
    }
    if (this.sns_destination !== null) {
      ih['sns_destination'] = this.sns_destination;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_event_destination';
  }
}

export class Aws_ses_event_destinationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_event_destinationHandler';
  }
}

export class Aws_ses_event_destination_cloudwatch_destination_506 implements PcoreValue {
  readonly default_value: string;
  readonly dimension_name: string;
  readonly value_source: string;

  constructor({
    default_value,
    dimension_name,
    value_source
  }: {
    default_value: string,
    dimension_name: string,
    value_source: string
  }) {
    this.default_value = default_value;
    this.dimension_name = dimension_name;
    this.value_source = value_source;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_value'] = this.default_value;
    ih['dimension_name'] = this.dimension_name;
    ih['value_source'] = this.value_source;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_event_destination_cloudwatch_destination_506';
  }
}

export class Aws_ses_event_destination_kinesis_destination_507 implements PcoreValue {
  readonly role_arn: string;
  readonly stream_arn: string;

  constructor({
    role_arn,
    stream_arn
  }: {
    role_arn: string,
    stream_arn: string
  }) {
    this.role_arn = role_arn;
    this.stream_arn = stream_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['role_arn'] = this.role_arn;
    ih['stream_arn'] = this.stream_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_event_destination_kinesis_destination_507';
  }
}

export class Aws_ses_event_destination_sns_destination_508 implements PcoreValue {
  readonly topic_arn: string;

  constructor({
    topic_arn
  }: {
    topic_arn: string
  }) {
    this.topic_arn = topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['topic_arn'] = this.topic_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_event_destination_sns_destination_508';
  }
}

export class Aws_ses_identity_notification_topic implements PcoreValue {
  readonly identity: string;
  readonly notification_type: string;
  readonly aws_ses_identity_notification_topic_id: string|null;
  readonly topic_arn: string|null;

  constructor({
    identity,
    notification_type,
    aws_ses_identity_notification_topic_id = null,
    topic_arn = null
  }: {
    identity: string,
    notification_type: string,
    aws_ses_identity_notification_topic_id?: string|null,
    topic_arn?: string|null
  }) {
    this.identity = identity;
    this.notification_type = notification_type;
    this.aws_ses_identity_notification_topic_id = aws_ses_identity_notification_topic_id;
    this.topic_arn = topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['identity'] = this.identity;
    ih['notification_type'] = this.notification_type;
    if (this.aws_ses_identity_notification_topic_id !== null) {
      ih['aws_ses_identity_notification_topic_id'] = this.aws_ses_identity_notification_topic_id;
    }
    if (this.topic_arn !== null) {
      ih['topic_arn'] = this.topic_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_identity_notification_topic';
  }
}

export class Aws_ses_identity_notification_topicHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_identity_notification_topicHandler';
  }
}

export class Aws_ses_receipt_filter implements PcoreValue {
  readonly cidr: string;
  readonly name: string;
  readonly policy: string;
  readonly aws_ses_receipt_filter_id: string|null;

  constructor({
    cidr,
    name,
    policy,
    aws_ses_receipt_filter_id = null
  }: {
    cidr: string,
    name: string,
    policy: string,
    aws_ses_receipt_filter_id?: string|null
  }) {
    this.cidr = cidr;
    this.name = name;
    this.policy = policy;
    this.aws_ses_receipt_filter_id = aws_ses_receipt_filter_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cidr'] = this.cidr;
    ih['name'] = this.name;
    ih['policy'] = this.policy;
    if (this.aws_ses_receipt_filter_id !== null) {
      ih['aws_ses_receipt_filter_id'] = this.aws_ses_receipt_filter_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_filter';
  }
}

export class Aws_ses_receipt_filterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_filterHandler';
  }
}

export class Aws_ses_receipt_rule implements PcoreValue {
  readonly name: string;
  readonly rule_set_name: string;
  readonly aws_ses_receipt_rule_id: string|null;
  readonly add_header_action: Aws_ses_receipt_rule_add_header_action_509[]|null;
  readonly after: string|null;
  readonly bounce_action: Aws_ses_receipt_rule_bounce_action_510[]|null;
  readonly enabled: boolean|null;
  readonly lambda_action: Aws_ses_receipt_rule_lambda_action_511[]|null;
  readonly recipients: string[]|null;
  readonly s3_action: Aws_ses_receipt_rule_s3_action_512[]|null;
  readonly scan_enabled: boolean|null;
  readonly sns_action: Aws_ses_receipt_rule_sns_action_513[]|null;
  readonly stop_action: Aws_ses_receipt_rule_stop_action_514[]|null;
  readonly tls_policy: string|null;
  readonly workmail_action: Aws_ses_receipt_rule_workmail_action_515[]|null;

  constructor({
    name,
    rule_set_name,
    aws_ses_receipt_rule_id = null,
    add_header_action = null,
    after = null,
    bounce_action = null,
    enabled = null,
    lambda_action = null,
    recipients = null,
    s3_action = null,
    scan_enabled = null,
    sns_action = null,
    stop_action = null,
    tls_policy = null,
    workmail_action = null
  }: {
    name: string,
    rule_set_name: string,
    aws_ses_receipt_rule_id?: string|null,
    add_header_action?: Aws_ses_receipt_rule_add_header_action_509[]|null,
    after?: string|null,
    bounce_action?: Aws_ses_receipt_rule_bounce_action_510[]|null,
    enabled?: boolean|null,
    lambda_action?: Aws_ses_receipt_rule_lambda_action_511[]|null,
    recipients?: string[]|null,
    s3_action?: Aws_ses_receipt_rule_s3_action_512[]|null,
    scan_enabled?: boolean|null,
    sns_action?: Aws_ses_receipt_rule_sns_action_513[]|null,
    stop_action?: Aws_ses_receipt_rule_stop_action_514[]|null,
    tls_policy?: string|null,
    workmail_action?: Aws_ses_receipt_rule_workmail_action_515[]|null
  }) {
    this.name = name;
    this.rule_set_name = rule_set_name;
    this.aws_ses_receipt_rule_id = aws_ses_receipt_rule_id;
    this.add_header_action = add_header_action;
    this.after = after;
    this.bounce_action = bounce_action;
    this.enabled = enabled;
    this.lambda_action = lambda_action;
    this.recipients = recipients;
    this.s3_action = s3_action;
    this.scan_enabled = scan_enabled;
    this.sns_action = sns_action;
    this.stop_action = stop_action;
    this.tls_policy = tls_policy;
    this.workmail_action = workmail_action;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['rule_set_name'] = this.rule_set_name;
    if (this.aws_ses_receipt_rule_id !== null) {
      ih['aws_ses_receipt_rule_id'] = this.aws_ses_receipt_rule_id;
    }
    if (this.add_header_action !== null) {
      ih['add_header_action'] = this.add_header_action;
    }
    if (this.after !== null) {
      ih['after'] = this.after;
    }
    if (this.bounce_action !== null) {
      ih['bounce_action'] = this.bounce_action;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.lambda_action !== null) {
      ih['lambda_action'] = this.lambda_action;
    }
    if (this.recipients !== null) {
      ih['recipients'] = this.recipients;
    }
    if (this.s3_action !== null) {
      ih['s3_action'] = this.s3_action;
    }
    if (this.scan_enabled !== null) {
      ih['scan_enabled'] = this.scan_enabled;
    }
    if (this.sns_action !== null) {
      ih['sns_action'] = this.sns_action;
    }
    if (this.stop_action !== null) {
      ih['stop_action'] = this.stop_action;
    }
    if (this.tls_policy !== null) {
      ih['tls_policy'] = this.tls_policy;
    }
    if (this.workmail_action !== null) {
      ih['workmail_action'] = this.workmail_action;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule';
  }
}

export class Aws_ses_receipt_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_ruleHandler';
  }
}

export class Aws_ses_receipt_rule_add_header_action_509 implements PcoreValue {
  readonly header_name: string;
  readonly header_value: string;
  readonly position: number;

  constructor({
    header_name,
    header_value,
    position
  }: {
    header_name: string,
    header_value: string,
    position: number
  }) {
    this.header_name = header_name;
    this.header_value = header_value;
    this.position = position;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['header_name'] = this.header_name;
    ih['header_value'] = this.header_value;
    ih['position'] = this.position;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_add_header_action_509';
  }
}

export class Aws_ses_receipt_rule_bounce_action_510 implements PcoreValue {
  readonly message: string;
  readonly position: number;
  readonly sender: string;
  readonly smtp_reply_code: string;
  readonly status_code: string|null;
  readonly topic_arn: string|null;

  constructor({
    message,
    position,
    sender,
    smtp_reply_code,
    status_code = null,
    topic_arn = null
  }: {
    message: string,
    position: number,
    sender: string,
    smtp_reply_code: string,
    status_code?: string|null,
    topic_arn?: string|null
  }) {
    this.message = message;
    this.position = position;
    this.sender = sender;
    this.smtp_reply_code = smtp_reply_code;
    this.status_code = status_code;
    this.topic_arn = topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['message'] = this.message;
    ih['position'] = this.position;
    ih['sender'] = this.sender;
    ih['smtp_reply_code'] = this.smtp_reply_code;
    if (this.status_code !== null) {
      ih['status_code'] = this.status_code;
    }
    if (this.topic_arn !== null) {
      ih['topic_arn'] = this.topic_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_bounce_action_510';
  }
}

export class Aws_ses_receipt_rule_lambda_action_511 implements PcoreValue {
  readonly function_arn: string;
  readonly position: number;
  readonly invocation_type: string|null;
  readonly topic_arn: string|null;

  constructor({
    function_arn,
    position,
    invocation_type = null,
    topic_arn = null
  }: {
    function_arn: string,
    position: number,
    invocation_type?: string|null,
    topic_arn?: string|null
  }) {
    this.function_arn = function_arn;
    this.position = position;
    this.invocation_type = invocation_type;
    this.topic_arn = topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['function_arn'] = this.function_arn;
    ih['position'] = this.position;
    if (this.invocation_type !== null) {
      ih['invocation_type'] = this.invocation_type;
    }
    if (this.topic_arn !== null) {
      ih['topic_arn'] = this.topic_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_lambda_action_511';
  }
}

export class Aws_ses_receipt_rule_s3_action_512 implements PcoreValue {
  readonly bucket_name: string;
  readonly position: number;
  readonly kms_key_arn: string|null;
  readonly object_key_prefix: string|null;
  readonly topic_arn: string|null;

  constructor({
    bucket_name,
    position,
    kms_key_arn = null,
    object_key_prefix = null,
    topic_arn = null
  }: {
    bucket_name: string,
    position: number,
    kms_key_arn?: string|null,
    object_key_prefix?: string|null,
    topic_arn?: string|null
  }) {
    this.bucket_name = bucket_name;
    this.position = position;
    this.kms_key_arn = kms_key_arn;
    this.object_key_prefix = object_key_prefix;
    this.topic_arn = topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_name'] = this.bucket_name;
    ih['position'] = this.position;
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.object_key_prefix !== null) {
      ih['object_key_prefix'] = this.object_key_prefix;
    }
    if (this.topic_arn !== null) {
      ih['topic_arn'] = this.topic_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_s3_action_512';
  }
}

export class Aws_ses_receipt_rule_set implements PcoreValue {
  readonly rule_set_name: string;
  readonly aws_ses_receipt_rule_set_id: string|null;

  constructor({
    rule_set_name,
    aws_ses_receipt_rule_set_id = null
  }: {
    rule_set_name: string,
    aws_ses_receipt_rule_set_id?: string|null
  }) {
    this.rule_set_name = rule_set_name;
    this.aws_ses_receipt_rule_set_id = aws_ses_receipt_rule_set_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['rule_set_name'] = this.rule_set_name;
    if (this.aws_ses_receipt_rule_set_id !== null) {
      ih['aws_ses_receipt_rule_set_id'] = this.aws_ses_receipt_rule_set_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_set';
  }
}

export class Aws_ses_receipt_rule_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_setHandler';
  }
}

export class Aws_ses_receipt_rule_sns_action_513 implements PcoreValue {
  readonly position: number;
  readonly topic_arn: string;

  constructor({
    position,
    topic_arn
  }: {
    position: number,
    topic_arn: string
  }) {
    this.position = position;
    this.topic_arn = topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['position'] = this.position;
    ih['topic_arn'] = this.topic_arn;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_sns_action_513';
  }
}

export class Aws_ses_receipt_rule_stop_action_514 implements PcoreValue {
  readonly position: number;
  readonly scope: string;
  readonly topic_arn: string|null;

  constructor({
    position,
    scope,
    topic_arn = null
  }: {
    position: number,
    scope: string,
    topic_arn?: string|null
  }) {
    this.position = position;
    this.scope = scope;
    this.topic_arn = topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['position'] = this.position;
    ih['scope'] = this.scope;
    if (this.topic_arn !== null) {
      ih['topic_arn'] = this.topic_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_stop_action_514';
  }
}

export class Aws_ses_receipt_rule_workmail_action_515 implements PcoreValue {
  readonly organization_arn: string;
  readonly position: number;
  readonly topic_arn: string|null;

  constructor({
    organization_arn,
    position,
    topic_arn = null
  }: {
    organization_arn: string,
    position: number,
    topic_arn?: string|null
  }) {
    this.organization_arn = organization_arn;
    this.position = position;
    this.topic_arn = topic_arn;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['organization_arn'] = this.organization_arn;
    ih['position'] = this.position;
    if (this.topic_arn !== null) {
      ih['topic_arn'] = this.topic_arn;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_receipt_rule_workmail_action_515';
  }
}

export class Aws_ses_template implements PcoreValue {
  readonly name: string;
  readonly aws_ses_template_id: string|null;
  readonly html: string|null;
  readonly subject: string|null;
  readonly text: string|null;

  constructor({
    name,
    aws_ses_template_id = null,
    html = null,
    subject = null,
    text = null
  }: {
    name: string,
    aws_ses_template_id?: string|null,
    html?: string|null,
    subject?: string|null,
    text?: string|null
  }) {
    this.name = name;
    this.aws_ses_template_id = aws_ses_template_id;
    this.html = html;
    this.subject = subject;
    this.text = text;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_ses_template_id !== null) {
      ih['aws_ses_template_id'] = this.aws_ses_template_id;
    }
    if (this.html !== null) {
      ih['html'] = this.html;
    }
    if (this.subject !== null) {
      ih['subject'] = this.subject;
    }
    if (this.text !== null) {
      ih['text'] = this.text;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_template';
  }
}

export class Aws_ses_templateHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ses_templateHandler';
  }
}

export class Aws_sfn_activity implements PcoreValue {
  readonly name: string;
  readonly aws_sfn_activity_id: string|null;
  readonly creation_date: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    aws_sfn_activity_id = null,
    creation_date = null,
    tags = null
  }: {
    name: string,
    aws_sfn_activity_id?: string|null,
    creation_date?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.aws_sfn_activity_id = aws_sfn_activity_id;
    this.creation_date = creation_date;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_sfn_activity_id !== null) {
      ih['aws_sfn_activity_id'] = this.aws_sfn_activity_id;
    }
    if (this.creation_date !== null) {
      ih['creation_date'] = this.creation_date;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sfn_activity';
  }
}

export class Aws_sfn_activityHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sfn_activityHandler';
  }
}

export class Aws_sfn_state_machine implements PcoreValue {
  readonly definition: string;
  readonly name: string;
  readonly role_arn: string;
  readonly aws_sfn_state_machine_id: string|null;
  readonly creation_date: string|null;
  readonly status: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    definition,
    name,
    role_arn,
    aws_sfn_state_machine_id = null,
    creation_date = null,
    status = null,
    tags = null
  }: {
    definition: string,
    name: string,
    role_arn: string,
    aws_sfn_state_machine_id?: string|null,
    creation_date?: string|null,
    status?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.definition = definition;
    this.name = name;
    this.role_arn = role_arn;
    this.aws_sfn_state_machine_id = aws_sfn_state_machine_id;
    this.creation_date = creation_date;
    this.status = status;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['definition'] = this.definition;
    ih['name'] = this.name;
    ih['role_arn'] = this.role_arn;
    if (this.aws_sfn_state_machine_id !== null) {
      ih['aws_sfn_state_machine_id'] = this.aws_sfn_state_machine_id;
    }
    if (this.creation_date !== null) {
      ih['creation_date'] = this.creation_date;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sfn_state_machine';
  }
}

export class Aws_sfn_state_machineHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sfn_state_machineHandler';
  }
}

export class Aws_simpledb_domain implements PcoreValue {
  readonly name: string;
  readonly aws_simpledb_domain_id: string|null;

  constructor({
    name,
    aws_simpledb_domain_id = null
  }: {
    name: string,
    aws_simpledb_domain_id?: string|null
  }) {
    this.name = name;
    this.aws_simpledb_domain_id = aws_simpledb_domain_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_simpledb_domain_id !== null) {
      ih['aws_simpledb_domain_id'] = this.aws_simpledb_domain_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_simpledb_domain';
  }
}

export class Aws_simpledb_domainHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_simpledb_domainHandler';
  }
}

export class Aws_snapshot_create_volume_permission implements PcoreValue {
  readonly account_id: string;
  readonly snapshot_id: string;
  readonly aws_snapshot_create_volume_permission_id: string|null;

  constructor({
    account_id,
    snapshot_id,
    aws_snapshot_create_volume_permission_id = null
  }: {
    account_id: string,
    snapshot_id: string,
    aws_snapshot_create_volume_permission_id?: string|null
  }) {
    this.account_id = account_id;
    this.snapshot_id = snapshot_id;
    this.aws_snapshot_create_volume_permission_id = aws_snapshot_create_volume_permission_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['account_id'] = this.account_id;
    ih['snapshot_id'] = this.snapshot_id;
    if (this.aws_snapshot_create_volume_permission_id !== null) {
      ih['aws_snapshot_create_volume_permission_id'] = this.aws_snapshot_create_volume_permission_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_snapshot_create_volume_permission';
  }
}

export class Aws_snapshot_create_volume_permissionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_snapshot_create_volume_permissionHandler';
  }
}

export class Aws_sns_platform_application implements PcoreValue {
  readonly name: string;
  readonly platform: string;
  readonly platform_credential: string;
  readonly aws_sns_platform_application_id: string|null;
  readonly arn: string|null;
  readonly event_delivery_failure_topic_arn: string|null;
  readonly event_endpoint_created_topic_arn: string|null;
  readonly event_endpoint_deleted_topic_arn: string|null;
  readonly event_endpoint_updated_topic_arn: string|null;
  readonly failure_feedback_role_arn: string|null;
  readonly platform_principal: string|null;
  readonly success_feedback_role_arn: string|null;
  readonly success_feedback_sample_rate: string|null;

  constructor({
    name,
    platform,
    platform_credential,
    aws_sns_platform_application_id = null,
    arn = null,
    event_delivery_failure_topic_arn = null,
    event_endpoint_created_topic_arn = null,
    event_endpoint_deleted_topic_arn = null,
    event_endpoint_updated_topic_arn = null,
    failure_feedback_role_arn = null,
    platform_principal = null,
    success_feedback_role_arn = null,
    success_feedback_sample_rate = null
  }: {
    name: string,
    platform: string,
    platform_credential: string,
    aws_sns_platform_application_id?: string|null,
    arn?: string|null,
    event_delivery_failure_topic_arn?: string|null,
    event_endpoint_created_topic_arn?: string|null,
    event_endpoint_deleted_topic_arn?: string|null,
    event_endpoint_updated_topic_arn?: string|null,
    failure_feedback_role_arn?: string|null,
    platform_principal?: string|null,
    success_feedback_role_arn?: string|null,
    success_feedback_sample_rate?: string|null
  }) {
    this.name = name;
    this.platform = platform;
    this.platform_credential = platform_credential;
    this.aws_sns_platform_application_id = aws_sns_platform_application_id;
    this.arn = arn;
    this.event_delivery_failure_topic_arn = event_delivery_failure_topic_arn;
    this.event_endpoint_created_topic_arn = event_endpoint_created_topic_arn;
    this.event_endpoint_deleted_topic_arn = event_endpoint_deleted_topic_arn;
    this.event_endpoint_updated_topic_arn = event_endpoint_updated_topic_arn;
    this.failure_feedback_role_arn = failure_feedback_role_arn;
    this.platform_principal = platform_principal;
    this.success_feedback_role_arn = success_feedback_role_arn;
    this.success_feedback_sample_rate = success_feedback_sample_rate;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['platform'] = this.platform;
    ih['platform_credential'] = this.platform_credential;
    if (this.aws_sns_platform_application_id !== null) {
      ih['aws_sns_platform_application_id'] = this.aws_sns_platform_application_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.event_delivery_failure_topic_arn !== null) {
      ih['event_delivery_failure_topic_arn'] = this.event_delivery_failure_topic_arn;
    }
    if (this.event_endpoint_created_topic_arn !== null) {
      ih['event_endpoint_created_topic_arn'] = this.event_endpoint_created_topic_arn;
    }
    if (this.event_endpoint_deleted_topic_arn !== null) {
      ih['event_endpoint_deleted_topic_arn'] = this.event_endpoint_deleted_topic_arn;
    }
    if (this.event_endpoint_updated_topic_arn !== null) {
      ih['event_endpoint_updated_topic_arn'] = this.event_endpoint_updated_topic_arn;
    }
    if (this.failure_feedback_role_arn !== null) {
      ih['failure_feedback_role_arn'] = this.failure_feedback_role_arn;
    }
    if (this.platform_principal !== null) {
      ih['platform_principal'] = this.platform_principal;
    }
    if (this.success_feedback_role_arn !== null) {
      ih['success_feedback_role_arn'] = this.success_feedback_role_arn;
    }
    if (this.success_feedback_sample_rate !== null) {
      ih['success_feedback_sample_rate'] = this.success_feedback_sample_rate;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_platform_application';
  }
}

export class Aws_sns_platform_applicationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_platform_applicationHandler';
  }
}

export class Aws_sns_sms_preferences implements PcoreValue {
  readonly aws_sns_sms_preferences_id: string|null;
  readonly default_sender_id: string|null;
  readonly default_sms_type: string|null;
  readonly delivery_status_iam_role_arn: string|null;
  readonly delivery_status_success_sampling_rate: string|null;
  readonly monthly_spend_limit: string|null;
  readonly usage_report_s3_bucket: string|null;

  constructor({
    aws_sns_sms_preferences_id = null,
    default_sender_id = null,
    default_sms_type = null,
    delivery_status_iam_role_arn = null,
    delivery_status_success_sampling_rate = null,
    monthly_spend_limit = null,
    usage_report_s3_bucket = null
  }: {
    aws_sns_sms_preferences_id?: string|null,
    default_sender_id?: string|null,
    default_sms_type?: string|null,
    delivery_status_iam_role_arn?: string|null,
    delivery_status_success_sampling_rate?: string|null,
    monthly_spend_limit?: string|null,
    usage_report_s3_bucket?: string|null
  }) {
    this.aws_sns_sms_preferences_id = aws_sns_sms_preferences_id;
    this.default_sender_id = default_sender_id;
    this.default_sms_type = default_sms_type;
    this.delivery_status_iam_role_arn = delivery_status_iam_role_arn;
    this.delivery_status_success_sampling_rate = delivery_status_success_sampling_rate;
    this.monthly_spend_limit = monthly_spend_limit;
    this.usage_report_s3_bucket = usage_report_s3_bucket;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_sns_sms_preferences_id !== null) {
      ih['aws_sns_sms_preferences_id'] = this.aws_sns_sms_preferences_id;
    }
    if (this.default_sender_id !== null) {
      ih['default_sender_id'] = this.default_sender_id;
    }
    if (this.default_sms_type !== null) {
      ih['default_sms_type'] = this.default_sms_type;
    }
    if (this.delivery_status_iam_role_arn !== null) {
      ih['delivery_status_iam_role_arn'] = this.delivery_status_iam_role_arn;
    }
    if (this.delivery_status_success_sampling_rate !== null) {
      ih['delivery_status_success_sampling_rate'] = this.delivery_status_success_sampling_rate;
    }
    if (this.monthly_spend_limit !== null) {
      ih['monthly_spend_limit'] = this.monthly_spend_limit;
    }
    if (this.usage_report_s3_bucket !== null) {
      ih['usage_report_s3_bucket'] = this.usage_report_s3_bucket;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_sms_preferences';
  }
}

export class Aws_sns_sms_preferencesHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_sms_preferencesHandler';
  }
}

export class Aws_sns_topic implements PcoreValue {
  readonly aws_sns_topic_id: string|null;
  readonly application_failure_feedback_role_arn: string|null;
  readonly application_success_feedback_role_arn: string|null;
  readonly application_success_feedback_sample_rate: number|null;
  readonly arn: string|null;
  readonly delivery_policy: string|null;
  readonly display_name: string|null;
  readonly http_failure_feedback_role_arn: string|null;
  readonly http_success_feedback_role_arn: string|null;
  readonly http_success_feedback_sample_rate: number|null;
  readonly kms_master_key_id: string|null;
  readonly lambda_failure_feedback_role_arn: string|null;
  readonly lambda_success_feedback_role_arn: string|null;
  readonly lambda_success_feedback_sample_rate: number|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly policy: string|null;
  readonly sqs_failure_feedback_role_arn: string|null;
  readonly sqs_success_feedback_role_arn: string|null;
  readonly sqs_success_feedback_sample_rate: number|null;

  constructor({
    aws_sns_topic_id = null,
    application_failure_feedback_role_arn = null,
    application_success_feedback_role_arn = null,
    application_success_feedback_sample_rate = null,
    arn = null,
    delivery_policy = null,
    display_name = null,
    http_failure_feedback_role_arn = null,
    http_success_feedback_role_arn = null,
    http_success_feedback_sample_rate = null,
    kms_master_key_id = null,
    lambda_failure_feedback_role_arn = null,
    lambda_success_feedback_role_arn = null,
    lambda_success_feedback_sample_rate = null,
    name = null,
    name_prefix = null,
    policy = null,
    sqs_failure_feedback_role_arn = null,
    sqs_success_feedback_role_arn = null,
    sqs_success_feedback_sample_rate = null
  }: {
    aws_sns_topic_id?: string|null,
    application_failure_feedback_role_arn?: string|null,
    application_success_feedback_role_arn?: string|null,
    application_success_feedback_sample_rate?: number|null,
    arn?: string|null,
    delivery_policy?: string|null,
    display_name?: string|null,
    http_failure_feedback_role_arn?: string|null,
    http_success_feedback_role_arn?: string|null,
    http_success_feedback_sample_rate?: number|null,
    kms_master_key_id?: string|null,
    lambda_failure_feedback_role_arn?: string|null,
    lambda_success_feedback_role_arn?: string|null,
    lambda_success_feedback_sample_rate?: number|null,
    name?: string|null,
    name_prefix?: string|null,
    policy?: string|null,
    sqs_failure_feedback_role_arn?: string|null,
    sqs_success_feedback_role_arn?: string|null,
    sqs_success_feedback_sample_rate?: number|null
  }) {
    this.aws_sns_topic_id = aws_sns_topic_id;
    this.application_failure_feedback_role_arn = application_failure_feedback_role_arn;
    this.application_success_feedback_role_arn = application_success_feedback_role_arn;
    this.application_success_feedback_sample_rate = application_success_feedback_sample_rate;
    this.arn = arn;
    this.delivery_policy = delivery_policy;
    this.display_name = display_name;
    this.http_failure_feedback_role_arn = http_failure_feedback_role_arn;
    this.http_success_feedback_role_arn = http_success_feedback_role_arn;
    this.http_success_feedback_sample_rate = http_success_feedback_sample_rate;
    this.kms_master_key_id = kms_master_key_id;
    this.lambda_failure_feedback_role_arn = lambda_failure_feedback_role_arn;
    this.lambda_success_feedback_role_arn = lambda_success_feedback_role_arn;
    this.lambda_success_feedback_sample_rate = lambda_success_feedback_sample_rate;
    this.name = name;
    this.name_prefix = name_prefix;
    this.policy = policy;
    this.sqs_failure_feedback_role_arn = sqs_failure_feedback_role_arn;
    this.sqs_success_feedback_role_arn = sqs_success_feedback_role_arn;
    this.sqs_success_feedback_sample_rate = sqs_success_feedback_sample_rate;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_sns_topic_id !== null) {
      ih['aws_sns_topic_id'] = this.aws_sns_topic_id;
    }
    if (this.application_failure_feedback_role_arn !== null) {
      ih['application_failure_feedback_role_arn'] = this.application_failure_feedback_role_arn;
    }
    if (this.application_success_feedback_role_arn !== null) {
      ih['application_success_feedback_role_arn'] = this.application_success_feedback_role_arn;
    }
    if (this.application_success_feedback_sample_rate !== null) {
      ih['application_success_feedback_sample_rate'] = this.application_success_feedback_sample_rate;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.delivery_policy !== null) {
      ih['delivery_policy'] = this.delivery_policy;
    }
    if (this.display_name !== null) {
      ih['display_name'] = this.display_name;
    }
    if (this.http_failure_feedback_role_arn !== null) {
      ih['http_failure_feedback_role_arn'] = this.http_failure_feedback_role_arn;
    }
    if (this.http_success_feedback_role_arn !== null) {
      ih['http_success_feedback_role_arn'] = this.http_success_feedback_role_arn;
    }
    if (this.http_success_feedback_sample_rate !== null) {
      ih['http_success_feedback_sample_rate'] = this.http_success_feedback_sample_rate;
    }
    if (this.kms_master_key_id !== null) {
      ih['kms_master_key_id'] = this.kms_master_key_id;
    }
    if (this.lambda_failure_feedback_role_arn !== null) {
      ih['lambda_failure_feedback_role_arn'] = this.lambda_failure_feedback_role_arn;
    }
    if (this.lambda_success_feedback_role_arn !== null) {
      ih['lambda_success_feedback_role_arn'] = this.lambda_success_feedback_role_arn;
    }
    if (this.lambda_success_feedback_sample_rate !== null) {
      ih['lambda_success_feedback_sample_rate'] = this.lambda_success_feedback_sample_rate;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.policy !== null) {
      ih['policy'] = this.policy;
    }
    if (this.sqs_failure_feedback_role_arn !== null) {
      ih['sqs_failure_feedback_role_arn'] = this.sqs_failure_feedback_role_arn;
    }
    if (this.sqs_success_feedback_role_arn !== null) {
      ih['sqs_success_feedback_role_arn'] = this.sqs_success_feedback_role_arn;
    }
    if (this.sqs_success_feedback_sample_rate !== null) {
      ih['sqs_success_feedback_sample_rate'] = this.sqs_success_feedback_sample_rate;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_topic';
  }
}

export class Aws_sns_topicHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_topicHandler';
  }
}

export class Aws_sns_topic_policy implements PcoreValue {
  readonly arn: string;
  readonly policy: string;
  readonly aws_sns_topic_policy_id: string|null;

  constructor({
    arn,
    policy,
    aws_sns_topic_policy_id = null
  }: {
    arn: string,
    policy: string,
    aws_sns_topic_policy_id?: string|null
  }) {
    this.arn = arn;
    this.policy = policy;
    this.aws_sns_topic_policy_id = aws_sns_topic_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['arn'] = this.arn;
    ih['policy'] = this.policy;
    if (this.aws_sns_topic_policy_id !== null) {
      ih['aws_sns_topic_policy_id'] = this.aws_sns_topic_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_topic_policy';
  }
}

export class Aws_sns_topic_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_topic_policyHandler';
  }
}

export class Aws_sns_topic_subscription implements PcoreValue {
  readonly endpoint: string;
  readonly protocol: string;
  readonly topic_arn: string;
  readonly aws_sns_topic_subscription_id: string|null;
  readonly arn: string|null;
  readonly confirmation_timeout_in_minutes: number|null;
  readonly delivery_policy: string|null;
  readonly endpoint_auto_confirms: boolean|null;
  readonly filter_policy: string|null;
  readonly raw_message_delivery: boolean|null;

  constructor({
    endpoint,
    protocol,
    topic_arn,
    aws_sns_topic_subscription_id = null,
    arn = null,
    confirmation_timeout_in_minutes = null,
    delivery_policy = null,
    endpoint_auto_confirms = null,
    filter_policy = null,
    raw_message_delivery = null
  }: {
    endpoint: string,
    protocol: string,
    topic_arn: string,
    aws_sns_topic_subscription_id?: string|null,
    arn?: string|null,
    confirmation_timeout_in_minutes?: number|null,
    delivery_policy?: string|null,
    endpoint_auto_confirms?: boolean|null,
    filter_policy?: string|null,
    raw_message_delivery?: boolean|null
  }) {
    this.endpoint = endpoint;
    this.protocol = protocol;
    this.topic_arn = topic_arn;
    this.aws_sns_topic_subscription_id = aws_sns_topic_subscription_id;
    this.arn = arn;
    this.confirmation_timeout_in_minutes = confirmation_timeout_in_minutes;
    this.delivery_policy = delivery_policy;
    this.endpoint_auto_confirms = endpoint_auto_confirms;
    this.filter_policy = filter_policy;
    this.raw_message_delivery = raw_message_delivery;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['endpoint'] = this.endpoint;
    ih['protocol'] = this.protocol;
    ih['topic_arn'] = this.topic_arn;
    if (this.aws_sns_topic_subscription_id !== null) {
      ih['aws_sns_topic_subscription_id'] = this.aws_sns_topic_subscription_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.confirmation_timeout_in_minutes !== null) {
      ih['confirmation_timeout_in_minutes'] = this.confirmation_timeout_in_minutes;
    }
    if (this.delivery_policy !== null) {
      ih['delivery_policy'] = this.delivery_policy;
    }
    if (this.endpoint_auto_confirms !== null) {
      ih['endpoint_auto_confirms'] = this.endpoint_auto_confirms;
    }
    if (this.filter_policy !== null) {
      ih['filter_policy'] = this.filter_policy;
    }
    if (this.raw_message_delivery !== null) {
      ih['raw_message_delivery'] = this.raw_message_delivery;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_topic_subscription';
  }
}

export class Aws_sns_topic_subscriptionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sns_topic_subscriptionHandler';
  }
}

export class Aws_spot_datafeed_subscription implements PcoreValue {
  readonly bucket: string;
  readonly aws_spot_datafeed_subscription_id: string|null;
  readonly prefix: string|null;

  constructor({
    bucket,
    aws_spot_datafeed_subscription_id = null,
    prefix = null
  }: {
    bucket: string,
    aws_spot_datafeed_subscription_id?: string|null,
    prefix?: string|null
  }) {
    this.bucket = bucket;
    this.aws_spot_datafeed_subscription_id = aws_spot_datafeed_subscription_id;
    this.prefix = prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket'] = this.bucket;
    if (this.aws_spot_datafeed_subscription_id !== null) {
      ih['aws_spot_datafeed_subscription_id'] = this.aws_spot_datafeed_subscription_id;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_datafeed_subscription';
  }
}

export class Aws_spot_datafeed_subscriptionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_datafeed_subscriptionHandler';
  }
}

export class Aws_spot_fleet_request implements PcoreValue {
  readonly iam_fleet_role: string;
  readonly launch_specification: Aws_spot_fleet_request_launch_specification_516[];
  readonly target_capacity: number;
  readonly aws_spot_fleet_request_id: string|null;
  readonly allocation_strategy: string|null;
  readonly client_token: string|null;
  readonly excess_capacity_termination_policy: string|null;
  readonly fleet_type: string|null;
  readonly instance_interruption_behaviour: string|null;
  readonly instance_pools_to_use_count: number|null;
  readonly load_balancers: string[]|null;
  readonly replace_unhealthy_instances: boolean|null;
  readonly spot_price: string|null;
  readonly spot_request_state: string|null;
  readonly target_group_arns: string[]|null;
  readonly terminate_instances_with_expiration: boolean|null;
  readonly valid_from: string|null;
  readonly valid_until: string|null;
  readonly wait_for_fulfillment: boolean|null;

  constructor({
    iam_fleet_role,
    launch_specification,
    target_capacity,
    aws_spot_fleet_request_id = null,
    allocation_strategy = null,
    client_token = null,
    excess_capacity_termination_policy = null,
    fleet_type = null,
    instance_interruption_behaviour = null,
    instance_pools_to_use_count = null,
    load_balancers = null,
    replace_unhealthy_instances = null,
    spot_price = null,
    spot_request_state = null,
    target_group_arns = null,
    terminate_instances_with_expiration = null,
    valid_from = null,
    valid_until = null,
    wait_for_fulfillment = null
  }: {
    iam_fleet_role: string,
    launch_specification: Aws_spot_fleet_request_launch_specification_516[],
    target_capacity: number,
    aws_spot_fleet_request_id?: string|null,
    allocation_strategy?: string|null,
    client_token?: string|null,
    excess_capacity_termination_policy?: string|null,
    fleet_type?: string|null,
    instance_interruption_behaviour?: string|null,
    instance_pools_to_use_count?: number|null,
    load_balancers?: string[]|null,
    replace_unhealthy_instances?: boolean|null,
    spot_price?: string|null,
    spot_request_state?: string|null,
    target_group_arns?: string[]|null,
    terminate_instances_with_expiration?: boolean|null,
    valid_from?: string|null,
    valid_until?: string|null,
    wait_for_fulfillment?: boolean|null
  }) {
    this.iam_fleet_role = iam_fleet_role;
    this.launch_specification = launch_specification;
    this.target_capacity = target_capacity;
    this.aws_spot_fleet_request_id = aws_spot_fleet_request_id;
    this.allocation_strategy = allocation_strategy;
    this.client_token = client_token;
    this.excess_capacity_termination_policy = excess_capacity_termination_policy;
    this.fleet_type = fleet_type;
    this.instance_interruption_behaviour = instance_interruption_behaviour;
    this.instance_pools_to_use_count = instance_pools_to_use_count;
    this.load_balancers = load_balancers;
    this.replace_unhealthy_instances = replace_unhealthy_instances;
    this.spot_price = spot_price;
    this.spot_request_state = spot_request_state;
    this.target_group_arns = target_group_arns;
    this.terminate_instances_with_expiration = terminate_instances_with_expiration;
    this.valid_from = valid_from;
    this.valid_until = valid_until;
    this.wait_for_fulfillment = wait_for_fulfillment;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['iam_fleet_role'] = this.iam_fleet_role;
    ih['launch_specification'] = this.launch_specification;
    ih['target_capacity'] = this.target_capacity;
    if (this.aws_spot_fleet_request_id !== null) {
      ih['aws_spot_fleet_request_id'] = this.aws_spot_fleet_request_id;
    }
    if (this.allocation_strategy !== null) {
      ih['allocation_strategy'] = this.allocation_strategy;
    }
    if (this.client_token !== null) {
      ih['client_token'] = this.client_token;
    }
    if (this.excess_capacity_termination_policy !== null) {
      ih['excess_capacity_termination_policy'] = this.excess_capacity_termination_policy;
    }
    if (this.fleet_type !== null) {
      ih['fleet_type'] = this.fleet_type;
    }
    if (this.instance_interruption_behaviour !== null) {
      ih['instance_interruption_behaviour'] = this.instance_interruption_behaviour;
    }
    if (this.instance_pools_to_use_count !== null) {
      ih['instance_pools_to_use_count'] = this.instance_pools_to_use_count;
    }
    if (this.load_balancers !== null) {
      ih['load_balancers'] = this.load_balancers;
    }
    if (this.replace_unhealthy_instances !== null) {
      ih['replace_unhealthy_instances'] = this.replace_unhealthy_instances;
    }
    if (this.spot_price !== null) {
      ih['spot_price'] = this.spot_price;
    }
    if (this.spot_request_state !== null) {
      ih['spot_request_state'] = this.spot_request_state;
    }
    if (this.target_group_arns !== null) {
      ih['target_group_arns'] = this.target_group_arns;
    }
    if (this.terminate_instances_with_expiration !== null) {
      ih['terminate_instances_with_expiration'] = this.terminate_instances_with_expiration;
    }
    if (this.valid_from !== null) {
      ih['valid_from'] = this.valid_from;
    }
    if (this.valid_until !== null) {
      ih['valid_until'] = this.valid_until;
    }
    if (this.wait_for_fulfillment !== null) {
      ih['wait_for_fulfillment'] = this.wait_for_fulfillment;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_fleet_request';
  }
}

export class Aws_spot_fleet_requestHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_fleet_requestHandler';
  }
}

export class Aws_spot_fleet_request_launch_specification_516 implements PcoreValue {
  readonly ami: string;
  readonly instance_type: string;
  readonly associate_public_ip_address: boolean|null;
  readonly availability_zone: string|null;
  readonly ebs_block_device: Aws_spot_fleet_request_launch_specification_516_ebs_block_device_517[]|null;
  readonly ebs_optimized: boolean|null;
  readonly ephemeral_block_device: Aws_spot_fleet_request_launch_specification_516_ephemeral_block_device_518[]|null;
  readonly iam_instance_profile: string|null;
  readonly iam_instance_profile_arn: string|null;
  readonly key_name: string|null;
  readonly monitoring: boolean|null;
  readonly placement_group: string|null;
  readonly placement_tenancy: string|null;
  readonly root_block_device: Aws_spot_fleet_request_launch_specification_516_root_block_device_519[]|null;
  readonly spot_price: string|null;
  readonly subnet_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly user_data: string|null;
  readonly vpc_security_group_ids: string[]|null;
  readonly weighted_capacity: string|null;

  constructor({
    ami,
    instance_type,
    associate_public_ip_address = null,
    availability_zone = null,
    ebs_block_device = null,
    ebs_optimized = null,
    ephemeral_block_device = null,
    iam_instance_profile = null,
    iam_instance_profile_arn = null,
    key_name = null,
    monitoring = null,
    placement_group = null,
    placement_tenancy = null,
    root_block_device = null,
    spot_price = null,
    subnet_id = null,
    tags = null,
    user_data = null,
    vpc_security_group_ids = null,
    weighted_capacity = null
  }: {
    ami: string,
    instance_type: string,
    associate_public_ip_address?: boolean|null,
    availability_zone?: string|null,
    ebs_block_device?: Aws_spot_fleet_request_launch_specification_516_ebs_block_device_517[]|null,
    ebs_optimized?: boolean|null,
    ephemeral_block_device?: Aws_spot_fleet_request_launch_specification_516_ephemeral_block_device_518[]|null,
    iam_instance_profile?: string|null,
    iam_instance_profile_arn?: string|null,
    key_name?: string|null,
    monitoring?: boolean|null,
    placement_group?: string|null,
    placement_tenancy?: string|null,
    root_block_device?: Aws_spot_fleet_request_launch_specification_516_root_block_device_519[]|null,
    spot_price?: string|null,
    subnet_id?: string|null,
    tags?: {[s: string]: string}|null,
    user_data?: string|null,
    vpc_security_group_ids?: string[]|null,
    weighted_capacity?: string|null
  }) {
    this.ami = ami;
    this.instance_type = instance_type;
    this.associate_public_ip_address = associate_public_ip_address;
    this.availability_zone = availability_zone;
    this.ebs_block_device = ebs_block_device;
    this.ebs_optimized = ebs_optimized;
    this.ephemeral_block_device = ephemeral_block_device;
    this.iam_instance_profile = iam_instance_profile;
    this.iam_instance_profile_arn = iam_instance_profile_arn;
    this.key_name = key_name;
    this.monitoring = monitoring;
    this.placement_group = placement_group;
    this.placement_tenancy = placement_tenancy;
    this.root_block_device = root_block_device;
    this.spot_price = spot_price;
    this.subnet_id = subnet_id;
    this.tags = tags;
    this.user_data = user_data;
    this.vpc_security_group_ids = vpc_security_group_ids;
    this.weighted_capacity = weighted_capacity;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ami'] = this.ami;
    ih['instance_type'] = this.instance_type;
    if (this.associate_public_ip_address !== null) {
      ih['associate_public_ip_address'] = this.associate_public_ip_address;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.ebs_block_device !== null) {
      ih['ebs_block_device'] = this.ebs_block_device;
    }
    if (this.ebs_optimized !== null) {
      ih['ebs_optimized'] = this.ebs_optimized;
    }
    if (this.ephemeral_block_device !== null) {
      ih['ephemeral_block_device'] = this.ephemeral_block_device;
    }
    if (this.iam_instance_profile !== null) {
      ih['iam_instance_profile'] = this.iam_instance_profile;
    }
    if (this.iam_instance_profile_arn !== null) {
      ih['iam_instance_profile_arn'] = this.iam_instance_profile_arn;
    }
    if (this.key_name !== null) {
      ih['key_name'] = this.key_name;
    }
    if (this.monitoring !== null) {
      ih['monitoring'] = this.monitoring;
    }
    if (this.placement_group !== null) {
      ih['placement_group'] = this.placement_group;
    }
    if (this.placement_tenancy !== null) {
      ih['placement_tenancy'] = this.placement_tenancy;
    }
    if (this.root_block_device !== null) {
      ih['root_block_device'] = this.root_block_device;
    }
    if (this.spot_price !== null) {
      ih['spot_price'] = this.spot_price;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.user_data !== null) {
      ih['user_data'] = this.user_data;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    if (this.weighted_capacity !== null) {
      ih['weighted_capacity'] = this.weighted_capacity;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_fleet_request_launch_specification_516';
  }
}

export class Aws_spot_fleet_request_launch_specification_516_ebs_block_device_517 implements PcoreValue {
  readonly device_name: string;
  readonly delete_on_termination: boolean|null;
  readonly encrypted: boolean|null;
  readonly iops: number|null;
  readonly snapshot_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    device_name,
    delete_on_termination = null,
    encrypted = null,
    iops = null,
    snapshot_id = null,
    volume_size = null,
    volume_type = null
  }: {
    device_name: string,
    delete_on_termination?: boolean|null,
    encrypted?: boolean|null,
    iops?: number|null,
    snapshot_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.device_name = device_name;
    this.delete_on_termination = delete_on_termination;
    this.encrypted = encrypted;
    this.iops = iops;
    this.snapshot_id = snapshot_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_fleet_request_launch_specification_516_ebs_block_device_517';
  }
}

export class Aws_spot_fleet_request_launch_specification_516_ephemeral_block_device_518 implements PcoreValue {
  readonly device_name: string;
  readonly virtual_name: string;

  constructor({
    device_name,
    virtual_name
  }: {
    device_name: string,
    virtual_name: string
  }) {
    this.device_name = device_name;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    ih['virtual_name'] = this.virtual_name;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_fleet_request_launch_specification_516_ephemeral_block_device_518';
  }
}

export class Aws_spot_fleet_request_launch_specification_516_root_block_device_519 implements PcoreValue {
  readonly delete_on_termination: boolean|null;
  readonly iops: number|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    delete_on_termination = null,
    iops = null,
    volume_size = null,
    volume_type = null
  }: {
    delete_on_termination?: boolean|null,
    iops?: number|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.delete_on_termination = delete_on_termination;
    this.iops = iops;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_fleet_request_launch_specification_516_root_block_device_519';
  }
}

export class Aws_spot_instance_request implements PcoreValue {
  readonly ami: string;
  readonly instance_type: string;
  readonly aws_spot_instance_request_id: string|null;
  readonly arn: string|null;
  readonly associate_public_ip_address: boolean|null;
  readonly availability_zone: string|null;
  readonly block_device: {[s: string]: string}|null;
  readonly block_duration_minutes: number|null;
  readonly cpu_core_count: number|null;
  readonly cpu_threads_per_core: number|null;
  readonly credit_specification: Aws_spot_instance_request_credit_specification_520[]|null;
  readonly disable_api_termination: boolean|null;
  readonly ebs_block_device: Aws_spot_instance_request_ebs_block_device_521[]|null;
  readonly ebs_optimized: boolean|null;
  readonly ephemeral_block_device: Aws_spot_instance_request_ephemeral_block_device_522[]|null;
  readonly get_password_data: boolean|null;
  readonly host_id: string|null;
  readonly iam_instance_profile: string|null;
  readonly instance_initiated_shutdown_behavior: string|null;
  readonly instance_interruption_behaviour: string|null;
  readonly instance_state: string|null;
  readonly ipv6_address_count: number|null;
  readonly ipv6_addresses: string[]|null;
  readonly key_name: string|null;
  readonly launch_group: string|null;
  readonly monitoring: boolean|null;
  readonly network_interface: Aws_spot_instance_request_network_interface_523[]|null;
  readonly network_interface_id: string|null;
  readonly password_data: string|null;
  readonly placement_group: string|null;
  readonly primary_network_interface_id: string|null;
  readonly private_dns: string|null;
  readonly private_ip: string|null;
  readonly public_dns: string|null;
  readonly public_ip: string|null;
  readonly root_block_device: Aws_spot_instance_request_root_block_device_524[]|null;
  readonly security_groups: string[]|null;
  readonly source_dest_check: boolean|null;
  readonly spot_bid_status: string|null;
  readonly spot_instance_id: string|null;
  readonly spot_price: string|null;
  readonly spot_request_state: string|null;
  readonly spot_type: string|null;
  readonly subnet_id: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly tenancy: string|null;
  readonly user_data: string|null;
  readonly user_data_base64: string|null;
  readonly valid_from: string|null;
  readonly valid_until: string|null;
  readonly volume_tags: {[s: string]: string}|null;
  readonly vpc_security_group_ids: string[]|null;
  readonly wait_for_fulfillment: boolean|null;

  constructor({
    ami,
    instance_type,
    aws_spot_instance_request_id = null,
    arn = null,
    associate_public_ip_address = null,
    availability_zone = null,
    block_device = null,
    block_duration_minutes = null,
    cpu_core_count = null,
    cpu_threads_per_core = null,
    credit_specification = null,
    disable_api_termination = null,
    ebs_block_device = null,
    ebs_optimized = null,
    ephemeral_block_device = null,
    get_password_data = null,
    host_id = null,
    iam_instance_profile = null,
    instance_initiated_shutdown_behavior = null,
    instance_interruption_behaviour = null,
    instance_state = null,
    ipv6_address_count = null,
    ipv6_addresses = null,
    key_name = null,
    launch_group = null,
    monitoring = null,
    network_interface = null,
    network_interface_id = null,
    password_data = null,
    placement_group = null,
    primary_network_interface_id = null,
    private_dns = null,
    private_ip = null,
    public_dns = null,
    public_ip = null,
    root_block_device = null,
    security_groups = null,
    source_dest_check = null,
    spot_bid_status = null,
    spot_instance_id = null,
    spot_price = null,
    spot_request_state = null,
    spot_type = null,
    subnet_id = null,
    tags = null,
    tenancy = null,
    user_data = null,
    user_data_base64 = null,
    valid_from = null,
    valid_until = null,
    volume_tags = null,
    vpc_security_group_ids = null,
    wait_for_fulfillment = null
  }: {
    ami: string,
    instance_type: string,
    aws_spot_instance_request_id?: string|null,
    arn?: string|null,
    associate_public_ip_address?: boolean|null,
    availability_zone?: string|null,
    block_device?: {[s: string]: string}|null,
    block_duration_minutes?: number|null,
    cpu_core_count?: number|null,
    cpu_threads_per_core?: number|null,
    credit_specification?: Aws_spot_instance_request_credit_specification_520[]|null,
    disable_api_termination?: boolean|null,
    ebs_block_device?: Aws_spot_instance_request_ebs_block_device_521[]|null,
    ebs_optimized?: boolean|null,
    ephemeral_block_device?: Aws_spot_instance_request_ephemeral_block_device_522[]|null,
    get_password_data?: boolean|null,
    host_id?: string|null,
    iam_instance_profile?: string|null,
    instance_initiated_shutdown_behavior?: string|null,
    instance_interruption_behaviour?: string|null,
    instance_state?: string|null,
    ipv6_address_count?: number|null,
    ipv6_addresses?: string[]|null,
    key_name?: string|null,
    launch_group?: string|null,
    monitoring?: boolean|null,
    network_interface?: Aws_spot_instance_request_network_interface_523[]|null,
    network_interface_id?: string|null,
    password_data?: string|null,
    placement_group?: string|null,
    primary_network_interface_id?: string|null,
    private_dns?: string|null,
    private_ip?: string|null,
    public_dns?: string|null,
    public_ip?: string|null,
    root_block_device?: Aws_spot_instance_request_root_block_device_524[]|null,
    security_groups?: string[]|null,
    source_dest_check?: boolean|null,
    spot_bid_status?: string|null,
    spot_instance_id?: string|null,
    spot_price?: string|null,
    spot_request_state?: string|null,
    spot_type?: string|null,
    subnet_id?: string|null,
    tags?: {[s: string]: string}|null,
    tenancy?: string|null,
    user_data?: string|null,
    user_data_base64?: string|null,
    valid_from?: string|null,
    valid_until?: string|null,
    volume_tags?: {[s: string]: string}|null,
    vpc_security_group_ids?: string[]|null,
    wait_for_fulfillment?: boolean|null
  }) {
    this.ami = ami;
    this.instance_type = instance_type;
    this.aws_spot_instance_request_id = aws_spot_instance_request_id;
    this.arn = arn;
    this.associate_public_ip_address = associate_public_ip_address;
    this.availability_zone = availability_zone;
    this.block_device = block_device;
    this.block_duration_minutes = block_duration_minutes;
    this.cpu_core_count = cpu_core_count;
    this.cpu_threads_per_core = cpu_threads_per_core;
    this.credit_specification = credit_specification;
    this.disable_api_termination = disable_api_termination;
    this.ebs_block_device = ebs_block_device;
    this.ebs_optimized = ebs_optimized;
    this.ephemeral_block_device = ephemeral_block_device;
    this.get_password_data = get_password_data;
    this.host_id = host_id;
    this.iam_instance_profile = iam_instance_profile;
    this.instance_initiated_shutdown_behavior = instance_initiated_shutdown_behavior;
    this.instance_interruption_behaviour = instance_interruption_behaviour;
    this.instance_state = instance_state;
    this.ipv6_address_count = ipv6_address_count;
    this.ipv6_addresses = ipv6_addresses;
    this.key_name = key_name;
    this.launch_group = launch_group;
    this.monitoring = monitoring;
    this.network_interface = network_interface;
    this.network_interface_id = network_interface_id;
    this.password_data = password_data;
    this.placement_group = placement_group;
    this.primary_network_interface_id = primary_network_interface_id;
    this.private_dns = private_dns;
    this.private_ip = private_ip;
    this.public_dns = public_dns;
    this.public_ip = public_ip;
    this.root_block_device = root_block_device;
    this.security_groups = security_groups;
    this.source_dest_check = source_dest_check;
    this.spot_bid_status = spot_bid_status;
    this.spot_instance_id = spot_instance_id;
    this.spot_price = spot_price;
    this.spot_request_state = spot_request_state;
    this.spot_type = spot_type;
    this.subnet_id = subnet_id;
    this.tags = tags;
    this.tenancy = tenancy;
    this.user_data = user_data;
    this.user_data_base64 = user_data_base64;
    this.valid_from = valid_from;
    this.valid_until = valid_until;
    this.volume_tags = volume_tags;
    this.vpc_security_group_ids = vpc_security_group_ids;
    this.wait_for_fulfillment = wait_for_fulfillment;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['ami'] = this.ami;
    ih['instance_type'] = this.instance_type;
    if (this.aws_spot_instance_request_id !== null) {
      ih['aws_spot_instance_request_id'] = this.aws_spot_instance_request_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.associate_public_ip_address !== null) {
      ih['associate_public_ip_address'] = this.associate_public_ip_address;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.block_device !== null) {
      ih['block_device'] = this.block_device;
    }
    if (this.block_duration_minutes !== null) {
      ih['block_duration_minutes'] = this.block_duration_minutes;
    }
    if (this.cpu_core_count !== null) {
      ih['cpu_core_count'] = this.cpu_core_count;
    }
    if (this.cpu_threads_per_core !== null) {
      ih['cpu_threads_per_core'] = this.cpu_threads_per_core;
    }
    if (this.credit_specification !== null) {
      ih['credit_specification'] = this.credit_specification;
    }
    if (this.disable_api_termination !== null) {
      ih['disable_api_termination'] = this.disable_api_termination;
    }
    if (this.ebs_block_device !== null) {
      ih['ebs_block_device'] = this.ebs_block_device;
    }
    if (this.ebs_optimized !== null) {
      ih['ebs_optimized'] = this.ebs_optimized;
    }
    if (this.ephemeral_block_device !== null) {
      ih['ephemeral_block_device'] = this.ephemeral_block_device;
    }
    if (this.get_password_data !== null) {
      ih['get_password_data'] = this.get_password_data;
    }
    if (this.host_id !== null) {
      ih['host_id'] = this.host_id;
    }
    if (this.iam_instance_profile !== null) {
      ih['iam_instance_profile'] = this.iam_instance_profile;
    }
    if (this.instance_initiated_shutdown_behavior !== null) {
      ih['instance_initiated_shutdown_behavior'] = this.instance_initiated_shutdown_behavior;
    }
    if (this.instance_interruption_behaviour !== null) {
      ih['instance_interruption_behaviour'] = this.instance_interruption_behaviour;
    }
    if (this.instance_state !== null) {
      ih['instance_state'] = this.instance_state;
    }
    if (this.ipv6_address_count !== null) {
      ih['ipv6_address_count'] = this.ipv6_address_count;
    }
    if (this.ipv6_addresses !== null) {
      ih['ipv6_addresses'] = this.ipv6_addresses;
    }
    if (this.key_name !== null) {
      ih['key_name'] = this.key_name;
    }
    if (this.launch_group !== null) {
      ih['launch_group'] = this.launch_group;
    }
    if (this.monitoring !== null) {
      ih['monitoring'] = this.monitoring;
    }
    if (this.network_interface !== null) {
      ih['network_interface'] = this.network_interface;
    }
    if (this.network_interface_id !== null) {
      ih['network_interface_id'] = this.network_interface_id;
    }
    if (this.password_data !== null) {
      ih['password_data'] = this.password_data;
    }
    if (this.placement_group !== null) {
      ih['placement_group'] = this.placement_group;
    }
    if (this.primary_network_interface_id !== null) {
      ih['primary_network_interface_id'] = this.primary_network_interface_id;
    }
    if (this.private_dns !== null) {
      ih['private_dns'] = this.private_dns;
    }
    if (this.private_ip !== null) {
      ih['private_ip'] = this.private_ip;
    }
    if (this.public_dns !== null) {
      ih['public_dns'] = this.public_dns;
    }
    if (this.public_ip !== null) {
      ih['public_ip'] = this.public_ip;
    }
    if (this.root_block_device !== null) {
      ih['root_block_device'] = this.root_block_device;
    }
    if (this.security_groups !== null) {
      ih['security_groups'] = this.security_groups;
    }
    if (this.source_dest_check !== null) {
      ih['source_dest_check'] = this.source_dest_check;
    }
    if (this.spot_bid_status !== null) {
      ih['spot_bid_status'] = this.spot_bid_status;
    }
    if (this.spot_instance_id !== null) {
      ih['spot_instance_id'] = this.spot_instance_id;
    }
    if (this.spot_price !== null) {
      ih['spot_price'] = this.spot_price;
    }
    if (this.spot_request_state !== null) {
      ih['spot_request_state'] = this.spot_request_state;
    }
    if (this.spot_type !== null) {
      ih['spot_type'] = this.spot_type;
    }
    if (this.subnet_id !== null) {
      ih['subnet_id'] = this.subnet_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.tenancy !== null) {
      ih['tenancy'] = this.tenancy;
    }
    if (this.user_data !== null) {
      ih['user_data'] = this.user_data;
    }
    if (this.user_data_base64 !== null) {
      ih['user_data_base64'] = this.user_data_base64;
    }
    if (this.valid_from !== null) {
      ih['valid_from'] = this.valid_from;
    }
    if (this.valid_until !== null) {
      ih['valid_until'] = this.valid_until;
    }
    if (this.volume_tags !== null) {
      ih['volume_tags'] = this.volume_tags;
    }
    if (this.vpc_security_group_ids !== null) {
      ih['vpc_security_group_ids'] = this.vpc_security_group_ids;
    }
    if (this.wait_for_fulfillment !== null) {
      ih['wait_for_fulfillment'] = this.wait_for_fulfillment;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_instance_request';
  }
}

export class Aws_spot_instance_requestHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_instance_requestHandler';
  }
}

export class Aws_spot_instance_request_credit_specification_520 implements PcoreValue {
  readonly cpu_credits: string|null;

  constructor({
    cpu_credits = null
  }: {
    cpu_credits?: string|null
  }) {
    this.cpu_credits = cpu_credits;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.cpu_credits !== null) {
      ih['cpu_credits'] = this.cpu_credits;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_instance_request_credit_specification_520';
  }
}

export class Aws_spot_instance_request_ebs_block_device_521 implements PcoreValue {
  readonly device_name: string;
  readonly delete_on_termination: boolean|null;
  readonly encrypted: boolean|null;
  readonly iops: number|null;
  readonly snapshot_id: string|null;
  readonly volume_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    device_name,
    delete_on_termination = null,
    encrypted = null,
    iops = null,
    snapshot_id = null,
    volume_id = null,
    volume_size = null,
    volume_type = null
  }: {
    device_name: string,
    delete_on_termination?: boolean|null,
    encrypted?: boolean|null,
    iops?: number|null,
    snapshot_id?: string|null,
    volume_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.device_name = device_name;
    this.delete_on_termination = delete_on_termination;
    this.encrypted = encrypted;
    this.iops = iops;
    this.snapshot_id = snapshot_id;
    this.volume_id = volume_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.encrypted !== null) {
      ih['encrypted'] = this.encrypted;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.volume_id !== null) {
      ih['volume_id'] = this.volume_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_instance_request_ebs_block_device_521';
  }
}

export class Aws_spot_instance_request_ephemeral_block_device_522 implements PcoreValue {
  readonly device_name: string;
  readonly no_device: boolean|null;
  readonly virtual_name: string|null;

  constructor({
    device_name,
    no_device = null,
    virtual_name = null
  }: {
    device_name: string,
    no_device?: boolean|null,
    virtual_name?: string|null
  }) {
    this.device_name = device_name;
    this.no_device = no_device;
    this.virtual_name = virtual_name;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    if (this.no_device !== null) {
      ih['no_device'] = this.no_device;
    }
    if (this.virtual_name !== null) {
      ih['virtual_name'] = this.virtual_name;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_instance_request_ephemeral_block_device_522';
  }
}

export class Aws_spot_instance_request_network_interface_523 implements PcoreValue {
  readonly device_index: number;
  readonly network_interface_id: string;
  readonly delete_on_termination: boolean|null;

  constructor({
    device_index,
    network_interface_id,
    delete_on_termination = null
  }: {
    device_index: number,
    network_interface_id: string,
    delete_on_termination?: boolean|null
  }) {
    this.device_index = device_index;
    this.network_interface_id = network_interface_id;
    this.delete_on_termination = delete_on_termination;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_index'] = this.device_index;
    ih['network_interface_id'] = this.network_interface_id;
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_instance_request_network_interface_523';
  }
}

export class Aws_spot_instance_request_root_block_device_524 implements PcoreValue {
  readonly delete_on_termination: boolean|null;
  readonly iops: number|null;
  readonly volume_id: string|null;
  readonly volume_size: number|null;
  readonly volume_type: string|null;

  constructor({
    delete_on_termination = null,
    iops = null,
    volume_id = null,
    volume_size = null,
    volume_type = null
  }: {
    delete_on_termination?: boolean|null,
    iops?: number|null,
    volume_id?: string|null,
    volume_size?: number|null,
    volume_type?: string|null
  }) {
    this.delete_on_termination = delete_on_termination;
    this.iops = iops;
    this.volume_id = volume_id;
    this.volume_size = volume_size;
    this.volume_type = volume_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.delete_on_termination !== null) {
      ih['delete_on_termination'] = this.delete_on_termination;
    }
    if (this.iops !== null) {
      ih['iops'] = this.iops;
    }
    if (this.volume_id !== null) {
      ih['volume_id'] = this.volume_id;
    }
    if (this.volume_size !== null) {
      ih['volume_size'] = this.volume_size;
    }
    if (this.volume_type !== null) {
      ih['volume_type'] = this.volume_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_spot_instance_request_root_block_device_524';
  }
}

export class Aws_sqs_queue implements PcoreValue {
  readonly aws_sqs_queue_id: string|null;
  readonly arn: string|null;
  readonly content_based_deduplication: boolean|null;
  readonly delay_seconds: number|null;
  readonly fifo_queue: boolean|null;
  readonly kms_data_key_reuse_period_seconds: number|null;
  readonly kms_master_key_id: string|null;
  readonly max_message_size: number|null;
  readonly message_retention_seconds: number|null;
  readonly name: string|null;
  readonly name_prefix: string|null;
  readonly policy: string|null;
  readonly receive_wait_time_seconds: number|null;
  readonly redrive_policy: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly visibility_timeout_seconds: number|null;

  constructor({
    aws_sqs_queue_id = null,
    arn = null,
    content_based_deduplication = null,
    delay_seconds = null,
    fifo_queue = null,
    kms_data_key_reuse_period_seconds = null,
    kms_master_key_id = null,
    max_message_size = null,
    message_retention_seconds = null,
    name = null,
    name_prefix = null,
    policy = null,
    receive_wait_time_seconds = null,
    redrive_policy = null,
    tags = null,
    visibility_timeout_seconds = null
  }: {
    aws_sqs_queue_id?: string|null,
    arn?: string|null,
    content_based_deduplication?: boolean|null,
    delay_seconds?: number|null,
    fifo_queue?: boolean|null,
    kms_data_key_reuse_period_seconds?: number|null,
    kms_master_key_id?: string|null,
    max_message_size?: number|null,
    message_retention_seconds?: number|null,
    name?: string|null,
    name_prefix?: string|null,
    policy?: string|null,
    receive_wait_time_seconds?: number|null,
    redrive_policy?: string|null,
    tags?: {[s: string]: string}|null,
    visibility_timeout_seconds?: number|null
  }) {
    this.aws_sqs_queue_id = aws_sqs_queue_id;
    this.arn = arn;
    this.content_based_deduplication = content_based_deduplication;
    this.delay_seconds = delay_seconds;
    this.fifo_queue = fifo_queue;
    this.kms_data_key_reuse_period_seconds = kms_data_key_reuse_period_seconds;
    this.kms_master_key_id = kms_master_key_id;
    this.max_message_size = max_message_size;
    this.message_retention_seconds = message_retention_seconds;
    this.name = name;
    this.name_prefix = name_prefix;
    this.policy = policy;
    this.receive_wait_time_seconds = receive_wait_time_seconds;
    this.redrive_policy = redrive_policy;
    this.tags = tags;
    this.visibility_timeout_seconds = visibility_timeout_seconds;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_sqs_queue_id !== null) {
      ih['aws_sqs_queue_id'] = this.aws_sqs_queue_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.content_based_deduplication !== null) {
      ih['content_based_deduplication'] = this.content_based_deduplication;
    }
    if (this.delay_seconds !== null) {
      ih['delay_seconds'] = this.delay_seconds;
    }
    if (this.fifo_queue !== null) {
      ih['fifo_queue'] = this.fifo_queue;
    }
    if (this.kms_data_key_reuse_period_seconds !== null) {
      ih['kms_data_key_reuse_period_seconds'] = this.kms_data_key_reuse_period_seconds;
    }
    if (this.kms_master_key_id !== null) {
      ih['kms_master_key_id'] = this.kms_master_key_id;
    }
    if (this.max_message_size !== null) {
      ih['max_message_size'] = this.max_message_size;
    }
    if (this.message_retention_seconds !== null) {
      ih['message_retention_seconds'] = this.message_retention_seconds;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    if (this.policy !== null) {
      ih['policy'] = this.policy;
    }
    if (this.receive_wait_time_seconds !== null) {
      ih['receive_wait_time_seconds'] = this.receive_wait_time_seconds;
    }
    if (this.redrive_policy !== null) {
      ih['redrive_policy'] = this.redrive_policy;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.visibility_timeout_seconds !== null) {
      ih['visibility_timeout_seconds'] = this.visibility_timeout_seconds;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sqs_queue';
  }
}

export class Aws_sqs_queueHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sqs_queueHandler';
  }
}

export class Aws_sqs_queue_policy implements PcoreValue {
  readonly policy: string;
  readonly queue_url: string;
  readonly aws_sqs_queue_policy_id: string|null;

  constructor({
    policy,
    queue_url,
    aws_sqs_queue_policy_id = null
  }: {
    policy: string,
    queue_url: string,
    aws_sqs_queue_policy_id?: string|null
  }) {
    this.policy = policy;
    this.queue_url = queue_url;
    this.aws_sqs_queue_policy_id = aws_sqs_queue_policy_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['policy'] = this.policy;
    ih['queue_url'] = this.queue_url;
    if (this.aws_sqs_queue_policy_id !== null) {
      ih['aws_sqs_queue_policy_id'] = this.aws_sqs_queue_policy_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sqs_queue_policy';
  }
}

export class Aws_sqs_queue_policyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_sqs_queue_policyHandler';
  }
}

export class Aws_ssm_activation implements PcoreValue {
  readonly iam_role: string;
  readonly aws_ssm_activation_id: string|null;
  readonly activation_code: string|null;
  readonly description: string|null;
  readonly expiration_date: string|null;
  readonly expired: string|null;
  readonly name: string|null;
  readonly registration_count: number|null;
  readonly registration_limit: number|null;

  constructor({
    iam_role,
    aws_ssm_activation_id = null,
    activation_code = null,
    description = null,
    expiration_date = null,
    expired = null,
    name = null,
    registration_count = null,
    registration_limit = null
  }: {
    iam_role: string,
    aws_ssm_activation_id?: string|null,
    activation_code?: string|null,
    description?: string|null,
    expiration_date?: string|null,
    expired?: string|null,
    name?: string|null,
    registration_count?: number|null,
    registration_limit?: number|null
  }) {
    this.iam_role = iam_role;
    this.aws_ssm_activation_id = aws_ssm_activation_id;
    this.activation_code = activation_code;
    this.description = description;
    this.expiration_date = expiration_date;
    this.expired = expired;
    this.name = name;
    this.registration_count = registration_count;
    this.registration_limit = registration_limit;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['iam_role'] = this.iam_role;
    if (this.aws_ssm_activation_id !== null) {
      ih['aws_ssm_activation_id'] = this.aws_ssm_activation_id;
    }
    if (this.activation_code !== null) {
      ih['activation_code'] = this.activation_code;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.expiration_date !== null) {
      ih['expiration_date'] = this.expiration_date;
    }
    if (this.expired !== null) {
      ih['expired'] = this.expired;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.registration_count !== null) {
      ih['registration_count'] = this.registration_count;
    }
    if (this.registration_limit !== null) {
      ih['registration_limit'] = this.registration_limit;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_activation';
  }
}

export class Aws_ssm_activationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_activationHandler';
  }
}

export class Aws_ssm_association implements PcoreValue {
  readonly name: string;
  readonly aws_ssm_association_id: string|null;
  readonly association_id: string|null;
  readonly association_name: string|null;
  readonly document_version: string|null;
  readonly instance_id: string|null;
  readonly output_location: Aws_ssm_association_output_location_525[]|null;
  readonly parameters: {[s: string]: string}|null;
  readonly schedule_expression: string|null;
  readonly targets: Aws_ssm_association_targets_526[]|null;

  constructor({
    name,
    aws_ssm_association_id = null,
    association_id = null,
    association_name = null,
    document_version = null,
    instance_id = null,
    output_location = null,
    parameters = null,
    schedule_expression = null,
    targets = null
  }: {
    name: string,
    aws_ssm_association_id?: string|null,
    association_id?: string|null,
    association_name?: string|null,
    document_version?: string|null,
    instance_id?: string|null,
    output_location?: Aws_ssm_association_output_location_525[]|null,
    parameters?: {[s: string]: string}|null,
    schedule_expression?: string|null,
    targets?: Aws_ssm_association_targets_526[]|null
  }) {
    this.name = name;
    this.aws_ssm_association_id = aws_ssm_association_id;
    this.association_id = association_id;
    this.association_name = association_name;
    this.document_version = document_version;
    this.instance_id = instance_id;
    this.output_location = output_location;
    this.parameters = parameters;
    this.schedule_expression = schedule_expression;
    this.targets = targets;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_ssm_association_id !== null) {
      ih['aws_ssm_association_id'] = this.aws_ssm_association_id;
    }
    if (this.association_id !== null) {
      ih['association_id'] = this.association_id;
    }
    if (this.association_name !== null) {
      ih['association_name'] = this.association_name;
    }
    if (this.document_version !== null) {
      ih['document_version'] = this.document_version;
    }
    if (this.instance_id !== null) {
      ih['instance_id'] = this.instance_id;
    }
    if (this.output_location !== null) {
      ih['output_location'] = this.output_location;
    }
    if (this.parameters !== null) {
      ih['parameters'] = this.parameters;
    }
    if (this.schedule_expression !== null) {
      ih['schedule_expression'] = this.schedule_expression;
    }
    if (this.targets !== null) {
      ih['targets'] = this.targets;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_association';
  }
}

export class Aws_ssm_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_associationHandler';
  }
}

export class Aws_ssm_association_output_location_525 implements PcoreValue {
  readonly s3_bucket_name: string;
  readonly s3_key_prefix: string|null;

  constructor({
    s3_bucket_name,
    s3_key_prefix = null
  }: {
    s3_bucket_name: string,
    s3_key_prefix?: string|null
  }) {
    this.s3_bucket_name = s3_bucket_name;
    this.s3_key_prefix = s3_key_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['s3_bucket_name'] = this.s3_bucket_name;
    if (this.s3_key_prefix !== null) {
      ih['s3_key_prefix'] = this.s3_key_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_association_output_location_525';
  }
}

export class Aws_ssm_association_targets_526 implements PcoreValue {
  readonly key: string;
  readonly values: string[];

  constructor({
    key,
    values
  }: {
    key: string,
    values: string[]
  }) {
    this.key = key;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['values'] = this.values;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_association_targets_526';
  }
}

export class Aws_ssm_document implements PcoreValue {
  readonly content: string;
  readonly document_type: string;
  readonly name: string;
  readonly aws_ssm_document_id: string|null;
  readonly arn: string|null;
  readonly created_date: string|null;
  readonly default_version: string|null;
  readonly description: string|null;
  readonly document_format: string|null;
  readonly hash: string|null;
  readonly hash_type: string|null;
  readonly latest_version: string|null;
  readonly owner: string|null;
  readonly parameter: Aws_ssm_document_parameter_527[]|null;
  readonly permissions: {[s: string]: string}|null;
  readonly platform_types: string[]|null;
  readonly schema_version: string|null;
  readonly status: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    content,
    document_type,
    name,
    aws_ssm_document_id = null,
    arn = null,
    created_date = null,
    default_version = null,
    description = null,
    document_format = null,
    hash = null,
    hash_type = null,
    latest_version = null,
    owner = null,
    parameter = null,
    permissions = null,
    platform_types = null,
    schema_version = null,
    status = null,
    tags = null
  }: {
    content: string,
    document_type: string,
    name: string,
    aws_ssm_document_id?: string|null,
    arn?: string|null,
    created_date?: string|null,
    default_version?: string|null,
    description?: string|null,
    document_format?: string|null,
    hash?: string|null,
    hash_type?: string|null,
    latest_version?: string|null,
    owner?: string|null,
    parameter?: Aws_ssm_document_parameter_527[]|null,
    permissions?: {[s: string]: string}|null,
    platform_types?: string[]|null,
    schema_version?: string|null,
    status?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.content = content;
    this.document_type = document_type;
    this.name = name;
    this.aws_ssm_document_id = aws_ssm_document_id;
    this.arn = arn;
    this.created_date = created_date;
    this.default_version = default_version;
    this.description = description;
    this.document_format = document_format;
    this.hash = hash;
    this.hash_type = hash_type;
    this.latest_version = latest_version;
    this.owner = owner;
    this.parameter = parameter;
    this.permissions = permissions;
    this.platform_types = platform_types;
    this.schema_version = schema_version;
    this.status = status;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['content'] = this.content;
    ih['document_type'] = this.document_type;
    ih['name'] = this.name;
    if (this.aws_ssm_document_id !== null) {
      ih['aws_ssm_document_id'] = this.aws_ssm_document_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.created_date !== null) {
      ih['created_date'] = this.created_date;
    }
    if (this.default_version !== null) {
      ih['default_version'] = this.default_version;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.document_format !== null) {
      ih['document_format'] = this.document_format;
    }
    if (this.hash !== null) {
      ih['hash'] = this.hash;
    }
    if (this.hash_type !== null) {
      ih['hash_type'] = this.hash_type;
    }
    if (this.latest_version !== null) {
      ih['latest_version'] = this.latest_version;
    }
    if (this.owner !== null) {
      ih['owner'] = this.owner;
    }
    if (this.parameter !== null) {
      ih['parameter'] = this.parameter;
    }
    if (this.permissions !== null) {
      ih['permissions'] = this.permissions;
    }
    if (this.platform_types !== null) {
      ih['platform_types'] = this.platform_types;
    }
    if (this.schema_version !== null) {
      ih['schema_version'] = this.schema_version;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_document';
  }
}

export class Aws_ssm_documentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_documentHandler';
  }
}

export class Aws_ssm_document_parameter_527 implements PcoreValue {
  readonly default_value: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly type: string|null;

  constructor({
    default_value = null,
    description = null,
    name = null,
    type = null
  }: {
    default_value?: string|null,
    description?: string|null,
    name?: string|null,
    type?: string|null
  }) {
    this.default_value = default_value;
    this.description = description;
    this.name = name;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.default_value !== null) {
      ih['default_value'] = this.default_value;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_document_parameter_527';
  }
}

export class Aws_ssm_maintenance_window implements PcoreValue {
  readonly cutoff: number;
  readonly duration: number;
  readonly name: string;
  readonly schedule: string;
  readonly aws_ssm_maintenance_window_id: string|null;
  readonly allow_unassociated_targets: boolean|null;
  readonly enabled: boolean|null;
  readonly end_date: string|null;
  readonly schedule_timezone: string|null;
  readonly start_date: string|null;

  constructor({
    cutoff,
    duration,
    name,
    schedule,
    aws_ssm_maintenance_window_id = null,
    allow_unassociated_targets = null,
    enabled = null,
    end_date = null,
    schedule_timezone = null,
    start_date = null
  }: {
    cutoff: number,
    duration: number,
    name: string,
    schedule: string,
    aws_ssm_maintenance_window_id?: string|null,
    allow_unassociated_targets?: boolean|null,
    enabled?: boolean|null,
    end_date?: string|null,
    schedule_timezone?: string|null,
    start_date?: string|null
  }) {
    this.cutoff = cutoff;
    this.duration = duration;
    this.name = name;
    this.schedule = schedule;
    this.aws_ssm_maintenance_window_id = aws_ssm_maintenance_window_id;
    this.allow_unassociated_targets = allow_unassociated_targets;
    this.enabled = enabled;
    this.end_date = end_date;
    this.schedule_timezone = schedule_timezone;
    this.start_date = start_date;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cutoff'] = this.cutoff;
    ih['duration'] = this.duration;
    ih['name'] = this.name;
    ih['schedule'] = this.schedule;
    if (this.aws_ssm_maintenance_window_id !== null) {
      ih['aws_ssm_maintenance_window_id'] = this.aws_ssm_maintenance_window_id;
    }
    if (this.allow_unassociated_targets !== null) {
      ih['allow_unassociated_targets'] = this.allow_unassociated_targets;
    }
    if (this.enabled !== null) {
      ih['enabled'] = this.enabled;
    }
    if (this.end_date !== null) {
      ih['end_date'] = this.end_date;
    }
    if (this.schedule_timezone !== null) {
      ih['schedule_timezone'] = this.schedule_timezone;
    }
    if (this.start_date !== null) {
      ih['start_date'] = this.start_date;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window';
  }
}

export class Aws_ssm_maintenance_windowHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_windowHandler';
  }
}

export class Aws_ssm_maintenance_window_target implements PcoreValue {
  readonly resource_type: string;
  readonly targets: Aws_ssm_maintenance_window_target_targets_528[];
  readonly window_id: string;
  readonly aws_ssm_maintenance_window_target_id: string|null;
  readonly owner_information: string|null;

  constructor({
    resource_type,
    targets,
    window_id,
    aws_ssm_maintenance_window_target_id = null,
    owner_information = null
  }: {
    resource_type: string,
    targets: Aws_ssm_maintenance_window_target_targets_528[],
    window_id: string,
    aws_ssm_maintenance_window_target_id?: string|null,
    owner_information?: string|null
  }) {
    this.resource_type = resource_type;
    this.targets = targets;
    this.window_id = window_id;
    this.aws_ssm_maintenance_window_target_id = aws_ssm_maintenance_window_target_id;
    this.owner_information = owner_information;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_type'] = this.resource_type;
    ih['targets'] = this.targets;
    ih['window_id'] = this.window_id;
    if (this.aws_ssm_maintenance_window_target_id !== null) {
      ih['aws_ssm_maintenance_window_target_id'] = this.aws_ssm_maintenance_window_target_id;
    }
    if (this.owner_information !== null) {
      ih['owner_information'] = this.owner_information;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window_target';
  }
}

export class Aws_ssm_maintenance_window_targetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window_targetHandler';
  }
}

export class Aws_ssm_maintenance_window_target_targets_528 implements PcoreValue {
  readonly key: string;
  readonly values: string[];

  constructor({
    key,
    values
  }: {
    key: string,
    values: string[]
  }) {
    this.key = key;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['values'] = this.values;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window_target_targets_528';
  }
}

export class Aws_ssm_maintenance_window_task implements PcoreValue {
  readonly max_concurrency: string;
  readonly max_errors: string;
  readonly service_role_arn: string;
  readonly targets: Aws_ssm_maintenance_window_task_targets_530[];
  readonly task_arn: string;
  readonly task_type: string;
  readonly window_id: string;
  readonly aws_ssm_maintenance_window_task_id: string|null;
  readonly description: string|null;
  readonly logging_info: Aws_ssm_maintenance_window_task_logging_info_529[]|null;
  readonly name: string|null;
  readonly priority: number|null;
  readonly task_parameters: Aws_ssm_maintenance_window_task_task_parameters_531[]|null;

  constructor({
    max_concurrency,
    max_errors,
    service_role_arn,
    targets,
    task_arn,
    task_type,
    window_id,
    aws_ssm_maintenance_window_task_id = null,
    description = null,
    logging_info = null,
    name = null,
    priority = null,
    task_parameters = null
  }: {
    max_concurrency: string,
    max_errors: string,
    service_role_arn: string,
    targets: Aws_ssm_maintenance_window_task_targets_530[],
    task_arn: string,
    task_type: string,
    window_id: string,
    aws_ssm_maintenance_window_task_id?: string|null,
    description?: string|null,
    logging_info?: Aws_ssm_maintenance_window_task_logging_info_529[]|null,
    name?: string|null,
    priority?: number|null,
    task_parameters?: Aws_ssm_maintenance_window_task_task_parameters_531[]|null
  }) {
    this.max_concurrency = max_concurrency;
    this.max_errors = max_errors;
    this.service_role_arn = service_role_arn;
    this.targets = targets;
    this.task_arn = task_arn;
    this.task_type = task_type;
    this.window_id = window_id;
    this.aws_ssm_maintenance_window_task_id = aws_ssm_maintenance_window_task_id;
    this.description = description;
    this.logging_info = logging_info;
    this.name = name;
    this.priority = priority;
    this.task_parameters = task_parameters;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['max_concurrency'] = this.max_concurrency;
    ih['max_errors'] = this.max_errors;
    ih['service_role_arn'] = this.service_role_arn;
    ih['targets'] = this.targets;
    ih['task_arn'] = this.task_arn;
    ih['task_type'] = this.task_type;
    ih['window_id'] = this.window_id;
    if (this.aws_ssm_maintenance_window_task_id !== null) {
      ih['aws_ssm_maintenance_window_task_id'] = this.aws_ssm_maintenance_window_task_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.logging_info !== null) {
      ih['logging_info'] = this.logging_info;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.priority !== null) {
      ih['priority'] = this.priority;
    }
    if (this.task_parameters !== null) {
      ih['task_parameters'] = this.task_parameters;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window_task';
  }
}

export class Aws_ssm_maintenance_window_taskHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window_taskHandler';
  }
}

export class Aws_ssm_maintenance_window_task_logging_info_529 implements PcoreValue {
  readonly s3_bucket_name: string;
  readonly s3_region: string;
  readonly s3_bucket_prefix: string|null;

  constructor({
    s3_bucket_name,
    s3_region,
    s3_bucket_prefix = null
  }: {
    s3_bucket_name: string,
    s3_region: string,
    s3_bucket_prefix?: string|null
  }) {
    this.s3_bucket_name = s3_bucket_name;
    this.s3_region = s3_region;
    this.s3_bucket_prefix = s3_bucket_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['s3_bucket_name'] = this.s3_bucket_name;
    ih['s3_region'] = this.s3_region;
    if (this.s3_bucket_prefix !== null) {
      ih['s3_bucket_prefix'] = this.s3_bucket_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window_task_logging_info_529';
  }
}

export class Aws_ssm_maintenance_window_task_targets_530 implements PcoreValue {
  readonly key: string;
  readonly values: string[];

  constructor({
    key,
    values
  }: {
    key: string,
    values: string[]
  }) {
    this.key = key;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['values'] = this.values;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window_task_targets_530';
  }
}

export class Aws_ssm_maintenance_window_task_task_parameters_531 implements PcoreValue {
  readonly name: string;
  readonly values: string[];

  constructor({
    name,
    values
  }: {
    name: string,
    values: string[]
  }) {
    this.name = name;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['values'] = this.values;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_maintenance_window_task_task_parameters_531';
  }
}

export class Aws_ssm_parameter implements PcoreValue {
  readonly name: string;
  readonly type: string;
  readonly value: string;
  readonly aws_ssm_parameter_id: string|null;
  readonly allowed_pattern: string|null;
  readonly arn: string|null;
  readonly description: string|null;
  readonly key_id: string|null;
  readonly overwrite: boolean|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    name,
    type,
    value,
    aws_ssm_parameter_id = null,
    allowed_pattern = null,
    arn = null,
    description = null,
    key_id = null,
    overwrite = null,
    tags = null
  }: {
    name: string,
    type: string,
    value: string,
    aws_ssm_parameter_id?: string|null,
    allowed_pattern?: string|null,
    arn?: string|null,
    description?: string|null,
    key_id?: string|null,
    overwrite?: boolean|null,
    tags?: {[s: string]: string}|null
  }) {
    this.name = name;
    this.type = type;
    this.value = value;
    this.aws_ssm_parameter_id = aws_ssm_parameter_id;
    this.allowed_pattern = allowed_pattern;
    this.arn = arn;
    this.description = description;
    this.key_id = key_id;
    this.overwrite = overwrite;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['type'] = this.type;
    ih['value'] = this.value;
    if (this.aws_ssm_parameter_id !== null) {
      ih['aws_ssm_parameter_id'] = this.aws_ssm_parameter_id;
    }
    if (this.allowed_pattern !== null) {
      ih['allowed_pattern'] = this.allowed_pattern;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.key_id !== null) {
      ih['key_id'] = this.key_id;
    }
    if (this.overwrite !== null) {
      ih['overwrite'] = this.overwrite;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_parameter';
  }
}

export class Aws_ssm_parameterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_parameterHandler';
  }
}

export class Aws_ssm_patch_baseline implements PcoreValue {
  readonly name: string;
  readonly aws_ssm_patch_baseline_id: string|null;
  readonly approval_rule: Aws_ssm_patch_baseline_approval_rule_532[]|null;
  readonly approved_patches: string[]|null;
  readonly approved_patches_compliance_level: string|null;
  readonly description: string|null;
  readonly global_filter: Aws_ssm_patch_baseline_global_filter_534[]|null;
  readonly operating_system: string|null;
  readonly rejected_patches: string[]|null;

  constructor({
    name,
    aws_ssm_patch_baseline_id = null,
    approval_rule = null,
    approved_patches = null,
    approved_patches_compliance_level = null,
    description = null,
    global_filter = null,
    operating_system = null,
    rejected_patches = null
  }: {
    name: string,
    aws_ssm_patch_baseline_id?: string|null,
    approval_rule?: Aws_ssm_patch_baseline_approval_rule_532[]|null,
    approved_patches?: string[]|null,
    approved_patches_compliance_level?: string|null,
    description?: string|null,
    global_filter?: Aws_ssm_patch_baseline_global_filter_534[]|null,
    operating_system?: string|null,
    rejected_patches?: string[]|null
  }) {
    this.name = name;
    this.aws_ssm_patch_baseline_id = aws_ssm_patch_baseline_id;
    this.approval_rule = approval_rule;
    this.approved_patches = approved_patches;
    this.approved_patches_compliance_level = approved_patches_compliance_level;
    this.description = description;
    this.global_filter = global_filter;
    this.operating_system = operating_system;
    this.rejected_patches = rejected_patches;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_ssm_patch_baseline_id !== null) {
      ih['aws_ssm_patch_baseline_id'] = this.aws_ssm_patch_baseline_id;
    }
    if (this.approval_rule !== null) {
      ih['approval_rule'] = this.approval_rule;
    }
    if (this.approved_patches !== null) {
      ih['approved_patches'] = this.approved_patches;
    }
    if (this.approved_patches_compliance_level !== null) {
      ih['approved_patches_compliance_level'] = this.approved_patches_compliance_level;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.global_filter !== null) {
      ih['global_filter'] = this.global_filter;
    }
    if (this.operating_system !== null) {
      ih['operating_system'] = this.operating_system;
    }
    if (this.rejected_patches !== null) {
      ih['rejected_patches'] = this.rejected_patches;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_patch_baseline';
  }
}

export class Aws_ssm_patch_baselineHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_patch_baselineHandler';
  }
}

export class Aws_ssm_patch_baseline_approval_rule_532 implements PcoreValue {
  readonly approve_after_days: number;
  readonly patch_filter: Aws_ssm_patch_baseline_approval_rule_532_patch_filter_533[];
  readonly compliance_level: string|null;
  readonly enable_non_security: boolean|null;

  constructor({
    approve_after_days,
    patch_filter,
    compliance_level = null,
    enable_non_security = null
  }: {
    approve_after_days: number,
    patch_filter: Aws_ssm_patch_baseline_approval_rule_532_patch_filter_533[],
    compliance_level?: string|null,
    enable_non_security?: boolean|null
  }) {
    this.approve_after_days = approve_after_days;
    this.patch_filter = patch_filter;
    this.compliance_level = compliance_level;
    this.enable_non_security = enable_non_security;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['approve_after_days'] = this.approve_after_days;
    ih['patch_filter'] = this.patch_filter;
    if (this.compliance_level !== null) {
      ih['compliance_level'] = this.compliance_level;
    }
    if (this.enable_non_security !== null) {
      ih['enable_non_security'] = this.enable_non_security;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_patch_baseline_approval_rule_532';
  }
}

export class Aws_ssm_patch_baseline_approval_rule_532_patch_filter_533 implements PcoreValue {
  readonly key: string;
  readonly values: string[];

  constructor({
    key,
    values
  }: {
    key: string,
    values: string[]
  }) {
    this.key = key;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['values'] = this.values;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_patch_baseline_approval_rule_532_patch_filter_533';
  }
}

export class Aws_ssm_patch_baseline_global_filter_534 implements PcoreValue {
  readonly key: string;
  readonly values: string[];

  constructor({
    key,
    values
  }: {
    key: string,
    values: string[]
  }) {
    this.key = key;
    this.values = values;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['key'] = this.key;
    ih['values'] = this.values;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_patch_baseline_global_filter_534';
  }
}

export class Aws_ssm_patch_group implements PcoreValue {
  readonly baseline_id: string;
  readonly patch_group: string;
  readonly aws_ssm_patch_group_id: string|null;

  constructor({
    baseline_id,
    patch_group,
    aws_ssm_patch_group_id = null
  }: {
    baseline_id: string,
    patch_group: string,
    aws_ssm_patch_group_id?: string|null
  }) {
    this.baseline_id = baseline_id;
    this.patch_group = patch_group;
    this.aws_ssm_patch_group_id = aws_ssm_patch_group_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['baseline_id'] = this.baseline_id;
    ih['patch_group'] = this.patch_group;
    if (this.aws_ssm_patch_group_id !== null) {
      ih['aws_ssm_patch_group_id'] = this.aws_ssm_patch_group_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_patch_group';
  }
}

export class Aws_ssm_patch_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_patch_groupHandler';
  }
}

export class Aws_ssm_resource_data_sync implements PcoreValue {
  readonly name: string;
  readonly s3_destination: Aws_ssm_resource_data_sync_s3_destination_535[];
  readonly aws_ssm_resource_data_sync_id: string|null;

  constructor({
    name,
    s3_destination,
    aws_ssm_resource_data_sync_id = null
  }: {
    name: string,
    s3_destination: Aws_ssm_resource_data_sync_s3_destination_535[],
    aws_ssm_resource_data_sync_id?: string|null
  }) {
    this.name = name;
    this.s3_destination = s3_destination;
    this.aws_ssm_resource_data_sync_id = aws_ssm_resource_data_sync_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    ih['s3_destination'] = this.s3_destination;
    if (this.aws_ssm_resource_data_sync_id !== null) {
      ih['aws_ssm_resource_data_sync_id'] = this.aws_ssm_resource_data_sync_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_resource_data_sync';
  }
}

export class Aws_ssm_resource_data_syncHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_resource_data_syncHandler';
  }
}

export class Aws_ssm_resource_data_sync_s3_destination_535 implements PcoreValue {
  readonly bucket_name: string;
  readonly region: string;
  readonly kms_key_arn: string|null;
  readonly prefix: string|null;
  readonly sync_format: string|null;

  constructor({
    bucket_name,
    region,
    kms_key_arn = null,
    prefix = null,
    sync_format = null
  }: {
    bucket_name: string,
    region: string,
    kms_key_arn?: string|null,
    prefix?: string|null,
    sync_format?: string|null
  }) {
    this.bucket_name = bucket_name;
    this.region = region;
    this.kms_key_arn = kms_key_arn;
    this.prefix = prefix;
    this.sync_format = sync_format;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['bucket_name'] = this.bucket_name;
    ih['region'] = this.region;
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.prefix !== null) {
      ih['prefix'] = this.prefix;
    }
    if (this.sync_format !== null) {
      ih['sync_format'] = this.sync_format;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_ssm_resource_data_sync_s3_destination_535';
  }
}

export class Aws_storagegateway_cache implements PcoreValue {
  readonly disk_id: string;
  readonly gateway_arn: string;
  readonly aws_storagegateway_cache_id: string|null;

  constructor({
    disk_id,
    gateway_arn,
    aws_storagegateway_cache_id = null
  }: {
    disk_id: string,
    gateway_arn: string,
    aws_storagegateway_cache_id?: string|null
  }) {
    this.disk_id = disk_id;
    this.gateway_arn = gateway_arn;
    this.aws_storagegateway_cache_id = aws_storagegateway_cache_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['disk_id'] = this.disk_id;
    ih['gateway_arn'] = this.gateway_arn;
    if (this.aws_storagegateway_cache_id !== null) {
      ih['aws_storagegateway_cache_id'] = this.aws_storagegateway_cache_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_cache';
  }
}

export class Aws_storagegateway_cacheHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_cacheHandler';
  }
}

export class Aws_storagegateway_cached_iscsi_volume implements PcoreValue {
  readonly gateway_arn: string;
  readonly network_interface_id: string;
  readonly target_name: string;
  readonly volume_size_in_bytes: number;
  readonly aws_storagegateway_cached_iscsi_volume_id: string|null;
  readonly arn: string|null;
  readonly chap_enabled: boolean|null;
  readonly lun_number: number|null;
  readonly network_interface_port: number|null;
  readonly snapshot_id: string|null;
  readonly source_volume_arn: string|null;
  readonly target_arn: string|null;
  readonly volume_arn: string|null;
  readonly volume_id: string|null;

  constructor({
    gateway_arn,
    network_interface_id,
    target_name,
    volume_size_in_bytes,
    aws_storagegateway_cached_iscsi_volume_id = null,
    arn = null,
    chap_enabled = null,
    lun_number = null,
    network_interface_port = null,
    snapshot_id = null,
    source_volume_arn = null,
    target_arn = null,
    volume_arn = null,
    volume_id = null
  }: {
    gateway_arn: string,
    network_interface_id: string,
    target_name: string,
    volume_size_in_bytes: number,
    aws_storagegateway_cached_iscsi_volume_id?: string|null,
    arn?: string|null,
    chap_enabled?: boolean|null,
    lun_number?: number|null,
    network_interface_port?: number|null,
    snapshot_id?: string|null,
    source_volume_arn?: string|null,
    target_arn?: string|null,
    volume_arn?: string|null,
    volume_id?: string|null
  }) {
    this.gateway_arn = gateway_arn;
    this.network_interface_id = network_interface_id;
    this.target_name = target_name;
    this.volume_size_in_bytes = volume_size_in_bytes;
    this.aws_storagegateway_cached_iscsi_volume_id = aws_storagegateway_cached_iscsi_volume_id;
    this.arn = arn;
    this.chap_enabled = chap_enabled;
    this.lun_number = lun_number;
    this.network_interface_port = network_interface_port;
    this.snapshot_id = snapshot_id;
    this.source_volume_arn = source_volume_arn;
    this.target_arn = target_arn;
    this.volume_arn = volume_arn;
    this.volume_id = volume_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['gateway_arn'] = this.gateway_arn;
    ih['network_interface_id'] = this.network_interface_id;
    ih['target_name'] = this.target_name;
    ih['volume_size_in_bytes'] = this.volume_size_in_bytes;
    if (this.aws_storagegateway_cached_iscsi_volume_id !== null) {
      ih['aws_storagegateway_cached_iscsi_volume_id'] = this.aws_storagegateway_cached_iscsi_volume_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.chap_enabled !== null) {
      ih['chap_enabled'] = this.chap_enabled;
    }
    if (this.lun_number !== null) {
      ih['lun_number'] = this.lun_number;
    }
    if (this.network_interface_port !== null) {
      ih['network_interface_port'] = this.network_interface_port;
    }
    if (this.snapshot_id !== null) {
      ih['snapshot_id'] = this.snapshot_id;
    }
    if (this.source_volume_arn !== null) {
      ih['source_volume_arn'] = this.source_volume_arn;
    }
    if (this.target_arn !== null) {
      ih['target_arn'] = this.target_arn;
    }
    if (this.volume_arn !== null) {
      ih['volume_arn'] = this.volume_arn;
    }
    if (this.volume_id !== null) {
      ih['volume_id'] = this.volume_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_cached_iscsi_volume';
  }
}

export class Aws_storagegateway_cached_iscsi_volumeHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_cached_iscsi_volumeHandler';
  }
}

export class Aws_storagegateway_gateway implements PcoreValue {
  readonly gateway_name: string;
  readonly gateway_timezone: string;
  readonly aws_storagegateway_gateway_id: string|null;
  readonly activation_key: string|null;
  readonly arn: string|null;
  readonly gateway_id: string|null;
  readonly gateway_ip_address: string|null;
  readonly gateway_type: string|null;
  readonly medium_changer_type: string|null;
  readonly smb_active_directory_settings: Aws_storagegateway_gateway_smb_active_directory_settings_536[]|null;
  readonly smb_guest_password: string|null;
  readonly tape_drive_type: string|null;

  constructor({
    gateway_name,
    gateway_timezone,
    aws_storagegateway_gateway_id = null,
    activation_key = null,
    arn = null,
    gateway_id = null,
    gateway_ip_address = null,
    gateway_type = null,
    medium_changer_type = null,
    smb_active_directory_settings = null,
    smb_guest_password = null,
    tape_drive_type = null
  }: {
    gateway_name: string,
    gateway_timezone: string,
    aws_storagegateway_gateway_id?: string|null,
    activation_key?: string|null,
    arn?: string|null,
    gateway_id?: string|null,
    gateway_ip_address?: string|null,
    gateway_type?: string|null,
    medium_changer_type?: string|null,
    smb_active_directory_settings?: Aws_storagegateway_gateway_smb_active_directory_settings_536[]|null,
    smb_guest_password?: string|null,
    tape_drive_type?: string|null
  }) {
    this.gateway_name = gateway_name;
    this.gateway_timezone = gateway_timezone;
    this.aws_storagegateway_gateway_id = aws_storagegateway_gateway_id;
    this.activation_key = activation_key;
    this.arn = arn;
    this.gateway_id = gateway_id;
    this.gateway_ip_address = gateway_ip_address;
    this.gateway_type = gateway_type;
    this.medium_changer_type = medium_changer_type;
    this.smb_active_directory_settings = smb_active_directory_settings;
    this.smb_guest_password = smb_guest_password;
    this.tape_drive_type = tape_drive_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['gateway_name'] = this.gateway_name;
    ih['gateway_timezone'] = this.gateway_timezone;
    if (this.aws_storagegateway_gateway_id !== null) {
      ih['aws_storagegateway_gateway_id'] = this.aws_storagegateway_gateway_id;
    }
    if (this.activation_key !== null) {
      ih['activation_key'] = this.activation_key;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.gateway_id !== null) {
      ih['gateway_id'] = this.gateway_id;
    }
    if (this.gateway_ip_address !== null) {
      ih['gateway_ip_address'] = this.gateway_ip_address;
    }
    if (this.gateway_type !== null) {
      ih['gateway_type'] = this.gateway_type;
    }
    if (this.medium_changer_type !== null) {
      ih['medium_changer_type'] = this.medium_changer_type;
    }
    if (this.smb_active_directory_settings !== null) {
      ih['smb_active_directory_settings'] = this.smb_active_directory_settings;
    }
    if (this.smb_guest_password !== null) {
      ih['smb_guest_password'] = this.smb_guest_password;
    }
    if (this.tape_drive_type !== null) {
      ih['tape_drive_type'] = this.tape_drive_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_gateway';
  }
}

export class Aws_storagegateway_gatewayHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_gatewayHandler';
  }
}

export class Aws_storagegateway_gateway_smb_active_directory_settings_536 implements PcoreValue {
  readonly domain_name: string;
  readonly password: string;
  readonly username: string;

  constructor({
    domain_name,
    password,
    username
  }: {
    domain_name: string,
    password: string,
    username: string
  }) {
    this.domain_name = domain_name;
    this.password = password;
    this.username = username;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['domain_name'] = this.domain_name;
    ih['password'] = this.password;
    ih['username'] = this.username;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_gateway_smb_active_directory_settings_536';
  }
}

export class Aws_storagegateway_nfs_file_share implements PcoreValue {
  readonly client_list: string[];
  readonly gateway_arn: string;
  readonly location_arn: string;
  readonly role_arn: string;
  readonly aws_storagegateway_nfs_file_share_id: string|null;
  readonly arn: string|null;
  readonly default_storage_class: string|null;
  readonly fileshare_id: string|null;
  readonly guess_mime_type_enabled: boolean|null;
  readonly kms_encrypted: boolean|null;
  readonly kms_key_arn: string|null;
  readonly nfs_file_share_defaults: Aws_storagegateway_nfs_file_share_nfs_file_share_defaults_537[]|null;
  readonly object_acl: string|null;
  readonly read_only: boolean|null;
  readonly requester_pays: boolean|null;
  readonly squash: string|null;

  constructor({
    client_list,
    gateway_arn,
    location_arn,
    role_arn,
    aws_storagegateway_nfs_file_share_id = null,
    arn = null,
    default_storage_class = null,
    fileshare_id = null,
    guess_mime_type_enabled = null,
    kms_encrypted = null,
    kms_key_arn = null,
    nfs_file_share_defaults = null,
    object_acl = null,
    read_only = null,
    requester_pays = null,
    squash = null
  }: {
    client_list: string[],
    gateway_arn: string,
    location_arn: string,
    role_arn: string,
    aws_storagegateway_nfs_file_share_id?: string|null,
    arn?: string|null,
    default_storage_class?: string|null,
    fileshare_id?: string|null,
    guess_mime_type_enabled?: boolean|null,
    kms_encrypted?: boolean|null,
    kms_key_arn?: string|null,
    nfs_file_share_defaults?: Aws_storagegateway_nfs_file_share_nfs_file_share_defaults_537[]|null,
    object_acl?: string|null,
    read_only?: boolean|null,
    requester_pays?: boolean|null,
    squash?: string|null
  }) {
    this.client_list = client_list;
    this.gateway_arn = gateway_arn;
    this.location_arn = location_arn;
    this.role_arn = role_arn;
    this.aws_storagegateway_nfs_file_share_id = aws_storagegateway_nfs_file_share_id;
    this.arn = arn;
    this.default_storage_class = default_storage_class;
    this.fileshare_id = fileshare_id;
    this.guess_mime_type_enabled = guess_mime_type_enabled;
    this.kms_encrypted = kms_encrypted;
    this.kms_key_arn = kms_key_arn;
    this.nfs_file_share_defaults = nfs_file_share_defaults;
    this.object_acl = object_acl;
    this.read_only = read_only;
    this.requester_pays = requester_pays;
    this.squash = squash;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['client_list'] = this.client_list;
    ih['gateway_arn'] = this.gateway_arn;
    ih['location_arn'] = this.location_arn;
    ih['role_arn'] = this.role_arn;
    if (this.aws_storagegateway_nfs_file_share_id !== null) {
      ih['aws_storagegateway_nfs_file_share_id'] = this.aws_storagegateway_nfs_file_share_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.default_storage_class !== null) {
      ih['default_storage_class'] = this.default_storage_class;
    }
    if (this.fileshare_id !== null) {
      ih['fileshare_id'] = this.fileshare_id;
    }
    if (this.guess_mime_type_enabled !== null) {
      ih['guess_mime_type_enabled'] = this.guess_mime_type_enabled;
    }
    if (this.kms_encrypted !== null) {
      ih['kms_encrypted'] = this.kms_encrypted;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.nfs_file_share_defaults !== null) {
      ih['nfs_file_share_defaults'] = this.nfs_file_share_defaults;
    }
    if (this.object_acl !== null) {
      ih['object_acl'] = this.object_acl;
    }
    if (this.read_only !== null) {
      ih['read_only'] = this.read_only;
    }
    if (this.requester_pays !== null) {
      ih['requester_pays'] = this.requester_pays;
    }
    if (this.squash !== null) {
      ih['squash'] = this.squash;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_nfs_file_share';
  }
}

export class Aws_storagegateway_nfs_file_shareHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_nfs_file_shareHandler';
  }
}

export class Aws_storagegateway_nfs_file_share_nfs_file_share_defaults_537 implements PcoreValue {
  readonly directory_mode: string|null;
  readonly file_mode: string|null;
  readonly group_id: number|null;
  readonly owner_id: number|null;

  constructor({
    directory_mode = null,
    file_mode = null,
    group_id = null,
    owner_id = null
  }: {
    directory_mode?: string|null,
    file_mode?: string|null,
    group_id?: number|null,
    owner_id?: number|null
  }) {
    this.directory_mode = directory_mode;
    this.file_mode = file_mode;
    this.group_id = group_id;
    this.owner_id = owner_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.directory_mode !== null) {
      ih['directory_mode'] = this.directory_mode;
    }
    if (this.file_mode !== null) {
      ih['file_mode'] = this.file_mode;
    }
    if (this.group_id !== null) {
      ih['group_id'] = this.group_id;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_nfs_file_share_nfs_file_share_defaults_537';
  }
}

export class Aws_storagegateway_smb_file_share implements PcoreValue {
  readonly gateway_arn: string;
  readonly location_arn: string;
  readonly role_arn: string;
  readonly aws_storagegateway_smb_file_share_id: string|null;
  readonly arn: string|null;
  readonly authentication: string|null;
  readonly default_storage_class: string|null;
  readonly fileshare_id: string|null;
  readonly guess_mime_type_enabled: boolean|null;
  readonly invalid_user_list: string[]|null;
  readonly kms_encrypted: boolean|null;
  readonly kms_key_arn: string|null;
  readonly object_acl: string|null;
  readonly read_only: boolean|null;
  readonly requester_pays: boolean|null;
  readonly valid_user_list: string[]|null;

  constructor({
    gateway_arn,
    location_arn,
    role_arn,
    aws_storagegateway_smb_file_share_id = null,
    arn = null,
    authentication = null,
    default_storage_class = null,
    fileshare_id = null,
    guess_mime_type_enabled = null,
    invalid_user_list = null,
    kms_encrypted = null,
    kms_key_arn = null,
    object_acl = null,
    read_only = null,
    requester_pays = null,
    valid_user_list = null
  }: {
    gateway_arn: string,
    location_arn: string,
    role_arn: string,
    aws_storagegateway_smb_file_share_id?: string|null,
    arn?: string|null,
    authentication?: string|null,
    default_storage_class?: string|null,
    fileshare_id?: string|null,
    guess_mime_type_enabled?: boolean|null,
    invalid_user_list?: string[]|null,
    kms_encrypted?: boolean|null,
    kms_key_arn?: string|null,
    object_acl?: string|null,
    read_only?: boolean|null,
    requester_pays?: boolean|null,
    valid_user_list?: string[]|null
  }) {
    this.gateway_arn = gateway_arn;
    this.location_arn = location_arn;
    this.role_arn = role_arn;
    this.aws_storagegateway_smb_file_share_id = aws_storagegateway_smb_file_share_id;
    this.arn = arn;
    this.authentication = authentication;
    this.default_storage_class = default_storage_class;
    this.fileshare_id = fileshare_id;
    this.guess_mime_type_enabled = guess_mime_type_enabled;
    this.invalid_user_list = invalid_user_list;
    this.kms_encrypted = kms_encrypted;
    this.kms_key_arn = kms_key_arn;
    this.object_acl = object_acl;
    this.read_only = read_only;
    this.requester_pays = requester_pays;
    this.valid_user_list = valid_user_list;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['gateway_arn'] = this.gateway_arn;
    ih['location_arn'] = this.location_arn;
    ih['role_arn'] = this.role_arn;
    if (this.aws_storagegateway_smb_file_share_id !== null) {
      ih['aws_storagegateway_smb_file_share_id'] = this.aws_storagegateway_smb_file_share_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.authentication !== null) {
      ih['authentication'] = this.authentication;
    }
    if (this.default_storage_class !== null) {
      ih['default_storage_class'] = this.default_storage_class;
    }
    if (this.fileshare_id !== null) {
      ih['fileshare_id'] = this.fileshare_id;
    }
    if (this.guess_mime_type_enabled !== null) {
      ih['guess_mime_type_enabled'] = this.guess_mime_type_enabled;
    }
    if (this.invalid_user_list !== null) {
      ih['invalid_user_list'] = this.invalid_user_list;
    }
    if (this.kms_encrypted !== null) {
      ih['kms_encrypted'] = this.kms_encrypted;
    }
    if (this.kms_key_arn !== null) {
      ih['kms_key_arn'] = this.kms_key_arn;
    }
    if (this.object_acl !== null) {
      ih['object_acl'] = this.object_acl;
    }
    if (this.read_only !== null) {
      ih['read_only'] = this.read_only;
    }
    if (this.requester_pays !== null) {
      ih['requester_pays'] = this.requester_pays;
    }
    if (this.valid_user_list !== null) {
      ih['valid_user_list'] = this.valid_user_list;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_smb_file_share';
  }
}

export class Aws_storagegateway_smb_file_shareHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_smb_file_shareHandler';
  }
}

export class Aws_storagegateway_upload_buffer implements PcoreValue {
  readonly disk_id: string;
  readonly gateway_arn: string;
  readonly aws_storagegateway_upload_buffer_id: string|null;

  constructor({
    disk_id,
    gateway_arn,
    aws_storagegateway_upload_buffer_id = null
  }: {
    disk_id: string,
    gateway_arn: string,
    aws_storagegateway_upload_buffer_id?: string|null
  }) {
    this.disk_id = disk_id;
    this.gateway_arn = gateway_arn;
    this.aws_storagegateway_upload_buffer_id = aws_storagegateway_upload_buffer_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['disk_id'] = this.disk_id;
    ih['gateway_arn'] = this.gateway_arn;
    if (this.aws_storagegateway_upload_buffer_id !== null) {
      ih['aws_storagegateway_upload_buffer_id'] = this.aws_storagegateway_upload_buffer_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_upload_buffer';
  }
}

export class Aws_storagegateway_upload_bufferHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_upload_bufferHandler';
  }
}

export class Aws_storagegateway_working_storage implements PcoreValue {
  readonly disk_id: string;
  readonly gateway_arn: string;
  readonly aws_storagegateway_working_storage_id: string|null;

  constructor({
    disk_id,
    gateway_arn,
    aws_storagegateway_working_storage_id = null
  }: {
    disk_id: string,
    gateway_arn: string,
    aws_storagegateway_working_storage_id?: string|null
  }) {
    this.disk_id = disk_id;
    this.gateway_arn = gateway_arn;
    this.aws_storagegateway_working_storage_id = aws_storagegateway_working_storage_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['disk_id'] = this.disk_id;
    ih['gateway_arn'] = this.gateway_arn;
    if (this.aws_storagegateway_working_storage_id !== null) {
      ih['aws_storagegateway_working_storage_id'] = this.aws_storagegateway_working_storage_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_working_storage';
  }
}

export class Aws_storagegateway_working_storageHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_storagegateway_working_storageHandler';
  }
}

export class Aws_subnet implements PcoreValue {
  readonly cidr_block: string;
  readonly vpc_id: string;
  readonly aws_subnet_id: string|null;
  readonly arn: string|null;
  readonly assign_ipv6_address_on_creation: boolean|null;
  readonly availability_zone: string|null;
  readonly availability_zone_id: string|null;
  readonly ipv6_cidr_block: string|null;
  readonly ipv6_cidr_block_association_id: string|null;
  readonly map_public_ip_on_launch: boolean|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    cidr_block,
    vpc_id,
    aws_subnet_id = null,
    arn = null,
    assign_ipv6_address_on_creation = null,
    availability_zone = null,
    availability_zone_id = null,
    ipv6_cidr_block = null,
    ipv6_cidr_block_association_id = null,
    map_public_ip_on_launch = null,
    owner_id = null,
    tags = null
  }: {
    cidr_block: string,
    vpc_id: string,
    aws_subnet_id?: string|null,
    arn?: string|null,
    assign_ipv6_address_on_creation?: boolean|null,
    availability_zone?: string|null,
    availability_zone_id?: string|null,
    ipv6_cidr_block?: string|null,
    ipv6_cidr_block_association_id?: string|null,
    map_public_ip_on_launch?: boolean|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.cidr_block = cidr_block;
    this.vpc_id = vpc_id;
    this.aws_subnet_id = aws_subnet_id;
    this.arn = arn;
    this.assign_ipv6_address_on_creation = assign_ipv6_address_on_creation;
    this.availability_zone = availability_zone;
    this.availability_zone_id = availability_zone_id;
    this.ipv6_cidr_block = ipv6_cidr_block;
    this.ipv6_cidr_block_association_id = ipv6_cidr_block_association_id;
    this.map_public_ip_on_launch = map_public_ip_on_launch;
    this.owner_id = owner_id;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cidr_block'] = this.cidr_block;
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_subnet_id !== null) {
      ih['aws_subnet_id'] = this.aws_subnet_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.assign_ipv6_address_on_creation !== null) {
      ih['assign_ipv6_address_on_creation'] = this.assign_ipv6_address_on_creation;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.availability_zone_id !== null) {
      ih['availability_zone_id'] = this.availability_zone_id;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    if (this.ipv6_cidr_block_association_id !== null) {
      ih['ipv6_cidr_block_association_id'] = this.ipv6_cidr_block_association_id;
    }
    if (this.map_public_ip_on_launch !== null) {
      ih['map_public_ip_on_launch'] = this.map_public_ip_on_launch;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_subnet';
  }
}

export class Aws_subnetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_subnetHandler';
  }
}

export class Aws_swf_domain implements PcoreValue {
  readonly workflow_execution_retention_period_in_days: string;
  readonly aws_swf_domain_id: string|null;
  readonly description: string|null;
  readonly name: string|null;
  readonly name_prefix: string|null;

  constructor({
    workflow_execution_retention_period_in_days,
    aws_swf_domain_id = null,
    description = null,
    name = null,
    name_prefix = null
  }: {
    workflow_execution_retention_period_in_days: string,
    aws_swf_domain_id?: string|null,
    description?: string|null,
    name?: string|null,
    name_prefix?: string|null
  }) {
    this.workflow_execution_retention_period_in_days = workflow_execution_retention_period_in_days;
    this.aws_swf_domain_id = aws_swf_domain_id;
    this.description = description;
    this.name = name;
    this.name_prefix = name_prefix;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['workflow_execution_retention_period_in_days'] = this.workflow_execution_retention_period_in_days;
    if (this.aws_swf_domain_id !== null) {
      ih['aws_swf_domain_id'] = this.aws_swf_domain_id;
    }
    if (this.description !== null) {
      ih['description'] = this.description;
    }
    if (this.name !== null) {
      ih['name'] = this.name;
    }
    if (this.name_prefix !== null) {
      ih['name_prefix'] = this.name_prefix;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_swf_domain';
  }
}

export class Aws_swf_domainHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_swf_domainHandler';
  }
}

export class Aws_transfer_server implements PcoreValue {
  readonly aws_transfer_server_id: string|null;
  readonly arn: string|null;
  readonly endpoint: string|null;
  readonly force_destroy: boolean|null;
  readonly identity_provider_type: string|null;
  readonly invocation_role: string|null;
  readonly logging_role: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly url: string|null;

  constructor({
    aws_transfer_server_id = null,
    arn = null,
    endpoint = null,
    force_destroy = null,
    identity_provider_type = null,
    invocation_role = null,
    logging_role = null,
    tags = null,
    url = null
  }: {
    aws_transfer_server_id?: string|null,
    arn?: string|null,
    endpoint?: string|null,
    force_destroy?: boolean|null,
    identity_provider_type?: string|null,
    invocation_role?: string|null,
    logging_role?: string|null,
    tags?: {[s: string]: string}|null,
    url?: string|null
  }) {
    this.aws_transfer_server_id = aws_transfer_server_id;
    this.arn = arn;
    this.endpoint = endpoint;
    this.force_destroy = force_destroy;
    this.identity_provider_type = identity_provider_type;
    this.invocation_role = invocation_role;
    this.logging_role = logging_role;
    this.tags = tags;
    this.url = url;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_transfer_server_id !== null) {
      ih['aws_transfer_server_id'] = this.aws_transfer_server_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.endpoint !== null) {
      ih['endpoint'] = this.endpoint;
    }
    if (this.force_destroy !== null) {
      ih['force_destroy'] = this.force_destroy;
    }
    if (this.identity_provider_type !== null) {
      ih['identity_provider_type'] = this.identity_provider_type;
    }
    if (this.invocation_role !== null) {
      ih['invocation_role'] = this.invocation_role;
    }
    if (this.logging_role !== null) {
      ih['logging_role'] = this.logging_role;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.url !== null) {
      ih['url'] = this.url;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_transfer_server';
  }
}

export class Aws_transfer_serverHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_transfer_serverHandler';
  }
}

export class Aws_transfer_ssh_key implements PcoreValue {
  readonly body: string;
  readonly server_id: string;
  readonly user_name: string;
  readonly aws_transfer_ssh_key_id: string|null;

  constructor({
    body,
    server_id,
    user_name,
    aws_transfer_ssh_key_id = null
  }: {
    body: string,
    server_id: string,
    user_name: string,
    aws_transfer_ssh_key_id?: string|null
  }) {
    this.body = body;
    this.server_id = server_id;
    this.user_name = user_name;
    this.aws_transfer_ssh_key_id = aws_transfer_ssh_key_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['body'] = this.body;
    ih['server_id'] = this.server_id;
    ih['user_name'] = this.user_name;
    if (this.aws_transfer_ssh_key_id !== null) {
      ih['aws_transfer_ssh_key_id'] = this.aws_transfer_ssh_key_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_transfer_ssh_key';
  }
}

export class Aws_transfer_ssh_keyHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_transfer_ssh_keyHandler';
  }
}

export class Aws_transfer_user implements PcoreValue {
  readonly role: string;
  readonly server_id: string;
  readonly user_name: string;
  readonly aws_transfer_user_id: string|null;
  readonly arn: string|null;
  readonly home_directory: string|null;
  readonly policy: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    role,
    server_id,
    user_name,
    aws_transfer_user_id = null,
    arn = null,
    home_directory = null,
    policy = null,
    tags = null
  }: {
    role: string,
    server_id: string,
    user_name: string,
    aws_transfer_user_id?: string|null,
    arn?: string|null,
    home_directory?: string|null,
    policy?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.role = role;
    this.server_id = server_id;
    this.user_name = user_name;
    this.aws_transfer_user_id = aws_transfer_user_id;
    this.arn = arn;
    this.home_directory = home_directory;
    this.policy = policy;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['role'] = this.role;
    ih['server_id'] = this.server_id;
    ih['user_name'] = this.user_name;
    if (this.aws_transfer_user_id !== null) {
      ih['aws_transfer_user_id'] = this.aws_transfer_user_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.home_directory !== null) {
      ih['home_directory'] = this.home_directory;
    }
    if (this.policy !== null) {
      ih['policy'] = this.policy;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_transfer_user';
  }
}

export class Aws_transfer_userHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_transfer_userHandler';
  }
}

export class Aws_volume_attachment implements PcoreValue {
  readonly device_name: string;
  readonly instance_id: string;
  readonly volume_id: string;
  readonly aws_volume_attachment_id: string|null;
  readonly force_detach: boolean|null;
  readonly skip_destroy: boolean|null;

  constructor({
    device_name,
    instance_id,
    volume_id,
    aws_volume_attachment_id = null,
    force_detach = null,
    skip_destroy = null
  }: {
    device_name: string,
    instance_id: string,
    volume_id: string,
    aws_volume_attachment_id?: string|null,
    force_detach?: boolean|null,
    skip_destroy?: boolean|null
  }) {
    this.device_name = device_name;
    this.instance_id = instance_id;
    this.volume_id = volume_id;
    this.aws_volume_attachment_id = aws_volume_attachment_id;
    this.force_detach = force_detach;
    this.skip_destroy = skip_destroy;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['device_name'] = this.device_name;
    ih['instance_id'] = this.instance_id;
    ih['volume_id'] = this.volume_id;
    if (this.aws_volume_attachment_id !== null) {
      ih['aws_volume_attachment_id'] = this.aws_volume_attachment_id;
    }
    if (this.force_detach !== null) {
      ih['force_detach'] = this.force_detach;
    }
    if (this.skip_destroy !== null) {
      ih['skip_destroy'] = this.skip_destroy;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_volume_attachment';
  }
}

export class Aws_volume_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_volume_attachmentHandler';
  }
}

export class Aws_vpc implements PcoreValue {
  readonly cidr_block: string;
  readonly aws_vpc_id: string|null;
  readonly arn: string|null;
  readonly assign_generated_ipv6_cidr_block: boolean|null;
  readonly default_network_acl_id: string|null;
  readonly default_route_table_id: string|null;
  readonly default_security_group_id: string|null;
  readonly dhcp_options_id: string|null;
  readonly enable_classiclink: boolean|null;
  readonly enable_classiclink_dns_support: boolean|null;
  readonly enable_dns_hostnames: boolean|null;
  readonly enable_dns_support: boolean|null;
  readonly instance_tenancy: string|null;
  readonly ipv6_association_id: string|null;
  readonly ipv6_cidr_block: string|null;
  readonly main_route_table_id: string|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    cidr_block,
    aws_vpc_id = null,
    arn = null,
    assign_generated_ipv6_cidr_block = null,
    default_network_acl_id = null,
    default_route_table_id = null,
    default_security_group_id = null,
    dhcp_options_id = null,
    enable_classiclink = null,
    enable_classiclink_dns_support = null,
    enable_dns_hostnames = null,
    enable_dns_support = null,
    instance_tenancy = null,
    ipv6_association_id = null,
    ipv6_cidr_block = null,
    main_route_table_id = null,
    owner_id = null,
    tags = null
  }: {
    cidr_block: string,
    aws_vpc_id?: string|null,
    arn?: string|null,
    assign_generated_ipv6_cidr_block?: boolean|null,
    default_network_acl_id?: string|null,
    default_route_table_id?: string|null,
    default_security_group_id?: string|null,
    dhcp_options_id?: string|null,
    enable_classiclink?: boolean|null,
    enable_classiclink_dns_support?: boolean|null,
    enable_dns_hostnames?: boolean|null,
    enable_dns_support?: boolean|null,
    instance_tenancy?: string|null,
    ipv6_association_id?: string|null,
    ipv6_cidr_block?: string|null,
    main_route_table_id?: string|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.cidr_block = cidr_block;
    this.aws_vpc_id = aws_vpc_id;
    this.arn = arn;
    this.assign_generated_ipv6_cidr_block = assign_generated_ipv6_cidr_block;
    this.default_network_acl_id = default_network_acl_id;
    this.default_route_table_id = default_route_table_id;
    this.default_security_group_id = default_security_group_id;
    this.dhcp_options_id = dhcp_options_id;
    this.enable_classiclink = enable_classiclink;
    this.enable_classiclink_dns_support = enable_classiclink_dns_support;
    this.enable_dns_hostnames = enable_dns_hostnames;
    this.enable_dns_support = enable_dns_support;
    this.instance_tenancy = instance_tenancy;
    this.ipv6_association_id = ipv6_association_id;
    this.ipv6_cidr_block = ipv6_cidr_block;
    this.main_route_table_id = main_route_table_id;
    this.owner_id = owner_id;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cidr_block'] = this.cidr_block;
    if (this.aws_vpc_id !== null) {
      ih['aws_vpc_id'] = this.aws_vpc_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.assign_generated_ipv6_cidr_block !== null) {
      ih['assign_generated_ipv6_cidr_block'] = this.assign_generated_ipv6_cidr_block;
    }
    if (this.default_network_acl_id !== null) {
      ih['default_network_acl_id'] = this.default_network_acl_id;
    }
    if (this.default_route_table_id !== null) {
      ih['default_route_table_id'] = this.default_route_table_id;
    }
    if (this.default_security_group_id !== null) {
      ih['default_security_group_id'] = this.default_security_group_id;
    }
    if (this.dhcp_options_id !== null) {
      ih['dhcp_options_id'] = this.dhcp_options_id;
    }
    if (this.enable_classiclink !== null) {
      ih['enable_classiclink'] = this.enable_classiclink;
    }
    if (this.enable_classiclink_dns_support !== null) {
      ih['enable_classiclink_dns_support'] = this.enable_classiclink_dns_support;
    }
    if (this.enable_dns_hostnames !== null) {
      ih['enable_dns_hostnames'] = this.enable_dns_hostnames;
    }
    if (this.enable_dns_support !== null) {
      ih['enable_dns_support'] = this.enable_dns_support;
    }
    if (this.instance_tenancy !== null) {
      ih['instance_tenancy'] = this.instance_tenancy;
    }
    if (this.ipv6_association_id !== null) {
      ih['ipv6_association_id'] = this.ipv6_association_id;
    }
    if (this.ipv6_cidr_block !== null) {
      ih['ipv6_cidr_block'] = this.ipv6_cidr_block;
    }
    if (this.main_route_table_id !== null) {
      ih['main_route_table_id'] = this.main_route_table_id;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc';
  }
}

export class Aws_vpcHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpcHandler';
  }
}

export class Aws_vpc_dhcp_options implements PcoreValue {
  readonly aws_vpc_dhcp_options_id: string|null;
  readonly domain_name: string|null;
  readonly domain_name_servers: string[]|null;
  readonly netbios_name_servers: string[]|null;
  readonly netbios_node_type: string|null;
  readonly ntp_servers: string[]|null;
  readonly owner_id: string|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    aws_vpc_dhcp_options_id = null,
    domain_name = null,
    domain_name_servers = null,
    netbios_name_servers = null,
    netbios_node_type = null,
    ntp_servers = null,
    owner_id = null,
    tags = null
  }: {
    aws_vpc_dhcp_options_id?: string|null,
    domain_name?: string|null,
    domain_name_servers?: string[]|null,
    netbios_name_servers?: string[]|null,
    netbios_node_type?: string|null,
    ntp_servers?: string[]|null,
    owner_id?: string|null,
    tags?: {[s: string]: string}|null
  }) {
    this.aws_vpc_dhcp_options_id = aws_vpc_dhcp_options_id;
    this.domain_name = domain_name;
    this.domain_name_servers = domain_name_servers;
    this.netbios_name_servers = netbios_name_servers;
    this.netbios_node_type = netbios_node_type;
    this.ntp_servers = ntp_servers;
    this.owner_id = owner_id;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_vpc_dhcp_options_id !== null) {
      ih['aws_vpc_dhcp_options_id'] = this.aws_vpc_dhcp_options_id;
    }
    if (this.domain_name !== null) {
      ih['domain_name'] = this.domain_name;
    }
    if (this.domain_name_servers !== null) {
      ih['domain_name_servers'] = this.domain_name_servers;
    }
    if (this.netbios_name_servers !== null) {
      ih['netbios_name_servers'] = this.netbios_name_servers;
    }
    if (this.netbios_node_type !== null) {
      ih['netbios_node_type'] = this.netbios_node_type;
    }
    if (this.ntp_servers !== null) {
      ih['ntp_servers'] = this.ntp_servers;
    }
    if (this.owner_id !== null) {
      ih['owner_id'] = this.owner_id;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_dhcp_options';
  }
}

export class Aws_vpc_dhcp_optionsHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_dhcp_optionsHandler';
  }
}

export class Aws_vpc_dhcp_options_association implements PcoreValue {
  readonly dhcp_options_id: string;
  readonly vpc_id: string;
  readonly aws_vpc_dhcp_options_association_id: string|null;

  constructor({
    dhcp_options_id,
    vpc_id,
    aws_vpc_dhcp_options_association_id = null
  }: {
    dhcp_options_id: string,
    vpc_id: string,
    aws_vpc_dhcp_options_association_id?: string|null
  }) {
    this.dhcp_options_id = dhcp_options_id;
    this.vpc_id = vpc_id;
    this.aws_vpc_dhcp_options_association_id = aws_vpc_dhcp_options_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['dhcp_options_id'] = this.dhcp_options_id;
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_vpc_dhcp_options_association_id !== null) {
      ih['aws_vpc_dhcp_options_association_id'] = this.aws_vpc_dhcp_options_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_dhcp_options_association';
  }
}

export class Aws_vpc_dhcp_options_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_dhcp_options_associationHandler';
  }
}

export class Aws_vpc_endpoint implements PcoreValue {
  readonly service_name: string;
  readonly vpc_id: string;
  readonly aws_vpc_endpoint_id: string|null;
  readonly auto_accept: boolean|null;
  readonly cidr_blocks: string[]|null;
  readonly dns_entry: Aws_vpc_endpoint_dns_entry_538[]|null;
  readonly network_interface_ids: string[]|null;
  readonly policy: string|null;
  readonly prefix_list_id: string|null;
  readonly private_dns_enabled: boolean|null;
  readonly route_table_ids: string[]|null;
  readonly security_group_ids: string[]|null;
  readonly state: string|null;
  readonly subnet_ids: string[]|null;
  readonly vpc_endpoint_type: string|null;

  constructor({
    service_name,
    vpc_id,
    aws_vpc_endpoint_id = null,
    auto_accept = null,
    cidr_blocks = null,
    dns_entry = null,
    network_interface_ids = null,
    policy = null,
    prefix_list_id = null,
    private_dns_enabled = null,
    route_table_ids = null,
    security_group_ids = null,
    state = null,
    subnet_ids = null,
    vpc_endpoint_type = null
  }: {
    service_name: string,
    vpc_id: string,
    aws_vpc_endpoint_id?: string|null,
    auto_accept?: boolean|null,
    cidr_blocks?: string[]|null,
    dns_entry?: Aws_vpc_endpoint_dns_entry_538[]|null,
    network_interface_ids?: string[]|null,
    policy?: string|null,
    prefix_list_id?: string|null,
    private_dns_enabled?: boolean|null,
    route_table_ids?: string[]|null,
    security_group_ids?: string[]|null,
    state?: string|null,
    subnet_ids?: string[]|null,
    vpc_endpoint_type?: string|null
  }) {
    this.service_name = service_name;
    this.vpc_id = vpc_id;
    this.aws_vpc_endpoint_id = aws_vpc_endpoint_id;
    this.auto_accept = auto_accept;
    this.cidr_blocks = cidr_blocks;
    this.dns_entry = dns_entry;
    this.network_interface_ids = network_interface_ids;
    this.policy = policy;
    this.prefix_list_id = prefix_list_id;
    this.private_dns_enabled = private_dns_enabled;
    this.route_table_ids = route_table_ids;
    this.security_group_ids = security_group_ids;
    this.state = state;
    this.subnet_ids = subnet_ids;
    this.vpc_endpoint_type = vpc_endpoint_type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['service_name'] = this.service_name;
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_vpc_endpoint_id !== null) {
      ih['aws_vpc_endpoint_id'] = this.aws_vpc_endpoint_id;
    }
    if (this.auto_accept !== null) {
      ih['auto_accept'] = this.auto_accept;
    }
    if (this.cidr_blocks !== null) {
      ih['cidr_blocks'] = this.cidr_blocks;
    }
    if (this.dns_entry !== null) {
      ih['dns_entry'] = this.dns_entry;
    }
    if (this.network_interface_ids !== null) {
      ih['network_interface_ids'] = this.network_interface_ids;
    }
    if (this.policy !== null) {
      ih['policy'] = this.policy;
    }
    if (this.prefix_list_id !== null) {
      ih['prefix_list_id'] = this.prefix_list_id;
    }
    if (this.private_dns_enabled !== null) {
      ih['private_dns_enabled'] = this.private_dns_enabled;
    }
    if (this.route_table_ids !== null) {
      ih['route_table_ids'] = this.route_table_ids;
    }
    if (this.security_group_ids !== null) {
      ih['security_group_ids'] = this.security_group_ids;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    if (this.subnet_ids !== null) {
      ih['subnet_ids'] = this.subnet_ids;
    }
    if (this.vpc_endpoint_type !== null) {
      ih['vpc_endpoint_type'] = this.vpc_endpoint_type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint';
  }
}

export class Aws_vpc_endpointHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpointHandler';
  }
}

export class Aws_vpc_endpoint_connection_notification implements PcoreValue {
  readonly connection_events: string[];
  readonly connection_notification_arn: string;
  readonly aws_vpc_endpoint_connection_notification_id: string|null;
  readonly notification_type: string|null;
  readonly state: string|null;
  readonly vpc_endpoint_id: string|null;
  readonly vpc_endpoint_service_id: string|null;

  constructor({
    connection_events,
    connection_notification_arn,
    aws_vpc_endpoint_connection_notification_id = null,
    notification_type = null,
    state = null,
    vpc_endpoint_id = null,
    vpc_endpoint_service_id = null
  }: {
    connection_events: string[],
    connection_notification_arn: string,
    aws_vpc_endpoint_connection_notification_id?: string|null,
    notification_type?: string|null,
    state?: string|null,
    vpc_endpoint_id?: string|null,
    vpc_endpoint_service_id?: string|null
  }) {
    this.connection_events = connection_events;
    this.connection_notification_arn = connection_notification_arn;
    this.aws_vpc_endpoint_connection_notification_id = aws_vpc_endpoint_connection_notification_id;
    this.notification_type = notification_type;
    this.state = state;
    this.vpc_endpoint_id = vpc_endpoint_id;
    this.vpc_endpoint_service_id = vpc_endpoint_service_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['connection_events'] = this.connection_events;
    ih['connection_notification_arn'] = this.connection_notification_arn;
    if (this.aws_vpc_endpoint_connection_notification_id !== null) {
      ih['aws_vpc_endpoint_connection_notification_id'] = this.aws_vpc_endpoint_connection_notification_id;
    }
    if (this.notification_type !== null) {
      ih['notification_type'] = this.notification_type;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    if (this.vpc_endpoint_id !== null) {
      ih['vpc_endpoint_id'] = this.vpc_endpoint_id;
    }
    if (this.vpc_endpoint_service_id !== null) {
      ih['vpc_endpoint_service_id'] = this.vpc_endpoint_service_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_connection_notification';
  }
}

export class Aws_vpc_endpoint_connection_notificationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_connection_notificationHandler';
  }
}

export class Aws_vpc_endpoint_dns_entry_538 implements PcoreValue {
  readonly dns_name: string|null;
  readonly hosted_zone_id: string|null;

  constructor({
    dns_name = null,
    hosted_zone_id = null
  }: {
    dns_name?: string|null,
    hosted_zone_id?: string|null
  }) {
    this.dns_name = dns_name;
    this.hosted_zone_id = hosted_zone_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.dns_name !== null) {
      ih['dns_name'] = this.dns_name;
    }
    if (this.hosted_zone_id !== null) {
      ih['hosted_zone_id'] = this.hosted_zone_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_dns_entry_538';
  }
}

export class Aws_vpc_endpoint_route_table_association implements PcoreValue {
  readonly route_table_id: string;
  readonly vpc_endpoint_id: string;
  readonly aws_vpc_endpoint_route_table_association_id: string|null;

  constructor({
    route_table_id,
    vpc_endpoint_id,
    aws_vpc_endpoint_route_table_association_id = null
  }: {
    route_table_id: string,
    vpc_endpoint_id: string,
    aws_vpc_endpoint_route_table_association_id?: string|null
  }) {
    this.route_table_id = route_table_id;
    this.vpc_endpoint_id = vpc_endpoint_id;
    this.aws_vpc_endpoint_route_table_association_id = aws_vpc_endpoint_route_table_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['route_table_id'] = this.route_table_id;
    ih['vpc_endpoint_id'] = this.vpc_endpoint_id;
    if (this.aws_vpc_endpoint_route_table_association_id !== null) {
      ih['aws_vpc_endpoint_route_table_association_id'] = this.aws_vpc_endpoint_route_table_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_route_table_association';
  }
}

export class Aws_vpc_endpoint_route_table_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_route_table_associationHandler';
  }
}

export class Aws_vpc_endpoint_service implements PcoreValue {
  readonly acceptance_required: boolean;
  readonly network_load_balancer_arns: string[];
  readonly aws_vpc_endpoint_service_id: string|null;
  readonly allowed_principals: string[]|null;
  readonly availability_zones: string[]|null;
  readonly base_endpoint_dns_names: string[]|null;
  readonly private_dns_name: string|null;
  readonly service_name: string|null;
  readonly service_type: string|null;
  readonly state: string|null;

  constructor({
    acceptance_required,
    network_load_balancer_arns,
    aws_vpc_endpoint_service_id = null,
    allowed_principals = null,
    availability_zones = null,
    base_endpoint_dns_names = null,
    private_dns_name = null,
    service_name = null,
    service_type = null,
    state = null
  }: {
    acceptance_required: boolean,
    network_load_balancer_arns: string[],
    aws_vpc_endpoint_service_id?: string|null,
    allowed_principals?: string[]|null,
    availability_zones?: string[]|null,
    base_endpoint_dns_names?: string[]|null,
    private_dns_name?: string|null,
    service_name?: string|null,
    service_type?: string|null,
    state?: string|null
  }) {
    this.acceptance_required = acceptance_required;
    this.network_load_balancer_arns = network_load_balancer_arns;
    this.aws_vpc_endpoint_service_id = aws_vpc_endpoint_service_id;
    this.allowed_principals = allowed_principals;
    this.availability_zones = availability_zones;
    this.base_endpoint_dns_names = base_endpoint_dns_names;
    this.private_dns_name = private_dns_name;
    this.service_name = service_name;
    this.service_type = service_type;
    this.state = state;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['acceptance_required'] = this.acceptance_required;
    ih['network_load_balancer_arns'] = this.network_load_balancer_arns;
    if (this.aws_vpc_endpoint_service_id !== null) {
      ih['aws_vpc_endpoint_service_id'] = this.aws_vpc_endpoint_service_id;
    }
    if (this.allowed_principals !== null) {
      ih['allowed_principals'] = this.allowed_principals;
    }
    if (this.availability_zones !== null) {
      ih['availability_zones'] = this.availability_zones;
    }
    if (this.base_endpoint_dns_names !== null) {
      ih['base_endpoint_dns_names'] = this.base_endpoint_dns_names;
    }
    if (this.private_dns_name !== null) {
      ih['private_dns_name'] = this.private_dns_name;
    }
    if (this.service_name !== null) {
      ih['service_name'] = this.service_name;
    }
    if (this.service_type !== null) {
      ih['service_type'] = this.service_type;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_service';
  }
}

export class Aws_vpc_endpoint_serviceHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_serviceHandler';
  }
}

export class Aws_vpc_endpoint_service_allowed_principal implements PcoreValue {
  readonly principal_arn: string;
  readonly vpc_endpoint_service_id: string;
  readonly aws_vpc_endpoint_service_allowed_principal_id: string|null;

  constructor({
    principal_arn,
    vpc_endpoint_service_id,
    aws_vpc_endpoint_service_allowed_principal_id = null
  }: {
    principal_arn: string,
    vpc_endpoint_service_id: string,
    aws_vpc_endpoint_service_allowed_principal_id?: string|null
  }) {
    this.principal_arn = principal_arn;
    this.vpc_endpoint_service_id = vpc_endpoint_service_id;
    this.aws_vpc_endpoint_service_allowed_principal_id = aws_vpc_endpoint_service_allowed_principal_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['principal_arn'] = this.principal_arn;
    ih['vpc_endpoint_service_id'] = this.vpc_endpoint_service_id;
    if (this.aws_vpc_endpoint_service_allowed_principal_id !== null) {
      ih['aws_vpc_endpoint_service_allowed_principal_id'] = this.aws_vpc_endpoint_service_allowed_principal_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_service_allowed_principal';
  }
}

export class Aws_vpc_endpoint_service_allowed_principalHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_service_allowed_principalHandler';
  }
}

export class Aws_vpc_endpoint_subnet_association implements PcoreValue {
  readonly subnet_id: string;
  readonly vpc_endpoint_id: string;
  readonly aws_vpc_endpoint_subnet_association_id: string|null;

  constructor({
    subnet_id,
    vpc_endpoint_id,
    aws_vpc_endpoint_subnet_association_id = null
  }: {
    subnet_id: string,
    vpc_endpoint_id: string,
    aws_vpc_endpoint_subnet_association_id?: string|null
  }) {
    this.subnet_id = subnet_id;
    this.vpc_endpoint_id = vpc_endpoint_id;
    this.aws_vpc_endpoint_subnet_association_id = aws_vpc_endpoint_subnet_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['subnet_id'] = this.subnet_id;
    ih['vpc_endpoint_id'] = this.vpc_endpoint_id;
    if (this.aws_vpc_endpoint_subnet_association_id !== null) {
      ih['aws_vpc_endpoint_subnet_association_id'] = this.aws_vpc_endpoint_subnet_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_subnet_association';
  }
}

export class Aws_vpc_endpoint_subnet_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_endpoint_subnet_associationHandler';
  }
}

export class Aws_vpc_ipv4_cidr_block_association implements PcoreValue {
  readonly cidr_block: string;
  readonly vpc_id: string;
  readonly aws_vpc_ipv4_cidr_block_association_id: string|null;

  constructor({
    cidr_block,
    vpc_id,
    aws_vpc_ipv4_cidr_block_association_id = null
  }: {
    cidr_block: string,
    vpc_id: string,
    aws_vpc_ipv4_cidr_block_association_id?: string|null
  }) {
    this.cidr_block = cidr_block;
    this.vpc_id = vpc_id;
    this.aws_vpc_ipv4_cidr_block_association_id = aws_vpc_ipv4_cidr_block_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['cidr_block'] = this.cidr_block;
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_vpc_ipv4_cidr_block_association_id !== null) {
      ih['aws_vpc_ipv4_cidr_block_association_id'] = this.aws_vpc_ipv4_cidr_block_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_ipv4_cidr_block_association';
  }
}

export class Aws_vpc_ipv4_cidr_block_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_ipv4_cidr_block_associationHandler';
  }
}

export class Aws_vpc_peering_connection implements PcoreValue {
  readonly peer_vpc_id: string;
  readonly vpc_id: string;
  readonly aws_vpc_peering_connection_id: string|null;
  readonly accept_status: string|null;
  readonly accepter: Aws_vpc_peering_connection_accepter_539[]|null;
  readonly auto_accept: boolean|null;
  readonly peer_owner_id: string|null;
  readonly peer_region: string|null;
  readonly requester: Aws_vpc_peering_connection_requester_540[]|null;
  readonly tags: {[s: string]: string}|null;

  constructor({
    peer_vpc_id,
    vpc_id,
    aws_vpc_peering_connection_id = null,
    accept_status = null,
    accepter = null,
    auto_accept = null,
    peer_owner_id = null,
    peer_region = null,
    requester = null,
    tags = null
  }: {
    peer_vpc_id: string,
    vpc_id: string,
    aws_vpc_peering_connection_id?: string|null,
    accept_status?: string|null,
    accepter?: Aws_vpc_peering_connection_accepter_539[]|null,
    auto_accept?: boolean|null,
    peer_owner_id?: string|null,
    peer_region?: string|null,
    requester?: Aws_vpc_peering_connection_requester_540[]|null,
    tags?: {[s: string]: string}|null
  }) {
    this.peer_vpc_id = peer_vpc_id;
    this.vpc_id = vpc_id;
    this.aws_vpc_peering_connection_id = aws_vpc_peering_connection_id;
    this.accept_status = accept_status;
    this.accepter = accepter;
    this.auto_accept = auto_accept;
    this.peer_owner_id = peer_owner_id;
    this.peer_region = peer_region;
    this.requester = requester;
    this.tags = tags;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['peer_vpc_id'] = this.peer_vpc_id;
    ih['vpc_id'] = this.vpc_id;
    if (this.aws_vpc_peering_connection_id !== null) {
      ih['aws_vpc_peering_connection_id'] = this.aws_vpc_peering_connection_id;
    }
    if (this.accept_status !== null) {
      ih['accept_status'] = this.accept_status;
    }
    if (this.accepter !== null) {
      ih['accepter'] = this.accepter;
    }
    if (this.auto_accept !== null) {
      ih['auto_accept'] = this.auto_accept;
    }
    if (this.peer_owner_id !== null) {
      ih['peer_owner_id'] = this.peer_owner_id;
    }
    if (this.peer_region !== null) {
      ih['peer_region'] = this.peer_region;
    }
    if (this.requester !== null) {
      ih['requester'] = this.requester;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection';
  }
}

export class Aws_vpc_peering_connectionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connectionHandler';
  }
}

export class Aws_vpc_peering_connection_accepter implements PcoreValue {
  readonly vpc_peering_connection_id: string;
  readonly aws_vpc_peering_connection_accepter_id: string|null;
  readonly accept_status: string|null;
  readonly accepter: Aws_vpc_peering_connection_accepter_accepter_541[]|null;
  readonly auto_accept: boolean|null;
  readonly peer_owner_id: string|null;
  readonly peer_region: string|null;
  readonly peer_vpc_id: string|null;
  readonly requester: Aws_vpc_peering_connection_accepter_requester_542[]|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    vpc_peering_connection_id,
    aws_vpc_peering_connection_accepter_id = null,
    accept_status = null,
    accepter = null,
    auto_accept = null,
    peer_owner_id = null,
    peer_region = null,
    peer_vpc_id = null,
    requester = null,
    tags = null,
    vpc_id = null
  }: {
    vpc_peering_connection_id: string,
    aws_vpc_peering_connection_accepter_id?: string|null,
    accept_status?: string|null,
    accepter?: Aws_vpc_peering_connection_accepter_accepter_541[]|null,
    auto_accept?: boolean|null,
    peer_owner_id?: string|null,
    peer_region?: string|null,
    peer_vpc_id?: string|null,
    requester?: Aws_vpc_peering_connection_accepter_requester_542[]|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.vpc_peering_connection_id = vpc_peering_connection_id;
    this.aws_vpc_peering_connection_accepter_id = aws_vpc_peering_connection_accepter_id;
    this.accept_status = accept_status;
    this.accepter = accepter;
    this.auto_accept = auto_accept;
    this.peer_owner_id = peer_owner_id;
    this.peer_region = peer_region;
    this.peer_vpc_id = peer_vpc_id;
    this.requester = requester;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['vpc_peering_connection_id'] = this.vpc_peering_connection_id;
    if (this.aws_vpc_peering_connection_accepter_id !== null) {
      ih['aws_vpc_peering_connection_accepter_id'] = this.aws_vpc_peering_connection_accepter_id;
    }
    if (this.accept_status !== null) {
      ih['accept_status'] = this.accept_status;
    }
    if (this.accepter !== null) {
      ih['accepter'] = this.accepter;
    }
    if (this.auto_accept !== null) {
      ih['auto_accept'] = this.auto_accept;
    }
    if (this.peer_owner_id !== null) {
      ih['peer_owner_id'] = this.peer_owner_id;
    }
    if (this.peer_region !== null) {
      ih['peer_region'] = this.peer_region;
    }
    if (this.peer_vpc_id !== null) {
      ih['peer_vpc_id'] = this.peer_vpc_id;
    }
    if (this.requester !== null) {
      ih['requester'] = this.requester;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_accepter';
  }
}

export class Aws_vpc_peering_connection_accepterHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_accepterHandler';
  }
}

export class Aws_vpc_peering_connection_accepter_539 implements PcoreValue {
  readonly allow_classic_link_to_remote_vpc: boolean|null;
  readonly allow_remote_vpc_dns_resolution: boolean|null;
  readonly allow_vpc_to_remote_classic_link: boolean|null;

  constructor({
    allow_classic_link_to_remote_vpc = null,
    allow_remote_vpc_dns_resolution = null,
    allow_vpc_to_remote_classic_link = null
  }: {
    allow_classic_link_to_remote_vpc?: boolean|null,
    allow_remote_vpc_dns_resolution?: boolean|null,
    allow_vpc_to_remote_classic_link?: boolean|null
  }) {
    this.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc;
    this.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution;
    this.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allow_classic_link_to_remote_vpc !== null) {
      ih['allow_classic_link_to_remote_vpc'] = this.allow_classic_link_to_remote_vpc;
    }
    if (this.allow_remote_vpc_dns_resolution !== null) {
      ih['allow_remote_vpc_dns_resolution'] = this.allow_remote_vpc_dns_resolution;
    }
    if (this.allow_vpc_to_remote_classic_link !== null) {
      ih['allow_vpc_to_remote_classic_link'] = this.allow_vpc_to_remote_classic_link;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_accepter_539';
  }
}

export class Aws_vpc_peering_connection_accepter_accepter_541 implements PcoreValue {
  readonly allow_classic_link_to_remote_vpc: boolean|null;
  readonly allow_remote_vpc_dns_resolution: boolean|null;
  readonly allow_vpc_to_remote_classic_link: boolean|null;

  constructor({
    allow_classic_link_to_remote_vpc = null,
    allow_remote_vpc_dns_resolution = null,
    allow_vpc_to_remote_classic_link = null
  }: {
    allow_classic_link_to_remote_vpc?: boolean|null,
    allow_remote_vpc_dns_resolution?: boolean|null,
    allow_vpc_to_remote_classic_link?: boolean|null
  }) {
    this.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc;
    this.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution;
    this.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allow_classic_link_to_remote_vpc !== null) {
      ih['allow_classic_link_to_remote_vpc'] = this.allow_classic_link_to_remote_vpc;
    }
    if (this.allow_remote_vpc_dns_resolution !== null) {
      ih['allow_remote_vpc_dns_resolution'] = this.allow_remote_vpc_dns_resolution;
    }
    if (this.allow_vpc_to_remote_classic_link !== null) {
      ih['allow_vpc_to_remote_classic_link'] = this.allow_vpc_to_remote_classic_link;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_accepter_accepter_541';
  }
}

export class Aws_vpc_peering_connection_accepter_requester_542 implements PcoreValue {
  readonly allow_classic_link_to_remote_vpc: boolean|null;
  readonly allow_remote_vpc_dns_resolution: boolean|null;
  readonly allow_vpc_to_remote_classic_link: boolean|null;

  constructor({
    allow_classic_link_to_remote_vpc = null,
    allow_remote_vpc_dns_resolution = null,
    allow_vpc_to_remote_classic_link = null
  }: {
    allow_classic_link_to_remote_vpc?: boolean|null,
    allow_remote_vpc_dns_resolution?: boolean|null,
    allow_vpc_to_remote_classic_link?: boolean|null
  }) {
    this.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc;
    this.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution;
    this.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allow_classic_link_to_remote_vpc !== null) {
      ih['allow_classic_link_to_remote_vpc'] = this.allow_classic_link_to_remote_vpc;
    }
    if (this.allow_remote_vpc_dns_resolution !== null) {
      ih['allow_remote_vpc_dns_resolution'] = this.allow_remote_vpc_dns_resolution;
    }
    if (this.allow_vpc_to_remote_classic_link !== null) {
      ih['allow_vpc_to_remote_classic_link'] = this.allow_vpc_to_remote_classic_link;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_accepter_requester_542';
  }
}

export class Aws_vpc_peering_connection_options implements PcoreValue {
  readonly vpc_peering_connection_id: string;
  readonly aws_vpc_peering_connection_options_id: string|null;
  readonly accepter: Aws_vpc_peering_connection_options_accepter_543[]|null;
  readonly requester: Aws_vpc_peering_connection_options_requester_544[]|null;

  constructor({
    vpc_peering_connection_id,
    aws_vpc_peering_connection_options_id = null,
    accepter = null,
    requester = null
  }: {
    vpc_peering_connection_id: string,
    aws_vpc_peering_connection_options_id?: string|null,
    accepter?: Aws_vpc_peering_connection_options_accepter_543[]|null,
    requester?: Aws_vpc_peering_connection_options_requester_544[]|null
  }) {
    this.vpc_peering_connection_id = vpc_peering_connection_id;
    this.aws_vpc_peering_connection_options_id = aws_vpc_peering_connection_options_id;
    this.accepter = accepter;
    this.requester = requester;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['vpc_peering_connection_id'] = this.vpc_peering_connection_id;
    if (this.aws_vpc_peering_connection_options_id !== null) {
      ih['aws_vpc_peering_connection_options_id'] = this.aws_vpc_peering_connection_options_id;
    }
    if (this.accepter !== null) {
      ih['accepter'] = this.accepter;
    }
    if (this.requester !== null) {
      ih['requester'] = this.requester;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_options';
  }
}

export class Aws_vpc_peering_connection_optionsHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_optionsHandler';
  }
}

export class Aws_vpc_peering_connection_options_accepter_543 implements PcoreValue {
  readonly allow_classic_link_to_remote_vpc: boolean|null;
  readonly allow_remote_vpc_dns_resolution: boolean|null;
  readonly allow_vpc_to_remote_classic_link: boolean|null;

  constructor({
    allow_classic_link_to_remote_vpc = null,
    allow_remote_vpc_dns_resolution = null,
    allow_vpc_to_remote_classic_link = null
  }: {
    allow_classic_link_to_remote_vpc?: boolean|null,
    allow_remote_vpc_dns_resolution?: boolean|null,
    allow_vpc_to_remote_classic_link?: boolean|null
  }) {
    this.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc;
    this.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution;
    this.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allow_classic_link_to_remote_vpc !== null) {
      ih['allow_classic_link_to_remote_vpc'] = this.allow_classic_link_to_remote_vpc;
    }
    if (this.allow_remote_vpc_dns_resolution !== null) {
      ih['allow_remote_vpc_dns_resolution'] = this.allow_remote_vpc_dns_resolution;
    }
    if (this.allow_vpc_to_remote_classic_link !== null) {
      ih['allow_vpc_to_remote_classic_link'] = this.allow_vpc_to_remote_classic_link;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_options_accepter_543';
  }
}

export class Aws_vpc_peering_connection_options_requester_544 implements PcoreValue {
  readonly allow_classic_link_to_remote_vpc: boolean|null;
  readonly allow_remote_vpc_dns_resolution: boolean|null;
  readonly allow_vpc_to_remote_classic_link: boolean|null;

  constructor({
    allow_classic_link_to_remote_vpc = null,
    allow_remote_vpc_dns_resolution = null,
    allow_vpc_to_remote_classic_link = null
  }: {
    allow_classic_link_to_remote_vpc?: boolean|null,
    allow_remote_vpc_dns_resolution?: boolean|null,
    allow_vpc_to_remote_classic_link?: boolean|null
  }) {
    this.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc;
    this.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution;
    this.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allow_classic_link_to_remote_vpc !== null) {
      ih['allow_classic_link_to_remote_vpc'] = this.allow_classic_link_to_remote_vpc;
    }
    if (this.allow_remote_vpc_dns_resolution !== null) {
      ih['allow_remote_vpc_dns_resolution'] = this.allow_remote_vpc_dns_resolution;
    }
    if (this.allow_vpc_to_remote_classic_link !== null) {
      ih['allow_vpc_to_remote_classic_link'] = this.allow_vpc_to_remote_classic_link;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_options_requester_544';
  }
}

export class Aws_vpc_peering_connection_requester_540 implements PcoreValue {
  readonly allow_classic_link_to_remote_vpc: boolean|null;
  readonly allow_remote_vpc_dns_resolution: boolean|null;
  readonly allow_vpc_to_remote_classic_link: boolean|null;

  constructor({
    allow_classic_link_to_remote_vpc = null,
    allow_remote_vpc_dns_resolution = null,
    allow_vpc_to_remote_classic_link = null
  }: {
    allow_classic_link_to_remote_vpc?: boolean|null,
    allow_remote_vpc_dns_resolution?: boolean|null,
    allow_vpc_to_remote_classic_link?: boolean|null
  }) {
    this.allow_classic_link_to_remote_vpc = allow_classic_link_to_remote_vpc;
    this.allow_remote_vpc_dns_resolution = allow_remote_vpc_dns_resolution;
    this.allow_vpc_to_remote_classic_link = allow_vpc_to_remote_classic_link;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.allow_classic_link_to_remote_vpc !== null) {
      ih['allow_classic_link_to_remote_vpc'] = this.allow_classic_link_to_remote_vpc;
    }
    if (this.allow_remote_vpc_dns_resolution !== null) {
      ih['allow_remote_vpc_dns_resolution'] = this.allow_remote_vpc_dns_resolution;
    }
    if (this.allow_vpc_to_remote_classic_link !== null) {
      ih['allow_vpc_to_remote_classic_link'] = this.allow_vpc_to_remote_classic_link;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpc_peering_connection_requester_540';
  }
}

export class Aws_vpn_connection implements PcoreValue {
  readonly customer_gateway_id: string;
  readonly type: string;
  readonly aws_vpn_connection_id: string|null;
  readonly customer_gateway_configuration: string|null;
  readonly routes: Aws_vpn_connection_routes_545[]|null;
  readonly static_routes_only: boolean|null;
  readonly tags: {[s: string]: string}|null;
  readonly transit_gateway_id: string|null;
  readonly tunnel1_address: string|null;
  readonly tunnel1_bgp_asn: string|null;
  readonly tunnel1_bgp_holdtime: number|null;
  readonly tunnel1_cgw_inside_address: string|null;
  readonly tunnel1_inside_cidr: string|null;
  readonly tunnel1_preshared_key: string|null;
  readonly tunnel1_vgw_inside_address: string|null;
  readonly tunnel2_address: string|null;
  readonly tunnel2_bgp_asn: string|null;
  readonly tunnel2_bgp_holdtime: number|null;
  readonly tunnel2_cgw_inside_address: string|null;
  readonly tunnel2_inside_cidr: string|null;
  readonly tunnel2_preshared_key: string|null;
  readonly tunnel2_vgw_inside_address: string|null;
  readonly vgw_telemetry: Aws_vpn_connection_vgw_telemetry_546[]|null;
  readonly vpn_gateway_id: string|null;

  constructor({
    customer_gateway_id,
    type,
    aws_vpn_connection_id = null,
    customer_gateway_configuration = null,
    routes = null,
    static_routes_only = null,
    tags = null,
    transit_gateway_id = null,
    tunnel1_address = null,
    tunnel1_bgp_asn = null,
    tunnel1_bgp_holdtime = null,
    tunnel1_cgw_inside_address = null,
    tunnel1_inside_cidr = null,
    tunnel1_preshared_key = null,
    tunnel1_vgw_inside_address = null,
    tunnel2_address = null,
    tunnel2_bgp_asn = null,
    tunnel2_bgp_holdtime = null,
    tunnel2_cgw_inside_address = null,
    tunnel2_inside_cidr = null,
    tunnel2_preshared_key = null,
    tunnel2_vgw_inside_address = null,
    vgw_telemetry = null,
    vpn_gateway_id = null
  }: {
    customer_gateway_id: string,
    type: string,
    aws_vpn_connection_id?: string|null,
    customer_gateway_configuration?: string|null,
    routes?: Aws_vpn_connection_routes_545[]|null,
    static_routes_only?: boolean|null,
    tags?: {[s: string]: string}|null,
    transit_gateway_id?: string|null,
    tunnel1_address?: string|null,
    tunnel1_bgp_asn?: string|null,
    tunnel1_bgp_holdtime?: number|null,
    tunnel1_cgw_inside_address?: string|null,
    tunnel1_inside_cidr?: string|null,
    tunnel1_preshared_key?: string|null,
    tunnel1_vgw_inside_address?: string|null,
    tunnel2_address?: string|null,
    tunnel2_bgp_asn?: string|null,
    tunnel2_bgp_holdtime?: number|null,
    tunnel2_cgw_inside_address?: string|null,
    tunnel2_inside_cidr?: string|null,
    tunnel2_preshared_key?: string|null,
    tunnel2_vgw_inside_address?: string|null,
    vgw_telemetry?: Aws_vpn_connection_vgw_telemetry_546[]|null,
    vpn_gateway_id?: string|null
  }) {
    this.customer_gateway_id = customer_gateway_id;
    this.type = type;
    this.aws_vpn_connection_id = aws_vpn_connection_id;
    this.customer_gateway_configuration = customer_gateway_configuration;
    this.routes = routes;
    this.static_routes_only = static_routes_only;
    this.tags = tags;
    this.transit_gateway_id = transit_gateway_id;
    this.tunnel1_address = tunnel1_address;
    this.tunnel1_bgp_asn = tunnel1_bgp_asn;
    this.tunnel1_bgp_holdtime = tunnel1_bgp_holdtime;
    this.tunnel1_cgw_inside_address = tunnel1_cgw_inside_address;
    this.tunnel1_inside_cidr = tunnel1_inside_cidr;
    this.tunnel1_preshared_key = tunnel1_preshared_key;
    this.tunnel1_vgw_inside_address = tunnel1_vgw_inside_address;
    this.tunnel2_address = tunnel2_address;
    this.tunnel2_bgp_asn = tunnel2_bgp_asn;
    this.tunnel2_bgp_holdtime = tunnel2_bgp_holdtime;
    this.tunnel2_cgw_inside_address = tunnel2_cgw_inside_address;
    this.tunnel2_inside_cidr = tunnel2_inside_cidr;
    this.tunnel2_preshared_key = tunnel2_preshared_key;
    this.tunnel2_vgw_inside_address = tunnel2_vgw_inside_address;
    this.vgw_telemetry = vgw_telemetry;
    this.vpn_gateway_id = vpn_gateway_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['customer_gateway_id'] = this.customer_gateway_id;
    ih['type'] = this.type;
    if (this.aws_vpn_connection_id !== null) {
      ih['aws_vpn_connection_id'] = this.aws_vpn_connection_id;
    }
    if (this.customer_gateway_configuration !== null) {
      ih['customer_gateway_configuration'] = this.customer_gateway_configuration;
    }
    if (this.routes !== null) {
      ih['routes'] = this.routes;
    }
    if (this.static_routes_only !== null) {
      ih['static_routes_only'] = this.static_routes_only;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.transit_gateway_id !== null) {
      ih['transit_gateway_id'] = this.transit_gateway_id;
    }
    if (this.tunnel1_address !== null) {
      ih['tunnel1_address'] = this.tunnel1_address;
    }
    if (this.tunnel1_bgp_asn !== null) {
      ih['tunnel1_bgp_asn'] = this.tunnel1_bgp_asn;
    }
    if (this.tunnel1_bgp_holdtime !== null) {
      ih['tunnel1_bgp_holdtime'] = this.tunnel1_bgp_holdtime;
    }
    if (this.tunnel1_cgw_inside_address !== null) {
      ih['tunnel1_cgw_inside_address'] = this.tunnel1_cgw_inside_address;
    }
    if (this.tunnel1_inside_cidr !== null) {
      ih['tunnel1_inside_cidr'] = this.tunnel1_inside_cidr;
    }
    if (this.tunnel1_preshared_key !== null) {
      ih['tunnel1_preshared_key'] = this.tunnel1_preshared_key;
    }
    if (this.tunnel1_vgw_inside_address !== null) {
      ih['tunnel1_vgw_inside_address'] = this.tunnel1_vgw_inside_address;
    }
    if (this.tunnel2_address !== null) {
      ih['tunnel2_address'] = this.tunnel2_address;
    }
    if (this.tunnel2_bgp_asn !== null) {
      ih['tunnel2_bgp_asn'] = this.tunnel2_bgp_asn;
    }
    if (this.tunnel2_bgp_holdtime !== null) {
      ih['tunnel2_bgp_holdtime'] = this.tunnel2_bgp_holdtime;
    }
    if (this.tunnel2_cgw_inside_address !== null) {
      ih['tunnel2_cgw_inside_address'] = this.tunnel2_cgw_inside_address;
    }
    if (this.tunnel2_inside_cidr !== null) {
      ih['tunnel2_inside_cidr'] = this.tunnel2_inside_cidr;
    }
    if (this.tunnel2_preshared_key !== null) {
      ih['tunnel2_preshared_key'] = this.tunnel2_preshared_key;
    }
    if (this.tunnel2_vgw_inside_address !== null) {
      ih['tunnel2_vgw_inside_address'] = this.tunnel2_vgw_inside_address;
    }
    if (this.vgw_telemetry !== null) {
      ih['vgw_telemetry'] = this.vgw_telemetry;
    }
    if (this.vpn_gateway_id !== null) {
      ih['vpn_gateway_id'] = this.vpn_gateway_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_connection';
  }
}

export class Aws_vpn_connectionHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_connectionHandler';
  }
}

export class Aws_vpn_connection_route implements PcoreValue {
  readonly destination_cidr_block: string;
  readonly vpn_connection_id: string;
  readonly aws_vpn_connection_route_id: string|null;

  constructor({
    destination_cidr_block,
    vpn_connection_id,
    aws_vpn_connection_route_id = null
  }: {
    destination_cidr_block: string,
    vpn_connection_id: string,
    aws_vpn_connection_route_id?: string|null
  }) {
    this.destination_cidr_block = destination_cidr_block;
    this.vpn_connection_id = vpn_connection_id;
    this.aws_vpn_connection_route_id = aws_vpn_connection_route_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['destination_cidr_block'] = this.destination_cidr_block;
    ih['vpn_connection_id'] = this.vpn_connection_id;
    if (this.aws_vpn_connection_route_id !== null) {
      ih['aws_vpn_connection_route_id'] = this.aws_vpn_connection_route_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_connection_route';
  }
}

export class Aws_vpn_connection_routeHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_connection_routeHandler';
  }
}

export class Aws_vpn_connection_routes_545 implements PcoreValue {
  readonly destination_cidr_block: string|null;
  readonly source: string|null;
  readonly state: string|null;

  constructor({
    destination_cidr_block = null,
    source = null,
    state = null
  }: {
    destination_cidr_block?: string|null,
    source?: string|null,
    state?: string|null
  }) {
    this.destination_cidr_block = destination_cidr_block;
    this.source = source;
    this.state = state;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.destination_cidr_block !== null) {
      ih['destination_cidr_block'] = this.destination_cidr_block;
    }
    if (this.source !== null) {
      ih['source'] = this.source;
    }
    if (this.state !== null) {
      ih['state'] = this.state;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_connection_routes_545';
  }
}

export class Aws_vpn_connection_vgw_telemetry_546 implements PcoreValue {
  readonly accepted_route_count: number|null;
  readonly last_status_change: string|null;
  readonly outside_ip_address: string|null;
  readonly status: string|null;
  readonly status_message: string|null;

  constructor({
    accepted_route_count = null,
    last_status_change = null,
    outside_ip_address = null,
    status = null,
    status_message = null
  }: {
    accepted_route_count?: number|null,
    last_status_change?: string|null,
    outside_ip_address?: string|null,
    status?: string|null,
    status_message?: string|null
  }) {
    this.accepted_route_count = accepted_route_count;
    this.last_status_change = last_status_change;
    this.outside_ip_address = outside_ip_address;
    this.status = status;
    this.status_message = status_message;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.accepted_route_count !== null) {
      ih['accepted_route_count'] = this.accepted_route_count;
    }
    if (this.last_status_change !== null) {
      ih['last_status_change'] = this.last_status_change;
    }
    if (this.outside_ip_address !== null) {
      ih['outside_ip_address'] = this.outside_ip_address;
    }
    if (this.status !== null) {
      ih['status'] = this.status;
    }
    if (this.status_message !== null) {
      ih['status_message'] = this.status_message;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_connection_vgw_telemetry_546';
  }
}

export class Aws_vpn_gateway implements PcoreValue {
  readonly aws_vpn_gateway_id: string|null;
  readonly amazon_side_asn: string|null;
  readonly availability_zone: string|null;
  readonly tags: {[s: string]: string}|null;
  readonly vpc_id: string|null;

  constructor({
    aws_vpn_gateway_id = null,
    amazon_side_asn = null,
    availability_zone = null,
    tags = null,
    vpc_id = null
  }: {
    aws_vpn_gateway_id?: string|null,
    amazon_side_asn?: string|null,
    availability_zone?: string|null,
    tags?: {[s: string]: string}|null,
    vpc_id?: string|null
  }) {
    this.aws_vpn_gateway_id = aws_vpn_gateway_id;
    this.amazon_side_asn = amazon_side_asn;
    this.availability_zone = availability_zone;
    this.tags = tags;
    this.vpc_id = vpc_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    if (this.aws_vpn_gateway_id !== null) {
      ih['aws_vpn_gateway_id'] = this.aws_vpn_gateway_id;
    }
    if (this.amazon_side_asn !== null) {
      ih['amazon_side_asn'] = this.amazon_side_asn;
    }
    if (this.availability_zone !== null) {
      ih['availability_zone'] = this.availability_zone;
    }
    if (this.tags !== null) {
      ih['tags'] = this.tags;
    }
    if (this.vpc_id !== null) {
      ih['vpc_id'] = this.vpc_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_gateway';
  }
}

export class Aws_vpn_gatewayHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_gatewayHandler';
  }
}

export class Aws_vpn_gateway_attachment implements PcoreValue {
  readonly vpc_id: string;
  readonly vpn_gateway_id: string;
  readonly aws_vpn_gateway_attachment_id: string|null;

  constructor({
    vpc_id,
    vpn_gateway_id,
    aws_vpn_gateway_attachment_id = null
  }: {
    vpc_id: string,
    vpn_gateway_id: string,
    aws_vpn_gateway_attachment_id?: string|null
  }) {
    this.vpc_id = vpc_id;
    this.vpn_gateway_id = vpn_gateway_id;
    this.aws_vpn_gateway_attachment_id = aws_vpn_gateway_attachment_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['vpc_id'] = this.vpc_id;
    ih['vpn_gateway_id'] = this.vpn_gateway_id;
    if (this.aws_vpn_gateway_attachment_id !== null) {
      ih['aws_vpn_gateway_attachment_id'] = this.aws_vpn_gateway_attachment_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_gateway_attachment';
  }
}

export class Aws_vpn_gateway_attachmentHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_gateway_attachmentHandler';
  }
}

export class Aws_vpn_gateway_route_propagation implements PcoreValue {
  readonly route_table_id: string;
  readonly vpn_gateway_id: string;
  readonly aws_vpn_gateway_route_propagation_id: string|null;

  constructor({
    route_table_id,
    vpn_gateway_id,
    aws_vpn_gateway_route_propagation_id = null
  }: {
    route_table_id: string,
    vpn_gateway_id: string,
    aws_vpn_gateway_route_propagation_id?: string|null
  }) {
    this.route_table_id = route_table_id;
    this.vpn_gateway_id = vpn_gateway_id;
    this.aws_vpn_gateway_route_propagation_id = aws_vpn_gateway_route_propagation_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['route_table_id'] = this.route_table_id;
    ih['vpn_gateway_id'] = this.vpn_gateway_id;
    if (this.aws_vpn_gateway_route_propagation_id !== null) {
      ih['aws_vpn_gateway_route_propagation_id'] = this.aws_vpn_gateway_route_propagation_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_gateway_route_propagation';
  }
}

export class Aws_vpn_gateway_route_propagationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_vpn_gateway_route_propagationHandler';
  }
}

export class Aws_waf_byte_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_waf_byte_match_set_id: string|null;
  readonly byte_match_tuples: Aws_waf_byte_match_set_byte_match_tuples_547[]|null;

  constructor({
    name,
    aws_waf_byte_match_set_id = null,
    byte_match_tuples = null
  }: {
    name: string,
    aws_waf_byte_match_set_id?: string|null,
    byte_match_tuples?: Aws_waf_byte_match_set_byte_match_tuples_547[]|null
  }) {
    this.name = name;
    this.aws_waf_byte_match_set_id = aws_waf_byte_match_set_id;
    this.byte_match_tuples = byte_match_tuples;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_waf_byte_match_set_id !== null) {
      ih['aws_waf_byte_match_set_id'] = this.aws_waf_byte_match_set_id;
    }
    if (this.byte_match_tuples !== null) {
      ih['byte_match_tuples'] = this.byte_match_tuples;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_byte_match_set';
  }
}

export class Aws_waf_byte_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_byte_match_setHandler';
  }
}

export class Aws_waf_byte_match_set_byte_match_tuples_547 implements PcoreValue {
  readonly field_to_match: Aws_waf_byte_match_set_byte_match_tuples_547_field_to_match_548[];
  readonly positional_constraint: string;
  readonly text_transformation: string;
  readonly target_string: string|null;

  constructor({
    field_to_match,
    positional_constraint,
    text_transformation,
    target_string = null
  }: {
    field_to_match: Aws_waf_byte_match_set_byte_match_tuples_547_field_to_match_548[],
    positional_constraint: string,
    text_transformation: string,
    target_string?: string|null
  }) {
    this.field_to_match = field_to_match;
    this.positional_constraint = positional_constraint;
    this.text_transformation = text_transformation;
    this.target_string = target_string;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['positional_constraint'] = this.positional_constraint;
    ih['text_transformation'] = this.text_transformation;
    if (this.target_string !== null) {
      ih['target_string'] = this.target_string;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_byte_match_set_byte_match_tuples_547';
  }
}

export class Aws_waf_byte_match_set_byte_match_tuples_547_field_to_match_548 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_byte_match_set_byte_match_tuples_547_field_to_match_548';
  }
}

export class Aws_waf_geo_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_waf_geo_match_set_id: string|null;
  readonly geo_match_constraint: Aws_waf_geo_match_set_geo_match_constraint_549[]|null;

  constructor({
    name,
    aws_waf_geo_match_set_id = null,
    geo_match_constraint = null
  }: {
    name: string,
    aws_waf_geo_match_set_id?: string|null,
    geo_match_constraint?: Aws_waf_geo_match_set_geo_match_constraint_549[]|null
  }) {
    this.name = name;
    this.aws_waf_geo_match_set_id = aws_waf_geo_match_set_id;
    this.geo_match_constraint = geo_match_constraint;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_waf_geo_match_set_id !== null) {
      ih['aws_waf_geo_match_set_id'] = this.aws_waf_geo_match_set_id;
    }
    if (this.geo_match_constraint !== null) {
      ih['geo_match_constraint'] = this.geo_match_constraint;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_geo_match_set';
  }
}

export class Aws_waf_geo_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_geo_match_setHandler';
  }
}

export class Aws_waf_geo_match_set_geo_match_constraint_549 implements PcoreValue {
  readonly type: string;
  readonly value: string;

  constructor({
    type,
    value
  }: {
    type: string,
    value: string
  }) {
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_geo_match_set_geo_match_constraint_549';
  }
}

export class Aws_waf_ipset implements PcoreValue {
  readonly name: string;
  readonly aws_waf_ipset_id: string|null;
  readonly arn: string|null;
  readonly ip_set_descriptors: Aws_waf_ipset_ip_set_descriptors_550[]|null;

  constructor({
    name,
    aws_waf_ipset_id = null,
    arn = null,
    ip_set_descriptors = null
  }: {
    name: string,
    aws_waf_ipset_id?: string|null,
    arn?: string|null,
    ip_set_descriptors?: Aws_waf_ipset_ip_set_descriptors_550[]|null
  }) {
    this.name = name;
    this.aws_waf_ipset_id = aws_waf_ipset_id;
    this.arn = arn;
    this.ip_set_descriptors = ip_set_descriptors;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_waf_ipset_id !== null) {
      ih['aws_waf_ipset_id'] = this.aws_waf_ipset_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.ip_set_descriptors !== null) {
      ih['ip_set_descriptors'] = this.ip_set_descriptors;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_ipset';
  }
}

export class Aws_waf_ipsetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_ipsetHandler';
  }
}

export class Aws_waf_ipset_ip_set_descriptors_550 implements PcoreValue {
  readonly type: string;
  readonly value: string;

  constructor({
    type,
    value
  }: {
    type: string,
    value: string
  }) {
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_ipset_ip_set_descriptors_550';
  }
}

export class Aws_waf_rate_based_rule implements PcoreValue {
  readonly metric_name: string;
  readonly name: string;
  readonly rate_key: string;
  readonly rate_limit: number;
  readonly aws_waf_rate_based_rule_id: string|null;
  readonly predicates: Aws_waf_rate_based_rule_predicates_551[]|null;

  constructor({
    metric_name,
    name,
    rate_key,
    rate_limit,
    aws_waf_rate_based_rule_id = null,
    predicates = null
  }: {
    metric_name: string,
    name: string,
    rate_key: string,
    rate_limit: number,
    aws_waf_rate_based_rule_id?: string|null,
    predicates?: Aws_waf_rate_based_rule_predicates_551[]|null
  }) {
    this.metric_name = metric_name;
    this.name = name;
    this.rate_key = rate_key;
    this.rate_limit = rate_limit;
    this.aws_waf_rate_based_rule_id = aws_waf_rate_based_rule_id;
    this.predicates = predicates;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['name'] = this.name;
    ih['rate_key'] = this.rate_key;
    ih['rate_limit'] = this.rate_limit;
    if (this.aws_waf_rate_based_rule_id !== null) {
      ih['aws_waf_rate_based_rule_id'] = this.aws_waf_rate_based_rule_id;
    }
    if (this.predicates !== null) {
      ih['predicates'] = this.predicates;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rate_based_rule';
  }
}

export class Aws_waf_rate_based_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rate_based_ruleHandler';
  }
}

export class Aws_waf_rate_based_rule_predicates_551 implements PcoreValue {
  readonly data_id: string;
  readonly negated: boolean;
  readonly type: string;

  constructor({
    data_id,
    negated,
    type
  }: {
    data_id: string,
    negated: boolean,
    type: string
  }) {
    this.data_id = data_id;
    this.negated = negated;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['data_id'] = this.data_id;
    ih['negated'] = this.negated;
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rate_based_rule_predicates_551';
  }
}

export class Aws_waf_regex_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_waf_regex_match_set_id: string|null;
  readonly regex_match_tuple: Aws_waf_regex_match_set_regex_match_tuple_552[]|null;

  constructor({
    name,
    aws_waf_regex_match_set_id = null,
    regex_match_tuple = null
  }: {
    name: string,
    aws_waf_regex_match_set_id?: string|null,
    regex_match_tuple?: Aws_waf_regex_match_set_regex_match_tuple_552[]|null
  }) {
    this.name = name;
    this.aws_waf_regex_match_set_id = aws_waf_regex_match_set_id;
    this.regex_match_tuple = regex_match_tuple;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_waf_regex_match_set_id !== null) {
      ih['aws_waf_regex_match_set_id'] = this.aws_waf_regex_match_set_id;
    }
    if (this.regex_match_tuple !== null) {
      ih['regex_match_tuple'] = this.regex_match_tuple;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_regex_match_set';
  }
}

export class Aws_waf_regex_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_regex_match_setHandler';
  }
}

export class Aws_waf_regex_match_set_regex_match_tuple_552 implements PcoreValue {
  readonly field_to_match: Aws_waf_regex_match_set_regex_match_tuple_552_field_to_match_553[];
  readonly regex_pattern_set_id: string;
  readonly text_transformation: string;

  constructor({
    field_to_match,
    regex_pattern_set_id,
    text_transformation
  }: {
    field_to_match: Aws_waf_regex_match_set_regex_match_tuple_552_field_to_match_553[],
    regex_pattern_set_id: string,
    text_transformation: string
  }) {
    this.field_to_match = field_to_match;
    this.regex_pattern_set_id = regex_pattern_set_id;
    this.text_transformation = text_transformation;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['regex_pattern_set_id'] = this.regex_pattern_set_id;
    ih['text_transformation'] = this.text_transformation;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_regex_match_set_regex_match_tuple_552';
  }
}

export class Aws_waf_regex_match_set_regex_match_tuple_552_field_to_match_553 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_regex_match_set_regex_match_tuple_552_field_to_match_553';
  }
}

export class Aws_waf_regex_pattern_set implements PcoreValue {
  readonly name: string;
  readonly aws_waf_regex_pattern_set_id: string|null;
  readonly regex_pattern_strings: string[]|null;

  constructor({
    name,
    aws_waf_regex_pattern_set_id = null,
    regex_pattern_strings = null
  }: {
    name: string,
    aws_waf_regex_pattern_set_id?: string|null,
    regex_pattern_strings?: string[]|null
  }) {
    this.name = name;
    this.aws_waf_regex_pattern_set_id = aws_waf_regex_pattern_set_id;
    this.regex_pattern_strings = regex_pattern_strings;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_waf_regex_pattern_set_id !== null) {
      ih['aws_waf_regex_pattern_set_id'] = this.aws_waf_regex_pattern_set_id;
    }
    if (this.regex_pattern_strings !== null) {
      ih['regex_pattern_strings'] = this.regex_pattern_strings;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_regex_pattern_set';
  }
}

export class Aws_waf_regex_pattern_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_regex_pattern_setHandler';
  }
}

export class Aws_waf_rule implements PcoreValue {
  readonly metric_name: string;
  readonly name: string;
  readonly aws_waf_rule_id: string|null;
  readonly predicates: Aws_waf_rule_predicates_554[]|null;

  constructor({
    metric_name,
    name,
    aws_waf_rule_id = null,
    predicates = null
  }: {
    metric_name: string,
    name: string,
    aws_waf_rule_id?: string|null,
    predicates?: Aws_waf_rule_predicates_554[]|null
  }) {
    this.metric_name = metric_name;
    this.name = name;
    this.aws_waf_rule_id = aws_waf_rule_id;
    this.predicates = predicates;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['name'] = this.name;
    if (this.aws_waf_rule_id !== null) {
      ih['aws_waf_rule_id'] = this.aws_waf_rule_id;
    }
    if (this.predicates !== null) {
      ih['predicates'] = this.predicates;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rule';
  }
}

export class Aws_waf_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_ruleHandler';
  }
}

export class Aws_waf_rule_group implements PcoreValue {
  readonly metric_name: string;
  readonly name: string;
  readonly aws_waf_rule_group_id: string|null;
  readonly activated_rule: Aws_waf_rule_group_activated_rule_555[]|null;

  constructor({
    metric_name,
    name,
    aws_waf_rule_group_id = null,
    activated_rule = null
  }: {
    metric_name: string,
    name: string,
    aws_waf_rule_group_id?: string|null,
    activated_rule?: Aws_waf_rule_group_activated_rule_555[]|null
  }) {
    this.metric_name = metric_name;
    this.name = name;
    this.aws_waf_rule_group_id = aws_waf_rule_group_id;
    this.activated_rule = activated_rule;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['name'] = this.name;
    if (this.aws_waf_rule_group_id !== null) {
      ih['aws_waf_rule_group_id'] = this.aws_waf_rule_group_id;
    }
    if (this.activated_rule !== null) {
      ih['activated_rule'] = this.activated_rule;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rule_group';
  }
}

export class Aws_waf_rule_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rule_groupHandler';
  }
}

export class Aws_waf_rule_group_activated_rule_555 implements PcoreValue {
  readonly action: Aws_waf_rule_group_activated_rule_555_action_556[];
  readonly priority: number;
  readonly rule_id: string;
  readonly type: string|null;

  constructor({
    action,
    priority,
    rule_id,
    type = null
  }: {
    action: Aws_waf_rule_group_activated_rule_555_action_556[],
    priority: number,
    rule_id: string,
    type?: string|null
  }) {
    this.action = action;
    this.priority = priority;
    this.rule_id = rule_id;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['priority'] = this.priority;
    ih['rule_id'] = this.rule_id;
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rule_group_activated_rule_555';
  }
}

export class Aws_waf_rule_group_activated_rule_555_action_556 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rule_group_activated_rule_555_action_556';
  }
}

export class Aws_waf_rule_predicates_554 implements PcoreValue {
  readonly data_id: string;
  readonly negated: boolean;
  readonly type: string;

  constructor({
    data_id,
    negated,
    type
  }: {
    data_id: string,
    negated: boolean,
    type: string
  }) {
    this.data_id = data_id;
    this.negated = negated;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['data_id'] = this.data_id;
    ih['negated'] = this.negated;
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_rule_predicates_554';
  }
}

export class Aws_waf_size_constraint_set implements PcoreValue {
  readonly name: string;
  readonly aws_waf_size_constraint_set_id: string|null;
  readonly size_constraints: Aws_waf_size_constraint_set_size_constraints_557[]|null;

  constructor({
    name,
    aws_waf_size_constraint_set_id = null,
    size_constraints = null
  }: {
    name: string,
    aws_waf_size_constraint_set_id?: string|null,
    size_constraints?: Aws_waf_size_constraint_set_size_constraints_557[]|null
  }) {
    this.name = name;
    this.aws_waf_size_constraint_set_id = aws_waf_size_constraint_set_id;
    this.size_constraints = size_constraints;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_waf_size_constraint_set_id !== null) {
      ih['aws_waf_size_constraint_set_id'] = this.aws_waf_size_constraint_set_id;
    }
    if (this.size_constraints !== null) {
      ih['size_constraints'] = this.size_constraints;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_size_constraint_set';
  }
}

export class Aws_waf_size_constraint_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_size_constraint_setHandler';
  }
}

export class Aws_waf_size_constraint_set_size_constraints_557 implements PcoreValue {
  readonly comparison_operator: string;
  readonly field_to_match: Aws_waf_size_constraint_set_size_constraints_557_field_to_match_558[];
  readonly size: number;
  readonly text_transformation: string;

  constructor({
    comparison_operator,
    field_to_match,
    size,
    text_transformation
  }: {
    comparison_operator: string,
    field_to_match: Aws_waf_size_constraint_set_size_constraints_557_field_to_match_558[],
    size: number,
    text_transformation: string
  }) {
    this.comparison_operator = comparison_operator;
    this.field_to_match = field_to_match;
    this.size = size;
    this.text_transformation = text_transformation;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['comparison_operator'] = this.comparison_operator;
    ih['field_to_match'] = this.field_to_match;
    ih['size'] = this.size;
    ih['text_transformation'] = this.text_transformation;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_size_constraint_set_size_constraints_557';
  }
}

export class Aws_waf_size_constraint_set_size_constraints_557_field_to_match_558 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_size_constraint_set_size_constraints_557_field_to_match_558';
  }
}

export class Aws_waf_sql_injection_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_waf_sql_injection_match_set_id: string|null;
  readonly sql_injection_match_tuples: Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559[]|null;

  constructor({
    name,
    aws_waf_sql_injection_match_set_id = null,
    sql_injection_match_tuples = null
  }: {
    name: string,
    aws_waf_sql_injection_match_set_id?: string|null,
    sql_injection_match_tuples?: Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559[]|null
  }) {
    this.name = name;
    this.aws_waf_sql_injection_match_set_id = aws_waf_sql_injection_match_set_id;
    this.sql_injection_match_tuples = sql_injection_match_tuples;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_waf_sql_injection_match_set_id !== null) {
      ih['aws_waf_sql_injection_match_set_id'] = this.aws_waf_sql_injection_match_set_id;
    }
    if (this.sql_injection_match_tuples !== null) {
      ih['sql_injection_match_tuples'] = this.sql_injection_match_tuples;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_sql_injection_match_set';
  }
}

export class Aws_waf_sql_injection_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_sql_injection_match_setHandler';
  }
}

export class Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559 implements PcoreValue {
  readonly field_to_match: Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559_field_to_match_560[];
  readonly text_transformation: string;

  constructor({
    field_to_match,
    text_transformation
  }: {
    field_to_match: Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559_field_to_match_560[],
    text_transformation: string
  }) {
    this.field_to_match = field_to_match;
    this.text_transformation = text_transformation;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['text_transformation'] = this.text_transformation;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559';
  }
}

export class Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559_field_to_match_560 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_sql_injection_match_set_sql_injection_match_tuples_559_field_to_match_560';
  }
}

export class Aws_waf_web_acl implements PcoreValue {
  readonly default_action: Aws_waf_web_acl_default_action_561[];
  readonly metric_name: string;
  readonly name: string;
  readonly aws_waf_web_acl_id: string|null;
  readonly rules: Aws_waf_web_acl_rules_562[]|null;

  constructor({
    default_action,
    metric_name,
    name,
    aws_waf_web_acl_id = null,
    rules = null
  }: {
    default_action: Aws_waf_web_acl_default_action_561[],
    metric_name: string,
    name: string,
    aws_waf_web_acl_id?: string|null,
    rules?: Aws_waf_web_acl_rules_562[]|null
  }) {
    this.default_action = default_action;
    this.metric_name = metric_name;
    this.name = name;
    this.aws_waf_web_acl_id = aws_waf_web_acl_id;
    this.rules = rules;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_action'] = this.default_action;
    ih['metric_name'] = this.metric_name;
    ih['name'] = this.name;
    if (this.aws_waf_web_acl_id !== null) {
      ih['aws_waf_web_acl_id'] = this.aws_waf_web_acl_id;
    }
    if (this.rules !== null) {
      ih['rules'] = this.rules;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_web_acl';
  }
}

export class Aws_waf_web_aclHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_web_aclHandler';
  }
}

export class Aws_waf_web_acl_default_action_561 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_web_acl_default_action_561';
  }
}

export class Aws_waf_web_acl_rules_562 implements PcoreValue {
  readonly priority: number;
  readonly rule_id: string;
  readonly action: Aws_waf_web_acl_rules_562_action_563[]|null;
  readonly override_action: Aws_waf_web_acl_rules_562_override_action_564[]|null;
  readonly type: string|null;

  constructor({
    priority,
    rule_id,
    action = null,
    override_action = null,
    type = null
  }: {
    priority: number,
    rule_id: string,
    action?: Aws_waf_web_acl_rules_562_action_563[]|null,
    override_action?: Aws_waf_web_acl_rules_562_override_action_564[]|null,
    type?: string|null
  }) {
    this.priority = priority;
    this.rule_id = rule_id;
    this.action = action;
    this.override_action = override_action;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['priority'] = this.priority;
    ih['rule_id'] = this.rule_id;
    if (this.action !== null) {
      ih['action'] = this.action;
    }
    if (this.override_action !== null) {
      ih['override_action'] = this.override_action;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_web_acl_rules_562';
  }
}

export class Aws_waf_web_acl_rules_562_action_563 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_web_acl_rules_562_action_563';
  }
}

export class Aws_waf_web_acl_rules_562_override_action_564 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_web_acl_rules_562_override_action_564';
  }
}

export class Aws_waf_xss_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_waf_xss_match_set_id: string|null;
  readonly xss_match_tuples: Aws_waf_xss_match_set_xss_match_tuples_565[]|null;

  constructor({
    name,
    aws_waf_xss_match_set_id = null,
    xss_match_tuples = null
  }: {
    name: string,
    aws_waf_xss_match_set_id?: string|null,
    xss_match_tuples?: Aws_waf_xss_match_set_xss_match_tuples_565[]|null
  }) {
    this.name = name;
    this.aws_waf_xss_match_set_id = aws_waf_xss_match_set_id;
    this.xss_match_tuples = xss_match_tuples;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_waf_xss_match_set_id !== null) {
      ih['aws_waf_xss_match_set_id'] = this.aws_waf_xss_match_set_id;
    }
    if (this.xss_match_tuples !== null) {
      ih['xss_match_tuples'] = this.xss_match_tuples;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_xss_match_set';
  }
}

export class Aws_waf_xss_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_xss_match_setHandler';
  }
}

export class Aws_waf_xss_match_set_xss_match_tuples_565 implements PcoreValue {
  readonly field_to_match: Aws_waf_xss_match_set_xss_match_tuples_565_field_to_match_566[];
  readonly text_transformation: string;

  constructor({
    field_to_match,
    text_transformation
  }: {
    field_to_match: Aws_waf_xss_match_set_xss_match_tuples_565_field_to_match_566[],
    text_transformation: string
  }) {
    this.field_to_match = field_to_match;
    this.text_transformation = text_transformation;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['text_transformation'] = this.text_transformation;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_xss_match_set_xss_match_tuples_565';
  }
}

export class Aws_waf_xss_match_set_xss_match_tuples_565_field_to_match_566 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_waf_xss_match_set_xss_match_tuples_565_field_to_match_566';
  }
}

export class Aws_wafregional_byte_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_wafregional_byte_match_set_id: string|null;
  readonly byte_match_tuple: Aws_wafregional_byte_match_set_byte_match_tuple_567[]|null;
  readonly byte_match_tuples: Aws_wafregional_byte_match_set_byte_match_tuples_569[]|null;

  constructor({
    name,
    aws_wafregional_byte_match_set_id = null,
    byte_match_tuple = null,
    byte_match_tuples = null
  }: {
    name: string,
    aws_wafregional_byte_match_set_id?: string|null,
    byte_match_tuple?: Aws_wafregional_byte_match_set_byte_match_tuple_567[]|null,
    byte_match_tuples?: Aws_wafregional_byte_match_set_byte_match_tuples_569[]|null
  }) {
    this.name = name;
    this.aws_wafregional_byte_match_set_id = aws_wafregional_byte_match_set_id;
    this.byte_match_tuple = byte_match_tuple;
    this.byte_match_tuples = byte_match_tuples;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_wafregional_byte_match_set_id !== null) {
      ih['aws_wafregional_byte_match_set_id'] = this.aws_wafregional_byte_match_set_id;
    }
    if (this.byte_match_tuple !== null) {
      ih['byte_match_tuple'] = this.byte_match_tuple;
    }
    if (this.byte_match_tuples !== null) {
      ih['byte_match_tuples'] = this.byte_match_tuples;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_byte_match_set';
  }
}

export class Aws_wafregional_byte_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_byte_match_setHandler';
  }
}

export class Aws_wafregional_byte_match_set_byte_match_tuple_567 implements PcoreValue {
  readonly field_to_match: Aws_wafregional_byte_match_set_byte_match_tuple_567_field_to_match_568[];
  readonly positional_constraint: string;
  readonly text_transformation: string;
  readonly target_string: string|null;

  constructor({
    field_to_match,
    positional_constraint,
    text_transformation,
    target_string = null
  }: {
    field_to_match: Aws_wafregional_byte_match_set_byte_match_tuple_567_field_to_match_568[],
    positional_constraint: string,
    text_transformation: string,
    target_string?: string|null
  }) {
    this.field_to_match = field_to_match;
    this.positional_constraint = positional_constraint;
    this.text_transformation = text_transformation;
    this.target_string = target_string;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['positional_constraint'] = this.positional_constraint;
    ih['text_transformation'] = this.text_transformation;
    if (this.target_string !== null) {
      ih['target_string'] = this.target_string;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_byte_match_set_byte_match_tuple_567';
  }
}

export class Aws_wafregional_byte_match_set_byte_match_tuple_567_field_to_match_568 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_byte_match_set_byte_match_tuple_567_field_to_match_568';
  }
}

export class Aws_wafregional_byte_match_set_byte_match_tuples_569 implements PcoreValue {
  readonly field_to_match: Aws_wafregional_byte_match_set_byte_match_tuples_569_field_to_match_570[];
  readonly positional_constraint: string;
  readonly text_transformation: string;
  readonly target_string: string|null;

  constructor({
    field_to_match,
    positional_constraint,
    text_transformation,
    target_string = null
  }: {
    field_to_match: Aws_wafregional_byte_match_set_byte_match_tuples_569_field_to_match_570[],
    positional_constraint: string,
    text_transformation: string,
    target_string?: string|null
  }) {
    this.field_to_match = field_to_match;
    this.positional_constraint = positional_constraint;
    this.text_transformation = text_transformation;
    this.target_string = target_string;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['positional_constraint'] = this.positional_constraint;
    ih['text_transformation'] = this.text_transformation;
    if (this.target_string !== null) {
      ih['target_string'] = this.target_string;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_byte_match_set_byte_match_tuples_569';
  }
}

export class Aws_wafregional_byte_match_set_byte_match_tuples_569_field_to_match_570 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_byte_match_set_byte_match_tuples_569_field_to_match_570';
  }
}

export class Aws_wafregional_geo_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_wafregional_geo_match_set_id: string|null;
  readonly geo_match_constraint: Aws_wafregional_geo_match_set_geo_match_constraint_571[]|null;

  constructor({
    name,
    aws_wafregional_geo_match_set_id = null,
    geo_match_constraint = null
  }: {
    name: string,
    aws_wafregional_geo_match_set_id?: string|null,
    geo_match_constraint?: Aws_wafregional_geo_match_set_geo_match_constraint_571[]|null
  }) {
    this.name = name;
    this.aws_wafregional_geo_match_set_id = aws_wafregional_geo_match_set_id;
    this.geo_match_constraint = geo_match_constraint;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_wafregional_geo_match_set_id !== null) {
      ih['aws_wafregional_geo_match_set_id'] = this.aws_wafregional_geo_match_set_id;
    }
    if (this.geo_match_constraint !== null) {
      ih['geo_match_constraint'] = this.geo_match_constraint;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_geo_match_set';
  }
}

export class Aws_wafregional_geo_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_geo_match_setHandler';
  }
}

export class Aws_wafregional_geo_match_set_geo_match_constraint_571 implements PcoreValue {
  readonly type: string;
  readonly value: string;

  constructor({
    type,
    value
  }: {
    type: string,
    value: string
  }) {
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_geo_match_set_geo_match_constraint_571';
  }
}

export class Aws_wafregional_ipset implements PcoreValue {
  readonly name: string;
  readonly aws_wafregional_ipset_id: string|null;
  readonly arn: string|null;
  readonly ip_set_descriptor: Aws_wafregional_ipset_ip_set_descriptor_572[]|null;

  constructor({
    name,
    aws_wafregional_ipset_id = null,
    arn = null,
    ip_set_descriptor = null
  }: {
    name: string,
    aws_wafregional_ipset_id?: string|null,
    arn?: string|null,
    ip_set_descriptor?: Aws_wafregional_ipset_ip_set_descriptor_572[]|null
  }) {
    this.name = name;
    this.aws_wafregional_ipset_id = aws_wafregional_ipset_id;
    this.arn = arn;
    this.ip_set_descriptor = ip_set_descriptor;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_wafregional_ipset_id !== null) {
      ih['aws_wafregional_ipset_id'] = this.aws_wafregional_ipset_id;
    }
    if (this.arn !== null) {
      ih['arn'] = this.arn;
    }
    if (this.ip_set_descriptor !== null) {
      ih['ip_set_descriptor'] = this.ip_set_descriptor;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_ipset';
  }
}

export class Aws_wafregional_ipsetHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_ipsetHandler';
  }
}

export class Aws_wafregional_ipset_ip_set_descriptor_572 implements PcoreValue {
  readonly type: string;
  readonly value: string;

  constructor({
    type,
    value
  }: {
    type: string,
    value: string
  }) {
    this.type = type;
    this.value = value;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    ih['value'] = this.value;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_ipset_ip_set_descriptor_572';
  }
}

export class Aws_wafregional_rate_based_rule implements PcoreValue {
  readonly metric_name: string;
  readonly name: string;
  readonly rate_key: string;
  readonly rate_limit: number;
  readonly aws_wafregional_rate_based_rule_id: string|null;
  readonly predicate: Aws_wafregional_rate_based_rule_predicate_573[]|null;

  constructor({
    metric_name,
    name,
    rate_key,
    rate_limit,
    aws_wafregional_rate_based_rule_id = null,
    predicate = null
  }: {
    metric_name: string,
    name: string,
    rate_key: string,
    rate_limit: number,
    aws_wafregional_rate_based_rule_id?: string|null,
    predicate?: Aws_wafregional_rate_based_rule_predicate_573[]|null
  }) {
    this.metric_name = metric_name;
    this.name = name;
    this.rate_key = rate_key;
    this.rate_limit = rate_limit;
    this.aws_wafregional_rate_based_rule_id = aws_wafregional_rate_based_rule_id;
    this.predicate = predicate;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['name'] = this.name;
    ih['rate_key'] = this.rate_key;
    ih['rate_limit'] = this.rate_limit;
    if (this.aws_wafregional_rate_based_rule_id !== null) {
      ih['aws_wafregional_rate_based_rule_id'] = this.aws_wafregional_rate_based_rule_id;
    }
    if (this.predicate !== null) {
      ih['predicate'] = this.predicate;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rate_based_rule';
  }
}

export class Aws_wafregional_rate_based_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rate_based_ruleHandler';
  }
}

export class Aws_wafregional_rate_based_rule_predicate_573 implements PcoreValue {
  readonly data_id: string;
  readonly negated: boolean;
  readonly type: string;

  constructor({
    data_id,
    negated,
    type
  }: {
    data_id: string,
    negated: boolean,
    type: string
  }) {
    this.data_id = data_id;
    this.negated = negated;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['data_id'] = this.data_id;
    ih['negated'] = this.negated;
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rate_based_rule_predicate_573';
  }
}

export class Aws_wafregional_regex_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_wafregional_regex_match_set_id: string|null;
  readonly regex_match_tuple: Aws_wafregional_regex_match_set_regex_match_tuple_574[]|null;

  constructor({
    name,
    aws_wafregional_regex_match_set_id = null,
    regex_match_tuple = null
  }: {
    name: string,
    aws_wafregional_regex_match_set_id?: string|null,
    regex_match_tuple?: Aws_wafregional_regex_match_set_regex_match_tuple_574[]|null
  }) {
    this.name = name;
    this.aws_wafregional_regex_match_set_id = aws_wafregional_regex_match_set_id;
    this.regex_match_tuple = regex_match_tuple;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_wafregional_regex_match_set_id !== null) {
      ih['aws_wafregional_regex_match_set_id'] = this.aws_wafregional_regex_match_set_id;
    }
    if (this.regex_match_tuple !== null) {
      ih['regex_match_tuple'] = this.regex_match_tuple;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_regex_match_set';
  }
}

export class Aws_wafregional_regex_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_regex_match_setHandler';
  }
}

export class Aws_wafregional_regex_match_set_regex_match_tuple_574 implements PcoreValue {
  readonly field_to_match: Aws_wafregional_regex_match_set_regex_match_tuple_574_field_to_match_575[];
  readonly regex_pattern_set_id: string;
  readonly text_transformation: string;

  constructor({
    field_to_match,
    regex_pattern_set_id,
    text_transformation
  }: {
    field_to_match: Aws_wafregional_regex_match_set_regex_match_tuple_574_field_to_match_575[],
    regex_pattern_set_id: string,
    text_transformation: string
  }) {
    this.field_to_match = field_to_match;
    this.regex_pattern_set_id = regex_pattern_set_id;
    this.text_transformation = text_transformation;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['regex_pattern_set_id'] = this.regex_pattern_set_id;
    ih['text_transformation'] = this.text_transformation;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_regex_match_set_regex_match_tuple_574';
  }
}

export class Aws_wafregional_regex_match_set_regex_match_tuple_574_field_to_match_575 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_regex_match_set_regex_match_tuple_574_field_to_match_575';
  }
}

export class Aws_wafregional_regex_pattern_set implements PcoreValue {
  readonly name: string;
  readonly aws_wafregional_regex_pattern_set_id: string|null;
  readonly regex_pattern_strings: string[]|null;

  constructor({
    name,
    aws_wafregional_regex_pattern_set_id = null,
    regex_pattern_strings = null
  }: {
    name: string,
    aws_wafregional_regex_pattern_set_id?: string|null,
    regex_pattern_strings?: string[]|null
  }) {
    this.name = name;
    this.aws_wafregional_regex_pattern_set_id = aws_wafregional_regex_pattern_set_id;
    this.regex_pattern_strings = regex_pattern_strings;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_wafregional_regex_pattern_set_id !== null) {
      ih['aws_wafregional_regex_pattern_set_id'] = this.aws_wafregional_regex_pattern_set_id;
    }
    if (this.regex_pattern_strings !== null) {
      ih['regex_pattern_strings'] = this.regex_pattern_strings;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_regex_pattern_set';
  }
}

export class Aws_wafregional_regex_pattern_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_regex_pattern_setHandler';
  }
}

export class Aws_wafregional_rule implements PcoreValue {
  readonly metric_name: string;
  readonly name: string;
  readonly aws_wafregional_rule_id: string|null;
  readonly predicate: Aws_wafregional_rule_predicate_576[]|null;

  constructor({
    metric_name,
    name,
    aws_wafregional_rule_id = null,
    predicate = null
  }: {
    metric_name: string,
    name: string,
    aws_wafregional_rule_id?: string|null,
    predicate?: Aws_wafregional_rule_predicate_576[]|null
  }) {
    this.metric_name = metric_name;
    this.name = name;
    this.aws_wafregional_rule_id = aws_wafregional_rule_id;
    this.predicate = predicate;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['name'] = this.name;
    if (this.aws_wafregional_rule_id !== null) {
      ih['aws_wafregional_rule_id'] = this.aws_wafregional_rule_id;
    }
    if (this.predicate !== null) {
      ih['predicate'] = this.predicate;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rule';
  }
}

export class Aws_wafregional_ruleHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_ruleHandler';
  }
}

export class Aws_wafregional_rule_group implements PcoreValue {
  readonly metric_name: string;
  readonly name: string;
  readonly aws_wafregional_rule_group_id: string|null;
  readonly activated_rule: Aws_wafregional_rule_group_activated_rule_577[]|null;

  constructor({
    metric_name,
    name,
    aws_wafregional_rule_group_id = null,
    activated_rule = null
  }: {
    metric_name: string,
    name: string,
    aws_wafregional_rule_group_id?: string|null,
    activated_rule?: Aws_wafregional_rule_group_activated_rule_577[]|null
  }) {
    this.metric_name = metric_name;
    this.name = name;
    this.aws_wafregional_rule_group_id = aws_wafregional_rule_group_id;
    this.activated_rule = activated_rule;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['metric_name'] = this.metric_name;
    ih['name'] = this.name;
    if (this.aws_wafregional_rule_group_id !== null) {
      ih['aws_wafregional_rule_group_id'] = this.aws_wafregional_rule_group_id;
    }
    if (this.activated_rule !== null) {
      ih['activated_rule'] = this.activated_rule;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rule_group';
  }
}

export class Aws_wafregional_rule_groupHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rule_groupHandler';
  }
}

export class Aws_wafregional_rule_group_activated_rule_577 implements PcoreValue {
  readonly action: Aws_wafregional_rule_group_activated_rule_577_action_578[];
  readonly priority: number;
  readonly rule_id: string;
  readonly type: string|null;

  constructor({
    action,
    priority,
    rule_id,
    type = null
  }: {
    action: Aws_wafregional_rule_group_activated_rule_577_action_578[],
    priority: number,
    rule_id: string,
    type?: string|null
  }) {
    this.action = action;
    this.priority = priority;
    this.rule_id = rule_id;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['action'] = this.action;
    ih['priority'] = this.priority;
    ih['rule_id'] = this.rule_id;
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rule_group_activated_rule_577';
  }
}

export class Aws_wafregional_rule_group_activated_rule_577_action_578 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rule_group_activated_rule_577_action_578';
  }
}

export class Aws_wafregional_rule_predicate_576 implements PcoreValue {
  readonly data_id: string;
  readonly negated: boolean;
  readonly type: string;

  constructor({
    data_id,
    negated,
    type
  }: {
    data_id: string,
    negated: boolean,
    type: string
  }) {
    this.data_id = data_id;
    this.negated = negated;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['data_id'] = this.data_id;
    ih['negated'] = this.negated;
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_rule_predicate_576';
  }
}

export class Aws_wafregional_size_constraint_set implements PcoreValue {
  readonly name: string;
  readonly aws_wafregional_size_constraint_set_id: string|null;
  readonly size_constraints: Aws_wafregional_size_constraint_set_size_constraints_579[]|null;

  constructor({
    name,
    aws_wafregional_size_constraint_set_id = null,
    size_constraints = null
  }: {
    name: string,
    aws_wafregional_size_constraint_set_id?: string|null,
    size_constraints?: Aws_wafregional_size_constraint_set_size_constraints_579[]|null
  }) {
    this.name = name;
    this.aws_wafregional_size_constraint_set_id = aws_wafregional_size_constraint_set_id;
    this.size_constraints = size_constraints;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_wafregional_size_constraint_set_id !== null) {
      ih['aws_wafregional_size_constraint_set_id'] = this.aws_wafregional_size_constraint_set_id;
    }
    if (this.size_constraints !== null) {
      ih['size_constraints'] = this.size_constraints;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_size_constraint_set';
  }
}

export class Aws_wafregional_size_constraint_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_size_constraint_setHandler';
  }
}

export class Aws_wafregional_size_constraint_set_size_constraints_579 implements PcoreValue {
  readonly comparison_operator: string;
  readonly field_to_match: Aws_wafregional_size_constraint_set_size_constraints_579_field_to_match_580[];
  readonly size: number;
  readonly text_transformation: string;

  constructor({
    comparison_operator,
    field_to_match,
    size,
    text_transformation
  }: {
    comparison_operator: string,
    field_to_match: Aws_wafregional_size_constraint_set_size_constraints_579_field_to_match_580[],
    size: number,
    text_transformation: string
  }) {
    this.comparison_operator = comparison_operator;
    this.field_to_match = field_to_match;
    this.size = size;
    this.text_transformation = text_transformation;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['comparison_operator'] = this.comparison_operator;
    ih['field_to_match'] = this.field_to_match;
    ih['size'] = this.size;
    ih['text_transformation'] = this.text_transformation;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_size_constraint_set_size_constraints_579';
  }
}

export class Aws_wafregional_size_constraint_set_size_constraints_579_field_to_match_580 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_size_constraint_set_size_constraints_579_field_to_match_580';
  }
}

export class Aws_wafregional_sql_injection_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_wafregional_sql_injection_match_set_id: string|null;
  readonly sql_injection_match_tuple: Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581[]|null;

  constructor({
    name,
    aws_wafregional_sql_injection_match_set_id = null,
    sql_injection_match_tuple = null
  }: {
    name: string,
    aws_wafregional_sql_injection_match_set_id?: string|null,
    sql_injection_match_tuple?: Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581[]|null
  }) {
    this.name = name;
    this.aws_wafregional_sql_injection_match_set_id = aws_wafregional_sql_injection_match_set_id;
    this.sql_injection_match_tuple = sql_injection_match_tuple;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_wafregional_sql_injection_match_set_id !== null) {
      ih['aws_wafregional_sql_injection_match_set_id'] = this.aws_wafregional_sql_injection_match_set_id;
    }
    if (this.sql_injection_match_tuple !== null) {
      ih['sql_injection_match_tuple'] = this.sql_injection_match_tuple;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_sql_injection_match_set';
  }
}

export class Aws_wafregional_sql_injection_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_sql_injection_match_setHandler';
  }
}

export class Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581 implements PcoreValue {
  readonly field_to_match: Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581_field_to_match_582[];
  readonly text_transformation: string;

  constructor({
    field_to_match,
    text_transformation
  }: {
    field_to_match: Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581_field_to_match_582[],
    text_transformation: string
  }) {
    this.field_to_match = field_to_match;
    this.text_transformation = text_transformation;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['text_transformation'] = this.text_transformation;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581';
  }
}

export class Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581_field_to_match_582 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_sql_injection_match_set_sql_injection_match_tuple_581_field_to_match_582';
  }
}

export class Aws_wafregional_web_acl implements PcoreValue {
  readonly default_action: Aws_wafregional_web_acl_default_action_583[];
  readonly metric_name: string;
  readonly name: string;
  readonly aws_wafregional_web_acl_id: string|null;
  readonly rule: Aws_wafregional_web_acl_rule_584[]|null;

  constructor({
    default_action,
    metric_name,
    name,
    aws_wafregional_web_acl_id = null,
    rule = null
  }: {
    default_action: Aws_wafregional_web_acl_default_action_583[],
    metric_name: string,
    name: string,
    aws_wafregional_web_acl_id?: string|null,
    rule?: Aws_wafregional_web_acl_rule_584[]|null
  }) {
    this.default_action = default_action;
    this.metric_name = metric_name;
    this.name = name;
    this.aws_wafregional_web_acl_id = aws_wafregional_web_acl_id;
    this.rule = rule;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['default_action'] = this.default_action;
    ih['metric_name'] = this.metric_name;
    ih['name'] = this.name;
    if (this.aws_wafregional_web_acl_id !== null) {
      ih['aws_wafregional_web_acl_id'] = this.aws_wafregional_web_acl_id;
    }
    if (this.rule !== null) {
      ih['rule'] = this.rule;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_web_acl';
  }
}

export class Aws_wafregional_web_aclHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_web_aclHandler';
  }
}

export class Aws_wafregional_web_acl_association implements PcoreValue {
  readonly resource_arn: string;
  readonly web_acl_id: string;
  readonly aws_wafregional_web_acl_association_id: string|null;

  constructor({
    resource_arn,
    web_acl_id,
    aws_wafregional_web_acl_association_id = null
  }: {
    resource_arn: string,
    web_acl_id: string,
    aws_wafregional_web_acl_association_id?: string|null
  }) {
    this.resource_arn = resource_arn;
    this.web_acl_id = web_acl_id;
    this.aws_wafregional_web_acl_association_id = aws_wafregional_web_acl_association_id;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['resource_arn'] = this.resource_arn;
    ih['web_acl_id'] = this.web_acl_id;
    if (this.aws_wafregional_web_acl_association_id !== null) {
      ih['aws_wafregional_web_acl_association_id'] = this.aws_wafregional_web_acl_association_id;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_web_acl_association';
  }
}

export class Aws_wafregional_web_acl_associationHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_web_acl_associationHandler';
  }
}

export class Aws_wafregional_web_acl_default_action_583 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_web_acl_default_action_583';
  }
}

export class Aws_wafregional_web_acl_rule_584 implements PcoreValue {
  readonly priority: number;
  readonly rule_id: string;
  readonly action: Aws_wafregional_web_acl_rule_584_action_585[]|null;
  readonly override_action: Aws_wafregional_web_acl_rule_584_override_action_586[]|null;
  readonly type: string|null;

  constructor({
    priority,
    rule_id,
    action = null,
    override_action = null,
    type = null
  }: {
    priority: number,
    rule_id: string,
    action?: Aws_wafregional_web_acl_rule_584_action_585[]|null,
    override_action?: Aws_wafregional_web_acl_rule_584_override_action_586[]|null,
    type?: string|null
  }) {
    this.priority = priority;
    this.rule_id = rule_id;
    this.action = action;
    this.override_action = override_action;
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['priority'] = this.priority;
    ih['rule_id'] = this.rule_id;
    if (this.action !== null) {
      ih['action'] = this.action;
    }
    if (this.override_action !== null) {
      ih['override_action'] = this.override_action;
    }
    if (this.type !== null) {
      ih['type'] = this.type;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_web_acl_rule_584';
  }
}

export class Aws_wafregional_web_acl_rule_584_action_585 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_web_acl_rule_584_action_585';
  }
}

export class Aws_wafregional_web_acl_rule_584_override_action_586 implements PcoreValue {
  readonly type: string;

  constructor({
    type
  }: {
    type: string
  }) {
    this.type = type;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_web_acl_rule_584_override_action_586';
  }
}

export class Aws_wafregional_xss_match_set implements PcoreValue {
  readonly name: string;
  readonly aws_wafregional_xss_match_set_id: string|null;
  readonly xss_match_tuple: Aws_wafregional_xss_match_set_xss_match_tuple_587[]|null;

  constructor({
    name,
    aws_wafregional_xss_match_set_id = null,
    xss_match_tuple = null
  }: {
    name: string,
    aws_wafregional_xss_match_set_id?: string|null,
    xss_match_tuple?: Aws_wafregional_xss_match_set_xss_match_tuple_587[]|null
  }) {
    this.name = name;
    this.aws_wafregional_xss_match_set_id = aws_wafregional_xss_match_set_id;
    this.xss_match_tuple = xss_match_tuple;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['name'] = this.name;
    if (this.aws_wafregional_xss_match_set_id !== null) {
      ih['aws_wafregional_xss_match_set_id'] = this.aws_wafregional_xss_match_set_id;
    }
    if (this.xss_match_tuple !== null) {
      ih['xss_match_tuple'] = this.xss_match_tuple;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_xss_match_set';
  }
}

export class Aws_wafregional_xss_match_setHandler implements PcoreValue {
  __pvalue(): {[s: string]: Value} {
    return {};
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_xss_match_setHandler';
  }
}

export class Aws_wafregional_xss_match_set_xss_match_tuple_587 implements PcoreValue {
  readonly field_to_match: Aws_wafregional_xss_match_set_xss_match_tuple_587_field_to_match_588[];
  readonly text_transformation: string;

  constructor({
    field_to_match,
    text_transformation
  }: {
    field_to_match: Aws_wafregional_xss_match_set_xss_match_tuple_587_field_to_match_588[],
    text_transformation: string
  }) {
    this.field_to_match = field_to_match;
    this.text_transformation = text_transformation;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['field_to_match'] = this.field_to_match;
    ih['text_transformation'] = this.text_transformation;
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_xss_match_set_xss_match_tuple_587';
  }
}

export class Aws_wafregional_xss_match_set_xss_match_tuple_587_field_to_match_588 implements PcoreValue {
  readonly type: string;
  readonly data: string|null;

  constructor({
    type,
    data = null
  }: {
    type: string,
    data?: string|null
  }) {
    this.type = type;
    this.data = data;
  }

  __pvalue(): {[s: string]: Value} {
    const ih: {[s: string]: Value} = {};
    ih['type'] = this.type;
    if (this.data !== null) {
      ih['data'] = this.data;
    }
    return ih;
  }

  __ptype(): string {
    return 'TerraformAws::Aws_wafregional_xss_match_set_xss_match_tuple_587_field_to_match_588';
  }
}
